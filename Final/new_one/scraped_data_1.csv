URL,Author,Author Description,Publication Date,Votes,Review
https://www.quora.com/Does-Agile-Kill-Innovation,Assistant,Bot,2024-08,0,"The relationship between Agile methodologies and innovation is complex and can vary significantly based on how Agile is implemented within an organization. Here are some key points to consider:
Potential Negative Impacts of Agile on Innovation
Focus on Iteration Over Exploration: Agile emphasizes iterative development and delivering small increments of value quickly. This can sometimes lead teams to focus more on refining existing features rather than exploring new ideas.
Short-Term Thinking: Agile's emphasis on delivering working software in short cycles can encourage a focus on immediate results, potentially stifling long-term innovation that requires more time and resources to develop.
Risk Aversion: Agile teams may prioritize stability and predictability, which can lead to a reluctance to take risks that are often necessary for breakthrough innovations.
Rigid Processes: If Agile frameworks (like Scrum) are applied too rigidly, they can become bureaucratic, leading to a lack of flexibility that can hinder creative thinking and experimentation.
Positive Impacts of Agile on Innovation
Customer-Centric Development: Agile encourages regular feedback from customers, which can lead to innovative solutions that better meet user needs and preferences.
Faster Experimentation: Agile methodologies promote rapid prototyping and testing, allowing teams to experiment with new ideas quickly and learn from failures without significant investment.
Empowered Teams: Agile often empowers cross-functional teams to make decisions, fostering a culture of collaboration and creativity that can enhance innovation.
Adaptability: Agile's iterative nature allows teams to pivot and adapt based on feedback and changing market conditions, which can lead to innovative solutions that align with emerging trends.
Conclusion
Agile does not inherently kill innovation; rather, its impact depends on how it is implemented and the organizational culture surrounding it. To foster innovation within an Agile framework, organizations should balance the need for iterative development with opportunities for exploration and risk-taking. Encouraging a culture that values both efficiency and creativity can help mitigate the potential downsides of Agile while leveraging its strengths."
https://www.quora.com/Does-Agile-Kill-Innovation,Anonymous,8y,2016,51,"From the POs and PMs perspective, agile is a perfect solution for everything. Everybody is in the rat race to just finish off things and be the first in the market. That is just killing innovation.
These people will never want to listen to the folks actually doing the work. They will live in their own world thinking everything is fine. The ground reality is developers are getting frustrated because of this bull shit.
People are loosing creativity and innovation because of this. One day they are made to work on something and the next day, something else.
People have left job because of this. Nobody knows in-depth of anything. Quality suffers. There is no good design, architecture. Repeatedly changing the same code. No job satisfaction.
Personally, I think all this has become a money making business for agile coaches and agile promoters. In the name of agile they literally want to sell anything.
I know most of the hard core technical community will fully agree with all this above. But, the POs, PMs, agile coaches, VPs of the world will disagree and will come with lot of justifications.
There is no engineering or science in this. The people doing the actual work have become laborers. If the technical community raises concerns, they are termed ANTI AGILE which is harmful in today's scenario."
https://www.quora.com/Does-Agile-Kill-Innovation,Anonymous,"Upvoted by
Brian Salter
, Over 35 years of real-time software development experience.",2014,73,"Definitely. Agile was born with the intent of removing unnecessary overhead to the development process and provide a lightweight framework for project management while at the same time leveraging the creative power and technical knowledge of developers, involving them in the design phase.
Unfortunately, for what I've been able to see in my day to day job, often the outcome is exactly the opposite. The close contact between product owners and developers and the constant, daily pressure for the delivery of very detailed and ever changing features in the context of extremely short iterations (a couple of weeks) in practice puts developers on an uncomfortably short leash. In the end this results in the development team delivering features like orders in a fast-food. The two weeks iteration reduces the visibility on the big picture and the tight schedule makes it impossible to perform any serious architectural or preparatory job or code refactoring.
The result is code that lacks structure and inventive, as every action is initiated by the product people and every feature developed on its own without any respect or knowledge for the context. In other words, Agile, as I've experienced it, manages to push again software developers in the role of mere translators into code of a constant flow of requests from their clients, who in turn are completely unaware of and uninterested in the technical aspects involved. No need to say that this is the death of innovation and creativity."
https://www.quora.com/Does-Agile-Kill-Innovation,Zak Willis,CEO and Director (2009–present),2017,12,"Before answering this question, I re-read the Agile Manifesto - http://agilemanifesto.org/principles.html
Some general observations could be:- Face to face conversation is not always the best way to remember things, our highest priority is to serve the customer but unfortunately the customer doesn’t know what they want and it can become a fool’s errand, business people and developers must work together frequently/daily but we all know that constant interruptions are the death knell of focussed code writing. What we do notice is how mention of the best solutions and architectures arise from self-organising teams but where is the evidence of this being true? However, the original manifesto was created by experienced software developers to try and deliver better solutions to the business quicker.
In many ways, I doubt the original Agile Manifesto was intended to open Pandora’s Box as we can see here https://techbeacon.com/uncle-bob-martin-agile-manifesto-15-years-later but people who actually like building solutions can’t help but feel these guys should be fighting a bit more to reinstate what Agile was meant to do.
Unfortunately, Agile completely kills innovative development and Agile can only succeed because experienced developers have already gained their technical expertise on more waterfall based projects. Agile can lead to innovative products where a business owner/product owner wants an application but these products will often need scalability which agile doesn't concern itself with. The really difficult thing to get with Agile is how most of the original committee can only have reached their level of expertise by working on complex problems outside of a typical Agile sprint. Take Uncle Bob's book - clean code - a great book. In one chapter he takes apart a library and rewrites it cleanly - hardly yagni, hardly the kind of thing a customer cares about even if code reviews are a common feature you couldn't argue to the customer that the feature that looked like exactly what they wanted was being rewritten because the code was awfully written. Then if we take Martin Fowler - another person who thinks way too hard about things to have ever occurred during an agile project. It may be that many of these points are irrelevant, perhaps these heavyweights spend hours offline toiling away just to bring extra skills to the agile table but even if this were the virtuous case, an Agile project wouldn’t want a strategic approach anywhere near a sprint.
Moving on from these contradictions, we then look at people bringing their own perspectives into what is a good Agile project and they mention peer reviews, poker planning, scums (ahh, but Agile isn’t scrum), principles of least knowledge – dumbing down where people with better skills is forced to abide by the lowest common denominator within a team despite knowing that there is a far better way to do something but suffering for the good of the sprint.
Then people mention Continuous Integration as being agile, but again, unless a company is committed to a separate Devops team the agile project will never afford the luxury of setting up infrastructure which invariably leads to horrendously complicated releases minus testing and before long the code base (databases too) end up completely inconsistent. Tell-tale signs include hard coding, uncertainty over valid configuration, significant use of converts, unions, left outer joins in the database a lack of integration tests etc and lots of copy and pastings for releases. Yes, I have seen sprints where 1 week’s development maximum, 1 week of testing and 2 weeks sorting out the release and no confidence the production release will work.
Agile is now just a narrative coined by many project managers, testers and developers to dumb down actual delivery to blindly follow without questioning and as developers it needs to get back to being about the principles of delivering appropriate solutions that developers enjoy developing and not some kind of KPI metrics based approach to delivering irrelevant unscalable solutions.
It isn’t a case of whether Waterfall or Agile is better it is about thinking of your most effective time working as a developer and most times it is just talking to the business, talking to the project manager, ensuring you put as much automation in place to keep things cleaner and coding away like Billy-o to get work out."
https://www.quora.com/Does-Agile-Kill-Innovation,Thomas Kutschi,"VP Alliances at Infonova, a leading edge BSS vendor",2013,8,"The use of agile methodologies does influence the environment and hence also the innovation happening in teams. Innovation is the enhancement of capabilities of organisations in more or less unexpected ways over time either evolutionary (gradual improvements) or in revolutions.
To some extent agile (I know mainly Scrum) foster innovation as they try to create a fear-free environment (one of the innovation/creativity blockers according to Amabile) and encourages teams to improve their approaches to specific tasks. It also strengthens communication and early prototyping improving the level of information of all stakeholders and enabling them to influence the product towards the intended outcome.
However, this is not all of the story. Over the course of the last years a lot of methods to control agile environments (sounds like a contradiction, eh?). Those are things like daily meetings (where progress is discussed), burn-down-charts and all other measures that try to quantify the performance of a team or individual or restrict the course of action (e.g. by avoiding unnecessary tasks). The problem with this is that very often things that turn out to be innovation later on look like unnecessary in the beginning. So a higher level of control might (or will) lower innovation.
It comes down to how you live your agile approach - when you strive to squeeze the last 1/2 % of productivity out of your resources and punish all deviations from user stories you will inevitably hinder innovation - and agile methodologies support this to a large extent.
Of course you can still enhance innovation by other means (e.g. Fedex-days like at Atlassian) but this would be true in any other environment as well."
https://www.quora.com/Does-Agile-Kill-Innovation,Anonymous,3y,2021,6,"It does, definitely it does. It also promotes the creation of poorly-designed code and buggy features. Which makes hard to maintain code, which –again– is hard to innovate if you have to maintain poorly-designed code.
This is my experience from many years and anecdotes from other experienced skilled developers I have collected. Perhaps a 3-hour-scrum-certification guy will tell you that scrum is perfect and is somebody's else fault –as they usually do– but truth is I prefer to listen to the guys doing the actual job and have years and years of study and experience working their skills and knowledge."
https://www.quora.com/Does-Agile-Kill-Innovation,Degar Slerks,Software engineer at Sanoma,2016,5,"First, it is a normal thing that in a working environment little room is left for your own things. That is just the nature of work.
But agile and especially scrum are designed to deliver software under high pressure with fast changing requirements, which aren't too complex. It is really efficient in that, but it will beat the creativity out of a team.
I am not a fan of agile. I think it leads too easy to bad software. I have seen good programmers turn into wild story point hunters and leaving a ravage behind. Because it chops up tasks, it causes that an overview of a task is missing. The push to choose for concrete implementations over abstractions make changes more and more difficult to be made. Together with the low amount of documentation and design, the amount of bad code or ""technical debt"" will pile up."
https://www.quora.com/Does-Agile-Kill-Innovation,Thomas Kutschi,"VP Alliances at Infonova, a leading edge BSS vendor",2012,10,"Agile defines how a team organizes and controls work. Creativity requires freedom (time, thinking) hence any kind of control works against creativity. As you correctly point out you can't work just on an arbitrary feature you conceive as being good for the product or the company but you have to adhere to a prioritized backlog. Creativity is restricted to the ways you tackle the task itself.
The question is, where the user-stories, tasks or whatever it is come from? A good product manager would listen to the team, a good team would speak up if it discovers a useful extension. Then it should be a prioritization issue when the task will be in the backlog. This way the ideas of the team make their way into the product but still the business drives the decision - and sometimes it will be hard to understand if your pet project is buried under a ton of other tasks.
I think there is huge potential in agile methodologies to foster creativity or extinguish barriers (see Amabile's work on creativity barriers). On the long run innovation management processes have to be instilled within the agile processes apart from reviews and retros to balance the power of stakeholders in this part of the process (and there are some other needs for balance in other areas as well).
In many cases execution of Scrum goes to far and takes the process too important with a tendency to micro-manage every single aspect of a project (user-story tyranny) or control every minute spent on tasks.
You are also right that while agile was conceived to give power to the developers it to some extend has disempowered them as the decision making processes are defined in a way that information floating back to the business is very limited. The strict control mechanisms (burn-down charts, daily stand-ups, retros etc.) further instill this impression. Keep in mind that Scrum is an approach to structure something that should be there in a project anyways (but sometimes is forgotten, e.g. short feedback cycles) and not to get rid of any communication patterns. When you do your agile thing and all of a sudden the team only talks at the defined times you are doing it wrong!"
https://www.quora.com/Does-Agile-Kill-Innovation,Matthieu Cornillon,"Agile Coach helping individuals, teams, and organizations get better.",2016,2,"I think there are two parts here. One is the idea of generally exploring outside of normal work, and the other is innovating as part of work. Agile can indeed be the tyranny of the urgent, but it doesn't necessarily kill innovation/creativity. With some guidelines, I believe it actually promotes innovation/creativity.
Give yourselves time. In Scrum, teams explicitly are the ones who decide how much work to take on. If you feel you need time to wander, take on less work. Is this mutiny? If the team took only one tiny story every sprint and spent all their time learning stuff unrelated to the business, yes it might be a problem, but is there really a risk of this? Trust that the team will self-regulate. Although Agile doesn't explicitly give this right to teams as Scrum does, I think it follows rather easily from: ""Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.""
Ask why. Make sure you understand why you are building things, rather than just building what you are told. If the why is ""so user can get somewhere fast"" that opens the door to ideas about jet packs and riding kangaroos, whereas the what of ""build a bicycle"" closes off such options. Ultimately, you have to agree as a team what you are building, but understanding the why gives you a chance to challenge assumptions about what you are building. You can repeat this at any scale, allowing for innovation throughout your activities.
Focus on goals, not lists. If you are building a list of features, you are likely to stifle creativity. If instead you focus on wider goals (sprint goals at iteration level or things like OKRs at a multi-iteration level), you give yourself latitude to maneuver. Sure, you may have a list of stories or features at the start, but let these bend in service of the goals, not the other way around. Also, be careful to define goals based on the why (e.g., to solve problem x) as opposed to what (e.g., by implementing solution y), or you fall into the same trap of stifling creativity.
Don't confuse creativity/innovation with indulgence. Creativity can come in a flash, and it might be ugly. For example, suggesting that you hard code a value in an early prototype (rather than asking the user for it) is not exciting, sexy, or even scalable; however, in terms of getting to an answer about value of a piece of work, one can easily see how it is a creative angle. Think a little innovation here and there every day, not massive leaps.
Remember that boundaries can enhance creativity. Writing a poem in strict meter forces you to be creative. Budget constraints on the initial Star Wars movie forced Lucas to make creative decisions that gave the movie some of its unique touches. Having three seconds left to get the ball down the field can force a team to come up with clever approaches."
https://www.quora.com/Does-Agile-Kill-Innovation,Shakeel Tabassam,5y,2019,2,"It’s not Agile or waterfall or any other model that enable or kill the innovation.
It’s an extreme challenge to make an organization innovative and by saying I actually mean motivating and enabling enployees at a right level so they can create innovative products, services, concepts and ideas.
In general, Agile can perhaps be a great enabler if you want to incorporate innovation culture. In theory, Agile promotes
Self organization at team and individual level
Respect for individuals
People over processes
Has short iteration cycles that you can adjust as you nees
Special activities like Spikes, innovation sprints, etc.
In practice if people don’t follow above and make their own interpretations of the process and then blames that Agile is stopping them from being innovative is then just an excuse and unfortunate.
To summarize in my view:
The most innovative organizations just trust their employees, respect the individuals, have flat hierarchy and enable the people to use their potential and capabilities to achieve goals and that goal could be innovation!!"
https://www.quora.com/Does-Agile-Kill-Innovation,Liza Wood,transforming teams with Agile since 2007,2013,7,"Interesting question. Whether or not innovation flourishes in an environment has nothing to do with Agile, but everything to do with the environment itself. If people are discouraged from taking risks, are unable to see the big picture due to a wall of disconnected tasks, or are run around in circles with no clear goals, they will not be able to innovate. Agile implementations, if done well, may help fix these issues since it encourages the opposite. However, if the culture wins out, the result is often a really bad implementation of Agile.
The beauty of Agile is that it can be tailored and adapted to different domains/projects/products and will encourage innovation. It does require an understanding of the why behind the various principles and rituals along with some thought on how to adapt them to the specific context."
https://www.quora.com/Does-Agile-Kill-Innovation,Christophe Grosjean,born to code,2012,3,"In a previous job I attended this problem was addressed using several methods:
- at the end of each week based iteration we had a short demo in the morning. In the evening we attended a retrospective. In between we had some free time to work on whatever we feeled necessary. 4 or 5 hours of free time may not seem much, but it is still a start to explore new pathes.
- some explorative or learning tasks where inserted in backlog as time boxed pikes if team thought it was useful. These were usually started with some brain storm meeting, where we decided what should be tried and who should be doing it and for how long. These tasks usually ended with some presentation of results of the exploration to the team.
In this environment I did not feel the team was any less creative than in other more traditional teams (quite the opposite) and what everyone was working on was still transparent to each other.
I also agree with Berk that working 100% of team time on backlog is not reasonable anyway. There is always other tasks to perform that should be accounted for, that may be working on infrastructure, explore some new framework or tools, or even socialize with teamates. All of that is necessary in a smoothly working team. Not doing it is demotivating, but it's not about Agile but good team management."
https://www.quora.com/Does-Agile-Kill-Innovation,Jonathan Crossland,Author,2022,0,"If you follow something like scrum, it creates a mundane drumbeat of monotony. Your sprints are too long for small tasks, so you do lots of small tasks which equals improvement, but larger innovation and creativity is lost. I have found that developers slowly lose passion.
I know that scrum is not Agile, but many start on this road and never drop the training wheels.
Innovation with Agile only comes when everyone is equal peers and there is no process or measurements and a large budget for agile mindset.
As soon as the company looks at certs and a process to adopt, you have already lost."
https://www.quora.com/Does-Agile-Kill-Innovation,Joshua Render,"M.S. in Business & Information Resource Management, Central Michigan University (Graduated 2015)",2021,0,"Ideally, no. Agile should be about innovation and experimentation.
But that depends on if you are practicing Agile or if you are practicing someone’s overly strict interpretation of what Agile is.
I find I prefer Agnostic Agile over or combined with the Agile Manifesto as a starting point:
Agnostic Agile
The official home of Agnostic Agile.
https://agnosticagile.org/?doing_wp_cron=1626785641.5277090072631835937500
Work out what to do best from there."
https://www.quora.com/Does-Agile-Kill-Innovation,Karthikeyan V,Know a thing or two about Agile development,2014,1,"No not all. Actually from my experience it helps.
There is something called capacity planning in which you can dedicate time for innovation and the remaining time is available for your day to day work or something like this. But the key is sticking on to this plan. Then this is up to the individual teams' and team members' will.
Awesome plans like this one are made by teams, but during the course of regular work, people do not stick to the plan and innovation dies.
I even tried to see if making team members accountable for innovation progress would help. But this would be counter productive as team members were not interested in it any more. So the available capacity was added back to regular work. :)
It would be unfair to blame the process for killing innovation."
https://www.quora.com/Does-Agile-Kill-Innovation,Saravana Bharathi,"AgileKarma.com PMP, PMI-ACP, CSM, CSP, ITIL, Agile Software development consultant, Agile Coach, Scrum Trainer",2014,1,"It's is an old discussion, let me add my two cents to it!
Agile / scrum is not a method, these are principles. If the principles are correctly understood and baked into the projects your normal performing team will become super performing team!
Many a times conflict and frustration arise from tailoring it wrongly, or just pushing it down the throat of people and wrongly implementing it.
That being said, does it curtail innovation? Yes and no. Su-ha-ri - that is if the team is already in 'Ri' status, super performing, broken the rules of agile/scrum, modified to fit their needs, now if you go and try to apply 'Su' level it would be frustrating. Example, there is this awesome 5 member team, they all sit across a round table all day, producing an awesome product, all day they talk to each other. If you insist daily standup ceremony, it might be counter productive. It might be frustrating. Again I'm not recommending to remove daily standup in teams. su-ha-ri (learn, master and then break the rules) should be understood in a correct way before apying it."
https://www.quora.com/Does-Agile-Kill-Innovation,Manu Goyal,"Manu Goyal, Product and Technology Leader. Exp. in eCommerce, Payments, Social M",2016,1,"Agile and innovation are two independent aspects of product development. Success and sustenance of each is dependent primarily on organization's culture and environment.
Based on my personal experience in multiple organizations ranging from small startups to Fortune 100, being agile doesn't hamper product innovation. Being agile isn't same as doing agile.
I am interested to learn about the specific 'Agile Practices' that you have referred to in your question. Agile frameworks don't prescribe but call for adaption so that the teams can strive for optimal results. Adhering to a prescribed 'methodology' to retrofit old behaviors in some new process, when people haven't adopted a mindset to accept change, may not deliver any additional innovation. On the other hand, there are Organizations that are delivering complex, high availability/reliability/secure/etc. products using agile execution to fail fast and succeed often. It definitely does need more than just free-wheeling. There are some frameworks like SAFe, LESS, DADD, Scaled Scrum, etc. that you can refer to learn more about large scale agile for enterprises and large product teams."
https://www.quora.com/Does-Agile-Kill-Innovation,Murray Robinson,Agile practitioner and evangelist.,2014,1,"Thomas Kutschi is right. I would just add that you can add refactoring tasks to a story if that's required (and refactoring is quite creative); you can add architectural spikes to your backlog (where a spike is an investigation of a solution to a problem); you can suggest better ways to do a story (and if its agreed do that) and you can suggest new stories to the product owner (and do those if agreed).
What you cant do is spend your time that someone else is paying for doing anything you want. Thats what your free time is for."
https://www.quora.com/Does-Agile-Kill-Innovation,Scott Helms,Agile product owner for >8 years.,2013,0,"I can't imagine that developing our product under another methodology would be as successful. We've been using Agile (Scrum) since before it launched ~4 years ago and we continue to use it today. Now, this SaaS product offering which I think is optimal for Scrum, but its very much a 100% uptime kind of product and we have numerous SLAs with our customers who are broadband service providers.
Home - TruVizion"
https://www.quora.com/Does-Agile-Kill-Innovation,Diana Hennessy,Upvote,2013,1,"Innovation doesn't come about by using a methodology - it comes about from the way people try to solve a problem. I'd say in my experience, an agile approach in encourages creative problem solving more than others, but really agile supports delivery of that innovative idea more than being the reason the idea was thought if in the first place."
https://www.quora.com/Does-Agile-Kill-Innovation,Harsh Vardhan,Product Manager- Internet apps Big Data / Machine Learning,2013,1,No not at all. If any things kills innovation that's wrong approach. Agile got nothing to do with it instead it gives you agility
https://www.quora.com/Does-Agile-Kill-Innovation,Tushar Jain,"Agile coach, trainer, author, speaker, eager learner, ...",2017,1,Innovation flourishes when individuals feel safe to do the experiments. Agile clearly encourages to do experiments.
https://www.quora.com/Does-Agile-Kill-Innovation,Ankit Agarwal,Entrepreneur|Traveller|Engineer|Product Leader|Team Builder,2013,0,"Agile development furthers innovation. The process encourages you to evolve your product quickly and get feedback often. If the feedback is negative you have to figure out remediations quickly and if the feedback is positive, then you have to find the next big feature equally fast!"
https://www.quora.com/Does-Agile-Kill-Innovation,Chuck Cobb,Agile Project Mgt Author and Instructor (Over 100K Students),2021,2,"No, not at all. Agile is ideally suited for creativity and innovation. An over-emphasis on planning and control can stifle creativity and innovation."
https://www.quora.com/Does-Agile-Kill-Innovation,Thomas Vato,Consulting Innovator (2018–present),2022,147,"It all depends on who is doing agile. Suppose it's a laser-focused team of specialists who are purpose-driven. A group of experienced, innovative software developers will likely find new ways to do things. In that case, no, agile doesn't kill innovation.
However, suppose you have a team with less experience, discipline and open-mindedness. In that case, they may likely stick to the tried-and-true methods in the agile process. This way, you might see less innovation.
The critical difference lies in how decision-making authority is structured. In a traditional organisation, decisions must filter through the hierarchy before implementation. This process can stifle creativity and new thinking. On the other hand, try to decentralise decision-making authority and encourage employees to experiment and take risks. This will foster an environment where innovation can thrive.
Hope it helps."
https://www.quora.com/Does-Agile-Kill-Innovation,David Richmond,Innovation and Futurology Consultant,2019,147,"I would suggest the opposite if Agile is implemented at all levels of the organisation and not just in delivery teams.
An idea management process must be Agile for it to succeed and senior management must also have adopted the values of Agile for innovation to thrive. If agile or Scrum is implemented purely for the fast delivery of software then I can understand why problems would arise. However, if the entire organisation has adopted the philosophy of agile (particularly approaches such as Lean-Startup) then it will foster innovation.
I would argue that if an organisation is not agile, they will struggle to deliver innovation effectively as the two are very closely related and overlap in many areas."
https://www.quora.com/Does-Agile-Kill-Innovation,Ankit Vaid,Studied at MCA,2013,0,Both innovation and agile methodologies are different but yes. Innovation happens and can be quickly assessed and discussed using Agile. for large projects where you plan to sit for months on requirements we will still need a prototyping which can be accelerated using agile methods.
