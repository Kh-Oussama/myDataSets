author,score,Review,Publication Year,Discussion
Deleted Account,6,"Implementation of devops is essentially this:
1) Figure out the job you hate doing the most
2) automate it so no one ever has to do it again
3) rinse and repeat

Eventually you will start eliminating things other people hate then, before you know it you've implemented devops.",2022,How to properly implement DevOps to a company?
Deleted Account,1,"Well....you've implemented *automation*. Whether that automation feeds into a DevOps culture is a matter of how much buy-in, acceptance, and visibility those automation efforts garner.",2022,How to properly implement DevOps to a company?
inhumantsar,5,"Keep that ideal state in mind and practice the boy scout principle: Always leave a codebase better than you found out. 

Need to make a change to service x and it doesn't have automated deployments? Put one pr in for your change and another for the deploys.

I've been doing ""DevOps"" for over a decade at this point and can assure you that you'll throw out half of what you build early on. Don't stress about having a master plan or getting everything perfect the first time. Just focus on incremental improvements wherever you can achieve them.",2022,How to properly implement DevOps to a company?
scooby_pancakes,1,that would mean the dev env would stay in production for weeks until it's ready for testing?,2022,How to properly implement DevOps to a company?
gdahlm,2,"FWIW, the Google SRE definition of 'toil' is a good model to explain the type of task you are looking to automate without it sounding like you are complaining about core job responsibilities.

Communication of value to the company and expressing both empathy for the toil of others and the value to the company are critical tasks when trying to implement DevOps

It is as much of a cultural change as a process change and people tend to resist change unless you acknowledge their concerns and demonstrate value.

Ask your boss what makes his job difficult and just listen, don't come back with products or process changes immediately.  Give it some time and come back with suggestions addressing his pain points directly.

Often these efforts can be perceived as adding risk of reduced velocity and most managers have been hit hard with these costly changes in the past.",2022,How to properly implement DevOps to a company?
Worth_Savings4337,1,"My situation is kinda similar to OP (as a junior Devops)

But i am more worried about my career progression. I don’t want to use this word “menial” but these task don’t really provide much impact compared to other roles in software development 

Right now, I am shifting myself towards cloud engineer, I think designing/building infrastructures will be more beneficial than just doing these menial Devops task",2022,How to properly implement DevOps to a company?
Deleted Account,1,"Cloud stuff is important but, as a manager of DevOps folks (and former DevOps guy) let me suggest you think less in terms of ""i want to work on technology x"" and more in terms of ""i want to solve problem y for people"" the menial crap is a good place to start. Dig in and figure out how to make it go away for everyone.",2022,How to properly implement DevOps to a company?
Worth_Savings4337,1,"Hi. Appreciate your input. May I ask, base on your experience, which do you think is a more valuable skillset? In terms of current market salary?

1) building CI/CD pipelines for developers
2) building AWS cloud infrastructures for users

Do you think CI/CD pipelines can be fully managed by cloud SaaS in future? A few years down the road",2022,How to properly implement DevOps to a company?
Deleted Account,1,In many cases CD/CD pipelines are fully managed now. I think both tasks are essential. What CI/CD tool are you using?,2022,How to properly implement DevOps to a company?
Worth_Savings4337,1,"Jenkins. Selenium for test, Sonarqube for SAST

What? Most cases CI/CD pipelines are fully managed?

So which skillset is more valuable?",2022,How to properly implement DevOps to a company?
Deleted Account,1,"Ok there is absolutely no reason you can't build automation around creating Jenkins pipelines. Take a look at the documentation, work on writing a script to generate those pipelines automatically based on common patterns you see at your organization. Make it something you can run first then set up a website you can hook it into.",2022,How to properly implement DevOps to a company?
Worth_Savings4337,1,"No what I am worried about is, is CI/CD a dead end job compared to cloud which is user-centric (same like software engineers building apps for users) so we won’t be treated as a cost center

I guess cloud is a higher paying skill than CI/CD",2022,How to properly implement DevOps to a company?
Deleted Account,1,"Thats's hard to say. I've worked at a lot of companies some you've heard of and some you haven't. Most of them have Developer Experience people who spend their days asking ""How can we make better CI/CD pipelines?"" They also have cloud infrastructure people asking ""How do we get application services stood up quickly and robustly?"" Both have people who have progressed through the career paths of their companies to the highest paid bands.   For the most part the people who have progressed answer both of those questions the same way. That answer is ""automate all the things."" 

You need to see the grunt work as an opportunity for automation. Thats how you build value.",2022,How to properly implement DevOps to a company?
devopswithbrian,1,"For me a lot of it is leading by example and showing devs and others why “this is the way”.  In my most recent role I’ve setup example pipelines, built jobs as code, redid a lot of our stuff as code and documented how it all worked and how to contribute back.

Now I have devs writing their own pipelines and jobs via code using my cookicutter templates and we have all our new aws accounts as code.

Sometimes it helps to just show people and not cram it down their face.",2022,How to properly implement DevOps to a company?
Rusty-Swashplate,77,Too many people simply don't want to learn something new. Even if it's better.,2021,What are the top barriers you are facing in adopting DevOps for your organization?
Deleted Account,12,"Yup, I literally was told yesterday, "" we don't want Jenkins automation, we want a documented process developers can follow""",2021,What are the top barriers you are facing in adopting DevOps for your organization?
Deleted Account,9,"CMV: CI pipelines with comments are a documented process, codified in a language that both humans *and automated actors* can understand and execute.

There is nothing stopping developers from doing the execution of a CI pipeline themselves at any time, just like there is nothing stopping them from compiling their own kernels & OS, building their own houses, using an abacus for math, growing their own food, banging rocks together to make fires, etc. 

To ignore, dismiss, and not use convenience tools that are equally as effective and potentially more reliable is a pure waste of time and exercise in stupidity, unless the point is to illustrate how tedious the task would be without the tool to try and instil some appreciation for it.",2021,What are the top barriers you are facing in adopting DevOps for your organization?
frito_kali,3,"holy shit. 

At my last job; we spent about 6 months trying to migrate developers off of a legacy Jenkins server (which was an utter shitshow) to Gitlab. They really didn't want to change the way they worked.",2021,What are the top barriers you are facing in adopting DevOps for your organization?
wanton-wombat,3,*This*,2021,What are the top barriers you are facing in adopting DevOps for your organization?
thefightforgood,1,"Yep, exactly.",2021,What are the top barriers you are facing in adopting DevOps for your organization?
vmc3997,1,"But like, is the organization providing the education?",2021,What are the top barriers you are facing in adopting DevOps for your organization?
Rusty-Swashplate,2,"In our particular case: There's a ton of training available which is free, the company is  pushing you to use it, and it's actually good training via a 3rd party vendor), and it's officially fully supported to do training during work hours.

There's statistics done after one year of how many courses were started and completed and plenty people (about 1/3rd) started and then never finished a *single* course. About 10% finished one course. About 50% never even started. In the current org I am in (about 100 people in total), 10 people did start and finish several or even many courses. My team is 8 people. And I made everyone do the Scrum and DevOps overview courses so we can all speak the same language when I say ""Product Owner"" and ""Retrospective"". So of the remaining 90 people, 2 actually showed some interest (as I know their manager don't care).

As they say: You can bring the horse to the water, but you cannot make it drink.",2021,What are the top barriers you are facing in adopting DevOps for your organization?
haptizum,31,"The organization, lol.",2021,What are the top barriers you are facing in adopting DevOps for your organization?
thras00,33,"We also face a “stupidity” barrier because the buzzword is misunderstood. 

Manual “automation” is not automation. Just because you moved the servers in the cloud and treat them like on premise, doesn’t really make you a “cloud” oriented company, you’re not leveraging managed services, just doing everything by hand.

It’s just a bastardized way of system administration. Kinda like the worst of both worlds.",2021,What are the top barriers you are facing in adopting DevOps for your organization?
Gotxi,13,"I saw once a company that said that was agile and was doing devops in the cloud.

Reality was that they moved their legacy vmware machines to AWS as a VPS hosting service, so they ended paying twice for what they already had with no real advantages.

Lose/Lose",2021,What are the top barriers you are facing in adopting DevOps for your organization?
Rusty-Swashplate,16,Win for AWS though.,2021,What are the top barriers you are facing in adopting DevOps for your organization?
humoroushaxor,11,"I was a team lead for our ""developer tooling"" team, much of which was trying to automate all the things. We had another team at the time that was responsible for on-prem system admin and security. They broke shit all the time, everything was done manually. But also if you asked engineers no one actually knew answers, they just blindly followed guides written by people long gone. 

Talking with their team lead he said they budget 15% of their time for ""automation work"" and asked where our ""wedge"" was. We don't do anything that's not automated and he just couldn't grasp the concept. I then learned the whole team had only ever done system admin on Windows systems with GUIs. We running everything on Kubernetes...",2021,What are the top barriers you are facing in adopting DevOps for your organization?
ptownb,4,Lol the last line 🤣,2021,What are the top barriers you are facing in adopting DevOps for your organization?
BiteFancy9628,1,"That last line describes my life at a ""Windows shop"" where we keep hiring software engineers who have never touched a Linux cli to do Kubernetes because supposedly good developers can learn anything.",2021,What are the top barriers you are facing in adopting DevOps for your organization?
Deleted Account,3,"Not sure what your point is because most companies operate in a hybrid state where half of their infrastructure is cloud based and the other half is in house . 

The adoption of DevOps does not necessarily depend on cloud computing but more on processes. Specifically software development and delivery processes . And the main reason why it’s been hard to adopt is because people do not like change . We are set in our ways .

If you can get your team to understand the benefits of DevOps somehow convince them that it’s better than the current process then you’re likely to have a successful transition .",2021,What are the top barriers you are facing in adopting DevOps for your organization?
thras00,2,"I wasn’t referring to hybrid solutions. Just lifting your on prem infra to the cloud with no changes and call it a day, that isn’t the “cloud” way. 

You are correct about processes, they need an upgrade and people need to change to the new ways. It’s not easy, but it pays off in the long run.",2021,What are the top barriers you are facing in adopting DevOps for your organization?
Ariquitaun,26,LAKES OF EXPERTISE,2021,What are the top barriers you are facing in adopting DevOps for your organization?
Deleted Account,2,AWS Expertise Lake,2021,What are the top barriers you are facing in adopting DevOps for your organization?
MistyCape,19,"Culture.

You can train people in the tools you can implement it with them but if the culture and mindset do not change then it will slowly go back to how it was",2021,What are the top barriers you are facing in adopting DevOps for your organization?
frito_kali,3,"this;

And everywhere I've been, I've watched, frustrated, as leadership talked about changing culture. And flailing around helplessly while failing at doing anything substantial other than spending shit tons of money.

In the places that made the most progress, I think a real important thing was churning people around from one team to another so they could cross-train. Engineers hate having this done to them though.",2021,What are the top barriers you are facing in adopting DevOps for your organization?
AnswerForYourBazaar,4,"Most of the time it is budget. Even the option ""Lack of Expertise"" is effectively ""Budget"".

In order to gain said expertise one has to learn. Even if that learning is not official courses it still takes at least employee time and usually computational resources. That employee time is budget one way or another: either some workloads have to be dropped or headcount increased.

Transition normally means highly increased operational load and quite possibly redundant old + new infrastructure. Again, budget. This time it means not only payroll directly, but also hardware.

Even ""Legacy compatibility"" option which is not present in this survey is still in some sense budget - making legacy stuff work in devopsy way either requires significant resources to work around or investment to upgrade/change the legacy software.",2021,What are the top barriers you are facing in adopting DevOps for your organization?
zenmaster24,5,i voted 'others' because thats what people are,2021,What are the top barriers you are facing in adopting DevOps for your organization?
crashorbit,3,A team called DevOps that does not do DevOps.,2021,What are the top barriers you are facing in adopting DevOps for your organization?
vimsee,2,"One would think having a lake of expertise would be a gateway, not a barrier. 
I’ll see myself out.",2021,What are the top barriers you are facing in adopting DevOps for your organization?
Euphoric_Barracuda_7,2,My present organisation simply believes tools equates to DevOps.,2021,What are the top barriers you are facing in adopting DevOps for your organization?
BarServer,2,People. Precisely: Other people. ;-),2021,What are the top barriers you are facing in adopting DevOps for your organization?
McflyKDR,2,Egos,2021,What are the top barriers you are facing in adopting DevOps for your organization?
pbecotte,2,"Because running big organizations is hard, and breaking down silos and pushing for collaboration is even harder, and worse, counterintuitive at the level where the changes need to be made.

Oh, you meant automation? There aren't any, if you want to automate your stuff it's very uncommon for anything to actually stop you. Just do it :p",2021,What are the top barriers you are facing in adopting DevOps for your organization?
Deleted Account,2,[deleted],2021,What are the top barriers you are facing in adopting DevOps for your organization?
garwil,1,Didn't you get fired from that job for fighting over yaml pipelines?,2021,What are the top barriers you are facing in adopting DevOps for your organization?
frito_kali,1,"First, I'm going to mention the much-maligned, but actually very good and useful Puppet's State of Devops 2021 survey report:

https://puppet.com/resources/report/2021-state-of-devops-report/

(no; I actually hate their product and think it's stupid and useless, but this report is absolutely what you're looking for if you want the answers to the questions you've asked).


As for me:
Current-job - it's a young startup (who ships their product as containers, is not even a web-service), and the developers don't understand any of this devops stuff.  I have my work cut out for me. :)  I'm hoping that with NONE of the 'legacy stack' problems of my previous jobs, that I'll be able to succeed here.  Though I'm hired more specifically for my security experience, and the Devops lead is actually pretty green.

Previous job - 15 year-old startup SaaS; over the last 2 years, we migrated to AWS, but a lot of it was really lift-and-shift because the legacy platform was ridiculously poorly architected, (we're talking Rube-Goldberg level) and most of the staff who had any understanding of how it worked, has left or forgotten. They're engaged in what's probably their 4th attempt (doomed to failure IMO) at re-writing the whole stack. Their problem is their FOUNDING team of about 5 developers who are just too set in their ways, and who are politically untouchable due to their tenure at the company. They SAY they want to modernize, but they don't actually want to do it, and they don't want to help new staff come up to speed. It's like they hate that they had to grow past the original team of 5.  They were purchased just before I left, so I assume the new owners are going to try to make changes. Maybe another re-write attempt? 

Previous job: a lot of the same problems. Legacy stack, no developer expertise in-house. Multiple aborted stacked re-write attempts accumulated over about 15 years. Also huge staff turnover, I started as a junior devops (that was all I could get as a 20-year veteran systems engineer, without all the ""buzzword compliant"" stuff on my resume - my core skills are really more security oriented), then the two levels of management above me got frustrated working with the upper-management team and quit, leaving me ""in charge of devops"" but basically a junior (in terms of pay, and authority), so I also noped-out. Not before I completely built a set of devops tooling, and evangelized it to the dev team. I hope they did something with it, but I seriously doubt it.

Job before that: Company is 70 years old; and an old-school silicon valley technology company, but in a very diverse market of specialized disciplines. This company actually did a GREAT job at rewriting one of their products, (though it was a 100% on-prem - short-term, very high security requirements). I automated that whole thing end-to-end, (and that was before there was most of the current devops tooling even existed) - and it was so successful (in terms of cost-savings for re-deployments) that they were able to spin it off to a subsidiary.  As for the rest of the company, there was another outfit; part of the IT group; which was really trying to become a ""Platform Team"" but I think they didn't succeed either, because of the very diverse offerings and needs of different dev teams, and it was really impossible to build a ""one-size-fits-all"" devops solution at that company: and probably always will be.   I know they spent 2 years farting around trying to succeed with an on-prem kubernetes cluster, built on a warehouse of old, repurposed desktop machines. They suffered from a lot of hardware setbacks, which put them in perpetual stagnation.",2021,What are the top barriers you are facing in adopting DevOps for your organization?
lachyBalboa,1,"How about ""realising the enterprise builds fuckall software themselves, and farms out Dev to various separate companies who themselves probably get to enjoy DevOps""",2021,What are the top barriers you are facing in adopting DevOps for your organization?
emm_gee,1,Hard to fit in our business model. Many of the tools are useful for us but are often very difficult to get working on-premises in our private cloud. Provisioning tools in particular tend to be a nightmare to work with airgapped. It’s been a pet peeve of mine for a while.,2021,What are the top barriers you are facing in adopting DevOps for your organization?
frito_kali,2,"> Provisioning tools in particular tend to be a nightmare to work with airgapped.

They can be made to work; I think some of the worst examples are when people refuse to stand up a self-hosted artifact server. But another one is when there's a requirement for something like ActiveDirectory which kind of requires a global connection to DNS, and that's an extreme pain to implement airgapped. And for some reason, it's impossible to explain this to the Microsoft-Advocates out there.",2021,What are the top barriers you are facing in adopting DevOps for your organization?
drpinkcream,1,My organization is still trying to figure out how every process can be done involving every team so everyone has an opportunity to close a ticket.  If we started doing it all ourselves (totally possible) what would everyone else's job be?,2021,What are the top barriers you are facing in adopting DevOps for your organization?
jgsnap,1,"Culture and people mindset are barriers. How to make it smooth transition: It needs to come from leadership to change it. In our previous org which is an smb, leadership has brought in external devops talent to train everybody on advantages/benefits. It worked out well.",2021,What are the top barriers you are facing in adopting DevOps for your organization?
GeorgeRNorfolk,1,I'm surprised lack of expertise is a common one. It's pretty standard as far as I have seen to have an Ops team migrate towards the cloud and deploy apps into it. The barrier to DevOps I have seen is keeping that Ops team around rather than bringing that expertise into cross functional teams with DevOps/Cloud people inside it who own those resources and deployments.,2021,What are the top barriers you are facing in adopting DevOps for your organization?
cliffberg,1,"Leadership does not understand what DevOps really is - how it works at scale. Teams usually do not either. And Agile coaches push the idea that a team can and should be self-contained, so there is inadequate focus on the ***product***. Guess what? Google's CD system focuses on the product - not the team. They have created self-service tooling that enables a team member to automatically identify all dependent products and automatically run all the integration tests for all those other products, to make sure that you don't break anything. The focus is the product, and empowering teams to work at the product level.

&#x200B;

In contrast, most orgs do cargo cult DevOps where they create lots of component pipelines, but the product level integration and end-to-end testing is largely manual.",2021,What are the top barriers you are facing in adopting DevOps for your organization?
ZranaSC2,1,I am the lake of expertise!,2021,What are the top barriers you are facing in adopting DevOps for your organization?
denverpilot,1,"""Lack of expertise"" I'd say is right but somewhat misleading. 

Most places don't know the actual tasks they want DevOps doing. They just want a body to toss at various things. 

It's as much of a catch all title as Sysadmin or Systems Analyst. 

The smaller the place the less time available to truly define roles needed for critical business path. Just hire someone and they'll magically figure it out. 

The bigger the place the more pigeonholed and stodgy the roles where one guy presses the same button all day every day like George Jetson. 

Both have the same job title.",2021,What are the top barriers you are facing in adopting DevOps for your organization?
mysunsnameisalsobort,1,"Culture and developers not wanting to understand the minimal about the infrastructure they have to deploy to and taking ownership. 

Without developers following of standards / practices and taking ownership you're just helping to automate shoveling shit out the door faster.",2021,What are the top barriers you are facing in adopting DevOps for your organization?
BiteFancy9628,1,"How TF can you do DevOps, Kubernetes, Docker and the rest of the modern software stuff and still not know Linux. Like at all? It's insane to me how some people got hired or retained.

I also think we have to add reinventing wheels for fun to the list. So many times I find people new to DevOps patting themselves on the back for creating 3 job templates from scratch when a GitHub search or finding the stuff the company DevOps team already created would fill 99% of use cases.",2021,What are the top barriers you are facing in adopting DevOps for your organization?
Deleted Account,50,[removed],2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Difficult-Ad-3938,2,"Oh, number 2 hits so hard. Yes, that’s exactly what happens",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,2,"I understand the need for formality in process / systems, but to me it looks like a governance process try to make better use of these wide range of tools, but again if the governance / process is not laid out thoughtfully, it becomes a pain. 

Totally agree with you on the other two points

dealing with maintenance, upgrades, production roll outs and support - the viscous circle of monotony leading to burnout and a fire that always comes up, draining out energy, attention and focus.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Windscale_Fire,10,"I think one of the big issues, at least in the cultures I'm used to working with, is that interest is primarily directed towards having shiny new things. Maintenance, care and feeding of what you already have is much lower priority - often wilfully neglected until something breaks.

Also, a lot of business cultures don't recognise and reward competent, low drama, ongoing maintenance. They tend to reward things like hero culture, presenteeism, ass-kissing etc.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
shared_ptr,17,"So this is a fun and maybe contrarian take but: I think the industry ‘stabilised’ about 5 years ago, and since then it’s been possible to build an infrastructure that isn’t a mess and is easily manageable with modern tools that is simple.

My career has been funny as I began SRE with an infra that was on physical machines, then migrated into containers, then into Cloud, then into k8s. That’s several platform changes where we had to learn the ropes real quick and the pace of change was crazy.

But the architecture we reached at the end of that (k8s, git ops deployment, simple container builder flow, cloud native services) was really great. The company at the time (~900 people) still had a lot of infra that took effort to look after but the new stuff was legit and much simpler than the old systems had been.

I moved to a start-up and setup their infra for the first time, using those same new technologies and best practices learned from several cycles adopting and evolving the tools at my previous role. The tools are really mature nowadays and generally much higher performance and reliability than everything was 10 years ago, and GCP allows for a fair amount of self-service.

We put effort into keeping things simple, use few tools well, prefer to buy over build. All that means we only need two SREs to balance an engineering team of ~25 which is a ratio we never could’ve supported with previous generations of infra tooling.

Basically, I think the tools out nowadays are really really good, and most of the stress you describe comes from legacy at existing companies. There’s a chance that companies started today may have a way better time than the last decade now we’ve stabilised on k8s and cloud tooling and aren’t replatforming continually.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"this is something that I have been wanting to understand - whether this a problem for companies that has been operating for almost a decade or more, or do the new age companies (maybe ~5 years) also face such issues.. 

as I understand, this has been made seamless through industry best practices, and eventually boils down to right tools (that you mentioned) and orchestrating them end to end effectively is what needed - but what do you think about the costs of it?",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
shared_ptr,2,"Yeah I think it’s possible to avoid these issues in new companies if you know what you’re doing now.

In terms of cost: ime production infra costs are not too problematic. You need fewer devops/SRE style positions to support engineers who are more efficient because of better tools, and that offsets the cost of production a lot (at least for B2B).

Data infrastructure is or can be painful cost wise though. The ‘modern data stack’ can easily grow costs higher than your production stack and even for B2B there’s opportunities to build data tooling that have significant positives ROIs on costs saved vs salaries efforts to build and maintain.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,2,"I believe, at the end of the day, the legacy companies (with products more than 5 years old) end up not taking advantage of these tools just because

1. they are a bit averse to adoption, meaning ""don't touch it, if it works fine""  
2. they have a good load of tech debt, making it a huge overhead to re-engineer their stack  
3. they keep putting out fires, rather than investing on better tooling for better results..

do you think that's the case or what would potentially be stopping them from being agile & new age maybe?",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
izzyjrp,1,25 engineers for a 900 person company?,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
shared_ptr,1,"Originally worked at GoCardless and left when it was ~900 people. At that point there was an infrastructure ‘group’ of four infra-related teams (developer enablement, core infra, security and data infra).

When I left I joined a startup of just myself and the founders. That company is now 25 engineers with 2 SREs, using infra that follows a lot of the patterns from the generation of infra I left GoCardless at.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
coinclink,107,"It's basically just the technical debt problem. a dozen new projects, new tool that works better than the old tool. A dozen old projects use old tool, new projects use new tool. Not to mention, everything requires some minor customizations that are easy to create and just as easy to forget. 

Repeat year after year.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Windscale_Fire,22,"I think the underlying problem here is what I call ""Space Cadet Syndrome"". People want the latest shiny things on their CVs so they gotta have 'em even it's actually detrimental to the organisation as a whole.

If a new tool is coming in to do the work that an existing tool already does, then part of the business case for the new tool has to include the work required to completely retire the old tool so you don't constantly build up technical debt.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
xSpaghettiMonster,20,I call it Resume Driven Design,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Windscale_Fire,2,I like that term :-),2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Unusual_Rice8567,1,"Let’s be fair, it’s not only us but also the companies fault. I can’t take a consulting job which uses old tools for longer than a year or I wouldn’t be attractive in the market anymore. Companies don’t understand stuff is the same shit different name.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,4,adoption should take into consideration of retirement does help substantially but again people get driven the outcomes and eventually lose out interest in work that doesn’t give the “outcomes they want to work for”,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Windscale_Fire,1,"Which comes back to what u/xSpaghettiMonster calls Resume Driven Design, or I call Space Cadet Syndrome.

It takes good and strong (technical) leadership to stop ""RDD"" becoming overwhelming.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
coinclink,5,"I see what you're saying, but the opposite is also ""we've always done it this way"" which is also detrimental to the org. If I come in and a place is using Jenkins, I'm not using Jenkins just because that's the current standard there.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Tee_zee,9,"If it would take hundreds of hours to re-engineer jenkins  to something else and you join my team, you're doing our actual priorities or you're out the door",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,2,"this is where it becomes too tricky imo, when, how and who makes the decision to adopt a change - if there is a strong push back from the management to not invest on new things, just because it require hours of re-engineering and the baggage of having the old system pulls you down, someone has to step in to bell the cat - and it becomes too complex to the person taking the responsibility as well, since they would be now working on mission critical systems with little incentive or push back..",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Calm_Run93,1,"in my experience, what usually happens in those situations is you build a new system out along side the existing but give it to another team to manage and use it for new projects going forwards.

Then what happens is the team that supported and championed the old system slowly become considered the legacy team and get saddled with more and more of the old technologies at the company, stagnating and losing engineers to attrition. Eventually they disappear and the old system is nixed entirely. I have seen that story play out at least half a dozen times now.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Calm_Run93,2,"tbh, as a lead engineer if i find out a place is still using jenkins in 2025 its a deal breaker in the first place. Because i know that to get to that state they're most likely going to be balls deep in technical debt, which means they're probably behind the times everywhere else, too.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
somnambulist79,2,"If tech debt is never the priority, then that’s a bad sign indeed.  Sometimes you need to bite that bullet.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
coinclink,0,"I would not be joining your team, I am a principal engineer so I would be coming in to lead your team. So, my first non-customer-driven priority would absolutely be to migrate you off of Jenkins. Happy to deal with pushback, but we're doing it or \*I'm\* out the door.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
CloudStrife25,2,I used to frown on that but now I don’t care. Too many companies expect expertise with specific technologies in the hiring process. I have a family and I don’t have time to spend hundreds of hours becoming an expert at tons of random technologies.,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
burlyginger,7,"I consider cohesiveness a part of the job description. 

Problems for sure arise when devs start picking new tooling that isn't supported. Taking and enforcing a measured approach to that is also part of the job. 

If every team/service goes off and does something new... How is anything ever supposed to be optimized? 

The team (us) who is supposed to design efficient ways of using tools is always under water and never effective.

Restrictions are good. 

Cohesiveness is good. Even if it's on a suboptimal set of tools for the time being.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
coinclink,3,"I understand your viewpoint but I tend to disagree. Typically the new tools do actually cause significant improvement in workflow in my experience. It's more that there is never enough effort to put work into migrating the old to the new, or it is massively deprioritized. KTLO mindset is really the disease, not wanting to improve processes with newer and better tools.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
burlyginger,6,"Agreed. 

I'm just saying that you can't let everyone create unicorns. 

I definitely move to new tools, but they need to be evaluated and prove beneficial enough to warrant migrating all similar projects to them. 

The migration is necessary to factor into the decision.  

Otherwise it doesn't happen IMO.

So I think we're saying the same thing.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,4,"Exactly, with tools for every other thing, optimising a very niche or particular activity, missing the holistic end-to-end picture, as the industry is so fragmented. This makes lives of the developers miserable at the end.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Medium-Tangerine5904,6,"I think the actual problem is that big companies tend to push the same model of doing devops across the entire organization. The reason is better governance, i get that, but of course it will lead to blockers / loss of velocity / frustration. For example, in a previous role the company did Terraform for IAM, including custom role per each project. I had to attend countless meetings and wait 3 months for multiple security teams to approve this role (that was just in our project). And it’s not the only example. Recently moved to independent consulting for smaller teams / startup and things are a lot cleaner and more flexible. I don’t think I’d have the energy to go back to the previous way. That’s the main reason for burnouts.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
sionescu,10,"> For example, in a previous role the company did Terraform for IAM, including custom role per each project.

There's your problem: not IaC for roles, but the approval process. In better managed companies, generally the team manager and tech lead can create roles without any external approval required, since it's scoped to their own team.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Calm_Run93,1,i think one root cause is people dont put anything like the effort into considering how they are going to move off a platform that they should at implementation time. The number of times i've seen the sunset process be a total afterthought is shocking.,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Kronsik,15,"Hey,

Sorry to hear you're feeling burnt out/negative about the environments at the moment.

A lot of this feels like a company culture issue, companies who don't really know what they're doing tend to jump on bandwagons and the 'latest shiny thing' blindly. I would argue this creates more issues than the new tool usually solves. As you note you have a multitude of different tools within your ecosystem and the use of different tools is actually causing friction rather than efficiency.

For example, we use the Gitlab ecosystem extensively, for code repositories, pipelines etc. There are always new tools/techniques for deployments (we use CDK and Terraform extensively deployed using our own custom frameworks for Gitlab CI).

When we find a new tool/technique we create a spike, someone will find a quiet Friday afternoon to write up some POC code and present to the Platform team.   
  
What is key here is that the presentation and critique is against the tool, not the individual. I think this keeps people keen to try new things without a poor tool reflecting poorly on them as an engineer.  
  
Coming to the meeting with 'We saw tool X gaining traction, I tried tool X and to be honest I thought it was a pile of shit, here's why:' is a perfectly valid answer as long as you have sufficient evidence to back up your argument.

I think this helps strike the balance between constantly shifting to new (possibly inferior) technology and a stagnated stack that becomes stale and difficult to work with.

I don't mean to be rude by directly quoting you here:

>IaC is great until Terraform state breaks and you’re in hell. GitOps is cool until you realize drift is inevitable. 

Terraform state doesn't just break in my experience, either someone is changing resources outside of the IAC or the IAC is poorly written and thus always sees 'changes'.  
  
I will say there have been bugs in the past with certain providers so Terraform is as good as its provider in that sense.

Cloudformation (in my opinion) is inferior, yep its lovely that I can write my IAC in Typescript the same language I'm writing my source code in, but the whole ecosystem feels a bit crap in comparison to Terraform. Reconciling resource drift being a large factor here.

I think time needs to be spent firstly asking 'Why?'.   
  
Why is resource drift occurring?  
  
Are the pipelines so brittle that people rather make the changes in the console?  
  
Is this an effort to circumvent security checks?  
  
Why are the tools not standardised, of-course we should POC new tools but why are tools being introduced seemingly randomly to fix issues?

Once this is identified work can begin restoring faith into your CI/CD process fixing the identified issues.

The burnout and on-call situation is a kiss of death. Engineers who are burnt out do not find proper fixes, they duct tape and move on. This causes more on-call issues to deal with and additional burnout. There needs to be a reset here.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,2,"Hey,

I appreciate this detailed perspective and I do resonate with most of the aspects you outlined. 

My dissatisfaction stems from not utilising these many tools effectively, but the sheer need to maintain these many tools to ship a piece of code seamlessly.

Starting from your build pipelines up until your telemetry there is a tool that’s specifically built for it. And there is no single window / interface to manage, debug and effectively utilising these tools. Without that, the onus now lies on the developer / devops expert to orchestrate all these tools in an effective way and get better results. And eventually if these tools aren’t effectively configured, the outcomes will be subpar, leading to a direct impact on the stability of the application.  

I see that AWS is trying to bring everything under a single window, with CodeBuild, AWS Secrets etc to orchestrate the end to end, but even within AWS it’s fragmented and doesn’t feel like am dealing with a single unified tool. 

At the end of the day, it still boils down to have a DevOps expert who knows it all to effectively manage your infra, which bears the question of advancements and all these tools :( 

I know I sound pessimistic, but I can’t help myself..",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Kronsik,4,"Hey :)  
  
In my opinion this is where well written CI/CD frameworks and repository templates come in.

The CI/CD frameworks should be robust enough to deal with a multitude of different deployment types/resources but also friendly for the end users creating repositories.

Paired with repository templates, the user can create a repo from a template, fill out a handful of variables to indicate where their IAC / source code is in the repository in the gitlab-ci.yml file and they are done.

All of the jobs to propagate should be decided initially at the framework level, if an end user wishes to change the default behaviour they can do with either a predefined toggle variable or extending from the framework. The former is preferable in my opinion as this is more closely reproduceable.

Research renovate - this is a tool to help keep dependencies up to date and greatly reduced a lot of our workload maintaining repos. It will create an MR to update some repositories dependencies, all of the tests run in the MR pipeline giving confidence that its not going to break anything.

A good organisation (in my opinion) uses a shared responsibility model.

Generally speaking I write the majority of CI/CD frameworks for the devs and they just 'plug it in'.  
If they wish to contribute to the frameworks they are more than welcome to raise an MR (They often do if they've found yet another node module package manager :D ).  
They are responsible for running their deployments and the surrounding source code, of-course I'll provide help if and when they need it.

Unfortunately I feel that some of the negative aspects you're speaking about are inherent in this line of work.

I don't mean this for just Platform Engineering / DevOps / Whatever new term someone with a blog coins and the industry mindlessly adopts.

This is a part of tech as a whole, practices and tools that are adopted are not always for the best.

Speak to a Web Dev and I'm sure they have some choice words about their employers use of framework, In the last 5 years alone I think I've lost count of how many new JS frameworks have come out to fix the last one, only to fall short and the whole thing continues again.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"totally agree with you - shared responsibility model, with accountability and clear guidance & structure is the way to make it less chaotic, cumbersome and easier to navigate.. appreciate your thoughts and inputs!",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
p8ntballnxj,37,"Imo as a DevOps person in a large company: the issue is leadership who doesn't have a clue. They change their minds constantly and give into the demands of customers (in my case, the customer are other non IT business units).",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
PlasticSmoothie,1,"I swear half my job is to look management right in the eye and ask them ""are you sure about that?""

My family doesn't understand a single bit of IT. I tell them I argue for a living.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"I understand leadership being clueless is one of the driving factors - the main driver for DevOps automation, as I believe back in those days, is to remove server ops guys and making it as seamless that any developer can handle it. And even for businesses, this is a win, because it basically reduces your expenses - with such a clear motivator, I am puzzled why anyone is not incentivized to see the end to end picture.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
rabbit994,12,"> I am puzzled why anyone is not incentivized to see the end to end picture.

*SIGH* You need to understand human nature and how companies actually work vs how you apparently think they should work.

Companies are not some borg organism that takes order from hive mind and executes it. They are filled full of humans with their own whims and desires which sometimes may match the company desires and sometimes may be completely against the company desires.

This can be a senior manager who clearly trying to build something on their resume so they can use that to get hire into more prestigious company. This could also be a developer is who over learning and just wants to push some buttons in their IDE, get the pipeline to be happy enough they can deploy it without getting in trouble and go the fuck home with their paycheck.

> is to remove server ops guys and making it as seamless that any developer can handle it.

For most companies, this is not an achievable goal. Few companies once they hit a certain size can do away with Ops Type people. Someone has to maintain infrastructure, monitoring, logging and other stuff most devs just never care about.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,2,"there is too much of bureaucracy and individual preferences coming in the way, than I thought to be honest..  even though there is an apparent reason / drive for a better outcome, unless an individual is motivated and sees beyond, this can’t be possible..",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
NicePersonOnReddit,2,"You are right that a lot of companies work in this way. The best companies will try to avoid this though and a framework like OKRs aims to solve the problem of people or departments not following the most important objectives of the company.

Part of being a good leader is about saying no to all the bad ideas or even good ideas that do not align with the chosen objectives, and then keeping everyone focused on the chosen objectives.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Farrishnakov,6,"It's not like that everywhere. There are plenty of places that do it well. Most problems extend from a lack of discipline and informed top-down culture. 

The most common causes of failed implementation and stress were in companies that allowed their business units to build literally anything and use any solution to get their results. Which is how they ended up with multiple clouds, lack of implemented reference architecture, etc. When trying to introduce devops standards after the fact, they have 50 different solutions to account for and are unable to establish any form of contract for automation. This results in tears and frustration.

Places where it works are ones that say from the start, or early enough in the process, what the established tools are. They provide reference architecture and a standard of doing things. Anything that is a deviation is documented and accounted for at the time of creation. 

However, this requires proper enforcement through things like IAM and policy. All of which must also be backed by management that is more concerned with doing things well than doing things ""faster"" 

This is why the term ""platform engineering"" is taking off. They build, establish, and maintain the platform and its standards. Nothing gets built without going through their shop for approval first.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Quietwulf,1,"Yep.  It’s may not be as sexy as deploying the new flavour of the month every week, but it *does* result in stable, planned, deployments.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Farrishnakov,2,"And, when you do want to move to the new hotness, you can actually establish a migration path. Maybe even obfuscate the migration for your users.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"I feel platform engineering is more kind of shrugging it under the rug, maybe bringing in a separate team who are torchbearers of the platform reliability & stability - but does it not happen to be a anti-pattern of devops?

as I believe devops evolved to enable developers with ops capability but with this platform engineering, I feel the narrative is going back to old days!",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Farrishnakov,3,"No. That's not what it is at all. This shows your lack of understanding of the fundamentals of the topic. This is not an anti-pattern at all. It's a formalization of devops, similar to SRE.

Having people practicing devops does not imply or intend to create overall chaos, ""shadow IT"" groups, or anything or the sort. This is why the role is typically reserved for senior engineers of either development or operations, because it requires both knowledge and discipline.

Devops practitioners are able to operate across traditional developer and operations boundaries, but that does not exempt them, or anyone, from establishing proper architecture. 

Platform engineering simply makes things easier for other teams to implement golden paths on standardized architectures and ensure there is standard automation in place.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"I agree, I might be totally wrong - as you pointed out, I still think it’s a good overlap of tools, process and discipline that ensures seamless delivery of a piece of code.. 

but I am genuinely curious, were these also not the basic building blocks of DevOps (or devops mindset) as they call it?",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
TheGRS,7,"When you start to get overwhelmed by all of it, just remember that at the end of the day this is all just a job. The work is there and it’s probably not going away. The complexity gives us opportunities. 

Personally I feel like it’s all so much more interesting than it used to be. We had some interesting ways to manage services years ago that I don’t want to go back to. The focus is much more on delivering value than solving trivial technical issues all the time.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,2,"I second your thoughts - I am also looking it from the perspective of delivery more value and not pulled down by the baggage of inefficiencies and I happen to hear the same old narratives of build pipelines, test failures, team waiting for the test fixes, deployment failures etc..",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
daedalus_structure,18,"DevOps ends up being a catch all for literally everything required to ship a software engineered product that isn’t writing the application code.

It will always be a fragmented mess.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,3,"of course - the narrative got swung away with anything other than development falls under devops, devops as in early days was mostly infra and anything around infra, reliability and server stuff.. that I think led to this rabbit hole of tools & frameworks, very siloed and fragmented",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Relevant_Pause_7593,20,"I work with Fortune 500 companies adopting devops- all of them think they are more mature than they are. Aside from a few isolated teams, the majority are still struggling to adopt agile (mostly because most have bastardized the process- scaled agile is the devil), and that lack of cultural behavior change is the biggest barrier to adopting new tools.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"I would like to hear your thoughts, mainly since you’re with F500 - what the general take on PaaS tools that tend to automate most of the stuff, like Heroku / Vercel or even CF automation tools? 


I have used these tools for some of the smaller projects and they come in handy, but they tend to super expensive. These tools have been around quite a while for now and have a good traction, but I don’t really believe they made it beyond a certain level - is it because of any process bottleneck or just pure bureaucracy?",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Relevant_Pause_7593,3,"Tools aren't the problem or the solution here. The challenge is the culture/behaviors of developer teams who aren't willing to let go of their old school thinking. 

For example, teams who (still) won't invest in automated testing. Sometimes there are technical limitations with old tech, but usually it's teams misunderstanding TDD - (""Why do TDD, when we can do BDD? What do we need? A tool called cucumber and then all our problems are solved?!!"" - again, focusing on the believe that a tool will solve the problem when it's the team that needs to start writing tests as they code). The result is the team concludes ""Automated testing doesn't work for our project, we are special"", when really it could never succeed. I see this almost on a daily basis.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,2,"okay, so it’s basically the mindset problem - looking for some silver bullet that could take away all their problems or make lives easier but without having to do the grunt work of having the fundamentals stronger 

I can relate to this - I have come across certain scenarios it was mostly the teams being very resistant to change or adopting what’s right and they ended up doing what’s easier (for them)",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Xydan,1,"Agreed. Saying ""we've adopted Agile!"" And actually implementing Agile practices on age-old processes is not the same. Operations is no different when a rogue IT team joins to org and does everything in the cloud. Now the entire operations team has to shift and lift to the cloud without changing the applications and resources themselves.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
SigmaSixShooter,1,I’d love to hear more about what your think proper agile should look like. I see a lot of teams trying to do it as well and it always seems like a mess. Everywhere I go I always push to get them over to Kanban and it’s never well received.,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Disgruntled_Agilist,7,"What so-called ""proper Agile"" looks like is completely contextual to the team . . . that's the entire point.  To have a team be able to come up with its own effective way of working *for its situation.*

The goal is to limit work in progress, have the team swarm together on one thing at a time, *get it shipped,* and then get stakeholder feedback as quickly as possible.  But this requires teams to have the right skillsets to do this and applications which are loosely coupled enough to reduce dependencies outside the team.

You shouldn't be ""pushing"" anyone to ""get over to Kanban.""  If that works for them, great.  If not, OK, try something else.  But it does make me wonder what ""Kanban"" is in your mind if you somehow think it's to be contrasted against ""Agile.""",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
SigmaSixShooter,3,"Well Agile is the philosophy, but the implementations I know of usually break down into either Scrum or Kanban. I’ve never felt Scrum (sprint and point planning) do any good, or at least I’ve never seen anyone do it well. Point planning is never right, businesses change priorities every other month etc. 

Kanban takes a lot of the work out and just gives people a top down list. It also helps the company better visualize things IMO. 

But, I’m far from an expert on this, that’s why I ask questions on threads like this. 

I agree Agile should be each team doing what works for them, but I’ve never seen that. I’ve always seen “we have to do scrum, with sprints and points and daily stand ups and never once question if it really works for us or not”",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Disgruntled_Agilist,6,">Well Agile is the philosophy, but the implementations I know of usually break down into either Scrum or Kanban. I’ve never felt Scrum (sprint and point planning) do any good, or at least I’ve never seen anyone do it well. Point planning is never right, businesses change priorities every other month etc.

Story points are not part of Scrum, first off.  They were invented by Ron Jeffries and his team at Chrysler in an attempt to abstract away estimates from meddling by managment.  They'd tried ""ideal developer days"" only to have management conflate them as ""actual days"" and hold their feet to the fire, so they changed the name.  User Stories and Story Points come from Extreme Programming (XP), not Scrum.

And if business priorities change every other month, that's a argument FOR Scrum, because that just means every 2-6 iterations your Product Goal changes.  None of which is to say Scrum is necessarily always the best choice, but if we're going to criticize it, let's be accurate about what it is and isn't.

>I agree Agile should be each team doing what works for them, but I’ve never seen that. I’ve always seen “we have to do scrum, with sprints and points and daily stand ups and never once question if it really works for us or not.”

So what you're saying is we have a problem with incompetent meddling management and developers who want to ""just code"" and be pushed around like chess pieces, rather than participate in making decisions.  I don't disagree.  For all the ""Agile is dead"" shit going around LinkedIn, it seems more like good Agile just can't survive contact with apathetic devs, micromanaging middle management, and egotistical executives, which really shouldn't surprise anyone.

I've seen the mindset work well in spades . . . but it was when I was a military jet aviator, not working in tech.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Relevant_Pause_7593,1,"A lot of spicy takes here, apologies ahead of time.  
  
I think a lot of issues come down to the age-old problem of product managers not knowing what they want or how they want it to work. This has been a problem since we first started writing software. We aren't good at writing clear requirements.  
  
Agile, in my opinion, should be a simple set of long term goals ""build this feature in this application to address this business/customer need"", with development using CI/CD that allows easy deployment to prod, protected by feature flags and automated testing. I don't care if it's postits on a whiteboard, or a Kanban system, but keeping it simple helps a lot.   
  
One of the first times I was exposed to Agile, the product stakeholder attended the agile training and their main takeaway was ""This is great! I can change my mind at anytime"". 

Teams get all wrapped up in agile events, when they should be focusing on delivering value. I worked with one team for 6 months, who wasn't able to deliver anything because they were so wrapped up in the agile ceremonies. Every sprint their deliverable was ""look, we are getting better at refining our backlog!"", but they never made time to improve their CI/CD and/or automated testing, despite my best efforts.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Disgruntled_Agilist,1,">One of the first times I was exposed to Agile, the product stakeholder attended the agile training and their main takeaway was ""This is great! I can change my mind at anytime"".

To which the correct response is to channel your inner Ian Malcolm, and remind them that just because they *can* doesn't mean that they *should*.

The whole meaning of the word ""Agile"" is ""able to pivot and execute on new business opportunities quickly,"" not "". . . squirrel!""

>Teams get all wrapped up in agile events, when they should be focusing on delivering value. I worked with one team for 6 months, who wasn't able to deliver anything because they were so wrapped up in the agile ceremonies. Every sprint their deliverable was ""look, we are getting better at refining our backlog!"", but they never made time to improve their CI/CD and/or automated testing, despite my best efforts.

What maddens me as someone (somehow still) working primarily as an Agilist is learned helplessness.  People who've had The Boss tell them everything they're doing for years, and now they have no interest in ever thinking for themselves or proactively doing something smart for the company, or even just their own team.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
lexd88,1,"I do consulting work and one client uses kanban board with over 60+ tickets in the backlog.

There is no clear goal and/priorities. It's very difficult to see what tickets should be worked on next and new tickets kept getting created as new things are discovered.

I got the team to move over to agile and I've created a sprint board. With proper sprint planning, we can define what tickets to work on and have a realistic goal (obviously we can't over commit either, so this is where the story point estimation is so useful)",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
crystalpeaks25,12,if you remove jenkins grom that techstack your life will be easier.,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
korney4eg,-1,"what would be replacement for jenkins?

I like coding in Groovy more then coding in yaml/json",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Farrishnakov,14,Except Jenkins relies on an infinite number of plugins that are questionably maintained to even offer basic functionality. It requires constant patching/updating. Each of those updates are likely to introduce breaking changes.,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
korney4eg,6,"You are right. Maintenance hell of jenkins plugins is thruth.

I'm searching for another tool with coding paradigm.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Farrishnakov,2,"You can easily get that with GHA or similar platform. It's not all yaml based. 

Source: I moved from Jenkins to GHA and never looked back.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
crystalpeaks25,5,"no one like coding in yaml/json but its less convuluted, and its not really coding its just dclaring how your pipelines behave.

if you write groovy on a day to day basis i guess, but that could also be something youd want to look at.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Wooden_Excitement554,3,"Oh you forgot the new wave of tools and buzzwords  coming your way now i.e. AIOps, MLOps, RAGOps, ModelOps, PromptOps , LLMOps ....  and  GodKnowsWhatOps  :)",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"Lol, I was aiming to go for that and also how the AI agents can automate the devops space..

jokes apart, I am genuinely curious about this explode of AI agents and how specifically these AI agents  / agentic frameworks can help with devops workflows",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Wooden_Excitement554,1,"Imagine this .

You are on call as a SRE,  and getting buzzed all the time with non issue alerts so much lately that you loose the sensitivity to it. However, when the real issue happens, you are expected to be alert and address it pronto. In my humble opinion, this donkey work  of identifying a needle in the heystack should just be left to machines, not humans. We should focus on more creative things, such as bringing in these agents and tweaking those. That would be the new face of SRE with AIOps in the tow.  

Enter agentic workflows 

1. Agent X is a piece of intelligent software (yeah, you could call it (not him/her) a purpose built model) which will be constantly looking at the observability data (metrics, traces, logs). It has mugged up all the patters and also understand the desired ideal state of the system. It knows whats an issue and whats noise. Anytime it detects the abnormal pattern and drift from desired state, it would raise an alarm and call to agent Y, who is  troubleshooter. 

2. Enters Agent Y, who is now called on to the job of finding out the Root Cause if the issue. It has deep knowledge of Systems and is at expert at RCA and correlating the data. It knows common issue, its probably also has scraped and mugged up the entire stack overflow. It quickly detects that there is an issue with a specific node, or a pod and so on and so forth. And then it calls to agent Z, the fixer. 

3.  Agent Z wakes up and come into action to mitigate the issue. It knows the 5 ways to fix xxxx (replace xxx with anything) and it can also dynamically figure out the best way to fix the issue with the least amount of disruptions, as its been trained to do so.  Its quickly fixes the issue and communicates back with the team. 

4. There is ofcourse a supervisor looking after the team, cor ordinating and communicating with everyone, making sure things are in order. 

  
All this data will be fed back into the system, in true blameless postmortem, as machines dont have the ego issues and trying to pass on the blame. They know that their job would be easier the next time if they just focus on learning from what happened here and create a plan for future if something like this happens again. 

  
Thats the agentic workflow coming your way if not already !",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"yup, this is the crazy thing I was envisioning to happen in the near future - with the charade of agents, that removes the grunt work, removing the developer bottleneck and eventually making informed decisions (ofc, with still human in the loop) to effectively manage the infra..

but again, this shouldn't add to the irony of yet another tool!",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Wooden_Excitement554,2,"Technology is always in state of flux like fashion. Things come in differnt wrappers. Fundamentals remain the same. If you build solid foundations, it’s easy to adopt to any new thing. 

And the change is everywhere. Do you want the doctors to use the technology in 90s where they would cut you open and stay in bed for weeks and months for recovery, or you want to go through non invasive process, get out of the hospital next day and start with your routine in a couple of days ? Then how do you expect tech to not keep getting better. With it comes new 🛠️ 

The state of Devops is much more simpler,
Consolidated and streamlined than it was 10 years ago to be honest. Kubernetes has been the great standardizer. It sits on cloud mostly. Tools on top keep changing. How difficult is that to master and adopt.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"this does beg me a question, (which I have asked earlier too) - like kubernetes became a standardizer and ofc it was Google that brought up this standardization & the industry adopted it..

but I don't see such a standardization happening in the tooling space though, and even the cloud providers who can benefit from this, aren't moving the needle (I might be unaware and wrong)..

this might come out as a rant, sorry for that, but just trying to understand the landscape and how it evolves..",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Wooden_Excitement554,2,"Standardisation is  already happening. Standardization of practices has already happened fuly. Tools space is getting better. In 2015 you were confuses as to what to use for IaC, there were four main players (Chef, Puppet, Ansible, Salt) and it was really fragmented. Today, most of them barring Ansible are irrelevant for the time as Containers have made them largely unnecessarily. The only tool you need to bother about in Iac is Terraform.  

As for CI, it can not be standardised basis of tool as every org has  their own suit (Atlassian, vs GitHub vs GitLab vs Azure Devops) and will continue ot use them. But if you really look at it from learning and keeping track, it should be effortless. If you know Jenkins, or GHA, or something else, you would be able to adopt to any other tool quickly.  

  
So the standard stack is 

1. Cloud (does not matter which)

2. Kubernetes (no questions here)

3. CI (does not matter what) 

4. CD (Gitops, mostly Argo)

5.  IaC (mainly TF, something ansible based on need )

6. Metrics Monitoring - Prometheus + Grafana ( or paid services) 

7. Logs - ELK / Loki + Grafana 

8. Distributed Tracing - Open Telemetry and variants 

9. Service Mesh - Mostly Istio  

Its not that you have to learn all of this, a lot of this is need basis. But there are standard set of practices. Even if tools vary, its easy to do transfer learning, provided you are focusing on solid foundations.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,2,"wow, this is quite helpful - this does cover almost everything that's required to ship software.. thank you so much for putting this together!

I do understand things have been standardized with each of this responsibility - each of this might be individually / jointly owned by a team but also some of these might be one of things like setting up CI / CD stuff",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Wooden_Excitement554,1,Cheers !,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
ycnz,1,Finding a model that can *guarantee* zero false negatives is the hard part.,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Ma1eficent,3,"I've been doing this too long, but DevOps was a culture where both the dev and ops teams for a project shared the oncall, with the goal of making the dev team feel the pain of the code being pushed out instead of just chucking it over to the ops team. It gave faster feedback and resulted in more care and testing being put into code releases. It's baffling why Internal Tools was renamed DevOps, the culture and gains from DevOps culture dropped, and everyone just keeps adding new teams that already existed like Infrastructure Automation, Monitoring, etc. to the pile and pretending any of this makes sense.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
MulberryExisting5007,6,"We focus on problems. When something is solved, we move on to other challenges. There are a lot of elegant implementations out there that work well and will continue to work well, and we don’t have to talk about them because there’s no problem to complain about. Def agree with other sentiments here: poor management, tech debt, rushed and ham fisted implementations, contractors that want to check boxes, cash checks and move on — all help to leave behind critical systems that are error prone or brittle. 

My own belief is that corporate culture encourages performative victories over sound, maintainable solutions. It’s a question of proper rewards to incentivize quality. It’s similar to convincing your boss to refactor your MVP.

I’ve spent so much time digging into shoddy, poorly organized implementations, and most of the time it seems to me that I wouldn’t have even been having to look into it if the person setting it up had just slowed down a little and spent about 10% more time ensuring it was set up right.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,3,"businesses focus on outcomes and revenues, and also the perspective that “if it works, don’t touch it”

it also stems from the ultimate fear of being targeted if something breaks when making better and so every one is just satisfied with whether it works or not, and then moving on to the next thing..",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
djk29a_,7,"It’s been like this for at least 20 years now is the thing. Organizations that have trouble executing tend to be under-performers on many metrics even beyond tech / software concerns, and the ones going ahead are both far better capitalized and culturally able to execute better, which leads to much bigger gaps between leaders and laggards over time.

I was wondering long ago if after so many years most organizations would have simply thrown in the towel by now and outsourced everything given the relatively poor returns on their technology investments by most business KPIs at their organizations.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,2,"I come across a lot of organizations that outperform and capitalize this, for example, I came across a study where Github basically improved their developer experience and velocity, through multiple fold by taking advantage of different tools (including co-pilots) and essentially created a seamless experience for their developers.

This is certainly a bit of a stretch (and maybe rant), but why not any of these companies motivated enough to spin out that as a separate offering / business? Like how Amazon back in those days, built AWS because of the pains of running servers for its ecommerce business.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
djk29a_,3,"I’ve worked for some of these companies and basically they don’t have the business incentives that the market leaders in this subfield do. IT and software exists in most companies to deliver value to other lines of business such as greater manufacturing efficiencies, patient outcomes (ok, this is sarcasm because basically no company gets more revenue for better patient outcomes in the world), etc. rather than being faster at delivering reliable features in software, for example. This is part of why so long ago the whole “digital transformation” trend cooked up by a bunch of people was popularized for a while where these incentives were supposed to better align with whatever existing business culture or processes were in place, but it never materialized into much because most companies that are fairly large now in their respective markets basically are only competing against themselves because larger organizations are better able to simply choose their markets and customer base and thus are in little immediate need to innovate or improve based upon the crude figure of something like share price. Innovations may lead to increased revenue and share value and all that, but culturally most organizations basically don’t have the existential drivers such as how start-ups need to keep innovating or collapse quickly to make these changes.

To more directly answer the question of why companies don’t spin these out my best guesses are that there’s both legal and technical reasons. Most organizations don’t want to send out software to anyone else because it’s a write-down and they’re not staffed to handle the software community’s input much. Heck, even highly technical organizations oftentimes don’t do this (see: id Software with its world-class game engines not wanting to license it out because they couldn’t support licensees well). On a technical level a lot of the software produced is frankly quite garbage and of little value to the world, much of my own code included absolutely.

But this is why I’ve given up on working in SRE / devops for organizations where their business is not aligned at a high level closely to delivering higher quality software. It doesn’t matter if you have great executives above you if their own power within the organization will be capped far below someone else unaligned with technology that will keep hampering your superior’s noble, valiant efforts. This is the primary reasons cited when people quit from under me before - it wasn’t about me as a manager / leader but about the n levels above me that kept me from enabling my team to work at their hired skill levels and expertise.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
kobumaister,7,"Totally disagree, the fact that it's a chain of tools is around the unix concept, where you have tools that do some work very well, and connect The output of one to the input of the next one. No tool could do all the DevOps work.

About exhaustion, I can't talk for everyone but if you haven't seen a tired DevOps, here's one, AMA. 

And about automation... You get some specific cases and generalize them to fill your theory, of course things break, but automations bring a lot of value and remove toil. That's been a fact for most of my career.

Sounds like you're reaching burnout.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,4,"ah, I hear you - I am on the same boat and I am not sure whether it's my personal experience that's making me feel this way or is this an industry trend..

how do you navigate the devops fatigue though?",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
kobumaister,3,I have ADHD and feel comfortable in chaos and context switch.,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,embracing the chaos is the only way out :),2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
kobumaister,1,"Might be, most SE I know don't want to know anything about DevOps and most DevOps find development boring.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Euphoric_Barracuda_7,3,"The profligate expansion of CPU architectures, a gadrillion devices, multiple OSes, deployment environments (cloud, on-prem, IoT, some dude's basement or underground bunker) and all their variants over the years has led to crazy tech sprawl requiring knowledge of a crazy\^2 number of different tools to work together.  Every day there's some tool promising to fix your life and make it easier (tm).  I remember a simpler time when every developer in my company worked on Windows running VS Studio Professional, MFC/C/C++ and it was a much simpler world with just desktops.  Even then that was complicated enough with dependency hell, but getting visibility into the entire process of where/when/how the software is used is much easier.  Today you need to know a gadrillion things and even fix the company's toilet and plumbing if you have to, for free.  So what you end up with is that you get a bunch of devs who know X tool but has zero understanding of the entire process of where/how/when the actual product is used, but hey new fancy Y tool will \*definitely\* fix the problem.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Miserygut,3,"Lots of people think they're hot shit for knowing how to build something complicated and meeting all of their stakeholder desires. They get lots of praise and commendations for it then and leave to create another complicated mess before the tricky / impossible / intractable challenge of maintaining it starts. 

There are no prizes for building simple, reliable systems.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,2,"yea, unfortunately there is no reward for keeping it simple - everyone wants to make it more complex, adding layer on top of layers to make them work better",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Miserygut,2,"It looks fantastic on your profile saying that you can do X Y and Z with the latest bleeding edge technology. Much more impressive than ""I kept an unholy abomination from collapsing in on itself for N years"".",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Rei_Never,2,"It's not meant to be an actual job - that's the problem, it's a philosophy which the entire engineering org should be practicing. Otherwise it leads to burn out and ""kick it over the fence"" mentality.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
nettrotten,2,"I mean, that's why we have jobs.

It's the story of IT: it has always been like this, and it always will be.

Technology evolves faster and faster, and eventually, it will evolve on its own.

It's a world for brave nerds.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,4,I am worried that nerds are fighting a silent war that was brought down by themselves on them…,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
reliant-labs,2,"It's a hard problem to solve, but I'm actually looking at exactly this problem right now. If anybody is interested feel free to DM me!",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,that's very interesting - I would love to hear your perspectives!,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
reliant-labs,1,"I think its mostly due to the fact that the feature space is so broad, and its still a relatively new field (at least with respect to K8s). There's so many competing products, and a lot of them are only recently reaching a maturity level that is stable and scalable enough for enterprise (ie: Prometheus had lots of scaling problems for a very long time).

Add in multicluster, different networking topologies, and it quickly becomes hard to solve any one problem, let alone aggregate the multiple tools into something cohesive.

But I definitely feel you that it's still kind of mind-blowing that with all the existing tech resources this problem is so bad. It's very painful to setup a robust devops framework these days. So, we're trying to solve for this, and have a prototype that is showing a lot of promise, but its still early days",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
jcbevns,2,"Yes there's more to do, but we're getting more done, and cleaner, and more transparent.

Basically what you're fighting for is getting done more, if you're doing your job well.

If you want teams to have their own ideas and own wins, then you have to let them have freedom and with freedom comes fragmentatio from the ""norm"".

Youd prefer doing cookie cutter each project?

Its not easy, every team and situation is different, but that's what makes it fun (for me).",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"> With freedom comes fragmentation

this does makes sense, how much of a freedom that you enable to the developers still within the confines of your holistic approach matters a lot.. too much of freedom can spiral things away while too much of restriction prevents innovation..",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Broken-Lungs,2,"Poor leadership, a lack of experience, and letting developers LARP as infrastructure engineers has been my experience. That last group shows no effort in improving or learning standards and best practices that infra is built on.


Developers in infra is a sure way to guarantee wasteful spend, tech debt, snd security holes large enough to sail every navy ever through them.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
aspiringgreybeard,2,"Exactly.  And also the reverse (point and click sysadmins LARPing as programmers)-- note the reply down below from a systems engineer that contained ""I'm not a coder and don't like coding."" 

A good DevOps engineer should have in depth understanding of systems, networking, and a programming language or three.  There just aren't enough people like that to go around.  The industry has responded by developing an endless array of tools designed to enable individuals to learn ""the tool"" as opposed to understanding every underlying facet of the technologies involved.  So now we have armies of people with limited experience using tools to stack complex layers on top of each other with no real understanding of what's under the hood or where to start if it doesn't all work as expected.

I'll see Knuth's ""Premature Optimization is the root of all evil"" and raise with ""Excessive abstraction is the root of all waste.""  The commercial is that people are saving time by using tools that abstract away complexity.  The reality is a lot of people are using tools they could not have developed on their own even with unlimited time-- the problem that is being solved here isn't ""time"", unless you count the time it would take to have the experience to really grok the technologies behind the tools.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,we ended up in a situation where devops requires a specialised team of experts to handle and manage the operations..,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Live-Box-5048,2,"It’s heavily about debt tech, bad management and top-down chaos.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
fire-d-guy,2,DevOps was a way for the industry to consolidate multiple roles and job functions into one while paying you a single salary.....you all fell for it.,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"lol, that’s definitely looks like has happened here - the complex constructs of multiple roles and job has been overly simplified",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
enemylemon,2,"Because the principles of DevOps were completely ignored while opportunists used the new buzzwords to embezzle budget dollars. And it doesn’t matter anymore, except as more evidence of ongoing systemic collapse. ",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,2,"systemic collapse is the trend that am seeing around, unfortunately",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Nosa2k,2,"It think it all boils down to leadership. Over the years the IT industry has been bloated with middle management that have no history of managing Enterprise software and its systems.  

We have Product Owners, Chapter leaders, Project Managers, Scrum Masters etc. Adding no value IMO, they kill innovation and creative thinking. Everything is boiled to task driven approach which is counter productive long term IMO.

These problems can be solved with proper planning and architecture. Some teams tend to
Over Engineer their solutions making them more complex than they should.

IMO, you don’t need helm if, your application is a simple deployment. ArgoCD is not necessarily needed when you can roll back a git commit via a previous Jenkins run.

Lastly Documentation should be added to the list of tasks alongside Jira Tickets.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Seeruk,2,"Because what you described is not DevOps 

It’s high stress ops dressed up as something it’s not by chucking tools at the problem",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Merejo,2,I don't have anything useful to add other than this post makes me feel like I am not crazy and not alone lol,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
WeirdTurnedPr0,2,"I've been in DevOps for about 15 years. In my experience is due to having to craft the solutions to accommodate company and developer constraints. There's stuff they're unwilling to do or learn or change, but you have a requirement to ship code. 

This stuff accumulates and gets baked into technical debt. I think we all do our best to align with the best practices, latest/greatest tools - but no DevOps team achieves success by ignoring business and developer requirements.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
4kidsinatrenchcoat,3,"In addition to all of the good answers shared already: devops is a political field in larger companies. Our decisions have a very wide impact and therefore a lot of people deal with us. 

As a devops staff engineer I deal with everybody from C level execs (like with audit issues or specific road map questions) to individual developers. 

This has repercussions on our field at large",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Sbadabam278,2,"One major issue that I see (in my limited experience) is that there’s not as much thought given to type safety and testing in these tools. 

A lot of them just give you some sort of API you can make rpc calls to, and that’s it. Static type checks are a mirage and testing is an after thought which has been bolted upon the project after N years. 

It’s like every new tool needs to go through the history of software engineering all over again. It’s exceedingly hard to know if the changes you’re making are correct and if they will keep being correct in the future 

It",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
siberianmi,2,"I can’t say I agree at all.  My toolchain has been largely stable for the  past 4-5 years.

Buildkite, ArgoCD, Cloudformation, AWS CDK & CDK8s, ArgoCD, Kubernetes. Done ✅ 

That’s it, that’s all the tools I need to build, test, and ship not only all of our applications to production but also our infrastructure code.

I sleep soundly and I’m not burned out.  I frankly feel like the Maytag man half the time just sitting by watching the machine run.  I’m on call 24/7 but expect to not get paged (3 pages overnight last year total)

For what it’s worth I had the good fortune of coming to this job being allowed to build essentially greenfield practices fresh off a few years of devops consulting.  I knew exactly what I wanted, hired the team I wanted, leaned into best practices hard, and had no resistance whatsoever on implementation.  I understand that is not everyone’s experience but it can be done.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"so good for you! if there is any learnings or inputs that you can share, it would be great to learn and understand the nuances..

out of curiosity - you still had to navigate these tool set and how do you handle the telemetry?",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
siberianmi,2,"My advice is that if you are in the cloud for hosting, then lean into it.  If there is a managed service, use it.  You will end up far leaner as far as staffing, be able to focus on what matters, and not waste time and energy reinventing what is a solved problem.

We are running New Relic for APM with integration with our AWS account to pull kubernetes and cloudwatch metrics in.

Honestly much of this is built on experience from prior jobs and just focusing on best practices like IAC, PRs for everything, CI/CD for everything, no pet servers (we don’t even have terminal access setup).",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Deleted Account,1,"You just need more scaffolding ontop of your scaffolding, maybe in a different shape. That will solve your problem.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"I am worried that it would make it more complex, maybe I am bit paranoid? - If any one of tools break, the whole scaffold crumbles, impacting deliveries and productivity..",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Deleted Account,2,Im being sarcastic sorry. That's exactly the problem. (We have too many scaffolding solutions stacked ontop of or baked into each other.,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"haha, I got you! nothing painful to hear there is another tool for that :(",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
winfly,1,"If you’ve worked somewhere with a mature and well operating process then it doesn’t look fragmented or cost a huge amount.  Organizations that are working to implement DevOps best practices are likely going to experience many pain points along the way, but it eventually pays off imo.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,I agree that it boils down to having it figured out end to end and implement proper tooling architecture to arrive best results.. until then it’s an havoc unfortunately,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
winfly,1,"Yes, it is the definition of growing pains. You have legacy business processes that require a lot of reworking to fit into modern capabilities. It is very difficult to just transition from one to the other, because people learn better ways of doing things along the way. It is a lot of working, reworking, and reworking to get to a mature state.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Creative-Activity-47,1,"About this Tool puzzle 
This is not just a devops issues it a general trend in IT. And it is not helping. And this can be linked to some over zealous managers who want promotion and a show of performance review but most times these tools are not really needed. I will say the IT industry is increasingly becoming toxic with companies toxic culture and selfish individuals ambition",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
skspoppa733,1,"IMO it’s the result of the market wanting to capitalize on the buzzword so much that DevOps became more than culture and practice. Once it became synonymous with tooling, job titles and pretty much tossed away any knowledge of everything it replaced, it became even more expensive, unwieldy and risky too.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Mazda3_ignition66,1,Gitops is good only when everybody is following the best prqctice,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
isinkthereforeiswam,1,"Often bc you have different devop folks with different goals. You get a rock star in that sells everyone on a new thing and makes it sing. They leave, nobody else knows how to do it. That thing just becomes something that's paid for.


I did analytics for years and saw the same. One dept uses powerbi,,another tableau, another excel, another python...subdivided groups wo a unified bi dept. Someone leaves, others have to figure out how to support the already built stuff wo wasting money rewriting it all bc management gets pissed if anything looks or works differently and doesn't want to give up the sunk cost.


You got the rock star that builds a resume builder proekect then leaves the company. You got other folks that want to optimize and prine things but mgmt wont foot the bill on something that won't make money..and the tech folks have a hard time explaining how ditching licenses and optimizing code will provide cost avoidance and cost savings down the road. Lot of projects get 80% done and considered ""good enoigh"" that mgmt moves devs to other stuff leaving end users constantly wasting time (money) manually working around issues in system that a one time cost could fix.


So a lot of this comes down to selling mgmt on the idea of going the extra mile,,paying for tech debt to clean up and optimize, but a lot of folks are burned out and feel it's a sysiohean task trying to make that happen.


Doesn't help that every year some new software comes out promising to solve all the problems, and mgmt or devops think it will,,and it's just another thing that has to get supported in the future.


Another thing is mgmt not understanding agile. Devs roll something out in phases, but need,that cleanup and optimization phase, and also a phase to reassess how everything at the company works together to rebuild stuff to be more seemless. That's a hard sell to mgmt.


Company I'm at put a freeze on all projects until a massive data lake could get done to coordinate all data at the company and make it much eaiser for all systems to tap a single data lakw w abstract data profile layers instead of every system having their own solution. I've worked at some big companies that would never spend a dime on such a thing even when devs, pms, ba's, etc showed valie cost benefit. They just want the devs to keep pushing forward with new stuff. ""New = profit ... Revise = expense"". 


So yeah..lot of problems, but it mostly stems from bus management. Management owns the company, processes, procedures. Devops can't magically do better if mgmt is not on board with the ideas.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"appreciate the detailed perspective - culture and mindset of the organisation definitely plays a role in adopting best practices.. if there isn’t enough buy in, then it becomes too difficult to navigate and getting things done would only be the focus with no appetite to optimise or make it better..

from your exp, what do you think has helped putting a better business case to mgmt to convince them for a better solution / process?",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
isinkthereforeiswam,1,"I did c-suite analytics for 2 decades, and it's time & money. And since time costs money, you convert time into money, too.

If something is taking devs hours to maintain every week, and a bit of exploration shows that a one time cost of $10k would help them prune and optimize that away.. then you do the math...

Let's say 5 devs / week spend 2 hours each to maintain some garbage. 5 \* 2 = 10 hrs/wk. Let's say each dev costs $150/hr (assuming company overhead like benefits and such are added in). That's $150\*10 = $1500/wk being pissed away on this. Mutiply that by 52 weeks per year for simplicitty... $1500 \* 52 = $78,000 / year wasted maintaining this thing vs a 1 time cost of $10k.

Likewise, there's the opportunity cost.. devs pissing away 10 hrs / wk on something means they aren't spending it on something else.

But, like you and I both know, it depends on the company culture and management. I found an issue at one job costing company $1M / year. Literally if we fixed the issue it would prevent $1M / year from being tossed on a bon fire. I thought that was a big deal. Nobody listened. A year goes buy, someone approaches me raving about it. I go ""oh, yeah.. I found that last year."" They chastised me for not bring it up. Um.. I did bring it up. ""Ok, but why didn't you make a bigger deal about it."" Um.. b/c telling folks we're bleeding $1M/yr doesn't require a g\*\* d\*\*\* sales pitch. It pretty much sells itself. The company was a hot mess and went out of business after I left.

Usually devops will have a PM or Product Owner that's supposed to help translate all that work unit time and money and put together proposals, and work with the PMO to determine where the most bang for the buck would go. But, a lot of companies are just a hot mess. A lot of PM's are just glorified nannies. All they do is coordinate meetings and answer emails. They don't do gantt charts or do bottom-up or top-down project analysis.

So, if this crap falls to the devs, you have to translate your cost on the project and hours into cost and make it clear how it would be better to optimize code or to get rid of 15 code libs all doing the same and reduce it down to a few that are easier to support and maintain.

Also, force everyone to use coding conventions and don't let any dev use whatever pet code libs they want without some Quality Circle made up of folks from all the dev ops teams vetting it. Decision by committee sucks, but it beats having different dev dept's all doing their own things like cats and then an ""A"" team gets shifted to a diff projet while a ""B"" team has to fill in and has a huge learning curve on what the libs and junk they were doing.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"Btw, on top of this, I haven’t even mentioned about the cloud providers - all the tools whatsoever is an added cost on top of your cloud providers cost.. why have transitioned into a state where the infrastructure where the application is siloed and the everything in between the IDE and the infrastructure is a charade of tools trying to make it better.. the cloud providers aren’t also incentivised to make the end to end experience seamless while these tools are also not thinking beyond the cloud providers, anyone / everyone are on top of the cloud providers or they just provide cloud.. 

Is there any suggestion / recommendation on a tool that does it end to end? 

ofc as I mentioned in one of the other comments, AWS is trying to do it end to end with CodeBuild, Docker repo, Secrets and what not but it’s still not a unified experience and confusing",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
adept2051,1,"I see a lot of it, and repeatedly it comes down to the misunderstanding of, whether willful or negligent of Devops. Trying to mix concepts with roles driven by mid level management and further permeation of DevOps is a Role, DevOps is a Tool, DevOps is a concept DevOps seems to work if you pick one of either a collection of roles or as an org and a community its a concept as soon as it becomes a fruit salad of those it just starts to fall apart, become hard to quantify within the organisation and hard to quantify the How and the How to be successful with it. And making it next to impossible to specify or recognise where the tools fit and how to get buy in from the wider community/org to use a tool for a role where required.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Luolong,1,The tooling sucks. It’s basically today where programming was in 80’s or 90’s. Some decent new languages but devex tooling is at its infancy.,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"Wondering, why do you say it’s still at infancy, with tools being around for more than a decade now, starting from Jenkins, Terraform etc? 

is it that they are still in the hype curve, with many tools and hopefully get standardized / consolidated  in the coming years?",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Luolong,1,"Just comparing the level of help we get from our authoring tools we have for programming languages, DevOps tooling still feels like the state of the art is syntax highlighting and some minimal autocomplete. There’s no real (editor side) project validation (linting), no refactoring to speak of.

In some cases, the only way to get feedback is to run the damned pipelines in production and see what happens.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
VindicoAtrum,1,"Platform engineering is the latest ""this'll fix it all"". It does not fix it all. At all. Same old problems, same old bloat.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"yes, that's the nightmare of devops - this keeps puzzling me but again there have been tools / providers who have considerably done it well (at least in my opinion) but haven't been able to scale - Heroku for that matter, I have seen a good number of companies running on Heroku but I don't think they were able to scale beyond a point, maybe because of cost, Salesforce acquisition or something?

but is this just because of lack of initiative / innovation to solve from the foundational level, never know!",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
running101,1,"Because you have new people come in who think that a new tech stack is required. Then they leave a mess behind, a new 'genius' comes in thinks they need to change everything they leave before the last mess was cleaned up. rinse repeat.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,2,the craze of new things and I know it all (and better than others) - these two doesn’t ever fade away and leads to a big entangled cob of web!,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Skill-Additional,1,There will always be work to do. That’s life. Sounds like you need to take a break. Set some boundaries around work and knock off at a reasonable time. That comes down to company culture your own way of working.,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
eltear1,1,"The very big problem for DevOps is that everyone expect that, because it's supposed to make automation, it's also supposed to be setup quickly.
You can make great automation with every decent took IF you give DevOps engineers time to automate automation tool configuration itself.
I'm in a lucky positions where my boss doesn't complain about time because he trust me. 

Results: we begun to move to Gitlab from another CICD...
First pipeline (only build) -> time 1 month. Second pipeline -> still 1 month (but using templates) -- in the meantime gitlab components came out - third pipeline -> 1,5 month build + unit test (but using components),  fourth pipeline 3 weeks  build + unit test + integration test + deployment , fifth pipeline.. 2h , with all as the previous one.


So, in total it took a bit more than  4 month for 5 pipeline... Is it worth it? If you have a total of 150 pipelines you will need to create.. it is!!",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"I can totally relate to this, as long as the time, space and energy is given to do things right and ofc with right people, then it makes it easier for everyone.. if otherwise, it becomes a headache unfortunately.. there’s always been a thought / notion that devops is quick and provides value instantly which has been proven wrong in many case with all these setups and tools..",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
fistagon7,1,Private equity full stop.,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Krumpopodes,1,"I don't necessarily think the main benefit of an IaC based approach is the automation (in terms of fire and forget -> never touch it again) . It's centralization, accountability and observability. Sure you could just have init scripts and cron jobs, but how is that going to solve your supposed issue? It will be a more of a  headache to track down what an issue is without some of those tools.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"I agree, the tools come in handy for sure and they bring in a great value when integrated / used purposefully. But over a period of time as the tooling gets complex or having layers of tooling, then it becomes more entangled, creating more chaos & dependencies than the ease of use & agility…",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Krumpopodes,1,"I don't think that's the tools fault specifically, nor is it a fundamental problem with the purpose of the role. The kind of disorganization you are describing seems more like a failure to let people do their job/ inadequate resources+staff.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Willbo,1,"DevOps is experiencing tragedy of the commons right now. Greedy managers, scrum masters, and agile practitioners have latched on and are extracting all value from engineers and consolidating them into a single title. SWE, SRE, DBA, SysAdmin, NetEng, Sec are being fed into this meat grinder of ""DevOps Engineer"" with a single cost category and set of responsibilities that is globally competed on.

A TL;DR of the tech industry is very smart people innovate and then salesmen latch on for monetization. This is good in balance, but left *unchecked*, this degrades the service and drives the utility into the ground. Sales vs engineering turns from symbiotic to parasitic. This was true with the invention of the internet (ARPANET such a great invention) that was subsequently [spammed](https://en.wikipedia.org/wiki/Spamming#History) with the first unsolicited advertisements that opened the flood gates for penis enlargement emails. This degrading of the service in the name of monetization is true for much of tech including digg, Reddit, Myspace, FB, X, Airbnb, Uber, fake news, etc etc. To maintain the utility of the service it has to be **checked** (i.e. email filters and moderation) otherwise people move on.

Unfortunately DevOps doesn't have anyone looking out for the original utility of it, it doesn't have any checks or moderation, no glue to keep it to its core principals. The founding members moved onto DevSecOps, platform engineering, publications on AI, now chasing the next cash cow, and has left DevOps with the wolves in charge. Management only wants to hear the ""increased velocity"" and ""reduced time to market"" side of the coin that was sold to them without any investment into the people or culture.

As an engineer in this space, you have constantly changing tooling below you and constantly changing interpretation by management above you. Drawing back to internet history, our email inbox is getting spammed with penis enlargement ads and we haven't invented email filters yet. Doing well in this space requires a lot of adaptability, ability to spot bullshit, and influence the environment around you. Pick your battles, don't mistake means for an end, and always be able to move onto greener grass like the founding DevOps members have.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"I believe DevOps has evolved as a separate stream of work in itself, covering a broad spectrum of responsibilities. The initial days of DevOps were more fancier, with a lot of talk about devops mindset and I vaguely remember going through the DevOps handbook, the ultimate guide to devops mindset. It all revolved around how to be more agile, ship code to production seamlessly and all these concepts evolved from them. 

But over a period of time, as you mention, it has become a big pile of tooling, frameworks and automations crowding this space, eventually trying to better than incumbents for a particular use case rather than adopting to the core principle of DevOps. Of course, layering on top this comes the SRE, DBA, SysAdmin etc.

I do understand that picking the right battles is important but being in this industry for almost a decade now, am more interested and intrigued to how's the evolution gonna be, is it gonna be the same old stuff or is there any changes that the industry is witnessing, which I might be unaware of..",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
kyr0x0,1,"I‘d say, complexity is the devil and the root of all of this is the rules of the universe itself - as entropy is constantly increasing. But in case we are concious beings, we can control it. We can choose the least complex solution instead of the promised perfect heaven. We can write a thin layer of abstraction instead of trying to generalize everything. We can shape our solutions based on real demand instead of believing the CEO bs that tomorrow we gonna need to scale to 1 million users, while the startup just got 3 employees and half of them are working part-time. No, you don‘t always need a hyperscaler, now do you always need Kubernetes, distributed systems and enterprise-grade solutions for every single piece of infrastructure, including the glue between with bells and whistles.

What you truly need is true understanding of computer science and reality. People have forgotten how powerful their hardware became, how protocols work, how kernels work, etc. They only learn how to type a few commands, wire up and use highly complex applications and services they often even don‘t own and therefore have to obey to every change. 

In fact, you can nowadays buy two dedicated servers e.g at Hetzner, each 50$/m with backup storage, put application code in containers, let them run individually on those hosts, and serve 500k users/month easily with most workloads.. oh and if one server fails? Then you setup the second one without outage. And if files go corrupt, you tested your backup. Oh and if the whole region is down??? Yeah, then it is down. So what. When was the region down the last time? How would it affect the business of your company? In contrast to spending 1000x on infrastructure every month? People are getting to alarmed about what they need too. You can run a whole business on 100$/m rented hardware with very low complexity and better availability/failsafety than you could with 10k/m about 15 years ago, when we used to deploy code manually on weak servers bare metal in the basement of the company building. And even then the front didn‘t fell off too often.

Requirements engineering and real knowledge about stuff is a thing.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"gone are those days of keep it simple and straightforward (KISS) principles - people want abstractions, without getting the first principles right and end up having sophisticated tools that bloat up everything..

from my experience, I have come across various situations, where a particular tooling was completely unnecessary, or rather would have been done in a rather simpler way - but they ended rolling out a tool and a ofcourse an engineer to manage / maintain..",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
raindropl,1,"I think you are missing something, devops is not tiring if done correctly, you might be confusing devops with SRE or SysAdmin, re naming the job description does not make you a devops.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
DehydratedButTired,1,"Software isn’t completely stable and constantly evolving at breakneck pace. Good enough is prod. There’s no long term stability in processes or software. People are chasing trends and that’s become the norm. Two decades ago software was very different and slower to evolve but more stable. modern DevOps will never be that and is always growing, changing and you either adapt or die.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Caramel_Last,1,Automation is a lie is the reason. You can't automate anything ultimately. There has to be human involved,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"exactly, there is so much tooling in the name of automation and there has to be human involved in every step for this.. rather, I would prefer to have a handful (maybe very limited) tooling with a human in the loop and do things manually rather than trying to automate it end-to-end..

I am surprised (and maybe worried?) there is no single platform that helps do this, with human intervention..",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
veritable_squandry,1,"i think people forget that most modern complex software architectures are never really done, bugs exist and must be fixed and managed and iterating on the product is constant and real. that's actually the job. so then for devops. it's when management assumes the opposite that a work struggle emerges.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,2,"devops, as anyone sees, is to keep the lights on - since they don't churn out features / bring value add, the mgmt see devops as a cost center instead of a revenue making machine..",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
veritable_squandry,3,"it's pretty ironic given the origin of the term devops. most successful ecosystems i've worked in acknowledge the ongoing value of both. sadly you can't expect everyone to benefit from the same experience, and you may be stuck pursuing that alignment for a spell.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
ProtossforAiur,1,I look at it like if everything were to run smoothly why do they need you.,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,that's one way to put it for sure ;),2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Darkmetam0rph0s1s,1,"As an System and Cloud Engineer, this is the reason why I am only learning the basics for DevOps.  Im not a coder and I dont like coding.  But the constant change is bad enough, along with trying to keep up with everything  else.  Such as Microsoft changing stuff in Azure every 5 mins.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
KarlKFI,1,The problem with software is people.,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,people are always a problem ;) time to get to AI agents!,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
ycnz,1,"You are burnt-out. My team are *sometimes* tired, when something big necessitates it, or when personal stuff crops up. We talk about it, we plan for when it ends, and the downtime to recover from it. You need to leave your org.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"Thank you so much for your kind words, this is more of my general observation of the devops space over my period in the industry and I wanted to get the perspective of how the industry is involving and explore unknown unknowns..",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
naixelsyd,1,"From someone who was doing scm last century,  I was one of the people who rejected the devops name because we were already well past just dev and ops at the time.  Most scm teams were only focussing on build and deploy.  Some of us were doing much more - i.e.  software configuration management. 

Whilst it was clear cloud adoption and the piss poor delivery of ops teams at the time was going to put a rocket under it,  it was clear where the focus was going and where it would end up - even back then.  Watching yet another project centric team bragging about ci/cd was really unimpressive for those of us who were doing exactly that last century.  Yay,  so you've automated builds which weren't necessarily a problem and now shit binaries can be pushed to prod faster - whoopty effing doo for you.  For me,  I simply couldn't rub shoulders with this from a security perspective alone.

The fact that companies were buying into the whole devops teams per project instead of at the entetprise was really good for putting a rocket under hiring needs and salaries,  but outcomes were butchered.  Watching teams buying massive numbers of tools but never actually properly exploiting the capabilities was hilarious.  Talk about silver bullet syndrome.  Sw sales guys got to buy another holiday home/yaught/whatever..

Now that cloud adoption has become the norm,  the air is coming out of it all.  Likewise,  its ripe for the picking with respect to ai.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"yes, I do feel the same - it has become to an extent there is a overload of things, and essentially ripened to have some AI in place, that can take most of the stuff off the plate and make it more enterprising",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
naixelsyd,1,Yep.  You might be interested in reading this.  https://digitalsafety.org/software-development-companies-we-need-to-talk-9377e7c251b4,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
AnomalyNexus,1,Reminds me very much of the node/javascript world. Every week has a new framework and every month has a new revolutionary meta way to do things.,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
trollsmurf,1,Who decides #1?,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
arparthasarathi,1,"This has been experience over a period of time, working with a few set of customers / clients and the decision eventually made sometime back or the head of engineering who brought the tooling in place..",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
graveld_,1,"It's really like a snowball that rolls and every year no matter who talks about best practices, the snowball becomes bigger and bigger anyway



It seems to me that there will never be a solution, and nothing will change.



Even due to the banal fact that there are a bunch of languages, packages and other crap.



Unless some guy comes along who writes something of his own on the bare Linux kernel and some of his own packages and everything else that will work perfectly only with this. Then he adds that you can only work with rust on it and do not shove any python there and maybe in a couple of years this will be the real solution when the kernel starts to melt away little by little, but this is clearly not soon.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
AnxietySwimming8204,1,"One key aspect is company culture. It’s important for a company to maintain standardization rather than frequently switching between tools. This approach minimizes the need for employees to constantly learn new technologies, allowing them to focus on productivity.

On the other hand, from an individual standpoint, embracing new tools and technologies is essential for staying competitive in the job market and advancing professional growth.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
oschonrock,1,"I am old school.

You don't need any of those tools. Things are easier that way, because they are much more stable.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
ZVilusinsky,1,"Because despite the name change, the sysops work did not changed much.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
GnosticSon,1,"I'm not a DevOps expert, but for those that are: is DevOps actually a net productivity gain for organizations? Or is it only appropriate for a small minority of use cases?",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
bblaw4,1,"I’d like to know too. I was hired as a devops engineer, but was immediately assigned to be a jira admin. Devops where?!?",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
OkAcanthocephala1450,1,"It reminds me of an initiative that our devops engineers want to achieve now. 

They deploy one EKS cluster per application (frontend and backend (max 5 deployments)) and they have Grafana, prometheus, argoCd, 10 different controllers and now they want to add kyverno. 

All I want to say is that people are afraid if something goes wrong, and they add 100 things to make sure their product is up and running, while spending time and money working to keep 100 other services up and running.

This fear of going down has created this illusion that in order to keep your product up and running, you have to use all the tools out there that not only make us cool, but help us in our daily lives. Yeah, right.

Another problem is inexperienced engineers and a lack of good management. Who are the managers in a medium-sized company? Someone who has been with the company for 20 years, right? Well, he started working when he was 23 years old, all he has seen is this particular company from start to finish. What does he know about managing a company to work like top tech companies? NOTHING, he has never been in one and they do not accept consultants who can help.

We have 3-5 software development teams. All the tech leads of these teams are software engineers who started when they were in their 20s. They have never seen a product or had a good senior that could teach them how to develop a production product (how do I know?, they do not even do tests), and this goes in a chain that all juniors that come on board, they will have a senior to teach them wrong.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
manu_e,1,"When I started working in DevOps I was enthusiastic, I liked the idea of ​​really creating an ""added value"" by bringing automations and creating a climate of collaboration within the company and between the various stakeholders, but... now at this moment I also think that the industry is fragmented and yes, I confirm that it is exhausting to work in this area.

I believe that the deep rot is caused first of all by company managers and non-tech people, who do not fully understand what DevOps is, the usual problem that you go and explain when you say that DevOps is not a jumble of stuff and tools, but hey, that's the catch.
Furthermore, I believe that they are easily vulnerable to the fact of being the coolest on the market, making commercial agreements with new companies, new automation tools, which inevitably bring new complexity and a further level of abstraction in the toolchain.
These are just examples, but I'm sure that if it were not for managers and Sales, DevOps would be a fantastic world applied in a concrete way.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
rustdpra,1,"This is what happens when there is no governance and guard rails around DevOps. Every team does their own tooling which leads to sprawl, increased risk and bloated costs. 



An organization should be looking at a modern DevOps platform that is cloud native with in built intelligence. Left-shifting feedback as close and fast as possible is going to lead to a better long term developer experience.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
-lousyd,1,"The second of your ""few things"", you say that burnout is real. Undoubtedly it is. But I don't experience it. My current employer has a really strong work/life division. I have had past employers that were pretty bad. I know that I am lucky at present.


I haven't heard that ""people are leaving the field"". That's a new one on me.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
cdragebyoch,1,"Pretty sure Google’s SRE is the closest implementation of devops that makes sense. It has less to do with tooling and more to do with engineering. Devops, in most companies has an over reliance on tools and not enough focus on engineer. Most of the problems you describe are simply things that should be prioritized and fixed. Terraform state should never break, and if it is, fix the underlying problem. Pipelines should never fail, but if they do, sufficient visibility should exist to fix the problem and ensure it never happens again. If all we’re doing is responding to errors and applying temporary bandaids rather than solving root causes we’re not engineers, we’re just technical support with admin/root access.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Frank_satooschi,1,Hopefully it will be harder and harder so we have a job 😂😂,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
frankywaryjot,1,Don't complain thanks to complexity we still have a job😎,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
blaine_ca,1,"I imagine there are some places that are managing this well, but with my limited exposure I can't say that I've seen it. Things are overly complex a lot of times now because people follow trends and often management dictates what technology has to be used. I'll give you an example. My first configuration management system consisted of shell scripts for each host type, and if a specific host needed unique configuration it would have its own script based on the original scripts. All of this was kept in files with configuration first in a master file and later MySQL. Configuration of a host took seconds. Updates to all hosts, for example rollouts, took about 30 minutes. The files were all under change control (this was before git) on a single host. I left the department and moved on to data analytics, but years later had to contribute again. Everything had moved to puppet because management south of the border demanded it. Rollouts took hours upon hours, sometimes there would be days worth of meeting to figure out how to manage some weird setup we had with Puppet. Every new person had to be trained to use all of this infrastructure as well. I'm not sure how much we benefitted from it. Last I saw, they were moving to containers etc. from the VMs we had been using, which is good, but the provisioning script was hundreds of thousands of lines of code with contributions from probably a dozen people and dependencies all over the place. Deployment of a simple lab took about an hour and was not stable. I don't see any real thought being put into requirements these days... I'm sure this is true in many places. Also the costs that I saw for some technology was ridiculous.  The companies that succeed will simply have to look closely at what they are doing and focus on the core requirements. Someone can tell me I'm wrong if they have more experience and have developed something that isn't overly complex and prone to failure.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
joaquim56,1,I'm a Sales Engineer in the space--don't kill me lo. Just trying to pay the bills. But I makes me see a lot.  I think there's just a lack of systems and folks thinking another tool will solve things.  There needs to be an Agile/ITIL for DevOps.,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
ToThePillory,0,"Programming is beset by a fetishization of complexity and rejection of simplicity, it's never going away and it's only getting worse.

DevOps just adds another layer to the complexity, if you give someone a job, and that job is to manage processes, and there aren't that many processes, they'll \*add\* processes.

All the stuff you mention like Kubernetes, Jenkins etc. only really have to exist because this industry continually rejects true simplicity.

It'll never get fixed, no point worrying about what you can't change.",2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
MrGarzDU,0,Keep it simple. Less is more. EKS GitHub actions terraform datadog. That's it.. I've noticed ppl like to use tool to use tools,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
PreparationOk8604,-2,ReemindMe! 2 days,2025,"Why is DevOps still such a fragmented, exhausting (and ofc costly) mess in 2025?"
Therianthropie,22,"We migrated from Jenkins to GitLab CI because the Jenkins Setup was barely maintained, expensive, insecure and had weird customizations.

It took us 7-8 months to migrate everything and in the end we had like 10k lines of GitLab CI code even though we used lots of templating and the code was quite DRY.

Still, the biggest challenge was to convince some of the users that we don't intentionally want to fuck them up.
Even after two years some people complain that they cannot do some very insecure practices anymore.

The most complicated thing about tech is always the users...",2024,What are the biggest challenges you /team faced while adopting a CI/CD tool ? 
dariusbiggs,7,"The job would be so much easier without users, or customers. Just a nice environment to build something cool.",2024,What are the biggest challenges you /team faced while adopting a CI/CD tool ? 
DuckDatum,3,"dazzling seed plucky cats pie weary fade physical crowd dinner

 *This post was mass deleted and anonymized with [Redact](https://redact.dev)*",2024,What are the biggest challenges you /team faced while adopting a CI/CD tool ? 
dariusbiggs,4,"Nah, just fed up with people :)",2024,What are the biggest challenges you /team faced while adopting a CI/CD tool ? 
nonades,14,"Turnaround time on testing workflows. 

Currently with GitHub Actions, my team has workflows that can only run on specific runners and testing those workflows to ensure that they do what they're supposed to do is a huge pain. It involves a lot of ""make small change, run workflow"" type nonsense.",2024,What are the biggest challenges you /team faced while adopting a CI/CD tool ? 
Jmc_da_boss,3,"Test time is really the biggest thing tbh, whenever GitHub solves that they will run away with the sdlc market lightning fast",2024,What are the biggest challenges you /team faced while adopting a CI/CD tool ? 
nonades,6,"Yeah, that's where tooling like Dagger really shines IMO.

The best I can come up with is take bigger workflows and decompose them into as atomic workflows as possible, and then mandating no in-line scripting. The fun with that is running into fun limits like how many workflows you can chain deep and how many arguments a workflow can be called with.",2024,What are the biggest challenges you /team faced while adopting a CI/CD tool ? 
zyzmog,7,"We migrated from on-prem tools to cloud-based tools.

The first and biggest challenge was ensuring a smooth migration, with minimal interruption to the workflow. We accomplished this by:

* Putting user accounts, identity tokens, single-sign-on, etc. in place before attempting the migration.
* Using a throwaway project as our test vehicle for every aspect of the migration.
* Doing it in a series of small steps, rather than one big step, and making sure each small step worked before taking the next step. This had the added benefit of only requiring us to undo the one small step if something went wrong.
* Setting up a parallel workflow in the cloud, and exercising it rigorously, before committing any one of those previously-mentioned small steps to the cloud.
* Leaving the on-prem toolchain intact, but idle, for a period of time until the cloud-based toolchain was 100% implemented and proven. We could have decommissioned the on-prem toolchain after 3 to 6 weeks, but we waited 3 months just to play it safe.
* I should probably put this first, but before we started anything, we ensured that we had 100% commitment and financial support from the executive suite, and 100% buy-in and guidance and support from the IT gang. We did not go into this in a half-assed fashion.",2024,What are the biggest challenges you /team faced while adopting a CI/CD tool ? 
jcoelho93,4,"Make sure you have golden paths for adoption that people can use. In circleci that's mostly using orbs. 
Otherwise people will solve the same problem over and over again in different ways.",2024,What are the biggest challenges you /team faced while adopting a CI/CD tool ? 
hidden_tomb,3,"Getting a new CI/CD tool like CircleCI going can be tricky. 

At first, it was tough for us to get everyone used to it and to find the right devs to fine-tune everything. 

But trust me, it’s worth it for the awesome support you get. Just make sure you take the time to train your team. If you’re stuck finding the right devs, rocketdevs can help you out and for way less cost. 

Good luck.",2024,What are the biggest challenges you /team faced while adopting a CI/CD tool ? 
dariusbiggs,3,"Depends on what you are going from and going to.

We initially started the project with Bitbucket because the evaluation of Gitlab and Github left a bad taste behind, this was pre GHA. After a few years and constantly running into the slowness and limitations of Bitbucket we re-evaluated those three and slowly moved everything to GitLab over a year. The features were vastly superior, the bits we lacked in Bitbucket were available by default (and had been for years, i saw an update on the Bitbucket feature ticket recently, someone started work on it 9 years after it was reported) and the team had up-skilled and gotten more used to the terminology and understanding of the CI features.

Going from SaaS to a similar SaaS was fairly trivial since most of the scripting stayed the same, images used. etc. Mainly just the formatting and structure of the YAML varied.

The only issue remaining is the slowness of the pipelines using the default runners when we're doing outside our own business hours pipeline runs, since that puts us in the primetime EU and US business day hours.",2024,What are the biggest challenges you /team faced while adopting a CI/CD tool ? 
brokenpipe,1,Circle CI is an excellent CI platform. A CD platform it is not.,2024,What are the biggest challenges you /team faced while adopting a CI/CD tool ? 
CerealBit,220,"Culture. Way to much orgs still think and operate in silos.

Tech is easy, when the culture is good (""You build it, you run it, you own it""). Otherwise you create solutions for problems, which should never exist in the first place.

This is much harder to sell to management than any technical challenge, unless you have some engineers in management which actually know shit (e.g. Facebook, Tesla, Microsoft, Google, ...)",2024,What is the biggest unsolved problem in DevOps?
KerberosDog,80,I would discuss this with you but I’d need to go through my manager,2024,What is the biggest unsolved problem in DevOps?
Deleted Account,18,Which isn’t a terrible thing to say if you actually intend on doing that because you don’t want to get roped into something that isn’t aligned with your organizational goals. The problem lies when someone says that as an excuse to get you to leave and not actually do anything. Your manager should be aware of what is being asked of you to make sure that you aren’t being sent in a fools errand and that their resources are being properly allocated.,2024,What is the biggest unsolved problem in DevOps?
KerberosDog,6,Totally. The only way to break Conways law is to have this alignment at the top so there is no guessing about what is important,2024,What is the biggest unsolved problem in DevOps?
Deleted Account,3,"But, people tend to use it as an excuse to not really do anything instead of actually discussing it with their manager. I have worked with several people like this…",2024,What is the biggest unsolved problem in DevOps?
Stoomba,2,"For me I'll talk about stuff and come up with plans, but that comes with 0 commitment without bringing it before the team",2024,What is the biggest unsolved problem in DevOps?
Farrishnakov,3,Thanks for the discussion. Now here's our front door form. Go ahead and put what we discussed in there and the team will review it.,2024,What is the biggest unsolved problem in DevOps?
davy_crockett_slayer,18,"I work at a legacy company, and it's honestly the best place I've ever worked at. They know they have tech debt, so they paid me well to join. My manager is in his mid-50s and has 30+ years of experience. He isn't technical anymore (his words), but he has enough experience to give guidance. Fantastic boss.",2024,What is the biggest unsolved problem in DevOps?
Dtsung,8,Its always the people that’s the hardest to crack.,2024,What is the biggest unsolved problem in DevOps?
brettsparetime,3,"I've come to realize (way too late in my career, sadly) that the hardware and software is absolutely trivial compared to the wetware.",2024,What is the biggest unsolved problem in DevOps?
BlomkalsGratin,6,"In fairness, I rarely find management to be the biggest obstacle when trying to roll to a ""you build it you own it structure"". Developers tend to be really receptive to the concept of more autonomy until you bring up on-call rosters. Can't blame them either by its a pretty core part of running even the most stable of apps. Whether it's as the first point of contact or backup to the support teams.",2024,What is the biggest unsolved problem in DevOps?
horus-heresy,10,Exquise me but silos are now called platform engineering in product management world,2024,What is the biggest unsolved problem in DevOps?
reubendevries,4,"Was going to say the EXACT same thing, I'm so tired of executives and managers co-opting buzz words to attract talent only to not put and the heavy lifting into doing the actual work. I had a non-manager tell someone that they were unhappy with my deliverables and yet they didn't understand the problem, didn't understand the scope creep, didn't understand that I was being pulled in 70 different directions, didn't understand my product that I maintain, has is 6 times more end users then anyone else in the organization and yet I was leading a team with 2 less people then any other team. What a slap in the face. I'm brushing up my resume.",2024,What is the biggest unsolved problem in DevOps?
takingphotosmakingdo,3,"this.  
I was hired as a senior manager and promised to expand a global effort.  I was promised an overseas move at signing to get me closer to my spouse's family.

When the cards fell I'm now jobless a year later, why?

The team overseas refused to answer my emails, never invited me to meetings, never gave me credentials that consistently worked, never gave me documentation access, never gave me a bigger picture (which i was tasked with enhancing our platform's security through analysis of our infrastructure).

I was given random QA tasks that were on scrapped products.

They didn't want me looped in.

They wanted to meet a legal requirement for X number of US based employees.

The coworkers would speak their native tongue when troubleshooting IF and IF i was looped in very rarely during the first quarter.

My boss downplayed my experience, when i questioned a cybersecurity incident and what we'd done, they literally mopped the floor wiped the VMs and repeated their deployment keeping everything the same.

Nothing i mean NOTHING will get you to hate tech faster than a culture that doesn't want to be inclusive of new folks.  
My colleague that onboarded the same time in a different tech role?  Put on interviews with other folks on TV, given connections to clients at venues, the whole works.

I was given nothing, frozen out before I even was given a chance, because nobody in a different country wanted me involved.

I'm still debating to sue.",2024,What is the biggest unsolved problem in DevOps?
dekanov,4,"Overseas team was India-based, I guess?",2024,What is the biggest unsolved problem in DevOps?
takingphotosmakingdo,2,"search your feelings, you already know the answer",2024,What is the biggest unsolved problem in DevOps?
doomanddelight,1,"In the UK you could do it under constructive dismissal laws, which is basically when you force someone to quit by making it impossible for them to actually do their job. Not sure if you have something similar in whatever law you will be dealing with.",2024,What is the biggest unsolved problem in DevOps?
TheOneWhoMixes,2,"Little late to the party, but I'm actually trying to figure out how ""you build it, you run it, you own it"" *doesn't* lead to more silos.

I've seen this mindset lead to teams constantly reinventing the wheel as any attempts to push for a common platform or standards fall flat. I'm not saying the mindset is bad, I'm just wondering how you grow that culture while keeping the amount of repetition low.",2024,What is the biggest unsolved problem in DevOps?
maybe-an-ai,174,"Cognitive Overload

A lot of companies (especially small to mid sized ones) took the wrong lessons from Cloud and DevOps and went from having specialists in disciplines to hiring generalist 'DevOps' engineers with the expectation that they could do it all. It is rapidly becoming too much cognitive overhead for anyone to manage. We don't need DBA, Network Engineers, etc we have DevOps. 

I have always thought full stack engineers are a fallacy and full stack DevOps is worse. There isn't enough time or room in the human mind to be an expert at everything  even before you account for the pace of change and growth making knowledge obsolete every 5 years.",2024,What is the biggest unsolved problem in DevOps?
Deleted Account,20,"Doesn't help that we have 15 different solutions for everything and none of them work together.  I really just want *one* solution that handles infrastructure, configuration management, and secret management all together.",2024,What is the biggest unsolved problem in DevOps?
punkwalrus,8,"Then everything becomes your priority and so then nothing is a priority. I pushed back at a previous job who wanted me to be an MSSQL DBA because ""we can sell those managed products."" Would there be training? ""There are plenty of YouTube videos.""

No. Just, no. Being a DBA ain't like dusting crops, farmboy. I am your senior Linux administrator. Not Microsoft. Not database. Hire a DBA. 

That job just got worse and worse. They wanted every unicorn, but weren't willing to pay or train for one. I went three years without a job review or raise. I left.",2024,What is the biggest unsolved problem in DevOps?
epochwin,7,And people themselves tend to gravitate to an area that excites them so why force them do work they don’t enjoy,2024,What is the biggest unsolved problem in DevOps?
IrishPrime,5,"Agreed.

Not to get all ""us vs. them,"" but it's always shocking to me when I find out how limited the scope of knowledge is for the feature devs.

Obviously, they know more than I do about the general layout of the one or two codebases they work in, but they rarely seem to know much of anything about administering their own system, Linux fundamentals, Docker, AWS, networking, Git (nor GutHub, et al), databases, or a dozen other topics that sort of seemed like things everybody in the field knew a decent bit about. 

They generally know one, maybe two programming languages, and that's it. Meanwhile, every member of the ops team needs to know at least as many programming languages, a dozen different tools, and how all the different pieces of the product fit together.

Don't get me wrong, I love what I do, but sometimes I miss the days of just cranking out a feature and then calling it a day. It seems so peaceful and straightforward.",2024,What is the biggest unsolved problem in DevOps?
Purple-Control8336,-9,If you buy fully managed cloud solutions like PAAS for example. You need DevSecOps which can be done by Dev as fullstack ? So it depends on Architecture,2024,What is the biggest unsolved problem in DevOps?
Particular_Pizza_542,12,"That's fine until you scale to a point where you're spending way too much money on infra when it would be cheaper to instead hire individuals to build the thing yourself. Then companies will decide to ditch the PaaS and hire, instead of the 4-5 people needed, a small team of maybe just 1 person who now has to build everything themselves (in a quick and shitty way because they don't have time to do it properly).

We're spending way too much money on datadog, so management is looking into self hosted solutions. Are they looking to hire anyone new to manage it? Hell no, they want us, an already over-burdened team, to commit to maintaining a monitoring stack on top of all of our other responsibilities. We would save $1MM per year by getting off datadog, but they won't commit to $1MM in new salary for people to build and maintain the damn thing.


All that to say: all of these conversations must include a discussion about scale. Because yes I know enough python and docker and k8s and terraform and aws and networking and SQL and elasticsearch and prometheus to make SOMETHING work. It doesn't mean it's going to be any good. It's way too much information to keep in your head.",2024,What is the biggest unsolved problem in DevOps?
randomatic,47,"Over-engineering the automated build and under-engineering the local build. Leads to people using the cicd system (slow, expensive rtt) to find errors they should find locally. Especially in microarch and distributed systems. Just my 0.02. Probably not universal.",2024,What is the biggest unsolved problem in DevOps?
ChildishWambin0,4,ah the dev - cicd parity. fun times fighting with devs to stop pushing code just to check if it compiles because we have limited compute resources and the code that needs to be released asap is stuck at waiting,2024,What is the biggest unsolved problem in DevOps?
lolmycat,3,Some people really have no shame.,2024,What is the biggest unsolved problem in DevOps?
king_of_farts42,4,"Hmm I see you point but have to admit I like it to debug via CICD. Yes it is slow but I stumble upon errors earlier that don't show up on my local build. 

And yes I know: containers should solve the ""it runs on my computer"" problem but very often environments are more complex than the inside of a container",2024,What is the biggest unsolved problem in DevOps?
Kyxstrez,1,"It's very common at least for infra team that you can only run Terraform in CI/CD since that has the lock on the tfstate, but it slows down pushing changes since every time you have to push to the upstream, hope there's an available runner and wait for the pipeline to finish.",2024,What is the biggest unsolved problem in DevOps?
Alikont,44,"To sell something you need to have numbers about how much your ""reduction"" will save money. Money spent < money saved. Then you'll sell anything.

The problem is that ""tech debt"", ""test automation"", ""kubernetes migration"" rarely have quantitative benefits. We ""feel"" that it's right, but barely anyone has supporting numbers for that.",2024,What is the biggest unsolved problem in DevOps?
Jurby,31,"Tech debt has to be thought about in a particular way, too.  It's a nondischargeable, high interest loan, and the unit you're paying/taking out debt of is time.  Business folks think of debt as a universally good thing, because they ideally pay off that debt with the profits from what they did with the loan.  But when you take a loan in time, you're not going to magically get more time later on to pay that off with - at some point you'll just have to spend the time paying it off. 

Once you get that, finding the numbers for the cost of that tech debt is pretty easy - you're looking for the interest payments on the debt.  It'll come in several forms - oncall load (from buggy/poorly tested features), extra design/development time (from overly complex or poorly designed systems that you're modifying), and worst case, customer pain/loss (from really bad bugs or performance).

You're never going to be able to say ""I will save you x"" though - instead you present it as ""if we had done this, we would have saved x/because we didn't do this, we had to pay x"".  Best way to do this is to tag outages/incidents, oncall tickets, and the difference between estimated time to deliver and actual time to deliver with the high level tech debt that caused or allowed them to happen.

When you go to tech leadership with ""we're spending 50% of our development time dealing with consequences of technical debt"", that will likely kick them in the ass - devs are ideally the most expensive part of a tech company, and wasting half of that cost on interest payments for a loan you're making no progress on is almost always going to be a major concern.",2024,What is the biggest unsolved problem in DevOps?
wait-a-minut,7,"I kind of like this take. And to also answer OPs question, 

If there was a way to attach tech debt loan amount to each *new* feature or update and somehow “quantify”, it would be an absolutely killer for most teams. 

It would totally make managers, execs, and non devs have a better understanding or risks vs reward when it comes to pushing for new stuff. Of course this is easier said than done but in my experience there would prob be a need for something like this.",2024,What is the biggest unsolved problem in DevOps?
cerved,6,"How is it nondischargeable?

> You're never going to be able to say ""I will save you x"" though - instead you present it as ""if we had done this, we would have saved x/because we didn't do this, we had to pay x"".  Best way to do this is to tag outages/incidents, oncall tickets, and the difference between estimated time to deliver and actual time to deliver with the high level tech debt that caused or allowed them to happen.

Totally agree. It's a great suggestion, tracking the actual effects and the cost (time) of technical debt is the best way to quantity the problem. Everybody is always complaining about how there's too much ""whatever"". In many other jobs it's administration, in software engineering it's technical debt. It needs to be quantified in order to justify investing in fixing it.

> When you go to tech leadership with ""we're spending 50% of our development time dealing with consequences of technical debt""

I've been thinking about what is the actual interest of this, if we think of it as a loan? A key part of interest is its cumulative nature.",2024,What is the biggest unsolved problem in DevOps?
Alikont,3,"When you have tickets/incidents, its a bit easier to quantify.

Performance is also quantifiable (we can handle X users/we will save Y cloud/server cost)

But something like ""delivery speed"" is a bit harder to do.

That's what you should be doing - measure and record this so your talk to ""business people"" will be easier.",2024,What is the biggest unsolved problem in DevOps?
Jurby,8,"""we predicted it would take 3 weeks to deliver this feature, but it ended up taking 6 due to unexpected extra work caused by tech debt"" has worked well for me in the past.",2024,What is the biggest unsolved problem in DevOps?
SigmaSixShooter,3,"This was a really great post, thanks for sharing.",2024,What is the biggest unsolved problem in DevOps?
theANGRYasian,3,Lol. I tell people that I'm rebranding from digital janitor to technical debt loan officer. I help scrum teams refinance their techical debt.,2024,What is the biggest unsolved problem in DevOps?
_BearsEatBeets__,2,"Jeez, it’s like you’re reading my JIRA backlog 😂",2024,What is the biggest unsolved problem in DevOps?
Purple-Control8336,1,"Tech debt = if we fix in each sprint with x% bandwidth it brings Agility
K8s migration = Scalability, Speed which means quick to market
Can this help to explain?",2024,What is the biggest unsolved problem in DevOps?
Alikont,5,"Nothing is quantifiable. ""Agility"", ""Scalability"" are bullshit words without metrics.

> means quick to market

How quick? Will it even be quicker if we don't do it and focus on doing actual business case/features instead?",2024,What is the biggest unsolved problem in DevOps?
CoolNefariousness865,26,"As someone else said ""silos"".. I'm in a large enterprise and everyone does their own flavor of DevOps.. there's no consistency across the enterprise. A lot of stuff could be shared across teams, but everyone wants to own their own stuff.",2024,What is the biggest unsolved problem in DevOps?
horus-heresy,15,"You don’t love to consume Jenkins template from storage team, terraform from container folks, and gitlab from infosec? How dare you",2024,What is the biggest unsolved problem in DevOps?
CoolNefariousness865,8,"yea let me just waste days trying to understand how to integrate them all together lol 

/s

I think it all just comes down to trust. Let's be honest.. not everyone pushes out great stuff.. which leads to teams having to create their own stuff... which then leads to having to support your stuff... which then leads to an endless loop lol",2024,What is the biggest unsolved problem in DevOps?
keypusher,3,"I've seen this a lot and dunno how to solve it honestly.  Where I work there is a shared services team which tries to create tools and libraries for other teams, but their skill level is quite low and they don't have context on what is really needed, so everyone just goes and creates their own stuff anyway.",2024,What is the biggest unsolved problem in DevOps?
baezizbae,3,"> everyone just goes and creates their own stuff anyway. 

This is exactly what’s going to happen with a project I’m working on. We’ve recently been moved under a new director as part of a recent acquisition who has forced certain code patterns and delivery requirements on us for certain IaC projects.  

What used to be a simple self-service workflow that was “check your iac module into this repo, pipeline will kick off and do basic linking and formatting, if it passes and when you’re ready to apply to prod, open an MR, we’ll take it from there” is now “check code in to these three separate repos, source your modules from a fourth repo, kick off three separate pipelines and do all of your plan and apply operations via GitHub comments”.  

Four repos. Three pipelines. Just to (in one example) add a single widget to a datadog dashboard. 

If there’s one thing that grinds my gears slightly-less than shitty oncall, it’s engineers and engineering leaders trying to find solutions to problems that don’t exist. ",2024,What is the biggest unsolved problem in DevOps?
king_of_farts42,6,"It is funny how this comment and the top comment mention the same problem (silos) and somehow have opposite solutions/cultural approaches to overcome it.

You are saying there should be one unified way to solve everything, to reduce silos. 

The other comment from u/CerealBit :

*Culture. Way to much orgs still think and operate in silos.*

*Tech is easy, when the culture is good (""You build it, you run it, you own it""). Otherwise you create solutions for problems, which should never exist in the first place.*

basically states the opposite. Let teams do their thing and be responsible for it.

  
So how do we overcome silos? I am rather on the site of u/CerealBit and say don't try to think of central one fits it all solutions (in an isolated, silo-like team) but rather let teams build run and own their product. Only loosely guidelines on tooling, that's it.",2024,What is the biggest unsolved problem in DevOps?
Finagles_Law,2,"Nobody really took you up on this one, it's kind of a tough nut to crack. 

At one large org I worked for, we compromised by insisting on certain quality standards before a metric or alarm got added to the global SRE pager escalation.  Any alerts had to be actually actionable (not just ""page our team OnCall if it's real""), come with a standardized run book, so on and so forth.  Otherwise, if teams wanted to totally own their own product, or it was very narrow or non customer facing (Finance, BI), they were responsible for their own escalation chain and support.

In the case of any site outages, the global ops / SRE team handled the incident management and coordination, so we were responsible for evaluating where in the stack the issue was and spinning up a Slack channel with the right product stakeholders in it to drive the solution.

This required the global ops / SRE team to at least be familiar with everything in the environment in a way that just having a bunch of embedded SREs can't really do alone. The central Ops team were the ones with their hands on the CDN to move traffic between datacenters, so it's very helpful to have one team that makes that call to declare an outage and move traffic.

The Incident Management team had a couple guys who were not the strongest technically, but had a deep understanding of the tech stack.  One guy's job was really that he knew where all the subject matter experts physically sat in the building, and would go physically fetch the right person to be present for emergency huddles. 

The problem with this is it really only works well at scale. This was a medium sized enterprise with 6,000 just in engineering. You have to have enough overhead to be able to have a generalist around who may not do a lot much of the time.",2024,What is the biggest unsolved problem in DevOps?
Purple-Control8336,3,Is there no EA in your company ? Who drives standardisation ? Is biz not complaining about IT is slow and expensive ?,2024,What is the biggest unsolved problem in DevOps?
CoolNefariousness865,8,Enterprise Architect? Yea there's about 300+ of them,2024,What is the biggest unsolved problem in DevOps?
Purple-Control8336,2,"Fire them whats the point of EA who is not helping IT to be managable and nimble. Maybe your in Google or Amazon size company where lot of money is there, and culture is ok let IT learn.",2024,What is the biggest unsolved problem in DevOps?
ashcroftt,19,"Effective communication and access to relevant/actual information.


Literally never been on a project where any of this has been solved, and knowing humans it never will be.",2024,What is the biggest unsolved problem in DevOps?
Purple-Control8336,2,Once 90% automation happens then human will be not required to,2024,What is the biggest unsolved problem in DevOps?
Deleted Account,6,Documenting that remaining 10% is gonna be the *real* challenge.,2024,What is the biggest unsolved problem in DevOps?
Purple-Control8336,1,Thats why need tracking list using Jira for all Tech debts and priorities set.,2024,What is the biggest unsolved problem in DevOps?
Deleted Account,2,"Ah, the ever growing backlog that's never a priority to fix.  :D  I've had tickets sitting in backlog for over two years.  They never get done.",2024,What is the biggest unsolved problem in DevOps?
Purple-Control8336,1,Yea its ok atleast it’s tracked. Not everything needs to be done today,2024,What is the biggest unsolved problem in DevOps?
gowithflow192,14,"The biggest problem I see on both a micro and a macro level.

On the micro level, DevOps has a testosterone-fuelled obsession with tools as if they were a sports team or a brand of car, lots of apparently logical arguments but really backwards logic starting from feelings.

Also many of these tools do one thing and only one thing right. Resulting in huge technical debts because it is impossible to manage all those tools, especially their lifecycle.

On macro level this obsession with doing one and only one thing well is software normalcy now. Just iterate based on early customer feedback (even though customers may not have long term interests at heart and the small sample size means you can end up with a strange Medusa like product). This reactive method of development is kinda like hoping to discover gold by accident instead of having real vision and testing within that. It also means rushed products. And are customers really served well by CSMs who just care about minimizing churn and nothing else? I hate 'lean'.",2024,What is the biggest unsolved problem in DevOps?
Haraballz,1,go MVP!,2024,What is the biggest unsolved problem in DevOps?
Irish1986,13,"Funding and keeping management focus on long term goal. At least in none technology based environment where software isn't the primary product.


It's like herding cats, there is always a new VP of Roadblocks that shows up to says that an hiring freeze has been enacted by the board or that all departments must cuts their budget by 20%.

So everything gets half asses by whatever team is left and you get an ineffective DevOps strategy with holes which is later challenged by said VP of Annoyance Engineering about why IT cost so much and that ""we ain't a software company, we build XYZ product""...

So the team is put on some kind of yearly financial strategy to ""get back in-line with the company core value"".... Meanwhile the grass free roaming Devs are pushing code via SSH by themselves and including password in clear text without any source code management system... Until they get promoted to the next wave of financial optimization phase and you (DevOps) inherit whatever clusterfuck they made and those 2 VP show up asking why IT is always in such shambles...",2024,What is the biggest unsolved problem in DevOps?
gravity_kills_u,2,"You described a lot of the features of my current digital transformation grind.  Timetables drastically reduced.  Leading to management push not to use tests.  Too many silos to engage all teams.  Silver bullet syndrome for every tool on the market.  Free roaming devs coding in production, breaking production daily.  Fun!",2024,What is the biggest unsolved problem in DevOps?
Irish1986,2,"Yeah fun fact, I quit my previous employment especially because of that pattern. Hopefully my new DevSecOps Architect role won't end up in the same way and budget are already funded and allocated until 2027... Banks have money and cybersec seems to be a concern for them.",2024,What is the biggest unsolved problem in DevOps?
adappergentlefolk,9,"cicd pipeline local execution that is instantly portable to the actual cicd environment for rapid cicd prototyping troubleshooting and development

easy and reliable generation of dev data

easy and reliable standing up of transient third objects like database instances for testing

those are some of the hard technical issues that make people uninterested in devops as a culture since they take so much time to get running",2024,What is the biggest unsolved problem in DevOps?
NormalUserThirty,2,">cicd pipeline local execution that is instantly portable to the actual cicd environment for rapid cicd prototyping troubleshooting and development

earthly?

>easy and reliable standing up of transient third objects like database instances for testing

testcontainers? or is that not easy enough",2024,What is the biggest unsolved problem in DevOps?
Deleted Account,7,People.,2024,What is the biggest unsolved problem in DevOps?
ReliabilityTalkinGuy,8,No one can agree on what DevOps even means. ,2024,What is the biggest unsolved problem in DevOps?
PMzyox,13,Devops are the ones who solve all the problems imo,2024,What is the biggest unsolved problem in DevOps?
langenoirx,5,"Humans are the unsolved issue in every problem. That's why were so ingenious and at the same time, capable of creating magnificent raging dumpster fires.",2024,What is the biggest unsolved problem in DevOps?
Live-Box-5048,4,"Definitely culture, cognitive load, having too much on our plate and misunderstanding of the DevOps process.",2024,What is the biggest unsolved problem in DevOps?
Nemeczekes,4,Cost transparency and complaining about infra costs while some people in org are spending millions on some third party crap,2024,What is the biggest unsolved problem in DevOps?
QuantityInfinite8820,4,"Platform Engineering. Each big company basically reinvents the wheel to create automations for project onboarding, secret management, security, etc. and connect the open source pieces together with custom logic. 

Very often my teams were asked to reinvent the wheel for budgetary reasons, say we wanted one feature from gitlab enterprise, but it's not worth the cost to get a license for few hundred accounts etc.

I don't see this situation getting any better in next 2-3 years and that's probably where I will be spending most of my time in DevOps roles...",2024,What is the biggest unsolved problem in DevOps?
Kyxstrez,2,">say we wanted one feature from gitlab enterprise, but it's not worth the cost

I was recently asked by one of my clients to automate provisioning of GitHub repositories having the same settings because they didn't want to pay for GitHub Enterprise, which allows enforcing a set of rules for all repos within the owned organizations.",2024,What is the biggest unsolved problem in DevOps?
Deleted Account,3,Is it a noun or a verb?,2024,What is the biggest unsolved problem in DevOps?
TheWikiJedi,3,"Vendor lock-in, but also critical open source projects that are only ran by a few people (see Log4j)",2024,What is the biggest unsolved problem in DevOps?
Arafel,3,The name.,2024,What is the biggest unsolved problem in DevOps?
Someoneoldbutnew,3,"Devops was invented to tear down the wall between devs and IT. Now it's a new silo going devs, devops and IT. 


It was made to reduce complexity and increase resilience, but now is the opposite as the devops are the worst bottlenecks and bus factors in any of the past decade of my career.",2024,What is the biggest unsolved problem in DevOps?
guettli,3,"I think the biggest problem is yaml/config management in the context of Kubernetes.

Helm uses templates. But yaml is not html. I think templating is not the right solution.

There are many projects which try to improve that. 

There are too many alternatives. None of them are wide spread. That's the problem.",2024,What is the biggest unsolved problem in DevOps?
serverlessmom,2,"Standards for config management, huge problem. Further fragmented by the public clouds not coming to agreement on standards.",2024,What is the biggest unsolved problem in DevOps?
running101,3,"Most problems in IT are people or process problems, not technology problems",2024,What is the biggest unsolved problem in DevOps?
JackSpyder,2,Users.,2024,What is the biggest unsolved problem in DevOps?
serverlessmom,3,Why can’t I replace them with an LLM,2024,What is the biggest unsolved problem in DevOps?
JackSpyder,1,I'd get less stupid questions.,2024,What is the biggest unsolved problem in DevOps?
Old-Ad-3268,2,"This is why we automate but yes, humans are the weak link in reliable and repeatable processes.",2024,What is the biggest unsolved problem in DevOps?
chin_waghing,2,"Where to store the state for the first terraform state bucket

Jokes aside it’s the cognitive load

I’m expected to know next.js, go, python, Kubernetes from left to right, up and down, the entirety of GCP and azure",2024,What is the biggest unsolved problem in DevOps?
CCratz,1,"I find just having an awareness of what tools do what jobs is enough. I’m only goodish at one programming language, but I reckon I’m pretty good and slinging together a bunch of different tools I’ve never used before to solve for requirements.

Maybe I’m shit at my job though, who knows. Certainly not my manager.",2024,What is the biggest unsolved problem in DevOps?
chin_waghing,2,"My manager doesn’t even know Google cloud at a basic level. 

That’s what’s the most tiring about all this, people who are DevOps engineers with no clue about anything",2024,What is the biggest unsolved problem in DevOps?
gabel0287,1,"you make the bucket with local state first, then you change the backend to the bucket you created and store it there 😊",2024,What is the biggest unsolved problem in DevOps?
BowlScared,2,DevOps itself,2024,What is the biggest unsolved problem in DevOps?
MartinBaun,2,"Culture, high expectations, i think we should all go a little easier on each other",2024,What is the biggest unsolved problem in DevOps?
yonsy_s_p,2,"That many colleagues and companies think:

DevOps == SRE",2024,What is the biggest unsolved problem in DevOps?
damendar,3,"This is so annoying to me personally. I've always felt that DevOps should be considered a cultural approach to the broad technical issues that exist. Someone said it above, build it == own it. SRE is also becoming an overloaded term in the industry. Companies want to hire one engineer that does everything and as has been mentioned above, this just can't exist for more than a short window. New tools come out so much faster than people are capable of learning them.",2024,What is the biggest unsolved problem in DevOps?
gcavalcante8808,2,Developers that are not willing to walk into the culture to be protagonists.,2024,What is the biggest unsolved problem in DevOps?
Deleted Account,3,"Also, this doesn’t just apply to developers but being able to walk in without your ego. Coming in as a person willing to listen and empathetic to their situation before making rash judgements on why they are wrong or doing something incorrectly.",2024,What is the biggest unsolved problem in DevOps?
serverhorror,1,"Dogma!

People, including yours truly, always hold their own opinions highest and are too reluctant to accept that things always change.

We ""only"" have to keep a few interfaces and interactions truly stable. This is software things change. If we accepted that and just took care of the downstream changes it would be a lot easier. Where it's not possible to do that, or introduce smaller batches of change and clear timelines.",2024,What is the biggest unsolved problem in DevOps?
BananaDifficult1839,1,Devops teams and job titles,2024,What is the biggest unsolved problem in DevOps?
Unfair_Abalone7329,1,"I agree that it’s a org/culture challenge. I’ve had success when we had smaller focused teams that have a clear achievable mission to deliver a product to a customer/stakeholder. 

I previously ran platform engineering including DevOps, design and SRE. Our mission was to give the app teams what they need with high consistency and low friction. For example, we selected Material Design with React so that we could deliver shared components for web and mobile. Anything that should be common to more than one app team was something that we’d take responsibility to curate. Same with K8s, Kafka, all Terraform IaC. Agile, 12 Factor and all that was embraced by all the teams.",2024,What is the biggest unsolved problem in DevOps?
Any-Connection-1813,1,"Constant search for the genius unicorn doing the job of a whole team in one person. Ultra high expectations, interviews are too hard, job is much easier. Lack of training as in the whole IT industry. Too much focus on specific tool or ""thing"" instead of on the candidate trust and ability to learn and adapt.",2024,What is the biggest unsolved problem in DevOps?
DrMantisTobboggan,1,"A problem I have seen repeatedly in multiple organisations is a tendency to solve hard problems with complex solutions in an attempt to completely solve it rather than breaking down into simpler problems with simpler solutions that cover most needs sooner then expanding where it makes sense.

Maybe another angle on the same issue is a lack of focus on the problems internal users have and prioritising addressing the problem in a way that the users can easily use. Contrived Eg. Colleagues need a way to deploy to production quickly and safely n times per day vs. they need GitHub actions workflows that invoke ephemeral runners on a Kubernetes cluster. That may be where it makes sense for things to eventually end up but there’s a lot of value in solving the simpler issues folks are facing first.",2024,What is the biggest unsolved problem in DevOps?
Aremon1234,1,"I agree with a lot of the others but I would also add tool sprawl. So many organizations have multiple tools to solve the same problems. It makes life way easier if you can standardize. 

I.e. I work and have been at other corporations that use teams and zoom. I get teams calls suck but you’re just making it more complicated for marginally better call experience. Instead of just calling you I now have to create a zoom meeting and give you a link.",2024,What is the biggest unsolved problem in DevOps?
such007,3,"Jenkins, buildkite, Argo, GitHub actions. The sprawl makes it so hard to keep all of your environment loaded in your memory.

People don’t take enough walks to decompress and let their subconscious solve a problem.",2024,What is the biggest unsolved problem in DevOps?
reubendevries,2,"This is why I’ll preach GitLab Ultimate (until there is something better) does it do everything perfectly, nope but it’s one tool and it does 99% of the job well enough to meet 99% of the use cases. If you need something more complex or specific that GitLab doesn’t do, you can pay for a license out of your own budget.",2024,What is the biggest unsolved problem in DevOps?
ExtremeAlbatross6680,1,In kubernetes land it is secrets management,2024,What is the biggest unsolved problem in DevOps?
jba1224a,1,"One of two:

Culture - trying to get an org to TRULY adopt a devops mindset and the costs associated with it.  They often fail to comprehend the upfront cost saves them a lot of cost down the line.

Identity - what is devops?  You can join 10 orgs and get 10 different answers.  The lack of an industry driver for identity actively harms adoption, because no one can really define it.  See SAFe - it’s a garbage agile framework but it’s very clearly defined, no issue getting buy in from orgs.",2024,What is the biggest unsolved problem in DevOps?
PretentiousGolfer,1,Continuous deployment,2024,What is the biggest unsolved problem in DevOps?
Gold-Difficulty402,1,Burnout and keeping good talent.,2024,What is the biggest unsolved problem in DevOps?
Little-Plankton-3410,1,"I think its the inability (either through lack of skill or lack of clout) to rally up enough influence to clear up the fundamental architectural for best practice issues that often the root of the issues. You see the same insanity in security -- though somewhat more obvious. I had a CTO look me in the eye and deadass say there was no way he could expect the developers he had to encrpt the secrets they pushed to git. To make sure we could meet our compliance requirements I had to invent a set of services to do it for them because the assumption was we could not expect adult behavior from the them. 

Full disclosure: I am a tech exec most of the time. The problem with the argument for fixing tech debt is that it's not very convincing. You turn off the software factory to mop up your mess (which tends to be a career limiting move to begin with). Then, even in the rare cases where you manage to chip away at the tech debt, it's usually impossible to maintain it at a low level. Usually, it's a better ROI for your effort is simply to keep any child-eating symptoms at bay, wait for a good reason to do a greenfield rewrite and then simply walk away and \*don't pay\* the tech debt. 

It's not very satisfying from the perspective of a technologist (which I feel too) but it usually isn't cost effective unless the tech debt is so bad it's paralyzing.",2024,What is the biggest unsolved problem in DevOps?
jebaile7964,31,"In environments where chaos is king, it's typical to see coworkers who have carved out territories of the IT shop that becomes their little kingdom.  If you don't have any managerial authority, you're not going to get any cooperation.  Most of the time when chaos rules, people benefit from the chaos.  That's why it's tolerated.  The chaos is a system.  A hierarchy.  A pecking order.  But if you have firing authority, read sun tzu's the art of war.  Then read the practice of system administration and networking, and the practice of cloud administration.  Of course, also read the phoenix project.  You'll be able to effectively legitimize your authority and clean up shop to consolidate your authority.

Don't fool yourself into thinking that a chaotic system isn't ordered.  Not having git or any project management removes accountability.  Those who benefit -- there's typically only one or two, and they typically are bullies -- will see you as a threat.  Make your actions that of a dictator and you'll get your order that you need.

For the larger majority, you won't have such problems.  People typically like fair environments where no one has an unfair advantage.  Listen to most people here when they say to be open about your ideas and plans.  Devops promotes a culture of fairness, and thrives off of existing cultures of fairness.

Good luck.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
CrashCourseEngineer,8,"This post does a very good job of explaining the psychology of the culture vs. just the technical side of. Thanks for the thought put into this.

I'm being promoted into a position of authority but the one or two people who are likely benefiting from the chaos are also likely the ones that I'd have the most difficulty getting buy-in to replace. They're the type of people who know how to kiss the rights asses and it's only those in the trenches who know what they are really like. Obviously, this is a problem I'm going to have to fix to be successful though and I look forward to the challenge.

I've read parts of Tom L's books (has anybody read them cover to cover?) but will go back and reread them and pick up a copy of his new cloud book. Also need to pickup a copy of The Art of War...I didn't realize there were things from that book which could be used in the context of my career, thanks for bringing that to my attention.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
jebaile7964,4,"The art of war helps to discipline you in the ways of dealing with aggression.  It's a book about war, but it's not about these tactics or those strategies.  It's a book on psychology, and can be used to effectively deal with conflict.

And one other thing, it's important to force those problem workers to fail on their own without the help of other coworkers who may not like them.  It is far more advantageous to not act on hearsay from their peers and get rid them through performance management.

The pressure to do the opposite though, can sometimes be immense.  Caving in will only create more bad fruit.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
saintjeremy,2,"Yes to this! I've led a couple engineering teams this way - using aikido in my working relationships has been helpful. The schools of Sun Tzu and Ueshiba are definitely compatible with leading in an agile environment.

Embrace the chaos, don't get in the way, but don't let people work against you either.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
root_of_all_evil,2,"document, document, document.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
Deleted Account,6,I second this.  I would also say that there are good chances you'll end up firing people or you're going to have to make some people quit.,2015,How do you implement a DevOps culture in a place where chaos is currently king?
cheat117,2,This.....This makes a lot of sense in my current position.,2015,How do you implement a DevOps culture in a place where chaos is currently king?
mastadon6,8,"Make a list of things you can handle yourself that has zero to low impact on the team. Then make another list where the impact is higher for the team. 

I think I would first start by finding someone in the company who shares the same values as you do. Talking in an open space and not being all private can be beneficial that way the team feels like they can contribute and you are not hiding anything. Try not to shame the others who don't understand your overall plan but help them understand the importance. You may piss off some people and maybe that's good because they may not be a right fit for your team. 

Slow changes are very good for a team like this but make sure you get the important stuff done right away such as backups, source control and proper equipment/software for you team. That may be able to help build the trust.

I am coming from a developer position who is trying to bring devops into our company and basing this on what I hear my colleagues complain/praise.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
CrashCourseEngineer,2,"These are good ideas, thanks for sharing.

What would you say are the 2nd tier things that should be done after backups, source control, and getting the team the tools they need to be successful?",2015,How do you implement a DevOps culture in a place where chaos is currently king?
fistagon7,5,"documentation, collaboration tooling, monitoring, alarming, deploying, automation-everything as a company mindset (I would start laying the groundwork for this now as opposed to later). ",2015,How do you implement a DevOps culture in a place where chaos is currently king?
mastadon6,3,What he/she said ^,2015,How do you implement a DevOps culture in a place where chaos is currently king?
spicenozzle,2,"Visible metrics are also very helpful I've found. Deployment times, server response times, application response times, all of those sorts of things. Those only get attention when they are visible.

Maybe not necessary right away, but I don't think anyone is going to get mad by having more visibility into the product.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
CrashCourseEngineer,1,"Thanks for that, much appreciated.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
sirex007,2,"no problem. just remember its not about tools, its about process. The tools automate the process, but it's easy to put the cart before the horse, as it were. In my experience, esp on the dev side of devops that message can get lost amungst shiny toys. On the ops side the power of enabling the devs to be inventive can get lost in compliance. Battle both.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
rizzlybear,6,"your first priority should be source control.. its THE most important thing. i like git, but having something is more important than what that something is.. the devopsie thing to do would be to put your devs, and build engineers in a room and let them work out which tool would be the most effective for the whole pipeline, but bottom line, GET VERSION CONTROL (and get weekly backups on an  encrypted portable disk array that you can rotate out of the building once a week..)

Second, start attacking your workflow. How do your developers prioritize work at the moment? does a project manager keep track of all the todo's and assign them out? figure out what that workflow looks like and then find a system that helps do that.. it could be a google sheet, it could be jira.. don't pick a tool and then force a workflow pattern, figure out what the workable pattern looks like and then find a tool to help.. 

once you have that down, start finding the most people intensive, tedious things that can be automated, and its probably gonna be builds. something like jenkins can really help you there. 

once you have that nailed down you can branch out into config management with things like chef/puppet and take a ton of the human interaction out of provisioning systems.. 

eventually you can even start tying all those things together, a jenkins job maybe, that spins up a vm, runs your config mgmt stuff on it, deploys your builds.

what you DONT want to do is re-design the workflow for maximum optimization, and then enforce it on your team.. they will reject it and you.. what you DO want to do, is get in the trenches with them, experience the current workflow, understand whats good about it, whats bad about it, and how it got where it is now, and build something that address pain points.. they will adopt it if you come to them and say ""hey i made a thing for you that makes this particular pain point not hurt so bad"".",2015,How do you implement a DevOps culture in a place where chaos is currently king?
joshlove,5,"Someone talked about blameless postmortems but it's in a buried comment, so I figured I'd bring some related things up separately:

+1 on blameless postmortems. We call them 'retrospectives' here and they go really far into getting people to share the actual truth of what happened, and provide their thoughts on options moving forward. We document them in a wiki for later searching/reference - no names attached to ""who"" caused a problem. Just what happened.

We also try to avoid HPPO (hippos) which are the ""Highest Paid Person's Opinion"" so that everyone gains a sense of ownership and inclusion on almost every project.

Some of this depends on the style of project management you go with. We do ""agile"" here but try not to be too dogmatic about it. We do sprints, but don't really do velocities, but we do daily standups, sprint planning as a group, and sprint retrospectives. We use a kanban board to help keep everyone's tasks/workload visible.

It works for us but might not really follow Agile/Scrum to the letter, and that's fine with us.

We also block off an hour every  other week for everyone to show code to the group. This is for review purposes, crowdsourcing a tough problem, education, reducing ""bus factor"", and simple team-bonding. Someone always brings a snack, and we can review anything from a fresh piece of documentation, a merge request, a really nifty little function or method, or even infrastructure or architecture. Really rather rewarding. Last time we did one of these I brought a bunch of padlocks and a lockbox to let the group work through a simple ""encryption"" problem in the real world.

Just some stuff that works for us, we also make sure to invite the IT folks (and other stakeholders!) to anything we're doing that's relevant even though we have a dedicated ""DevOps"" guy (me).",2015,How do you implement a DevOps culture in a place where chaos is currently king?
CrashCourseEngineer,1,"Thanks for putting the time into this response, lots of good information in here. Much appreciated.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
rawrphish,10,"I suggest reading, ""The Phoenix Project"". It similarly describes the situation you're currently in.

[amazon.com](http://www.amazon.com/Phoenix-Project-DevOps-Helping-Business/dp/0988262509/)",2015,How do you implement a DevOps culture in a place where chaos is currently king?
CrashCourseEngineer,4,"I read this a few years ago when it first came out. Good idea, I'll have to go back and read it again.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
fprieur,-1,"> Slow changes

I agree with the book. It's just a great example why IT and devops can help the business achieve their goals.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
CrashCourseEngineer,7,"I don't follow your logic here, can you expand a bit?",2015,How do you implement a DevOps culture in a place where chaos is currently king?
Nitrodist,2,"Maybe you meant ""can""?",2015,How do you implement a DevOps culture in a place where chaos is currently king?
fprieur,2,"yes, or course, sorry about the typo. ",2015,How do you implement a DevOps culture in a place where chaos is currently king?
CrashCourseEngineer,1,That would make a lot more sense.,2015,How do you implement a DevOps culture in a place where chaos is currently king?
clvx,5,"I've been in a similar situation, my advice:

- Check for documentation(I'm sure is outdated or null), and prioritize what is critical for business continuity.

- Teach to your devs the [git basic workflow!](https://codingbone.files.wordpress.com/2009/11/git-basicwf1.png), you can achieve a lot with these simple steps.

- Check deployment scripts. At least for me it's better to have a configuration management + git to document architectural changes.

- Do an audit around physical assets to identify equipments for decommission.

- Some kind of project management workflow. As you want to implement changes faster I suggest using Kanban or some agile methodology. 

- Involve your team in your plan, you are nothing without them. 

- If they've been writing tests, use jenkins. Otherwise, ask for software testing. 

- Facilitate your developers a way to create working environments without a hassle. You can check vagrant, docker or lxd. 

- Encourage knowledge sharing between the team. If your team haven't improved their skills it's because their previous technical lead didn't show interests on them.

- Finally but not last, understand exactly what management expects from your team, so you can work in line with the same objectives they have. 
",2015,How do you implement a DevOps culture in a place where chaos is currently king?
CrashCourseEngineer,1,"Great list, thank you.

I think the reason things are as bad as they are today is because my predecessors have been focused entirely on meeting the demands of the business and they thought making changes like this would slow down the delivery of those products. This will obviously be a big obstacle for me as well but if I'm going to be successful I'm going to have make the business understand the upfront investment we must make to deliver higher quality products down the line.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
mastadon6,3,I think that will be one of the hardest parts. Quantifying why a team member needs to be working on internal enhancements instead of client projects is really hard to explain to upper management.,2015,How do you implement a DevOps culture in a place where chaos is currently king?
cemc,4,">no git, no project management

Since you said you're now in charge of this mess, leaving the company seems to be out of the question, which is what my first suggestion would have been had you not been in charge.

To keep it simple, your problem isn't technological; it's social. If people aren't using a VCS in 2015, there's something fundamentally wrong with your company's knowledge of technology and how they think, operate and approach technological challenges, and installing the right software isn't going to fix it. They're either resilient to changing trends or can't/won't keep up with progress.

Without further information, I'd guess you're dealing with people who are still living in the past and have not caught up with the latest developments. And by the past, I mean 1980's. Adults are hard to change, and if your job is to convince people to fast-forward 30 years into the future, you're wasting your time.

The mess may seem like a mess to you, but to them, it's the norm, and they probably haven't seen what you've seen and know what you know. In fact, they probably think they're the best in the world at what they do. 

If you want to try to get them to change their minds, set up a series of presentations and show them what you plan to achieve. Show them what practices you want to implement and compare it to what they're currently doing. Show them how 99% of the rest of the industry operates and why it works. See how receptive they are to these ideas. Run a poll to gather what people think and how willing they are to go through with your changes.

Seriously though, the lack of git is a big deal. What kind of organization doesn't use a vcs? How the hell do you code? Do you just send code in an email? Do all the developers sit in front of one computer, or do they simultaneously edit a google doc and then that gets copied/pasted into the official copy of the code?",2015,How do you implement a DevOps culture in a place where chaos is currently king?
CrashCourseEngineer,2,"Agree with all the points you made. 

The team is broken right now. The way they do things is that developers are in silos so they don't have to share code because there is only one guy that works on each product 90% of the time (the guy who benefits from the chaos is the guy who can go in and fix everything for all the different systems so people think he is a genius).",2015,How do you implement a DevOps culture in a place where chaos is currently king?
joshlove,2,"Since you said earlier that you read phoenix project, and you have one guy in the middle - the 'brent' problems from that book could be rather relevant.

Do you have any kind of automated tests in place (something like jenkins maybe)? ",2015,How do you implement a DevOps culture in a place where chaos is currently king?
deadbunny,2,"Jenkins is only useful if you have tests written, I would put money on not a single test existing there.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
Deleted Account,4,It's easier to add tests to an empty pipeline than to create them in a vacuum in my experience. ,2015,How do you implement a DevOps culture in a place where chaos is currently king?
joshlove,2,"That's true, it'll be a hill to climb for sure but a great way to help 'sell' automation to a wider group of people. Preaching to the choir here though!",2015,How do you implement a DevOps culture in a place where chaos is currently king?
CrashCourseEngineer,1,"We have used Jenkins for things on my side of the team with infrastructure but the dev team has not used it for anything.

Good analogy with Brent btw.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
root_of_all_evil,4,"Do you have anyone on the team who can help advocate from the bottom up?  Particularly folks who are already 'trusted' actors?

Even folks who just recognize the need for change, but dont know where to go.  Baby steps, help them with small victories and improving their own personal or small team workflows.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
thelastestgunslinger,3,"There are numerous ways you can address this. I'd suggest a 2-pronged attack:  
1. Deal with everything that's important and urgent, immediately (no git? fix it!)  
2. Get the teams involved, as much as possible, with changes that you're bringing in.  

The reasoning behind number 2 is that in order for change to be effective, it has to be adopted, and sticky. One of the more common ways that managers alienate staff is to make good changes unilaterally. They often don't realize that the process of change, and the inclusion of people in the process is necessary for successful adoption.
All the major systems thinkers include consultation of staff (Deming, Goldratt, Seddon, etc) for this reason.  

A large part of your work is going to be to get the teams that now answer to you to think about who their customers are, how they can serve them, and what they're doing now that gets in the way. This is likely to be a major change, and will take time. But keep at it, and it'll improve.  
+1 to The Phoenix Project, as well.  

     
And if you're in a reading mood:  
The Goal  
Freedom From Command And Control  
The New Economics  
The Fifth Discipline  

Edit: Formatting",2015,How do you implement a DevOps culture in a place where chaos is currently king?
CrashCourseEngineer,1,"Technology is easy, it's people that are the challenge! Thanks for the advice and reading recommendation. I'm also going to see if maybe I can find anything online that talks about how the consultant groups you mentioned approach things.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
Deleted Account,3,"Bill Joy also gave a lot of good tips here - https://www.arresteddevops.com/devops-culture-change/

And I'm giving a talk about this tomorrow at DevOpsDays Detroit! Don't know if it will be livestreamed though. http://www.devopsdays.org/events/2015-detroit/proposals/five-love-languages/",2015,How do you implement a DevOps culture in a place where chaos is currently king?
Deleted Account,3,"Get everything in a VCS if it isn't already and start working on a CI/CD pipeline if it isn't in existence. You'll want to then start automating infrastructure and committing all changes to your VCS. VCS isn't just for the app or web developers (yes, if you are a windows shop, powershell is a programming language!). Get your Chef, Ansible, Salt, Puppet, whatever configs in there. 

This is the start. You should really be listing as many 'best practices' as possible and line up where you currently are in each category. Then I'd likely determine what route needs to be taken to get from currentstate ---> bestpracticestate, and pick away at low hanging fruit and the most critical items. 

You'll likely have glaring issues (security, disaster recovery / business continuity) that will have to be sidelined due to budgetary constraints, time constraints, amongst other issues. You write up your big list of all the to-do's, problems, and poised solutions and ship it to management. When shit hits the fan you've CYA'd and just received the greenlight to fix the issue at any cost. 

/u/rawrphish recommended *[The Phoenix Project](http://www.amazon.com/Phoenix-Project-DevOps-Helping-Business/dp/0988262509/)*, which my boss provided me when I came on-board to the current environment (we leverage chef for automation). While I haven't gotten more than half through the book yet (I should finish the damn book and give it back to him, but that's another story) I do think it'll put some wind in your sails to realize that everything is do-able and small successes amount to big wins as well as the importance of workflow management. 

Also, whisky and/or craft beers. **Stay thirsty my friend.**",2015,How do you implement a DevOps culture in a place where chaos is currently king?
CrashCourseEngineer,1,"Great strategy, thanks for taking the time to respond.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
Deleted Account,2,"Learn how to communicate to the stakeholders in the style that makes sense to them. Assessing communication style and drivers is super key. You have to be a ""salesman"". Reading material to help with this are the books ""Drive"" and ""Switch"" (typing on thumbs so apologize for lack of links). ",2015,How do you implement a DevOps culture in a place where chaos is currently king?
epowell101,2,"Tighten the feedback loop.  How - automation and notification and ownership.
Pick a spot and win there.  Then spread the word.  Do all of this for one pain point first and get a win.
As someone said below - #1 - source code control your environment.  
One idea is ChatOps something.  That visibilty is quite useful",2015,How do you implement a DevOps culture in a place where chaos is currently king?
CrashCourseEngineer,1,"I like it. Focus on one win as a team and build momentum from there.

Going to check out ChatOps now.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
bobaduk,2,"This ++.

I recently inherited a similar mess. You have to pick an upcoming project and draw a line in the sand. Make sure the code is clean, and under source control; and that you have automated deployment. Keep it as simple as you can, you've got all the time in the world to iterate toward maturity. Once one team have bought in to the benefits, get them to do a lunch-time presentation and share the love.

If you're not a developer yourself then it's going to be harder, because leading by example is the best way forward. If you can swing the budget, you're going to want someone who can pair-program and get his hands dirty.
",2015,How do you implement a DevOps culture in a place where chaos is currently king?
CrashCourseEngineer,1,"I'm not a developer but I do know how to code so hopefully that will help some. I just worked my way up through the Ops ladder vs. Dev.

Appreciate the advice, thank you.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
Deleted Account,2,"Management needs to be informed about the chaos, which 9 out of 10 times they already know about.

Then a solution needs to be offered to management on how to rectify the situation.

Then you wait for management to give the go ahead for things to actually start changing. Unless management gives the order for such a change to start, nothing will be done.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
hopelessdrivel,2,"If you try to be prescriptive about what actions to take, you will end up in a world of hurt with a workforce that is completely dependent or worse, disengaged. You are now in charge of fostering the mindset of continuous improvement. Anything more specific than that is prescriptive. Go read some Mike Rother, Gary Gruver, Jez Humble, etc. 

Don't solve the problems. Enable everyone already in this context to do so.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
chungos999,2,"On the people side, how about using a framework like the Lencioni pyramid about the five dysfunctions of teams and how to fix it as a leader. 
http://www.tablegroup.com/imo/media/doc/the_five_dysfunctions.pdf",2015,How do you implement a DevOps culture in a place where chaos is currently king?
CrashCourseEngineer,1,"Interesting, thanks for sharing!",2015,How do you implement a DevOps culture in a place where chaos is currently king?
Deleted Account,-5,I'll say this in the nicest possible way: your priorities are seriously wrong. Devops is the kind of thing you do to get further when you've got the basic shit down. ,2015,How do you implement a DevOps culture in a place where chaos is currently king?
deadbunny,4,"I would disagree, if you need to get your shit in order then do it properly the first time.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
CrashCourseEngineer,2,"I bounced around trying to figure out which subreddit I should post this on but I think approaching the problem from the perspective of a culture shift (because that's what devops is) vs. any specific technical changes was the best way to go about it.

Instead of telling me how my priorities are wrong, why not offer some thoughts on which priorities should be at the forefront?",2015,How do you implement a DevOps culture in a place where chaos is currently king?
sirex007,2,"documentation, communication, taking ownership of procedures and critical business systems, blameless postmortems. After that you can work on collaboration and cooperation, and then automate the crap out of those processes.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
CrashCourseEngineer,1,"Much more helpful, thanks.",2015,How do you implement a DevOps culture in a place where chaos is currently king?
wake886,778,"Well the people who know all that stuff think 130,000 is too low of pay",2023,Devops is not entry level
Soccham,419,I can't answer everything he posted and I make double this working devops. I don't know the last time I ever needed to diagnose linux when I can just make K8s go BRRRR,2023,Devops is not entry level
Scoth42,92,Apparently I'm drastically underpaid based on several replies to this. I can answer all those questions and can make k8s go brrr.,2023,Devops is not entry level
Speeddymon,9,"Yeah, you are. I don't know what you're making but if you think you're being underpaid then you are really being massively underpaid.",2023,Devops is not entry level
drakored,15,Had a higher up recently changing departments tell us you should always check the market every 6months at least and talking to recruiters isn’t a bad thing. You’ll never know if you’re undervalued otherwise. That was a bit eye opening to hear that from a upper management leader.,2023,Devops is not entry level
Scoth42,7,"I probably should do that more - my main problem is that I'm something of a jack of all trades who knows his way around a lot (including pretty decently the topics in the OP) but not necessarily at the level where I'd, say, be able to single-handedly architect an AWS app from VPC up to front end, stand up a k8s cluster on bare metal colo hosts, or a load balanced Apache zoo with postgres backends on VMware VMs. When I last was job searching 4ish years ago I really struggled to find the right position to apply my skills, and the one I landed in ended up being pretty much perfect for where I was in my skillset (the one thing I was genuinely expert at was Elasticsearch. Ended up in a position managing a zoo of about 70 clusters of varying sizes all on colo hosts with a self-run k8s cluster for random bits where we were responsible for managing the Elasticsearch itself, as well as all the logging pipelines. So it ended up being great for me with my Linux admin/syseng background while knowing enough about networking, deep guts of Linux junk, and how to research/troubleshoot random stuff skills. And now we're migrating it all to the Cloud so I'm learning terraform/IaC, managed K8s, etc. Been great)

One of the things I found at the time was that a lot of ""DevOps"" type jobs were very heavy on the software development side, and I'm absolutely not a developer by any stretch. I can manage my way around some bash and python utility scripts to help out with some stuff but I'd be completely hopeless with, say, a frontend or full-stack development position where I was writing code all day. I came up through Infrastructure/SysEng type positions where I got very good at Linux admin and management a lot of the random other skills that come in handy for that like networking, DNS, routing, and all that.

However, over the years it seems like the posts here and other devopsy places have started shifting towards people complaining they're looking for engineers and can't find anybody who can do the infra side of things, which has been interesting to see. Especially since my company tells me I'm more or less at the top of my pay band there, and I'm only going to be getting minimal increases at this point. And I'm not making $260k a year.

That ended up a novel, yeesh. At any rate, I should look around.",2023,Devops is not entry level
drakored,2,"For sure. I’m on the SWE side with similar background in jack or all trades-ism like you. I learned to program really young first then started managing Linux machines for my own torture. I think that’s left me somewhat behind in the infrastructure side now.  I took a job with a company with amazing culture and a team that’s awesome and stepped from sr swe to a team just forming their devops and release management for cloud development in Salesforce. 

It’s a change in direction for me from the primary work I’ve been doing, but not as far into devops as I’d like (I’d be knee deep in scripts and yaml configuring pipelines and automatic mr/pr validations if I could dive right in there). I’m hoping the role allows me some learning and building time, but the dev in me wants more and to build/deploy/manage my own apps on scalable architecture like k8s etc. 

All of that is to say I understand your frustration there. I feel like I need to commit to one path and go full force. I’ve done cloud technical architecture tons in my career but I feel like I’ve missed out on the infrastructure side more than I’d like. In a perfect world i would have resources to learn and play and build anything I want/desire, but the adhd in me knows that wouldn’t accomplish as much as I’d like and learning something new is actually the joy I’m chasing.",2023,Devops is not entry level
drakored,3,Also I wrote a novel in response lol,2023,Devops is not entry level
gentoorax,1,"Exactly same here. Although I have fibro so I need flexibility and I rely in the private medical benefits of the company I work for. So, there is more at stake than the bottom line of cash. I would ask be asking about culture and benefits. Bottom line salary isn't all that matters.",2023,Devops is not entry level
Scoth42,1,Definitely agree on salary not being all that matters. I love my team and until recently loved my company and setup - things have gotten complicated after a buyout from a large multinational corporation - so I wasn't and still aren't really looking for a job. But not gonna lie that I've actually started to get a little more tempted here and there. They did let me go 100% remote and I can't see myself commuting to an office ever again so I'm not looking to rock that boat either.,2023,Devops is not entry level
jba1224a,63,"I work in an enterprise where my team and I DO need to know the answer to nearly everything.  I am not a technical contributor but I can answer most/all of those questions.  I make far more than 130K and my technical folks make far more than me.  You can build a team of silos and work to drive cross functionality as a strong leader, or you can get true full stack engineers for far more than 130k usd.",2023,Devops is not entry level
excalibrax,35,"Like others have said, I've done all the things on the list, would know where to look, but fuck if I'd know offhand in an interview half of them",2023,Devops is not entry level
Deleted Account,10,"Yeah, and most often companies are willing to pay for training. Maybe it’s just me, but I am always doing some sort of training whether in PluralSights or A Cloud Guru. It’s just how I stay up to date on the latest technology and best practices. I will even toss in some LinkedIn Learning and reading books as well. So many different avenues of learning.",2023,Devops is not entry level
klipseracer,11,"If you wanna learn, go work for a startup. You'll get to touch everything there. I love padding my resume with technology and accomplishments. Current job I can't wait to quit but I've checked a lot of boxes related to design and architecture, those early decisions and PoC's that are usually already in place. Also the scaling of them along with the company itself as it grows.... Very challenging and a learning experience.",2023,Devops is not entry level
skat_in_the_hat,5,"> go work for a startup

He probably also wants to make money, and not change lightbulbs.",2023,Devops is not entry level
klipseracer,2,"You can get paid at a startup but you're right, they always six months away from a financial emergency and you're the janitor there as well.",2023,Devops is not entry level
Deleted Account,1,[deleted],2023,Devops is not entry level
skat_in_the_hat,1,"In a huge org, every role is really well defined. Including helpdesk/IT. They will maintain your laptop, and the printers, etc.  

But in smaller places the management will really abuse their helpdesk/IT and use them as an office maintenance worker. To go hang whiteboards, change light bulbs, even as far as doing the dishes in the office.",2023,Devops is not entry level
Ogi_GM,1,"US salaries are higher that UK/Europe,you can not compare it.",2023,Devops is not entry level
jba1224a,2,You certainly can.  Agree it’s not apples to apples but the fact he’s not getting any qualified candidates over a long period of time points to an issue with either the req or the pay.,2023,Devops is not entry level
dwaynemartins,1,"Where area do you live in, and how big is the company you work for and your benefits?

I'm reading some of these comments like the one above about ""double"" and trying figure out where this is possibly even a realistic salary to offer. I can answer all of those questions and make slightly less, but I am in FL and I have incredible benefits... cash value might all equal double at most but unlikely.

I've applied for other devops jobs in the past after converting from sysadmin/engineering with a development background and couldn't find anything remotely close to what I being paid now let alone with the quality of benefits.",2023,Devops is not entry level
jba1224a,1,"I work for a smaller company, under 300 employees.  We have commercial and federal work.  I’m on the east coast and my job is remote.  I have people on my team from all over…as far out as Hawaii and Alaska.

Our benefits are standard.  4 weeks time off plus federal holidays.",2023,Devops is not entry level
dev0psjr,1,"I've been working for a year and a half, am a junior system engineer (/devops?) and can answer at least 60%-70% of questions and I make $27k lol  
u/SticklyLicklyHam if you hire remotely expect my CV within a year or two when I level up as there is much more knowledge I can pick up at my current position.  
But yeah, these are really basic questions",2023,Devops is not entry level
jba1224a,1,"Are you a former convict or felon?  Do you have a college degree or certs?

With 1.5 years of experience you could easily get a job at a larger defense contractor as a junior cloud engineer or junior sys admin for far, far more than 27k.  70-90 would be what I’d pay a junior engineer.",2023,Devops is not entry level
dev0psjr,1,"No I'm just based in south/easter europe so close enough haha  
I graduated in CS, got job as system engineer in my company over summer internship, am happy where I am but western european and US sallaries make my head spin.  
I mostly work with Kubernetes, Kafka, Postgres, Ansible. Thankfully work in a company where I work on really diverse projects and learn a lot which I can appreciate and perhaps use when I decide to switch companies or move out west. Blessed to be surrounded by very good engineers who are willing to help out and mentor me.",2023,Devops is not entry level
PelicanPop,118,"In my head I said ""damn I remember knowing the difference between stateless and stateful firewalls years ago but would've gotten it wrong in that interview"". And I also make almost twice that salary making K8s go BRRRRRR",2023,Devops is not entry level
mvaaam,32,You gotta know a good chunk of that list to make K8s go BRRRR,2023,Devops is not entry level
Ancillas,24,"That's what I'm thinking.  Any serious K8 deployment is going to require a decent amount of networking, firewall troubleshooting, monitoring, etc...  We've had ingress issues related to conntrack misses breaking NAT that required full packet captures to resolve, ECMP hashing problems that vary by switch vendor, and even lower level issues PXE booting underlying hardware to expand capacity.

People who are simply using the API to push deployments into the mesh aren't making K8 go BRRRR.",2023,Devops is not entry level
klipseracer,13,How about BR? Just one R?,2023,Devops is not entry level
a_reply_to_a_post,1,better than makin em go bruh,2023,Devops is not entry level
Lower-Junket7727,2,It comes down to whether you host kubernetes on prem or you used a managed service in a public cloud.,2023,Devops is not entry level
Ancillas,2,If you’re using managed Kubernetes you’re paying Amazon to make K8s go BRRRR.,2023,Devops is not entry level
mvaaam,2,These problems come up in cloud envs too. - especially when you’re multi cloud,2023,Devops is not entry level
ronin-baka,5,"This, most of these problems are on prem issues. 

You couldn't do half the thing OP is talking about in our K8s env as SSH is off for almost everything.

If I want to see how much mem it's using I just look at the dashboard we created, which let's me see mem usage over time, and can be filtered by tags to individual versions and even features.

Op sounds like he wants a system engineer, not a devops engineer. Even Terraform isn't exclusively a DevOps tool. Nothing he's asking about is related to the dev in devops. He's basically interviewing for a sysadmin from 10 years ago and wondering why these damn kids don't know how to use a rotary phone.",2023,Devops is not entry level
Bubbly_Penalty6048,1,especially since 90% of people don't even know how iptables work....,2023,Devops is not entry level
Ancillas,1,They’ll have fun with Istio and Weave!,2023,Devops is not entry level
Jlocke98,13,"where does one find these ""make k8s go brrr"" jobs making 200k+",2023,Devops is not entry level
klipseracer,23,"Not by sticking around and working your way up the corporate ladder.

First, go move to a place where 1 bedroom apartment is $3500/mo or more. Then open up indeed.com and search for jobs in your area.",2023,Devops is not entry level
Soccham,3,I live in the Bumfuck midwest,2023,Devops is not entry level
klipseracer,8,"You need to move to ""Remote, Oregon""",2023,Devops is not entry level
PelicanPop,8,"for me it's fintech. 12 years of experience, 8 of those in devops and now I'm a principal level so maybe that has something to do with it as well.

The biggest thing I've found is that once I started shooting higher and higher for salaries, the worst I've gotten was a ""no we can't do that"" and it's actually not as scary as it seems.",2023,Devops is not entry level
jeenam,33,"Replying to comment on the folks who responded to your reply.

Not all DevOps Engineers/whatevers will ALWAYS be working with tools such as K8s. Integration of legacy systems is common, along with legacy virtualization that isn't containerized. The point is, being able to debug at each abstraction layer is ridiculously undervalued by the people who hire based on buzzwords.

Computer knowledge is a long tail. A very, very long tail. The more base foundational knowledge one has when it comes to systems/networking/applications/etc, the greater their capability to diagnose and solve problems further down the virtualization stack (closer to bare-metal - yes, it matters when you're expected to fix whatever comes your way and you're not siloed into an IT fiefdom). Additionally, having expansive foundational knowledge (IMHO) facilitates a faster learning and uptake process when having to learn new technologies or services. Drop any seasoned 'systems admin' into a K8s environment and they'll instantly recognize that K8s is simply another layer of virtualization with fancier bells and whistles that facilitate self-healing and redundancy out-of-the-box, but minus the physical wiring.",2023,Devops is not entry level
Speeddymon,13,"> Drop any seasoned 'systems admin' into a K8s environment and they'll instantly recognize that K8s is simply another layer of virtualization with fancier bells and whistles that facilitate self-healing and redundancy out-of-the-box, but minus the physical wiring.

Can confirm. I'm a seasoned Linux system admin (at least 15 years experience), moved into a DevOps job 2.5 years ago and learned docker+k8s in my first month. Said to myself, ""I'm NEVER going back.""",2023,Devops is not entry level
ZenAdm1n,6,"Omg this. I need people with me that can take a monolithic system design and migrate it. Anyone can follow a playbook/recipe and maintain. I need someone who can understand the current environment, engineer, and implement. 6 months experience with someone's free cloud tier isn't going to cut it.",2023,Devops is not entry level
Soccham,1,The need to debug at each abstraction layer is incredibly uncommon and if you need to you’re likely at a massive enterprise where you’re eeking out every last bit of performance because the savings are significant or you’re over engineering solutions and not providing value where needed.,2023,Devops is not entry level
jeenam,10,"Though the 'need' may seem uncommon to you, K8s represents a relatively small percentage of infrastructure compared to legacy bare-metal and virtualization. Yes, the new-ish infra runs the container-whatever platform du jour along with deployments using modern CI/CD tooling, but again, the **MAJORITY** of IT infrastructure does not fall into that design pattern.

You mention eeking out maximum performance as though it's an afterthought. I highly suspect there are instances where services can run a significantly reduced number of pods/nodes but the platform owners just add capacity by increasing pods/nodes as opposed to optimizing the software within the container (OS + App). The knowledge and ability to modify the OS through sysctl (linux) and things such as kernel schedulers and module parameters can have a massive impact on performance that can potentially lead to significant financial savings.",2023,Devops is not entry level
Deleted Account,36,"Yeah same. Why do I need to know disk space on Linux? We don’t allow devs to use local disk. Ram? K8s will murder the pod and make a new one. I’ll check the exit status and if it’s 137 the dev is going to have to explain the spike. Firewall? What’s that? Everything’s on a private subnet and with security groups and behind an ALb. TLDR I make EKS (no control plane for me, suckers) go brrrrrr.",2023,Devops is not entry level
klipseracer,11,"Presumably if you're building a cluster on bare metal.

In the enterprise this can be more common when they build their own private cloud with VMware using a cluster orchestration software like Tanzu, Rancher etc.",2023,Devops is not entry level
scarby2,3,"Where do you work and can I have a job? /S

Seriously though, I do know all of this (and k8s) and don't make double that...",2023,Devops is not entry level
Soccham,1,"I wish I was hiring, but I’m also in management now",2023,Devops is not entry level
TheJuiceIsLoose11,-4,Wait you really can’t answer all those questions??? Sheesh,2023,Devops is not entry level
Deleted Account,16,[deleted],2023,Devops is not entry level
SuperMiguel,-4,Which of the questions he asked u dont know? Everything is super simple…. If you really dont know them I HIGHLY recommend a homelab,2023,Devops is not entry level
Deleted Account,8,[deleted],2023,Devops is not entry level
VeryOriginalName98,3,"I doubt that. This was just common knowledge 20 years ago. If that's when you learned computers, you know it. These things got abstracted away only in the last 10 years or so.

Edit: I take that back. ""how terraform works"" is not something that existed 20 years ago.",2023,Devops is not entry level
Deleted Account,5,[deleted],2023,Devops is not entry level
VeryOriginalName98,2,"Could also be that my high school friends were linux nerds and my perception of ""common"" is skewed.",2023,Devops is not entry level
Deleted Account,1,[deleted],2023,Devops is not entry level
VeryOriginalName98,-1,"Ask people about BGP. Anyone that claims to understand it is lying or works for CloudFlare. On the surface, it's simple, but the need for ever increasing efficiency added nuances that you can't really understand from the protocol alone.

Another good one is why your mail is still occasionally being rejected even after setting up SPF/DKIM.",2023,Devops is not entry level
SuperMiguel,1,Can you please give me an example of which one is 20 years old and not applicable today?,2023,Devops is not entry level
VeryOriginalName98,1,"It's all applicable. Was talking about it being super simple, not irrelevant. It's simple if you grew up with it.

Now you can host your own web server by installing docker and running someone else's compose file. No need to understand what's happening like you used to.

Previously you had to build a Linux machine from spare parts because VMs weren't viable on single threaded machines. And you had to know a bunch of networking because it wasn't virtualized on the same physical machine.

When things physically cannot be abstracted away, you are forced to understand it to the point it becomes intuitive or obvious to you. Either that, or consider it magic that other people do, and pick a different hobby. Being able to do everything on the same machine with zero config produced a couple generations of non-technical programmers/admins.",2023,Devops is not entry level
SuperMiguel,1,"Which question from OP is abstracted? Lets use your own example, running your own homelab and hosting an external available webserver… that by it self covers like 80% of the OP questions. The problem is Most new DevOps dont even know what a homelab even is, they take a 2 weeks YouTube class and boom they are now DevOps engineers, many/most dont even try to go further",2023,Devops is not entry level
VeryOriginalName98,1,"I'm not sure if you are asking a question or agreeing with me.

You run a compose file and open a port on your router and all of a sudden you have a secure web server (assuming static IPs, and a safe image, etc.). This is what people do now to claim that they are devops, but don't know anything OP mentioned.

You do the same thing without containers, and you've built a home lab whether you call it that or not. However to do so securely is dependent on your knowledge of what can be done through that port you forwarded. Very different beast; the consequence for misconfig is a back door into your network.",2023,Devops is not entry level
Deleted Account,2,[deleted],2023,Devops is not entry level
SuperMiguel,-2,What?,2023,Devops is not entry level
Deleted Account,2,[deleted],2023,Devops is not entry level
Soccham,1,"Your comparisons didn’t make sense and what you wrote reads a bit as word soup. I’m not sure how a hobby homelab relates to you automating work. 

I probably agree with you though, the more value you provide the better compensated you are.",2023,Devops is not entry level
Deleted Account,1,[deleted],2023,Devops is not entry level
SuperMiguel,2,"You call a homelab work for free? Homelab for many is a hobby. 

See i love technology and i dont just do it for the money, i actually enjoy it. I have homelabs at home, i use enterprise networking equipment at home, i automate my entire house, i write code to turn my lights on, i build nitrogen cooled computer and join overclocking competition, i play video games… Well i used to do all that, now 1 wife and 3 kids later dont have much time but still try and still have my homelab ;)!",2023,Devops is not entry level
Deleted Account,1,[deleted],2023,Devops is not entry level
SuperMiguel,2,If you get paid to do a hobby it becomes a job :),2023,Devops is not entry level
Soccham,2,"I’d understand everything I need if I looked it up, but I’m not giving any crazy answer on the fly. 

DevOps has changed and significant numbers of things are abstracted at this point. Just knowing these things doesn’t necessarily make you competent either for what it’s worth. I couldn’t give 2 shots if you can explain DNS intricately but I care that you know how to properly create a docker container",2023,Devops is not entry level
TheJuiceIsLoose11,2,No that’s valid. I think my initial astonishment is because my day to day has a lot more ops then dev. But I feel the same about most genetic IT questions.,2023,Devops is not entry level
SuperMiguel,1,Agreed,2023,Devops is not entry level
Freakin_A,1,lol this was my thinking reading the post. Why am I troubleshooting Linux boxes.,2023,Devops is not entry level
Hebrewhammer8d8,1,I definitely need help to up my skills to make K8s go BRRRR.,2023,Devops is not entry level
klipseracer,1,"I agree and simultaneously they have a point. What you're doing is not really what devops is in totality because devops can be so broad.

I also make much more than that but I can answer pretty much all that and also kubernetes is my bread and butter.

So while you may not need to know those things, due to the market or company specific requirements, devops is a broad area of work where there is more value when the employee can bring knowledge about all of them to the table.",2023,Devops is not entry level
scalable_idiot,1,"Do 1 k8s cluster on-prem on bare metal, I’m pretty confident you’ll start praying to the linux gods.",2023,Devops is not entry level
Soccham,2,why bare metal when EKS go BRRR,2023,Devops is not entry level
scalable_idiot,1,"😂
I know right?
I’m some 15 years in the field and shifted from startups to a corporate gig.
I will definitely sometimes ask myself this, but ya know.. 
EKS really does go BRRR though dude",2023,Devops is not entry level
hi117,1,"You sometimes do need it, but I agree that knowing the wider Linux philosophy is much more important to making Kubernetes work, which is just another kind of Linux knowledge anyway.

For instance, I needed to know how the Linux scheduler works this week to explain why setting low CPU limits on Kubernetes is a bad idea for a small container that doesn't need much CPU, but is important.",2023,Devops is not entry level
learningheadhard,1,…Are you hiring?,2023,Devops is not entry level
Soccham,2,I wish. We need the help. Our engineers are making remote around $200k.,2023,Devops is not entry level
learningheadhard,1,If positions open up and in the US please send it my way!,2023,Devops is not entry level
kevmimcc,1,Exactly. Something wrong with this server. Destroy it. Let the system rebuild. Life is good,2023,Devops is not entry level
Deleted Account,1,"out of curiosity, which of the above can't you answer?",2023,Devops is not entry level
Soccham,2,I'm mostly being obtuse and thinking way more in-depth than these are likely intended.,2023,Devops is not entry level
justaguyonthebus,1,Same here. I would have to Google all those Linux questions.,2023,Devops is not entry level
DonkeyTron42,1,AI can make K8s go brrrr too.  In the future diversified knowledge will be mandatory.,2023,Devops is not entry level
dwaynemartins,1,"What area of the country do you work in? How could this be financially responsible for the company? You either live in a high cost of living area, and/or work for a large company... which to me means, as an example if you live in Cali, half that.... which means you are right there.",2023,Devops is not entry level
Soccham,1,I live in The Midwest. Company is based in a large city. I manage a dozen engineers and keep a multi-billion dollar platform running. My engineers are pretty well paid as well.,2023,Devops is not entry level
Zolty,26,US based tech salary is typically 30-40% higher than even other developed nations.,2023,Devops is not entry level
CliffClifferson,5,And expenses more 30-40%,2023,Devops is not entry level
Lower-Junket7727,45,Yeah exactly.  Especially in a HCOL area.,2023,Devops is not entry level
vppencilsharpening,2,"Being based in Europe this may not be too far off. I know it's not London, but reviewing some salaries for Germany felt appallingly low for someone based in the US.",2023,Devops is not entry level
SpaceboyRoss,7,"If I was getting paid that much, I'd be glad. I was in the 70k range at my previous employer as a Jr DevOps Engineer and coming from a job at a grocery store, it was great.",2023,Devops is not entry level
Spider_pig448,6,For real. 130K in the US is entry-level DevOps. Probably someone with some SysAdmin experience but no IaC for example,2023,Devops is not entry level
LGBT_Beauregard,9,Ding ding ding,2023,Devops is not entry level
SticklyLicklyHam,12,"It should actually be around £100,000. It’s London based.",2023,Devops is not entry level
Deleted Account,65,[deleted],2023,Devops is not entry level
Deleted Account,8,Are you from London? I thought that's decent but I'm curious to know what you think alot of senior DevOps get paid in London?,2023,Devops is not entry level
BloodyIron,6,"Geography is irrelevant in the modern sense. WFH is prevalent, and most people looking for a role like this aren't going to pay any time to coming into the office. So using the excuse of it being London to pay substantially under the market doesn't hold water.

Pay peanuts, get monkeys.

edit: Turns out the GBP to USD exchange rate is way better than I thought it was, so I was speaking from a position of ignroance. Never mind!",2023,Devops is not entry level
Mundane_Elk8878,2,"Contracting an employee from the UK in the USA is not as simple as you make it sound. 100k in London != 100k in the US

The pound is worth more and generally things are cheaper in the UK than america",2023,Devops is not entry level
BloodyIron,1,"You're right. I actually thought the GBP to USD exchange was way different than it currently is. My mistake! I honestly thought they were closer to parity, or <1:1. Sorry about that.

(note: I don't typically operate from a USD perspective, I operate from another dollar currency perspective, so that's likely why my perspective on this particular exchange was so off)",2023,Devops is not entry level
MathmoKiwi,1,">operate from a USB perspective

That is an interesting perspective...",2023,Devops is not entry level
BloodyIron,2,"I actually do operate from that perspective often, now that you mention it ;)",2023,Devops is not entry level
Deleted Account,24,[deleted],2023,Devops is not entry level
scarby2,22,"£100,000 is a really good salary in London. Professional salaries in the UK are a fraction of what they are here.",2023,Devops is not entry level
psunavy03,1,"Sounds like starting a tech company in Europe is a shitty idea, then.",2023,Devops is not entry level
scarby2,6,Starting a tech company might be a good idea. It's cheaper to hire people.,2023,Devops is not entry level
skat_in_the_hat,5,"Start one in rural Alabama. And pay those prices. I'd love to get off my tractor and head to the office with zero traffic. Hell maybe i'll take my tractor to the office?  
Nice cheap land for an office. Nice cheap property for your employees. Then when they are done, they can head home to their 10 acres, and get back to farming!  
  
No joke, I would totally work there. I fucking hate big cities.",2023,Devops is not entry level
Capaj,1,No it's not. Just hire people from anywhere in europe full remote. For 100k GBP net you will have so many candidates from places like poland/latvia/bulgaria/slovakia it will overflow your inbox LOL.,2023,Devops is not entry level
Ninjaintheshadows3,30,"I think you’re out of touch with how wages work in the UK and Europe in general. The average worker in London makes about £50,000. £100,000 is quite good. 

US salaries will look highly inflated compared to those in Europe.",2023,Devops is not entry level
Deleted Account,2,"£100,000 where I live in Scotland would be an awesome wage. £100,000 in London is average at best.",2023,Devops is not entry level
khobbits,1,"I do live in London.

£100k is ok for mid-senior level DevOps, depends on the company.

Assuming we count lead and architect level above senior, which most do.

Additionally if you're working for a fintech, or many startups it will be higher.",2023,Devops is not entry level
Notmyotheraccount_10,1,That salary is extremely high for London.,2023,Devops is not entry level
Drauren,2,"Honest answer it's what everyone else is saying.

The people who know everything are not going to be taking 100k pounds. Those people all work for US based companies paying US salaries.",2023,Devops is not entry level
raunchieska,2,wait are you serious? im a developer (not devops) and I know more about ops.,2023,Devops is not entry level
wellwellwelly,1,Cries in UK salary,2024,Devops is not entry level
Caffeine_Monster,1,I can answer all of them and are on less than half that wage.,2023,Devops is not entry level
Deleted Account,1,"All those stuff sound typical knowledge for a mid sysadmin, no?",2023,Devops is not entry level
ZenAdm1n,1,"I would need a bit more than 120k and some reloc assistance to move somewhere else. I'd need a lot more if that place was a high CoL area. But, I consistently see these positions open for $85k. Those companies are going to soon be screaming they can't find any skilled workers to whoever will believe them.",2023,Devops is not entry level
Ribak145,1,thats UK salaries for you ...,2023,Devops is not entry level
lunchpadmcfat,1,Lol took the words out of my mouth. No wonder he’s getting bad candidates.,2023,Devops is not entry level
The_Homeless_Coder,1,Not me. But I’m dirty and only work for weed and 40s.,2023,Devops is not entry level
downfall67,328,I’m not sure what you expect these days. We did this to ourselves by abstracting everything so many layers deep that you don’t really need the fundamentals to start in DevOps and be reasonably functional unless sh*t hits the fan.,2023,Devops is not entry level
evergreen-spacecat,78,"True. But we also siloed everything way before serverless or kubernetes. If you did app operations back a few years ago at big corps, you wouldn’t have access to DNS, firewalls etc. If you operated the firewall, you never even touched Linux servers etc. Everyone was passing around service tickets via non-technical “service delivery managers”. Troubleshooting was horribe. Each team during incidents: “Network is fine”, “web has no issues”, “linux is ok”, “database is cool”. These days, a single person can easily install and operate the entire stack with terraform and kubernetes. Abstracted, sure, but no more silos. You need to know high level DNS, Storage, routing, TLS, Linux to do your job but you really have the power to quickly troubleshoot the entire stack if you do know it. If you employ juniors, you REALLY need seniors to back things up when it goes haywire",2023,Devops is not entry level
Spit_Fire_ATL,2,"Siloed yeah, like you’re not the admin of the dns server or the firewall, but you should still know how dns works, what common record types are, and you should know enough about firewalls to figure out when it’s a problem/how to request stuff from them.  I’ll re-echo the comment about salary, I can’t see how London would have lower normal salaries than small/medium sized tech hubs in the us, though.",2023,Devops is not entry level
evergreen-spacecat,3,"Well, my experience is that you was not admin or even a read only user in the firewall, DNS etc to get hold of logs, config or similar. While you probably had taken a university course in networking some time in the past, any working knowledge of DNS or Firewall in siloed ops orgs came from snippets of logs pasted by the DNS admin guy in various tickets or mails. It's hard to keep up the knowledge of systems you can't touch, query, view etc. The entire idea of siloes makes me sick.",2023,Devops is not entry level
SticklyLicklyHam,171,"I unfortunately agree. The issue arises when you then need to get into the weeds. 

Case in point: During the week I had a vacation, someone / something removed the 0.0.0.0 route to the internet for one of our big clusters. All hell broke lose. Because management decided to hire people that only understand how to write a yaml file, it meant none of them could do the absolute basic amount of troubleshooting to find why the cluster had apparent died. 

It took them 7 hours, and a call with aws support to find the cause. SEVEN HOURS. It blew the SLA completely out and the following week when I flew out to the client for unrelated matters, they brought it up. I had to sit and try worm my way out of explaining the actual cause. 

This is embarrassing. Utterly, utterly embarrassing.",2023,Devops is not entry level
UggWantFire,62,"Case _in_ point

Sorry, but when you're venting about other people, yah gotta be bulletproof :D",2023,Devops is not entry level
SticklyLicklyHam,8,You got me there ;),2023,Devops is not entry level
Deleted Account,14,"So you’ve added Cloudtrail logging for modifications to core networking infrastructure, right? Riiiiight?",2023,Devops is not entry level
VeryOriginalName98,24,"Even if they did, it doesn't matter if nobody looks at it or understands what it's saying. Based on what OP said, I don't think this would have a significant impact for them.

Sure, they still should, just won't matter.",2023,Devops is not entry level
Deleted Account,2,"We have alerting the moment any of our core network infrastructure is changed by anybody belonging to a ""humans"" group, i.e. DevOps, developers (only some of whom have non-prod access), etc.

This would've easily averted this situation, as multiple people would know that a security group was changed in a bad way.",2023,Devops is not entry level
rejvrejv,1,how did you implement that?,2023,Devops is not entry level
downfall67,24,That is unfathomable. At least core troubleshooting should be fundamental to the role. Yikes,2023,Devops is not entry level
serverhorror,13,"No, That is the standard.",2023,Devops is not entry level
fogcat5,7,"That’s the sort of thing that gcpdiag is good for. 

https://github.com/GoogleCloudPlatform/gcpdiag",2023,Devops is not entry level
Deleted Account,17,[deleted],2023,Devops is not entry level
Deleted Account,30,[deleted],2023,Devops is not entry level
AemonQE,6,"This.

70k here in Austria would be high level - and you'd pay 55% in taxes.",2023,Devops is not entry level
kgyre,2,">Austria

Yeah, but you have universal healthcare and nationalized pension plans. We have to pay for that stuff ourselves or through an employer, if it's even affordable either way.",2023,Devops is not entry level
AemonQE,1,"What I've heard from friends that worked in the US and then bought their home without credit here in Austria:  
Working in IT in the US is even if you add the higher living costs and private healthcare to the mix, really lucrative. 

You might work yourself to death, but doing it while you're young 'might' be worth it.

The actual thought of buying your own home here is... impossible for the most people.

But yeah, all in all the quality and density of infrastructure, services and education is better and/or free in Austria.  
For the exception of healthcare. There is not that much money in it compared to the US, so the quality is just not optimal.",2023,Devops is not entry level
bsc8180,1,"Are you sure that’s how tax brackets work?

70000 AUD seems to be about 12000 AUD in deductions annually. So your marginal rate might be 55%.",2023,Devops is not entry level
ClikeX,3,"Austria, not Australia.",2023,Devops is not entry level
bsc8180,3,"Yes misread, sorry.

Principal still applies, 55% is the marginal rate.",2023,Devops is not entry level
MathmoKiwi,1,">Austria, not Australia.

I initially misread that too, and thought that's ""waaaay too low for Aussie salaries""",2023,Devops is not entry level
RandmTyposTogethr,1,"This. US tech industry folk seem to be quite out of touch with the rest of the world, generally speaking. Around here 40k is acceptable for that kind of job. And ~50% goes to taxes.",2023,Devops is not entry level
downfall67,18,£200k? You must be joking man. Not every country has 1 million dollar medical bills,2023,Devops is not entry level
SticklyLicklyHam,1,"We do have an audit trail. But when everyone wants work down last week, and sales are selling products we can barely get out on time, things like checking logs thoroughly take a back step. 

It’s a management issue, and a process issue. Completely agree and understand that.",2023,Devops is not entry level
Deleted Account,1,"Is your environment k8s, eks, ecs, or none?",2023,Devops is not entry level
Deleted Account,2,[deleted],2023,Devops is not entry level
Deleted Account,1,"why, oh why, is your company using k8s across three cloud platforms + kops? multiple customers?",2023,Devops is not entry level
PudgyPatch,2,"well...its all zeros, it can't possibly be important!",2023,Devops is not entry level
SilentLennie,2,"I guess this isn't gitops ?

Or it couldn't reach the git repo/whatever service because their was no default route.",2023,Devops is not entry level
CCratz,1,Routing is a part of any entry level AWS course - that doesn’t mean they have to be a network engineer. You might just have incompetent colleagues.,2023,Devops is not entry level
Spit_Fire_ATL,1,"Don’t forget Facebook who have an ungodly amount of automation, managed to screw up their bgp routing globally for half a day last year",2023,Devops is not entry level
imti283,2,"Agree, and that's the moment they understand the value of pre devops era guys. Funny thing - We have folks giving ideas on how to build a front end for terraform.",2023,Devops is not entry level
Xophishox,4,"This, so much fucking this.",2023,Devops is not entry level
SeisMasUno,1,"This is not exactly how things works, I’ve learned the abstractions AFTER the fundamentals and I’m in a completely different position in relation to my coworkers, everybody skips the fundamentals but they don’t really understand what they’re doing, they’ll never be consistent or reliable.",2023,Devops is not entry level
gorgeouslyhumble,154,"> 7th interview to find a devops engineer, and boy, am I getting depressed

This has always been the case. There is no traditional pedagogical route for producing an engineer that possesses the skill set a devops engineer has.

A jr software engineer can be produced by a college; a devops engineer is forged when someone who is eager to learn and inherently interested in technology becomes self-taught.",2023,Devops is not entry level
sasi8998vv,16,">A jr software engineer can be produced by a college; a devops engineer is forged when someone who is eager to learn and inherently interested in technology becomes self-taught.

This is, unfortunately, quite true. It's not that college doesn't teach one the basics - I haven't seen a CS related curriculum that excludes teaching Computer Networks, for example - but the focus is incredibly minimal, especially when the majority of the student base is only interested in their CodeChef/LeetCode score because that's what the entire industry uses to hire people. 

This is especially true in India, which produces so many damn software developers who know absolutely fuck-all about the basics. But they can definitely implement a Red Black tree from memory, so we must hire him! It's either that, or they can make all the ToDo apps in the world. Hyper useful! /s

I dropped out of college and am leading an entire startup's tech team, including handling all the DevOps myself. The only way I could hire another person to the DevOps team is by training them myself during their internship, and retaining them.",2023,Devops is not entry level
mrafee113,25,"Partially true, (currently self teaching) but unfortunately theory and experience are two different things. In the sysadmin part of devops/sre it's really tough actually learning things theoretically on your own. e.g. I've no idea what things might go wrong, no idea how to intentionally produce them, and therefore no troubles to shoot hands on. It's sad but in devops, like seniors, even juniors have to be forged in actual systemic battles.",2023,Devops is not entry level
klemorali,21,"It's easier than you think. Go grab a random bag of FOSS stuff and deploy it. Then, try to use all of its features. Gitlab, Jenkins, nginx, a bunch of apache projects.... there's deploying k8s or openstack from scratch. There's all the many application stacks on artifacthub. CEPH.... My favorite piece of software by far. Ton of skills development if you tackle that beast.

I started by installing Ubuntu 8.04 on a desktop, and now I'm one of those self-taught, no college degree devops guys complaining that it's impossible to find people that can do the job.",2023,Devops is not entry level
Deleted Account,1,[deleted],2023,Devops is not entry level
klemorali,2,"I'm not a fan of dual boot. I have done it, but a dedicated system is vastly superior. It can be old, even a decade old, just needs to work.

Maybe take a look at gitlab and gitlab ci. You can run a docker container locally to run builds on your gitlab projects. That's the natural progression from just committing code and the gitlab ci system is the easiest to setup and get running IMO.

So the fun project with this would be setting up cloudfront with s3 origin using tiered caching and doing a build/deploy with gitlab ci. So your local gitlab runner would have AWS credentials to go take actions on your account. Specifically, s3 put object to upload build artifacts.",2023,Devops is not entry level
Deleted Account,7,Well said,2023,Devops is not entry level
SilentLennie,1,"Actually, these days they do teach that.

Well, not everything, they have a devops class which means they learn terraform/docker/ansible, etc.",2023,Devops is not entry level
gorgeouslyhumble,1,In a college? As in there is a pipeline that takes kids in high school and gives them a career path? Or do you mean online courses like Coursera?,2023,Devops is not entry level
SilentLennie,1,In my country this was part of the bachelor degree for software developer/software engineering.,2023,Devops is not entry level
gorgeouslyhumble,1,What did that education look like and which country is this?,2023,Devops is not entry level
SilentLennie,1,"The Netherlands. I only heard, so I don't really know anything.

Just saw one assignment, tooling in use was AWS, terraform, docker, ansible, ubuntu server... to deploy I think a nodejs or python app with nginx they had build before.",2023,Devops is not entry level
Deleted Account,1,">A jr software engineer can be produced by a college; a devops engineer is forged when someone who is eager to learn and inherently interested in technology becomes self-taught.

Software engineers produced by college tend to need one of us to deal with real world when it turns out that stacking abstract factories on top of each other ain't gonna do shit by itself. Or scale. Or be secure. Or be fast. Or do a lot of other things.

Amount of times I had to teach ""professionals"" what a fucking database index and why it's a good idea to use it is staggering.",2023,Devops is not entry level
gorgeouslyhumble,2,"Oh, I'm not saying that they're good... but there is a pipeline to employment. Once a intern/jr soft. eng gets hired then they can get more on the job training. But there is no pipeline for devops/sres/etc.",2023,Devops is not entry level
Staltrad,230,"attempt shame compare subtract encouraging scandalous fear start roll bow

 *This post was mass deleted and anonymized with [Redact](https://redact.dev/home)*",2023,Devops is not entry level
_hypnoCode,169,That's kind of what I was thinking. None of these seem like DevOps questions. Sounds like they are running old school servers and calling it DevOps because it sounds cooler.,2023,Devops is not entry level
tevert,16,I've had to troubleshoot DNS problems in a K8s cluster plenty of times. Foundational knowledge like this is _never_ out of season.,2023,Devops is not entry level
nourez,41,"It's stuff I think having a baseline understanding of is helpful as a DevOps engineer, but if that's the day to day expectations of the role I would agree that it leans more towards the SysAdmin or NetAdmin side of things. 

That said, devops is so broad that it could be a valid set of questions, just personally not a role I would be super interested in taking. I find a lot of devops engineers (myself included) tend to lean a bit more on the Dev side of stuff.",2023,Devops is not entry level
Speeddymon,8,"This needs to be higher voted for the ""lean more on the dev side"".

DevOps engineers come in three varieties. 1) the former system admins/engineers who scripted everything so they didn't have to work so much, 2) the same as 1 but automated with puppet/chef/cfengine/ansible, or 3) the developer who, for whatever reason, wanted/had to learn system engineering

There is no middle ground 😄",2023,Devops is not entry level
BurgaGalti,10,I'll give you a fourth. The testing engineer who automated a department's workflow and had to learn systems engineering to explain to the devs why their code is wrong.,2023,Devops is not entry level
khobbits,19,"Surely you don't trust someone to configure overlay networking in Kubernetes, if they don't know how to what port ssh uses?

Surely you don't let someone configure CI/CD runners or build a dockerfile, if they don't know what a Linux distribution is?

Surely you don't let someone configure cert-manager, who doesn't know how https works (read a request to google)?

Surely you don't let someone handle pvc's if they don't know how to check available disk space?

Surely you don't let someone configure istio/envoy/or fucking dns if they can't tell their CNAME from their A record?

What is a DevOps to you?",2023,Devops is not entry level
Nax5,-6,CI/CD and Dockerfiles are so streamlined. Any competent developer can manage them.,2023,Devops is not entry level
Deleted Account,28,"If one doesn't know Linux networking, do you expect them to know container & k8s networking?

Imho a DevOps role is a superset of a SysAdmin role, not a subset...",2023,Devops is not entry level
CapitanFlama,2,"These are devops questions. Specifically, the ""ops"" side of the mythical devops role. Which is usually looked down by guys who think they can yaml their way out of a DNS issue or OOM warnings.",2023,Devops is not entry level
IDENTITETEN,1,Isn't that what DevOps is?,2023,Devops is not entry level
spazonator,2,"And from the sounds of it the project seems pretty close to the metal/on-prem. Personally OP.. I'd drop the DevOPS posting and look more into an systems architect. If you have a strong systems staff in place already that a less seasoned individual can lean on, there's roles known as SRE \[Site Reliability Engineer\] (hey I see we even have one here!). To my knowledge SRE is fairly new nomenclature but it seems to avoid the pitfalls of the catch all script kiddie BS that often comes with DevOPS.

In fact, in my company for the project release system I'm currently designing I forbid the term DevOPS for this reason. We rely heavily on-prem infrastructure for warehousing and distribution management systems. Automating these systems to be in line with modern project management isn't something DevOPS is going solve. This is systems design and engineering.",2023,Devops is not entry level
donjulioanejo,51,"Question: how are you sourcing your candidates?

I've been (unsuccessfully) trying to hire in/near London for a while now, and generally this is what I see from 90% of applications:

* Indian name
* Exactly the same resume format (like, EXACTLY), only the order is reversed
* Usually around 4 years experience mark
* Grocery list of every single Linux and DevOps technology under the hood
* Experience is usually listed as either WITCH-like companies or some big companies like Verizon etc but when HR talks to them, they were contracted through a WITCH company

Now, when I talk to them, one of these scenarios happen:

* Candidate doesn't know anything and can't answer basic questions about technologies they supposedly worked on for 4 years
* Candidate pretends there are technical difficulties with their camera or screen sharing or internet
* Candidate is absolutely amazing and I'd hire them right away.  We hired one like this.  Literally a different person showed up to work...  (funny in hindsight but WTF moment when that happened)
  * We've started comparing screenshots from the HR video interview and my video interview and usually if the candidate is amazing, it's a different person to the one talking to HR",2023,Devops is not entry level
xorteP,25,">if the candidate is amazing, it's a different person to the one talking to HR

That's crazy. I heard that they pay people to pass their certification, but this is on another level.",2023,Devops is not entry level
mico9,4,not just in London…,2023,Devops is not entry level
Guilty_Serve,1,All of Canada too,2023,Devops is not entry level
molusc,4,Yep the “get your mate to do the interview for you” is rife in India. We now do the same - take screenshots at the start of all interviews and compare them when the candidate starts work.,2023,Devops is not entry level
gatpark,2,">Candidate is absolutely amazing and I'd hire them right away. We hired one like this. Literally a different person showed up to work... (funny in hindsight but WTF moment when that happened) 

This happened to the company I worked at in New York City",2023,Devops is not entry level
LifeNavigator,2,">Literally a different person showed up to work

Does your workplace not have any Digital Identity Checks services in place? Most workplace I've been to in the UK had this in place to prevent this (it included having me record a video whilst saying a sentence on their app, photo of IDs as well of myself).",2023,Devops is not entry level
donjulioanejo,1,Honestly no idea. I’m in Canada. We have a BU in the UK that’s handling most of hiring related stuff.,2023,Devops is not entry level
justin107d,1,On a zoom call?,2023,Devops is not entry level
Any-Connection-1813,1,Your problem is the first bullet point. Stop hiring biggest scam artists and liars the industry has ever seen,2023,Devops is not entry level
MathmoKiwi,1,">We've started comparing screenshots from the HR video interview and my video interview and usually if the candidate is amazing, it's a different person to the one talking to HR

Cheap people (probably the actual person you'd hire, who would show up if you extended out an offer) do the time consuming leg work of getting past the basic HR screeners as they spam out CVs. But then they bring in the more expensive people to clear the final technical hurdles.",2023,Devops is not entry level
LordHarlock,53,"I took a look at all the questions asked and is that really a DevOps position or a SysAdmin role. Outside of the question on how Terraform works, I would have expected more questions around:
- CI/CD
- VCS primarily focused on Git
- Branching Strategies
- Scripting Languages like Bash and PowerShell
- Any experience with programming languages
- Familiarity with platforms like Azure DevOps, GitHub, GitLab, Bamboo, Jenkins (Depending on what organization is using)
- Any familiarity with the major cloud specific CLI’s for Azure, AWS, or GCP.
- IaC tool familiarity with AWS Cloud Formation, AWS CDK, Azure Resource Manager, Azure Bicep, terraform , Pulumi (depending on Organization usage)
- Desired State configuration tools like Ansible, Chef, Puppet, PowerShell DSC",2023,Devops is not entry level
dupo24,6,This.,2023,Devops is not entry level
Deleted Account,116,"I can answer these questions, you still hiring?",2023,Devops is not entry level
Zauxst,75,Nice. Here is 30k a year job with a lot of legacy pearl stuff because were too afraid of trying new tools.,2023,Devops is not entry level
lavahot,37,"Perl, not ""pearl"". Unless you're working on little round things that come out of clams.",2023,Devops is not entry level
New-fone_Who-Dis,7,"Lol, I work in a place like this, they can't transition because their big dogs will not do it, and it's totally unattractive to talent to join or stay very long because why would you learn a language that is so old...saying that, I hear knowing COBOL attracts a very handsome salary these days.",2023,Devops is not entry level
JaffyCaledonia,7,"Hah, I got laughed out of my old CEO's office for suggesting we try transition some of our stack to a more prevalent language because the company was hemorrhaging staff and couldn't hire anyone willing to take on Perl.

5 years later and now I make 4x what I did there and LinkedIn says they're trying to poach CompSci graduates for minimum wage.",2023,Devops is not entry level
New-fone_Who-Dis,4,"I'm just currently finishing up my notice period and starting a new role elsewhere for more money and modern tech/tooling, so hopefully, I'll have a similar story in the not too distant future too.

Current place also likes to lowball and tries to fill the front line with grads, and then don't provide good training to them, so incidents galore...they also like to blame the grads for things they've never been taught/ trained on / touched before, makes zero sense to me.",2023,Devops is not entry level
Deleted Account,7,hell no,2023,Devops is not entry level
AskMoreQuestionsOk,9,The 90s called and want their Perl back. I’m so sorry.,2023,Devops is not entry level
mars64,14,"PERL 5.39.2 released Aug. 20th: [https://dev.perl.org/perl5/news/](https://dev.perl.org/perl5/news/)

Go 1.21.0 released Aug. 8th: [https://go.dev/doc/devel/release#go1.21.0](https://go.dev/doc/devel/release#go1.21.0)

Perl is technically newer than Go today. I'll see myself out ...",2023,Devops is not entry level
MathmoKiwi,1,"It is not much newer than COBOL... 

July 28th 2023: [https://gnucobol.sourceforge.io/index.html#Releases](https://gnucobol.sourceforge.io/index.html#Releases)",2023,Devops is not entry level
TheJuiceIsLoose11,2,Right lol,2023,Devops is not entry level
Deleted Account,204,[deleted],2023,Devops is not entry level
rusty022,144,"Yup. The OP sounds like the kind of guy who spent 10 years as the solo sysadmin for a company of 300 people and is now pissed other people don’t know every single little thing he does. While those types slaved away at underpaid overworked jobs, some of us are specializing into particular roles at places where we never touch half of the stuff he’s talking about. I don’t need to know every single thing about firewalls to be a DevOps engineer. There’s a team that handles networking.

What you should be looking for is someone with some relevant experience, some general IT understanding, and someone with willingness to ask questions and expand their knowledge.",2023,Devops is not entry level
Soccham,24,"In my experience, the guys who were pure sysadmins before going DevOps make the worst engineering decisions because they don’t understand app dev",2023,Devops is not entry level
Redstonefreedom,22,"You're not going to be treated well for that comment, but it's largely true. It's crucial to understand things like git, git flow (or TBD), configuration vars, Makefile or equivalent project scripts files, rebasing, how routes are actually coded & parsed in typical web servers, how you'll initiate stuff in start scripts, how you test in ci to be able to automate continuous integration, and how you'll end up using a db as a prototyping dev.

But is it really actually crucial? Or is that just bad coordination between two peers. 

Truth of the matter is, we don't know how to do DevOps, or what to call it. Imo there are 4 different, totally different, things that ""DevOps"" could mean.",2023,Devops is not entry level
AemonQE,3,"I give everyone one year to get real good with the DEV and decision making part of devops or software engineering if they previously were sysadmins - like me. 

It's not that hard... you just have to use these things and have some seniors around that tell you that you won't get any promotion of you don't have good decision making skills",2023,Devops is not entry level
Soccham,1,"Most companies are abstracted from the lower layers that sysadmins specialize in. It’s not that they aren’t competent, it’s a developer mindset being applied to infrastructure. They lack the first part typically",2023,Devops is not entry level
deafphate,2,"As a sysadmin of 13 years, I agree 100%. There's been so nuch I've had to learn since moving into devops. I love learning new things, but it's been a struggle at times.",2023,Devops is not entry level
Deleted Account,1,[deleted],2023,Devops is not entry level
deafphate,1,"The biggest one for me was containers. I was a Unix and Linux admin for years, so the concept of not having to care about an OS and supporting software took me a while to get used to. I'm getting better but still feel I have much to learn.",2023,Devops is not entry level
Spider_pig448,1,100%. Developers make much better DevOps people than SysAdmins. I would argue SysAdmins make bad SRE's too because they tend to be adverse to change.,2023,Devops is not entry level
Deleted Account,1,[deleted],2023,Devops is not entry level
Soccham,1,More about how software engineers work vs how you want them to work. Old School mentalities around SysAdmin don't transition to the cloud well.,2023,Devops is not entry level
Deleted Account,1,[deleted],2023,Devops is not entry level
Soccham,1,"SysAdmins have historically had to deal with very rigid specifications and implementations of hardware and made the code work with what they had. It was more cumbersome, less easy to test and as a result when a reliable pattern was completed and created most things were jammed into it. It's a big reason why something like Java was so popular. Create your jar file and its now pretty portable and self-contained.   


With the rise of cloud computing DevOps has transformed the way we work with servers, and containers have pushed this even further to the point where we want the hardware to be ""dumb"" and the containers/code to be smarter. Optimizations and abstractions have helped to further this simplification of the ops process and historical operations work has shifted from people in a data center running hardware to a more hybrid role of managing permissions,  creation of strong flexible patterns and an increase in testing. Programming languages have become easier to work with as tools have gotten significantly better, but also so has the tooling to deploy and host websites with ease.   


At a certain point the traditional sysadmin work has become less and less necessary outside of data centers and general knowledge about these lower level systems has become less and less of a necessity for engineers to have. Issues occasionally crop up but for the most part the need to tinker and hyper optimize at the server layer is going away except for companies running their own data centers like old Fortune 500's or Amazon.   


DevOps roles now align more with the principles of Site Reliability and have even shifted towards platform engineering concepts that rely on developers to gain a bit more knowledge of infrastructure and the simplification of already abstracted deployment processes in order to help them code quickly and push changes rapidly while catching errors in the process. These patterns have resulted in massive increases in productivity in engineers and are also why we're paid so well.",2023,Devops is not entry level
Deleted Account,1,[deleted],2023,Devops is not entry level
Soccham,1,"I started as a php dev, went to node, then more DevOps work. I think modern PHP is awesome compared to version 5.7. Don’t discount the work you do there. I ended up in DevOps because the problems are much more interesting than repeating crud patterns over and over 


Most of the Linux things you’ll deal with are now within docker containers rather than virtual machines, which make it easy to mess up, repeat, find how other people have done things and more. We just built our a docker image pipeline that adds nginx and some custom scripts for Datadog and other tools to a few different flavors of docker node and docker php and traditional sysadmin things were still needed, but still not highly in depth. 

There’s a need to understand nginx basics, but you don’t need to manage 30 nginx configs on a single server anymore. It’s much easier to manage 30 docker containers each with their own nginx. 

Most things related to pure Linux are getting abstracted and that knowledge is transferring to terraform and AWS or other cloud providers instead. Setting up ECS with Fargate and codedeploy is much easier and much more reliable than running Linux commands by hand and significantly more repeatable. 

Networking is still important, most of that has just transitioned to a single guy doing the bulk of it and setting it up to be repeatable.",2023,Devops is not entry level
irosesDoMar,1,">10 years as the solo sysadmin for a company of 300 people and is now pissed

this happens so often ""you're only competent if you have the exact same skills as i have""",2023,Devops is not entry level
mico9,16,"My sample is not large - about 50 engineers total, but i’ve yet to find the unicorn that is able to learn OS, networking, basic hardware fundamentals etc. if they hadn’t had the ‘opportunity’ in their 5-15yr career.",2023,Devops is not entry level
Deleted Account,27,[deleted],2023,Devops is not entry level
mico9,1,"I’m just saying, i don’t know anyone who was bad with computer fundamentals despite senior years exp, to have gotten better in it.",2023,Devops is not entry level
Buffnick,11,"totally this.  I mean agree that people with NO experience who look to jump in before they build things are annoying (you mean you don't even have a shitty personal project you're working on to show me?), but I think the structure of evaluating candidates needs to change.  We have to face the reality that engineers simply don't need to be encyclopedias anymore...gpt4 is pretty great... what happened to give giving a working problem and asking them to solve it? and then explaining the results?  I like to focus on what a candidate CAN do. Not ask questions that can be solved or taught in 5 minutes",2023,Devops is not entry level
Rorasaurus_Prime,3,"Respectfully, I do find that quite surprising. Maybe that's why so many people get confounded by Kubernetes as it requires a certain level of knowledge regarding most of these subjects.",2023,Devops is not entry level
Acrobatic_Cycle_6631,6,"Exactly this, someone who shows a willingness to learn is more important that what happens when you go to google.com.",2023,Devops is not entry level
sydpermres,-2,What was the alternate you used for terraform and which country/city? It'll be interesting to understand why there is an alternate preference.,2023,Devops is not entry level
Mundane_Elk8878,1,Had to scroll way too far to find this comment. Trivia questions are the worst way to screen a candidate. A lot of devs that interview other devs don't understand the value in open ended questions,2023,Devops is not entry level
BradleyChatha,21,"I guess the question is more around what each company needs from its DevOps engineers, right?

Personally I'd love to work in a hybrid environment, for a company that has more advanced needs than ""throw it into K8s/a serverless platform with a database on the side"".

But in reality even though I don't get to really exercise my networking (beyond the very bare basics that cloud platforms haven't fully abstracted away) or linux admin skillset very much, I still bring worth and productivity to the table for the two fully cloud based companies I've been with.

On the other hand if the company was on-prem or a hybrid of on-prem and cloud, then I imagine the sysadmin questions you're asking would be a lot more relevant.

Really though I'm basically talking out of my arse due to my lack of experience, but I like this train of thought as a hypothetical so wanted to bring it to discussion.",2023,Devops is not entry level
xorteP,11,">I guess the question is more around what each company needs from its DevOps engineers, right?

this.  


The problem is that everyone seems to have its interpretation of what a ""devops"" is and what his responsibilities are and what he should know.",2023,Devops is not entry level
deeveewilco,5,Bingo. I hate the term devops more than I hate the term full stack engineer.,2023,Devops is not entry level
Deleted Account,5,"1000% this. A ""devops"" engineer can be a glorified tool admin of pipeline tools, a person who does mostly on prem server stuff, K8's specialist, a SWE with some ops backgroud, a AWS expert, or a combo of all of these. 

It's ridiculous how wide the space is and throw in SRE on top of all this and you can't know eveything.

Know enough and how to troubleshoot an issue.",2023,Devops is not entry level
Drauren,1,"They also all want to pay like 100k.

IMHO the companies that expect the most pay the least for some reason.",2023,Devops is not entry level
serverhorror,142,"Unpopular opinion:

We just like to say it's not entry level because we all suck at teaching and hope people will simply nerd out at home and learn on their own.",2023,Devops is not entry level
jews4beer,59,"You aren't wrong - albeit a little more callous than I would have worded it.

We expect people who are interested in Devops to have a drive to teach themselves. It is not a job for people who need excessive hand-holding. Because a lot of the time you'll find yourself working on a novel concept and having to think outside the box - and if you need your coworkers to do all the thinking for you, you just become dead weight. 

It's not so much expecting them to nerd out *at home* and teach themselves. But there is a certain expectation for them to nerd out *at work* on their own.",2023,Devops is not entry level
colbyshores,7,Both really depending on the position.  Like I’m currently converting cloud formation to terraform but I’d much much rather be working with Kubernetes so I have been working with Argo and Kube in my homelab after the pivot in priorities.,2023,Devops is not entry level
jaskij,15,"I will learn everything if I can do it on the clock.

From a self taught embedded Linux dev, who's here wondering how to put containers on our devices.",2023,Devops is not entry level
tevert,15,"No, you need to have _some_ kind of knowledge base to get started from. You can't stop in the middle of explaining how to troubleshoot a deadlocked DB process with a tangent on how TCP connections work or application exception handling. This job involves skating across a very wide swath of technologies, and having some understanding of everything you touch. Trying to teach someone _everything_ from _zero_ is ..... a full-time teaching job. 

Moreover - what happens when they're ""on their own""? We _still_ have to spend a huge portion of our time learning whatever new thing we're stumbling into today, and we can't always have a teacher for every technology. You _have_ to be able to pick up new things and learn them yourself.",2023,Devops is not entry level
serverhorror,7,"You're validating that we are bad at teaching. You don't leave an apprentice alone and you don't give them the feeling that they can't call someone.

The mistake was when you let them work on an unbounded Problem in the first place.",2023,Devops is not entry level
tevert,6,"No, you just entirely ignored what I said, but go nuts buddy.",2023,Devops is not entry level
Deleted Account,2,"TBF, I think the point here is for the teacher and the student to both put in a high level of effort",2023,Devops is not entry level
laurayco,41,"The lack of entry level positions for SWE is a problem. Full stop. The solution to this is unions, and better work culture across the industry.

Devops should not be an entry level position. Full stop. You need knowledge and experience to do devops. Ideally, knowledge and experience you get by working with a senior at a company which encourages upskilling and mentorship.",2023,Devops is not entry level
Deleted Account,17,Good luck getting Muskbros to unionize.,2023,Devops is not entry level
laurayco,17,"yeah, i know. god, i know.",2023,Devops is not entry level
serverhorror,10,"Unions are well established in a lot of countries, believe me, unions are not solving that kind of problem. No union is a US problem (among other countries), they are a solution for a different problem than missing training.

Every job has entry level positions that you're being trained for. Pilots, surgeons, plumbers, electricians, ... -- it's a problem of training, not seniority.",2023,Devops is not entry level
laurayco,5,"You cannot solve the problem of training without unionizing because the problem of training is caused by business incentives, and workers are the only ones capable of pushing back on this. This isn't ""we're bad at teaching"" this is ""nobody cares to teach."" Pilots, plumbers and electricians are often unionized or independent contractors. Surgeons also require years of training under a more experienced professional. You are not making the point you think you are making.",2023,Devops is not entry level
serverhorror,8,"So, we have unions here and almost everyone is part of it. Why is the problem not solved then?

> Surgeons also require years of training under a more experienced professional.

Exactly, I didn't say that it works in a few weeks.

Plumbers, electrician, butcher, ... (essentially every job) has a 3 year training schedule as an apprentice before you're allowed to call yourself ""Geselle"" (best translation would be fellow, the literal translation would ""journeymam"").

After that you can spend a couple more years and after a bunch more exams you are allowed to carry the title of ""Master"".

So all the jobs require years of training. Now read the first sentence of that comment again. I am very much making the point I want to make.",2023,Devops is not entry level
Deleted Account,4,"Our team has been understaffed for nearly a year, business won’t give us the budget to replace the person who left. It’s not that nobody *on the devops teams* wants to teach, it’s that the business won’t give teams the resources they need to have the bandwidth to teach anybody

We’re all too busy doing the work of (workers x 2)

Edit: I agree with you on unions",2023,Devops is not entry level
laurayco,2,"I'm in a similar position about understaffing. By all means I'm doing the work of at least a senior engineer on a team with two developers at a very large company. I think overall I might have more experience than my coworker but I don't have the bandwidth to train him (honestly as far as I can tell he doesn't need much anyways he's very smart), and the architect I'm working with is more my peer than any kind of mentorship, but my job title has essentially been ""junior engineer"" for a while. I guess I phrased ""nobody cares to teach"" ambiguously but you understood what I meant. I was trying to say ""nobody has the job of teaching because (employers) don't care about it."" The level of experience at my office is so varied. I've had forty minute meetings with ""senior engineers"" who told me my code was broken. It was code that uses a public / private key to authenticate with an API, and they were using a key different from the public key they sent to the API. This API had very clear documentation, too. I've also worked with people who contributed majorly to maven.

A few years back, the closest person to a mentor I had told me that in general businesses were trying to move SWE from an almost artisan / highly professional model to an assembly line model analogous to manufacturing and I think that is the most helpful lens I've ever observed this phenomenon through.",2023,Devops is not entry level
piggahbear,1,"You don’t have to worry about software becoming an assembly line because if they could’ve they would’ve by now. It’s about the only thing that *has* resisted such treatment and it’s not the people doing it, because they would definitely have relented long ago, it is the inherently unpredictable nature of software engineering. It has this unusual creative component and half of the “work” takes place in your subconscious.  It is why we don’t have “Board Certified” software engineers. The idea is laughable to anyone that knows. 

You can’t “teach” someone all this stuff. The only way to learn so much so fast is by yourself. At my first job i spent the first month stuck at the same point, zero forward progress for weeks, I thought I was getting fired every day. The solution amounted to “just skip that part” and my mentor knew it every day but never said anything. The amount of shit I learned trying to figure that out was staggering and you never",2023,Devops is not entry level
ph1294,1,Full stop?,2023,Devops is not entry level
hrng,0,"The solution is people entering via (good) helpdesk roles - learn people skills, learn how to troubleshoot, get exposure to wide varieties of tech, specialize from there. SWE _shouldn't_ be entry level, just like DevOps shouldn't be.",2023,Devops is not entry level
Deleted Account,2,"lol wut? SWE shouldn't be entry level? please tell me what position i should do first? help desk? you programming api's in help desk?

sysadmin's are in another world...",2023,Devops is not entry level
hrng,0,"> please tell me what position i should do first? help desk?

yes",2023,Devops is not entry level
Deleted Account,2,oi vay.,2023,Devops is not entry level
DatalessUniverse,9,"DevOps Eng role requires prior experience as System Admin or SWE … so no DevOps is not a bootcamp/CS grad role. I can’t teach a CS grad how to software engineer, run Linux commands, use docker, and CICD… they need SOME prior experience to function at a basic level.

No different than full-stack engineers needing prior frontend or backend experience, though that role too has been watered down.",2023,Devops is not entry level
ThroawayPartyer,-2,">I can’t teach a CS grad how to software engineer, run Linux commands, use docker, and CICD… they need SOME prior experience to function at a basic level.

What? If someome is a CS grad (and even if they aren't), they are perfectly capable of learning all of these things within a few months",2023,Devops is not entry level
ampersandandanand,7,"Here, I think you dropped this: /s",2023,Devops is not entry level
ThroawayPartyer,1,"I am speaking from experience. I dropped out of a CS degree, learned all of these things within a few months, achieved two cloud certifications then got hired as a junior DevOps Engineer. I know many other people who have done the same, some of them CS grads.",2023,Devops is not entry level
deeveewilco,1,"I've operated as a 'full stack engineer' at almost every company I've worked for, and at some point it really hurt my career because I end up working across so many frameworks at mid to shallow level that I've had difficulty finding specific roles outside of a startups need for a generalist. It's quite frustrating.",2023,Devops is not entry level
PersonBehindAScreen,4,"Im 7 years in and no longer junior but it all still irks me. I worked my way up from helpdesk. It’s getting real old hearing the older people talk about how much more juniors today have to know vs back then: the IT equivalent of looking the CEO in the eyes and shaking his hand and getting an instant job. Ironically those same people who’s very foundation was established by training and mentorship, refuse to do the same and just expect you to figure out the things they were mentored on prior.

And adding the obvious: “Not everybody”",2023,Devops is not entry level
serverhorror,1,"Y'all, I'm old af. At least have the decency to not trigger me when agreeing with what I say 😂",2023,Devops is not entry level
Xophishox,9,"But the people i want to hire, are the ones that will nerd it out and learn at home because they know how the shit actually works, not just someone that got handed a cert for watching youtube videos.",2023,Devops is not entry level
serverhorror,26,"Then hire seniors. 

The problem is, we are running out of seniors, globally. That's why the money for senior levels  is so good.",2023,Devops is not entry level
Xophishox,10,But i need an intern who's life i can make insufferable like mine was /s,2023,Devops is not entry level
panacottor,2,"Where is that senior money? Where I’m at they decided everyone can have the senior title so we get a range from “knows basic programming” to “15 year sysadmin/backend/devops ops and dev all in one” under the same title for about the same pay.

Seems the criteria for moving on is friends and smiles.",2023,Devops is not entry level
fullstack_info,2,"I mean... yes. That's about the gist of it. I spent a few years in app dev, while learning networking and sysadmin. I definitely spent a massive amount of my own personal time (and what money I had) experimenting with new things at home while building a home lab. After you set it up manually, and put the effort into understanding what and why something is configured in a certain manner, then you can go to work towards automating it. 

I definitely think having a home lab to build and make things work on various platforms contributed greatly to understanding how cloud infrastructure works. Every person I've met, or worked with directly had a passion for technology and a curiosity as to how things work. Enough that they spent at least a few hours a week working on expanding their own skill set.

I think a major issue now is that companies want a ""one-stop shop"" for anything and everything that's not solely software development. They have an expectation that they just need ""a couple of devops engineering, or an SRE to make the code run reliably"", so the developers just write code that works.... on their machine in visual studio...

Sorry for the rant; I figured since we're venting, I might as well jump in lol!",2023,Devops is not entry level
Zauxst,2,"This hits home quite a lot. I've seen so many good engineers that have negative social skills and eq. They are effectively bad teachers, and you can't rely on them to do a proper knowledge transfer or training of other junior to mid engineers. 

I'm so glad I'm no longer in the shoes of a junior these days. I would've been depressed as f... luckily, I had a bad mentor when I started out, so I learned exactly what to not do and, most importantly, to take my time and explain an issue and their potential resolutions...",2023,Devops is not entry level
Deleted Account,0,"100%. never seen a bigger group of gatekeepers in computer world than DevOps ""not entry level crew""

just old school mentality about thinking everyone needs their face rubbed in the dirt before getting an opportunity.",2023,Devops is not entry level
brajandzesika,44,DevOps is where you combine knowledge of a developer and operations... thats why its not an entry level- your entry level is for you to start either in dev or in ops...,2023,Devops is not entry level
Deleted Account,-18,devops is whatever the company says it is... there is no consistency.,2023,Devops is not entry level
brajandzesika,18,"Doesnt matter, it's never meant to be a position for a noob...",2023,Devops is not entry level
Deleted Account,-19,says you. my experience says otherwise. enjoy your gatekeeping. glad i don't work w/ any of ya'll.,2023,Devops is not entry level
deeveewilco,2,Whoever downvoted this has had the pleasure of working for decent companies I guess. You're not wrong at all. Dev ops is such a vague term to managers.,2023,Devops is not entry level
Redstonefreedom,2,"You're right, when I interview I have a standard question I ask which gives them 4 definitions and asks them ""so which one better fits what you mean when you say 'devops' ""?",2023,Devops is not entry level
Deleted Account,2,"yea, term has been completely bastardized. people need to just let go of devops as a culture vibe.  And ironically the interview q's OP asked are all Ops...arguably even, all sysadmin.  there is no dev anywhere to be found",2023,Devops is not entry level
alwaysleftout,1,A majority of these questions are probably outside the area of concern that someone from an exclusive background would really know,2023,Devops is not entry level
brajandzesika,-1,"Not to brag, but I work as DevOps and (believe? / hope?) can answer them ALL ... I am pretty sure guys I work with would be able to answer them too, and probably most of the people here who work in that field, they are all just a fundaments to grow your knowledge further...",2023,Devops is not entry level
serverhorror,5,"Well, I consider myself very oldschool. Yet here I am saying it is a training issue.",2023,Devops is not entry level
Deleted Account,0,one of the few enlightened ones then!,2023,Devops is not entry level
serverhorror,3,It comes with the age...,2023,Devops is not entry level
mirbatdon,1,"I would agree with you assuming there is a fundamental level of understanding how things are working conceptually, which is what I think OP is venting about.

It's exceedingly difficult to teach someone calculus when they don't understand arithmetic, is the best analogy I can come up with at the moment.

I agree devops can be trained up but in my decades of experience it's damn near impossible to do it at reasonable pace unless the person has some solid foundation of either dev or ops to relate new experience to, rather than fuddle around with years of rote memory trivia in their head and die when troubleshooting independently.",2023,Devops is not entry level
Deleted Account,2,"OP is venting about trivia questions though.  if the question was framed as ""how do solve 'x' problem"" and the interviewee answered ""well, i'm not sure how to do it in linux but maybe i would see what processes are running and check disk space... blah blah"",  that is 100% more valuable than some dude just knowing \`ps\` is the command.   contrived example but, u get my point i hope..",2023,Devops is not entry level
serverhorror,1,I'd say 2 - 3 years is the timeframe we should target. That's the same as most other jobs here.,2023,Devops is not entry level
AskMoreQuestionsOk,1,"Agree. Our systems are really complicated and just require significant training no matter what level of experience you have. There is just a lot to know. I don’t know that you can cover all the ground that I did when I was in school and also cover all the new stuff in college, let alone the specific stuff we need here which is different from OPs. So we have a healthy internship program and a lot of judgement free mentoring, pair programming and training sessions for everyone. It’s extremely successful and when interns come back to us when they graduate, they are ready to roll.",2023,Devops is not entry level
Soccham,1,It’s not old school. It’s literally a combination of two  separate focuses.,2023,Devops is not entry level
Deleted Account,2,"not talking about the concept of devops. referring to the sysadmins who all think they're the holy grail and don't realize it's possible to bring people up from entry level in devops.

same vibe that you get from old hardened tradesmen except those guys actually understand the role of mentorship and training. so they might give you a hard time but they acknowledge that people can learn on the job and teach.

People should be clamoring for juniors... you get unpoisoned minds who aren't stuck in their ways(the irony!) that you can bring into your system and basically indoctrinate them into your processes and teach them the ""right"" way without having to break a bunch of bad habits. ya know, make em grumpy and elitist like the others here .",2023,Devops is not entry level
Drauren,1,"Not only do we suck at teaching, nobody wants to do it. We all want to just hire someone who has already done it and pay them okay money.",2023,Devops is not entry level
ListenLady58,1,This is absolutely the case where I work. In my interview they basically lied and said there would be training and shadowing. The dude who “trained” me always worked out of the smallest window possible making it near impossible to follow what he was doing. I’d ask him to maximize it and he’d get visibly irritated but do it. But then it always at some point reverted back to the minimized size. Leaving my work very soon. Fucking pricks.,2023,Devops is not entry level
NeedTheSpeed,14,"This term is so broad that you cannot generalise this way. I'm junior DevOps but more on the Dev side and honestly I don't know how to answer couple of those questions but I know the dev side of things and learning ops side of things. 

Also, cus this term is so broad rarely 2 roles are similar in terms of tasks scope from my experience it's much less consolidated than SWE roles. This days it's so abstracted away that you can have minimum knowledge in networks and manage k8s clusters just fine.",2023,Devops is not entry level
Hydridity,2,"with minimum knowledge of those things, you cant manage nor operate them

You may be simply capable of using them.

If networking breaks, it can go as deep as investigating problem on hardware level on vendor’s network card

When pods cant lookup service names its time to think about how coredns in cluster works

and so on",2023,Devops is not entry level
NeedTheSpeed,7,"I agree but still, i don't get it why can't you learn along the way like in swe job. Sure infrastructure is more important but as a junior I'm just assigned to lower priority projects when I can make such mistakes and learn in my own pace how things work.

But nonetheless I know what I knowledge gaps I need to improve.",2023,Devops is not entry level
Hydridity,4,"I agree with you too, you need somewhere to get those skills.  
The problem in OP's case is he thinks that there is no such thing as devops junior.  
And does not specify what skill lever for his position are they looking for.",2023,Devops is not entry level
NeedTheSpeed,2,">he thinks that there is no such thing as devops junior

There absolutely is but this field in recent years was highly dominated by used to be sysadmins. Now since strictly sysadmins roles are dying there is only devops basically which is, as I said, really broad term and one time it means that you develop more and do infrastructure and ci/cd from time to time and the other time it means that you focus strictly on infra, ci/cd, networks etc. 

Also regarding the Linux part of the post, in my company, many of the sysadmins know little to none about it because they spent 15 years plus on Windows server ecosystem, they are definitely experienced and could grasp that quickly though.",2023,Devops is not entry level
LifeNavigator,1,">why can't you learn along the way like in swe job

I'm currently a junior and this is how my workplace are raising DevOps engineers. For tasks I can't accomplish  because of lack of knowledge/experience I'm simply given some time to learn the key concept, then paired up with an experienced engineer to learn how to apply it.",2023,Devops is not entry level
Deleted Account,39,[deleted],2023,Devops is not entry level
dhsjabsbsjkans,9,You can answer the one about what happens when you make a request to Google.com? It's a strangely esoteric question. It's also kind of ambiguous. I wouldn't know how to answer that.,2023,Devops is not entry level
BlueHatBrit,26,"I think they're really asking ""explain the process of a HTTPS request""",2023,Devops is not entry level
namenotpicked,14,"This and how DNS gets resolved and stuff. Because then you'd understand how to troubleshoot routing to your sites. Also. DNS is ALWAYS a popular topic because ""When it's suspected it's not DNS, then it's always DNS!""",2023,Devops is not entry level
AemonQE,1,I think certificates are worse than DNS.,2023,Devops is not entry level
Smelly_Cyrus,14,It’s a super popular question,2023,Devops is not entry level
dhsjabsbsjkans,0,Really? What a weird question.,2023,Devops is not entry level
ThroawayPartyer,10,"There's a GitHub repo that tries to answer it really in depth:
https://github.com/alex/what-happens-when",2023,Devops is not entry level
rudigern,4,Lost it when the first step is “g is pressed”,2023,Devops is not entry level
khobbits,1,"I do like the question.

I got asked it in my first ever interview out of university.

I didn't quite hit the detail in the above, but i least said something like:

""When you first start typing in the url bar, the browser will check your recent typed history, and give you a list of previously urls, and the option of doing a google search"".

You live this every day, right?  It's literally say what you see.",2023,Devops is not entry level
dhsjabsbsjkans,2,"Now that is a better question. What OP posted is a less explicit version. If the full question was stated like on GitHub, I could answer that. 

The shortened form leaves much to the imagination. What type of request? Am I using a browser, or am I using curl? 

This helped.",2023,Devops is not entry level
lGSMl,2,"I believe they would expect you to go through the OSI model, which I also think any DevOps should be able to do, not in crazy details, but up to what happens on every layer briefly.",2023,Devops is not entry level
Sir-Kerwin,2,"Yeah, it has multiple answers. Something as simple as my NIC sends some magic bits to the internet to my computer sends a frame to my switch requesting the location of my default gateway so that it can then send a frame containing the packet utilizing the domain name of [Google.com](https://Google.com) to then be sent off to a DNS server to be resolved into Google webserver's IP, etc.",2023,Devops is not entry level
FML_Sysadmin,2,"I would first ask them how deep they want to go and how detailed of answer they want and have at it. I’ll bring you from layer 1 to 7 and back. None of the OPs questions are really that difficult for me.

I have the same experience with candidates. As IT has grown in complexity it’s becoming more of a disciplined occupation not unlike healthcare or law. This has necessitated increased specialization and shrinks the ability to achieve the broad specialization in multiple content areas for all but the most ambitious.

I am speculating but I would think most of the folks that do this well are the passionate graybeards that got into the industry when, and has already been mentioned you had to know how everything worked.

This thread has made me contemplate my career choices as a said graybeard.",2023,Devops is not entry level
speeder-man,2,"That is the point of the question, it is ambiguous on purpose. It allows you to demonstrate your knowledge from the time the key is pressed to trigger an interrupt to the time the html/css/js is rendered.",2023,Devops is not entry level
dhsjabsbsjkans,1,"If you look at the full context of my reply, u/ThroawayPartyer replied with a github page that has the full question. I am not familiar with this interview question. The shortened version of the question did not resonate with me. The full question makes sense.",2023,Devops is not entry level
lavahot,-1,I actually know enough about how Google's infra works to fudge an answer.,2023,Devops is not entry level
BrownCarter,1,It's all dns,2023,Devops is not entry level
jantari,1,"Sure. First I'd ask if  The short anwer is ""you get a 301"" (assuming a GET request). The long answer is .... very long, but if that's the one they want to hear why not.

I'd have more trouble explaining in depth how terraform works without misspeaking or just having to say ""I'd have to look that part up again"". Like I doubt I could even explain the DAG accurately on the spot, first try.",2023,Devops is not entry level
InvisibleReflectionz,1,"I'd assume that most people who work in ""DevOps"" and ""SRE"" would want to know how to answer this.",2023,Devops is not entry level
autom4gic,39,"Probably because you are doing ""Ops"", not ""DevOps"".  Where is the Dev part of any of that?",2023,Devops is not entry level
irosesDoMar,5,Terraform scripts. Maybe.,2023,Devops is not entry level
silentyeti82,5,The Dev bit goes ON TOP of the Ops...,2023,Devops is not entry level
tevert,6,"If you can't ops, you can't devops.

Dev is not a substitute for ops.",2023,Devops is not entry level
BestNoobHello,2,How can you DevOps if you don't know basic networking and Linux commands? What if there was a network issue then who do you call? The janitor? How about when a VM's CPU spikes to 100% every 2 AM? Do you just wake up at that time and look? How do you check logs? How do you monitor metrics?,2023,Devops is not entry level
SuperQue,34,"I agree, DevOps/SRE is at a base a higher level skill job ladder.

But, some of your questions are a bit too trivia question oriented. Depending on how you ask them.

I used to ask this question in interviews: ""What's the difference between a hub and a switch?"". If the candidate didn't know, I would explain it to them, give them an idea on how the CAM table works, etc.

Then I would see if they could extrapolate how things worked, like, what happens to a packet that hits a switch for the first time. See if they could reason about the newly gained skill.

I'd rather have someone with critical thinking / reasoning than someone who has memorized specific tech.",2023,Devops is not entry level
tcpWalker,12,The difference between a hub and a switch is people don't make fun of me when I plug a switch into an ethernet jack.,2023,Devops is not entry level
Deleted Account,7,You are the kind of person i want to work with,2023,Devops is not entry level
Redstonefreedom,3,"That's actually a great interview technique because you can dynamically adjust & normalize the results. Because when we solve problems, our efficacy mostly depends on ""how fucked am I if given a problem close to this domain"". If you understand it from the switches POV, you can extrapolate to frames & packets. Or if you know it from the OSI POV, you could go the other way around.

We sort of set these ""caches"" of knowledge for ourselves around the entire universe of computation because it's impossible to learn everything. So we have to strategize.",2023,Devops is not entry level
darthvader69_aj,2,"Damn, you're good!",2023,Devops is not entry level
Deleted Account,1,[deleted],2023,Devops is not entry level
SuperQue,2,"Well, that's an old question, I don't ask that one anymore. I have newer questions that are less hardware centric. :-)",2023,Devops is not entry level
__warlord__,1,"The difference is that hub sells beers and chips and a switch can turn my lights on.

$130,000 please",2023,Devops is not entry level
Electronic_Ad_1527,11,"Not London based and also not really a devops engineer. My title atm is senior software engineer on half the salary you're offering (in the UK too). Not gunna lie, I'd struggle to answer half those questions. Granted I'm perhaps a bit young/inexperienced to be able to answer this stuff in depth. But on the other hand, I handle the terraform/AWS/Scripting/K8S/CI/CD etc where I'm at. 

Been sysadmin before K8S/Docker was all the rage. I will add tho, only been here 4 years. Prior to joining I didnt know shit about most of this stuff. Had never used Docker, K8S, Ansible, Terraform, AWS, none of it. Just straight bash scripts on some dedicated servers. Given a fairly decent chance I'm fairly sure you'd be able to get someone who'd manage to get the ball running fast


Atleast for me, the answers for these would be:
1) a ""client"" requests a port from their OS, (if its a hostname) then it does a DNS lookup to get the IP address, opens a TCP or UDP connection to the destination server, does the negotiation and begins sending the request/data when the ports writable 

2) Common ports would be the ports that are standardised. People know what they're used for since everything uses the same one. E.g. HTTP on 80, HTTPS on 443, SSH on 22 etc

3) ps -ef to see what's running and if u can spot anything unusual, top to see if something seems to be using too much. iotop to see if maybe its Disk IO being used too much

4) This is really just an extension of 1 right?
5) firewalls, not my thing. IIRC, the stateless comes in from how the packets are read or something and then firewalling happens based on that. 

6) Web server, again an extension of 1 but in reverse. I get it, but perhaps choose a different question? But I digress, opens a TCP socket in listening mode. Waits for the client connection from 1, when it receives a requests it typically kicks it off to another worker to take over the receiving socket, handle, (and depending on HTTP KeepAlive, close it or keep open)

7) df -h 
8) DNS? I guess I see the point of this one. Essentially a server with a database of records of different types. A goes to an IP, CNAME is an alias etc. When it receives a request it responds with the requested record 

9) How terraform works, this is a godawful question. It uses ""providers"" to connect to infrastructure providers. And they provide datasources to read data/hardware/resources and resources which allow to create/modify/destroy those items. And all of this is tracked in a state file so that you can start on a fresh account and spin up an exact replica of what was deployed to the 1st acc.",2023,Devops is not entry level
Deleted Account,66,[deleted],2023,Devops is not entry level
Deleted Account,40,"I would say this stuff is expected to be known by anyone in the role, not that it's a focal point of the role. The K8s/containerized stuff is the job, the base level knowledge of basic sysadmin fundamentals should still be strong and required.",2023,Devops is not entry level
Ebrithil95,11,This 100%,2023,Devops is not entry level
zeex,14,"it is insane how many people actually know nothing about how systems work and are even proud of it to some extent. When there is an issue in the system that person is useless and is only useful in using a software someone else created. That is called a _user_. Devops engineer is supposed to be able to create a high/low level software, and be a sysadmin, while being able to connect multiple teams together, promote culture, etc. Not.fucking copy paste yaml files. I would replace this person woth a script. This is a minimum senior / principal position by default. At my company these fundamentals are known even by the customer support team. 
I am not getting paid enough.",2023,Devops is not entry level
Ebrithil95,11,It baffles me every day how many developers i interact with that dont have a fucking clue how the internet works. They tell me something is wrong with the application i just deployed while the browser clearly states an NXDOMAIN error and no its always the cluster or application not working never their stupid dns cache acting up,2023,Devops is not entry level
Deleted Account,14,"yea, all these q's say nothing about how a candidate thinks. easy to learn concrete shit.  how do they handle abstract problem solving.",2023,Devops is not entry level
panacottor,15,"I’m sorry, but there’s no abstract problem solving happening if you can’t understand how a request gets sent to an endpoint.

As a software or devops engineer, I spend days re-teaching out senior and staff engineers OSI layers. Even have a tool to debug their endpoint automatically between DNS, connectivity issue, TLS, request headers, …


The industry’s bar is very stupidly low and the mass effect of people without basic skills to run services is terrible. No amounts of devops shift left fixes these services in terms of designs or availability.",2023,Devops is not entry level
mico9,11,"true, some of this thread seems to confirm the belief, that there are entire ‘devops’ departments who, cumulatively, couldn’t get a home router and a machine going, with a domain name and a website up, if their lives depended on it.
it’s 4 departments.",2023,Devops is not entry level
Deleted Account,-1,"r/devops, where elitists come to whine.",2023,Devops is not entry level
TwiliZant,3,"> yea, all these q's say nothing about how a candidate thinks.

How do you evaluate that, what type of questions do you ask?",2023,Devops is not entry level
Deleted Account,4,"more art than science i think but, we have had pretty good results over the past 2yrs.

the usual(or maybe not). we keep interviews extremely casual and do not make them adversarial. we get people talking, feeling comfortable. small talk for a few minutes.  ask for background, etc. we talk a lot about what we do, what we're working on. what our problems are, what type of stuff you'd be doing.

get all that stuff out of the way. focus in on specific experiences on the resume, ask deeper and deeper questions, technically and more abstract about how they solved a problem, why they chose x over y? did you consider z? why or why not... typically this will organically lead into unexpected places w/ good candidates. BUT! you have to watch out for the bullshitters here b/c some people are very good hand-waving over the technical while still sounding like they know what they're talking about.

people will slowly reveal their understanding of fundamentals and whether or not they can apply that. where it gets good is if they can make connections between what they've done in the past w/ what we're doing and riff off that.

we also have a small take home (takes a few hours maybe) that we go over w/ candidates and they walk us through decisions and why they did what.

this is not to say we don't check technical knowledge but we don't do it by asking if you know x cmd.   We'd rather you know what to look for over just knowing the command to use so you can look there. you can google the cmd in 2 seconds...

last person we hired had much more generalized experience but his way of thinking was much more in line with how we solve problems.  His competition was extremely ops heavy(not a bad thing) except his resume and his conversations were all highly focused on very specific tasks, never mentioning(or understanding) how these tasks tied into the larger project. more so like he just grabbed tickets and closed them.

we hire for people who see big picture and can figure out how to get things done over the most technically solid candidate. 

there's really only one position we've required deep deep technical knowledge in and that's b/c it was a very niche specialty subject that we needed someone to have deep knowledge in.",2023,Devops is not entry level
TwiliZant,1,"Thanks, that was really helpful.",2023,Devops is not entry level
DensePineapple,1,If you don't know the concrete shit you're not qualified.,2023,Devops is not entry level
Deleted Account,1,didn't say you don't need to know any of it. point is I don't think it should be the priority or only factor in an interview... which OP's interview q's over index for imo.,2023,Devops is not entry level
DensePineapple,1,It's a pretty simple way to rule out people who don't know the basics.,2023,Devops is not entry level
SticklyLicklyHam,-4,"Half of this stuff doesn’t matter? 

It matters when your application is down and you’re losing thousands a second.

Paying someone that much for them to have to Google such simple things is an utter embarrassment. Face it. It shows a lack of knowledge and lack of experience.",2023,Devops is not entry level
Deleted Account,20,[deleted],2023,Devops is not entry level
mouzfun,9,"Do you think a person who doesn't know how DNS works or never ran `ps aux` outside of reading guides from the internet would figure out how to debug applications with stack traces? (God forbid those stack traces have DNS errors in them :) ) Or how to debug network connectivity? Or everything else you've described?

I think *in theory* you don't need all of those to do all of what you've described. In practice, I haven't seen it once. And i have a reasonable tenure in the industry (about 8y)",2023,Devops is not entry level
Deleted Account,5,[deleted],2023,Devops is not entry level
megoyatu,2,"You mean aux, without the hyphen, right?  :-P",2023,Devops is not entry level
mouzfun,3,"We were talking about hiring for ""devops"", whatever it means. Were we not?",2023,Devops is not entry level
Deleted Account,1,[deleted],2023,Devops is not entry level
mouzfun,2,"They are not hiring for an entry position, they are offering senior level salary for a company two or maybe even one tier below FAANGish ones. At least if the UK is similar to continental Europe, and I do not remember UK being on US level compensation, so...

I agree with you that just straight-up trivia is dumb, I usually go over the trivia anyway, but in an open-ended way (how would you find an offending process/socket/ or something to that effect) just to probe the knowledge and add it my overall picture.

The OP also did not say that he does straight up trivia, he also did not say that's the only questions he asked, so he might be almost as frustrated with people not knowing architecture or programming, but decided not to went those specific issues.

I'm actually very interested in learning about the ""good"" ways of doing interviews. Searching for it in the internet is pointless, you might as well search for penis enlargement pills, even if there were there you could not tell them apart from fakes. I ended up just basically doing free-flowing conversation about the candidate ex gigs + a couple of open ended probes into the areas of expertise he posses (or lacks)

And learning ""on the job"" is pretty hard when the process is so time-consuming and due to low volume you can't really learn from mistakes/wins",2023,Devops is not entry level
Deleted Account,3,[deleted],2023,Devops is not entry level
Deleted Account,3,kubectl delete pod... :),2023,Devops is not entry level
Lower-Junket7727,30,"Aside from the last question, these are questions you would ask in a linux sysadmin interview.",2023,Devops is not entry level
xorteP,9,">Aside from the last question, these are questions you would ask in a linux sysadmin interview.

I'm getting interested in the ""devops"" role and started learning about it.

I got confused by the interview questions presented by OP. I got demotivated because if that's what is expected by a devops, I would rather not be one.

Glad to see some people don't feel aligned with OP.",2023,Devops is not entry level
Deleted Account,4,[deleted],2023,Devops is not entry level
xorteP,8,"Why not ask experience based question then? Like ""Tell me a time where you had to solve a critical bug in production. What it was and how you handled it?"".  


We all get confronted to specific issues and have different experience.",2023,Devops is not entry level
dominatrixyummy,3,"This is a way better approach. Getting caught up in the minutia of command flags and shit is irrelevant. Tell me a story, and I'll tease out the details that actually matter.",2023,Devops is not entry level
panacottor,2,"What’s the point of such a question? We get a hundred of software engineers with bugs in production who constantly need to escalate to a person that understand basic of networking to unfurl the situation.

These are hard requirements of a role that people rely on. If that doesn’t motivate you, you are free to go for other roles.",2023,Devops is not entry level
xorteP,1,Isn't SRE you are describing?,2023,Devops is not entry level
panacottor,3,"What are the roles in a “typical” engineering organization in your mind?

Most “DevOps” are some overlap of Site Reliability, Software Development, (System Administrator - this title is no longer in trend yet extremely necessary with microservices “architectures” desired by common dev teams) and whichever is the flavour of the day.

DevOps depending on the org and requirements might be rebranded sysadmin/ops, sre, cloud development, software developers with interest in operations, …",2023,Devops is not entry level
Lower-Junket7727,2,I mean don't get it twisted.  This is all important stuff to know.  It's skewed to the ops side though.,2023,Devops is not entry level
Deleted Account,8,[deleted],2023,Devops is not entry level
xorteP,3,"Yep, going through a career crisis and trying to find something that fits my personality and ambition",2023,Devops is not entry level
jantari,4,"If you have ambitions then you have keywords to look for in job postings.

The job title barely matters, every position everywhere is different anyway.",2023,Devops is not entry level
khobbits,1,"DevOps is a lot about how you try to solve something.

The questions above, explain your understanding of basic technology.

You need to understand the basic technology that underlies what you're maintaining.

I would never trust someone to architect a system that wouldn't know how to debug it when it doesn't work.",2023,Devops is not entry level
KingCarrion666,1,lol whats wrong with a 5-second google search to answer you 5-second question? It shows you are smart enough to find the answer simply then overcomplicating things and doing it wrong,2023,Devops is not entry level
AemonQE,1,"All you are saying is that you got no processes in place and no standardization.  
Hell of a company to work for. Big nono and the good ones will leave.

Everything you listed can be learned by a sysadmin with 1y of experience within a week if he does not know all of them already (except TF).  
And that job is surely no devops position.",2023,Devops is not entry level
BestNoobHello,1,"Half those stuff doesn't matter until there's an incident and the DevOps engineer who only knows to write YAML files can't debug and fix it in any meaningful timeframe. Basic networking and OS-level debugging (which include knowing which command to run and when to run it) knowledge are foundational skills on which DevOps is built upon. Not every operational environment uses only the shiny stuff like Kubernetes and cloud-managed services. There're tons of legacy or hybrid environments which due to compliance, security, or technical constraints are abominations that makes having those foundational skills a requirement.",2023,Devops is not entry level
udum2021,7,"Meanwhile, lots of experienced people are having difficulties even getting an interview.",2023,Devops is not entry level
nocrimps,7,"This goes out to all the hiring managers and interviewers out there, and not necessarily to OP. Stop excluding capable people because your interview process is inflexible. It's bad for your organization, period. 

To OP: 

Several of those questions, like listing off ports and knowing the command to check free disk space, are easily looked up and not something I'd memorize. Those are also traditionally sysadmin skills, not DevOps. I know them from experience, but not sure I'd pass your ""sysadmin command round robin"".",2023,Devops is not entry level
nocrimps,6,"Like, if your definition of ""use bash"" is ""has grep syntax memorized"" then sure, you're a better ""DevOps engineer"" than I am.

But I can literally write the grep binary if I want to and I understand all of the CS fundamentals pretty well, especially the practical ones like networking, DNS, and how programs run. So although I might not have the command for checking free memory memorized, I can still figure out a paging issue (lol) or figure out if a program is throttled due to low memory. 

Which do you want more? Memorization or comprehension? Ability to spout off tools, or ability to identify and rectify problems?

This industry is so fucked.",2023,Devops is not entry level
swergart,0,"i disagree, it's basic to know those basic info. there is always some basic knowledge if you are experienced in the job, it should be easy to answer.

for the port question, if you cant remember what https port is, every time you set up a firewall, load balancer, have to look up somewhere ... i doubt how many other things you need to look up. 

yes, almost everything you can find somewhere ... but without that basic knowledge , you will have hard time to find the info. it impacts job efficiency.",2023,Devops is not entry level
nocrimps,1,"Ok, I can't remember the port for postgres off the top of my head though, you're not going to hire me? Even though I can create a good schema with proper indexes and foreign keys, explain joins, write clients in multiple programming languages? Even though I can troubleshoot a query problem with explain analyze and fix the root cause?

So I'm not hired because you ask dumb questions and hyper focus on them... That's what I'm hearing.",2023,Devops is not entry level
swergart,1,"depends, if the job requires you to know postgres, but you cant tell its 5432, yes, i wont hire you.",2023,Devops is not entry level
nocrimps,5,"It's never this cut and dry man.

It's usually a shitty DevOps engineer that can't write software who then asks questions like ""what's the command to display the used memory on Linux, sorted by process name descending"". 

There's a world of difference between ""not having needed skills"" and interviewers who just ask bad questions while neglecting to understand the candidates qualifications for what the organization needs.",2023,Devops is not entry level
swergart,1,"sorry, my apologies. 

i just want to directly tell the truth that able to answer the working level details of similar questions will make me have much confidence in the candidates, who really know the stuff and are actually doing it everyday.

that said, not always clear cut, and depends on what im hiring, if i need someone who knows terraform as primary job duty, while they cant answer one or few of those linux questions, i might possible fine.",2023,Devops is not entry level
Iforgetmyusername88,1,"It’s basic to know basic concepts. But exact commands, etc, cmon now. There’s so much to learn and to think people are busy studying flashcards to know facts they can lookup in 5 seconds? Waste of time and headspace.",2024,Devops is not entry level
Deleted Account,56,"I don't know the answer to some of the questions here. DevOps for 5 years and considered to be a damn good one as well. I'm sure i can come up with 100 questions you have no idea how to begin to answer.

Hey just googled ""stateful firewall vs stateless firewall"" and Vwalllaa 5 seconds later I'm a genius like you. If this is the way you filter candidates, you're a dumbass.",2023,Devops is not entry level
xorteP,19,"It tells a lot about the recruiter tbh, and interview are there to filter from both sides ;)

I hate it when I feel the recruiter is just there to sound like a smart ass, and ask questions like ""oh really you can answer that?! It's really dead simple...""

Like you said, sometimes you just have to google it and have the answer.",2023,Devops is not entry level
oblivion-2005,12,"> Vwalllaa

Did you mean to say... voilà?",2023,Devops is not entry level
Deleted Account,8,Yes lol,2023,Devops is not entry level
SuperMiguel,3,"DevOps dont need to know how to write, not part of the job, based on this reddit",2023,Devops is not entry level
panacottor,0,"You are so petty. OP had no hard questions and is expecting a senior devops to be able to answer what accounts to very basic ops questions (or discussions) to understand the breath of knowledge the candidate has. Things can be taught, but a person applying for a senior role shoukd be evaluated for some level of proficiency, not 2 years of programming and a hunch about computers.",2023,Devops is not entry level
Redstonefreedom,1,"Yea but if ""what is a stateful firewall"" makes the list for his argument that ""devops candidates are bad & should feel bad"", he has a weak-ass argument.",2023,Devops is not entry level
Deleted Account,-6,[deleted],2023,Devops is not entry level
xorteP,9,">You would fail.

You judged someone ability to work and deliver value based on a few lines on Reddit. It tells a lot about the type of recruiter you are.",2023,Devops is not entry level
Deleted Account,1,[deleted],2023,Devops is not entry level
xorteP,1,"From ""I would ask the same questions in an interview and I've done hundreds.""  
To ""I'm a senior devops engineer who does interviews once in awhile.""

""I'm not a recruiter."" ""I'm a senior devops engineer""""Defending being ignorant is usually a losing proposition.""",2023,Devops is not entry level
bumble938,3,Why is he ignorant? Why would you keep all that stuff in your head when you only use it like once every 2 year. I’ll rather keep those precious memory real estate for family and life. Not remember specific command,2023,Devops is not entry level
Deleted Account,1,"As someone mentioned here already, an interview is for both sides. If this is what you would ask me in an interview, you failed as an interviewer in my eyes, you just didn't pass my bar mate, and i really don't want to work with someone like you. Period.

Also, i mostly crush interviews and i bet you and whatever shitty company you work for would beg for me to come and work with you.

Last cycle when I changed jobs I got a contract from 4 different places. I almost have a higher compensation from my tech lead, i don't know people with the set of skills, and abilities i have.

And still i would fail your lousy interview because of a stupid trivia question on something you can lookup and actually read and understand in 5 seconds. How stupid are you?",2023,Devops is not entry level
xorteP,1,"100% aligned with your mindset. It feels good to see I'm not the only one.  


About devops, as someone getting started, what advice can you give so that I can reach your level of skills?",2023,Devops is not entry level
Deleted Account,2,"For me what worked, is never staying in the comfort zone. When i feel I've got the hang of something, I'll try to get a task that will be an absolute blind spot for me. The more it is challenging and ""scary"" the better.

Don't work in big corporations, skill-wise you'll get nowhere. Choose a workplace-place with microservices architecture, high scale traffic, but still not a big company, that have an updated and even too large stack - It may be bad for the company, but it will be good for you as you will have hands-on experience on a lot of stuff.

Try to find out how the life cycle development for devs, and how it is for ops. How do they test infrastructure changes before going to production. If they have bad DLC experience it means your throughput will be limited by a bad working setup, things that should take hours will take days or weeks and you will have nothing to do about it (unless you are a one man show and you really can call the shots) And it will hinge your progress.

Always have a side project in mind, let your creative drive motivate you to learn new things hands on.

Also a good mentor/lead that really wants to see you grow directs you to your blind spots and lets you face them over and over, is a precious thing to have.

Put time and effort on Understanding complex concepts, architectures, solutions, patterns, and how things really work. But don't bother memorizing shit you can find, read and understand on Google in 5 seconds.",2023,Devops is not entry level
xorteP,2,"Thanks for the advices!

My take away:

1) Never stop learning
2) Get out of your comfort zone
3) Seek a place with good learning potential",2023,Devops is not entry level
alwaysleftout,34,"Most of those questions seem just ops related.  Are you skewing ops heavy because you were a sysadmin for so long?  Feel like someone with only a dev background is going to struggle with some of those.  If coming from on-premise management, some of those are specifically prevented from Devs getting their hands on it.

Are you sure you sure your position is really devops and not a different role title?",2023,Devops is not entry level
Nyangol,14,"Can confirm, as a junior cloud devops who only had prior experience in software development, I could barely answer at most 2 or 3 questions at the time I was hired (as an intern tho).
Now I'm 1 year in and I could answer almost all of these decently enough, but that is certainly not all I am doing at all.
And even at times when it is most of what I am doing, these can be learnt!
Please do not forget us unexperienced people, especially when we already have a tech background ;-;

As we often read in this sub, devops is a lot about learning stuff all the time, so it does not make much sense to me to hire someone based only on their current knowledge of ops-related concepts.",2023,Devops is not entry level
MutenCath,17,"Anyone going to do anything DevOps oriented shouldn't even stutter on those.

Similarity you kind of expect people to know the difference between a function and a method.",2023,Devops is not entry level
NormalUserThirty,6,I've been in devops for 10 years and I didn't know the difference between a stateless and stateful firewall until now. It's never come up.,2023,Devops is not entry level
Redstonefreedom,6,"Likewise no idea. I've used ufw, route, trace route, ping, nmap, awe's igw/vpc/acl/sgs etc but I have never even heard that distinction.

It's a classic instance where someone is testing someone else on their own knowledge, not that of the actual field as-is. It's clearly not relevant yet OP has labeled it ""astonishing"" that someone wouldn't know it.",2023,Devops is not entry level
MutenCath,1,"Shouldn't, that's all I'm saying. How are you supposed to set up nails/Sgs on AWS without knowing the difference.",2023,Devops is not entry level
NormalUserThirty,1,Not sure what nails is but I've set up sgs many times and never had any issues,2023,Devops is not entry level
MutenCath,1,"Meant nacls, autocorrect got me while I was still before first coffee, apologies :D

I meant there is very specific difference between network access list and security group and unless you do understand it (stateless vs stateful) I don't see how you can even work with it.

That's just one example from op and I could go on all day:Not going into network/routing are are you supposed to work with any kind of subnets/vpc/vnets/gateways?Ports? Common.Check running processes? Absolutely substantial to check if service is running.Record types? Almost daily work.

This is not ""sysadmin stuff"". This is ops in devops. Same way as devops should know the difference between for and while loops.Basic stuff really and I wholeheartedly agree with OP - ops is just as (if not more) important then programming skills.

How are you supposed to understand complex kubernetes plane when you don't know the difference between private key and ca certificate.",2023,Devops is not entry level
khobbits,1,"I mean, to be fair, if you're setting up routing or security in a cloud provider, you should know the difference between ACLs and Security Groups.",2023,Devops is not entry level
StephanXX,6,"Take heart that you aren't alone. Fundamental Linux admin skills are becoming less and less 'necessary' (on paper), causing fewer and fewer shops to teach them. These aren't skills that are (usually) taught in any common educational setting, and most SMBs are simply coming to rely on their cloud vendor for that layer of support.

_An_ argument can be made that it's not all bad. Imagine a carpet installation company that sold all of their delivery vehicles, and instead relies strictly on a fleet management company to provide trucks on demand. When you owned 80 trucks on inventory, you needed at least one full time mechanic. When you rent on demand, you ultimately expect the fleet management to leverage _their_ army of mechanics; you don't want your installation techs trying to replace worn brake pads or a busted alternator.  Please note, this isn't how I like things, just that maybe it helps put the industry shift into perspective.",2023,Devops is not entry level
WorldsWorstSysadmin,22,"I interviewed a devops engineer last week that was stacked with AWS certs, but couldn't answer a single question about networking/linux/containers/virtualization.  I cut the interview short at the halfway and passed because he was just too junior.

It seems like companies have made the ""DevOps"" role synonymous with ""You sorta know how to use AWS.""",2023,Devops is not entry level
xorteP,10,"Well, companies are dictating what they need.

If they need ""You sorta know how to use AWS."" and put it under the ""devops"" flag, why   
 do you blame them?",2023,Devops is not entry level
WorldsWorstSysadmin,3,"I don't really blame them, but it muddies the waters for other companies, and really derails the expectations around that terminology.  It would simply be nicer if folks could all agree on what's needed for that job role.

If you want to fill a role for a Civil Engineer at the city level, you expect applicants to have graduated with a degree in Civil Engineering, and you expected them to be licensed engineers.  The fact that we toss around titles in tech with no baseline of what they mean has always bugged me.

I've only been in the industry for ~20 years though, so I'm still a wee youngin, and I could be totally off-base with my opinions.",2023,Devops is not entry level
xorteP,1,"Yep, I just have 4years of experience and starting to realize that tech careers is not easy. 

It's moving fast and we try to make sense of all the new stuffs coming the best as we can.

You have to learn tech and learn how the market understand the tech and what companies need and adapt to it every x years.  


I'ts kind of tiring.",2023,Devops is not entry level
chkpwd,1,Still hiring?,2023,Devops is not entry level
mcmjolnir,4,lotta yaml engineers in here,2023,Devops is not entry level
Deleted Account,4,yaml mammals,2023,Devops is not entry level
sanightlights,5,"I can answer all of these questions, but it will cost you more than 130k.",2023,Devops is not entry level
justinsst,12,I agree with the sentiment overall but imo as someone who came from Ops these questions are all too ops focused. Drop some of the current questions and add in some dev/DevOps questions.,2023,Devops is not entry level
WN_Todd,14,"Hot Take:  This is in some part because nobody has to do the helpdesk anymore.  Even if you're not helpdesking for the specific technology stack of DevOps, there's a rhythm, technique, and methodology you learn to apply to ""The Goddamned Thing No Worky"" and dealing with people or systems who come to you and report ""THING NO WORKY HALP.""

Call me curmudgeonly or oldschool if you like, but having to solve other people's insane crap forces you to GET good at understanding a lot of the above just to get to why The Internet Is Broken.  I wish it was common sense but the number of times I've been a GODDAMNED WIZARD by walking through a standard ping/telnet/dig sequence says otherwise.

In general I'm baffled by the number of even highly paid developers for whom the computer is a magical beep boop box they put magic words into to make it do stuff.",2023,Devops is not entry level
tcpWalker,5,"An interesting hypothesis but I think a somewhat flawed one--when I worked helpdesk in college the problems were mostly fairly limited. I learned the more useful methodologies by watching seniors who would look at the problem and keep asking ""why"" for each thing that comes up.

The widget is broken, why?

I see a discontinuity in metric Z for the widget around when it broke, why?

The discontinuity only exists for some queries but not others, why?

Oh all of the bad queries responses are coming from one region, maybe it's misconfigured. Let's check...",2023,Devops is not entry level
zealmelchior,14,"Respectfully, I disagree. The field itself may have a steep learning curve if you have little experience, but it's not special enough that someone willing to learn can't be taught the role. Sure, a background in networking and systems administration will help AND also solves for anything we would consider basic or fundamental, but again... these things can be taught. Most of them fairly easily, but that also requires both the bandwidth and desire to mentor a greenhorn.

It sounds like your needs are for a Senior DevOps Engineer with 5+ years experience, but the candidates' resumes haven't been filtered as such before you meet them.",2023,Devops is not entry level
Deleted Account,4,thank you! 👏👏👏👏👏👏👏👏,2023,Devops is not entry level
pr0t3us,4,"I'd say you're thinking about your hiring and interviewing wrong. While having the operational sysmin experience is valuable, it really just shortens the amount of time that it takes for most people to think like a devops or sre engineer. 

DevOps/SRE is an ethos, a way of perceiving the best ways to automate and observe the integration of value chains in the business. I review 100s of resumes in a year and the biggest problem I find is that so many people just flat out lie about their experience set using whatever the new bright shinys are to get past the keyword filters.

But if you can find a person who thinks about how to solve real problems in the right way, and understands the concepts of things you might have an amazing contributor in a very short timeframe.",2023,Devops is not entry level
hiljusti,4,"For some people, and some _entire companies_, ""devops"" does not mean any sysadmin or networking knowledge. It means something like ""can put square pegs in round holes, but only with YAML""",2023,Devops is not entry level
bytelines,4,"Counterpoint: I hired a platform engineer right out of college who didn't know how to use a terminal. That was six years ago. He was the best hire I ever made, and is currently a senior staff engineer.

You don't hire juniors because they know things. They might know one thing. Maybe.

You're interviewing them wrong my friend. Which might be a good thing because it sounds like you'd have expected too much of them in the job as well.

Rethink if you really want a junior engineer.",2023,Devops is not entry level
o5mfiHTNsH748KVq,5,I run a platform engineering org and I couldn’t tell you how to check the memory on a given machine. My answer would be google because that’s the truth. I don’t commit things to memory that I’ve already abstracted away into my observability platform.,2023,Devops is not entry level
innovatekit,5,"If your cap is 130k your pay is too low. I would also skip on this jobs bc it’s sounds more sysadmin/IT/networking than software engineering + ops. 

What i like to hear to perk my ears are:

- CI/CD
- monitoring(Prometheus, grafana, datadog)
- automate everything
- SLOs/ dash boarding
- aws. Gcp. Azure. Bare metal
- gitops
- infra as code
- self-serve platform development

Just to name a few.",2023,Devops is not entry level
Rorasaurus_Prime,4,"I couldn't agree more. DevOps is a position you move into after spending a good few years as a software engineer or a sys admin, and you should have reasonable knowledge of the other. I'm a team lead and interview potential candidates and have come across exactly the same problems as you.

One positive I took from this is that if I find myself looking for a job, I feel confident I could outperform these people. I guess that's a plus, but it's a sorry state for our profession.",2023,Devops is not entry level
chagataev,4,"Hipsters got offended right away when DevOps gets close to sysadmin skills. They dont need to know shit, its not needed in kubeland, they will just google it.",2023,Devops is not entry level
Du_ds,4,"Sounds like OP is 
1. Getting devs applying for devops because it's 'close enough'
2. Actually hiring for an ops position and wondering why none of the devops candidates are qualified 😉
3. All of the above",2023,Devops is not entry level
ShortViewToThePast,12,">the difference between a stateless and stateful firewall 

I'm senior devops with 4 years experience in the role and 9 years in IT in general.

Never heard of stateless and stateful firewalls. I'll have something to read tomorrow.",2023,Devops is not entry level
smarzzz,5,You mustn’t have done an AWS cert where this is a major differentiation between NACL and SG,2023,Devops is not entry level
TheRealFlowerChild,1,"I’m an Azure person and the Azure equivalent (NSGs) is stateful and combines the functions SGs and NACLs. If OP commentator is an Azure person, it’s probably because it’s never really pertained to them/their environments.",2023,Devops is not entry level
ShortViewToThePast,2,"Yep. Working with Azure 100%. Do you need to know anything more than ""two solutions exist""?

I guess you configure rules in the same way and the actually firewall worries about the rest?",2023,Devops is not entry level
dev_all_the_ops,12,"Plug for this git repo that contains thousands of interview questions to weed out imposters  


[https://github.com/bregman-arie/devops-exercises](https://github.com/bregman-arie/devops-exercises)",2023,Devops is not entry level
smarzzz,10,"> Is DNS using TCP or UDP?
> > DNS uses UDP port 53 for resolving queries either regular or reverse. DNS uses TCP for zone transfer

I guess that Arie Bregman never had truncated UDP packages with TCP fallback. He doesn’t know what he’s talking about ;)",2023,Devops is not entry level
Tren898,1,Really cool,2023,Devops is not entry level
DiscoBunnyMusicLover,1,Thank you!,2023,Devops is not entry level
YumWoonSen,6,"We went through the same and weren't even hiring for devops.  All these LAMP developers that don't know how to check disk space.

What's worse is the boss isn't technical and people can tell her anything they please, as was the previous boss that didn't get me involved in the interview process...we wound up with a guy almost 60 years old that had been working help desk most of his life then got a college degree.  Basically a wet behind the years college graduate that didn't know shit other than how to bullshit, which has morphed into gaslighting.

On a call a couple weeks ago he spoke for 10 minutes about how he solved a 'hard' problem on a new server by using ""The umask app.""

Umask.

App.

Boss said, ""Great job!""

<sobs>",2023,Devops is not entry level
Deleted Account,3,[deleted],2023,Devops is not entry level
YumWoonSen,1,"The dude is insufferable.  When I finally pop and leave ,the stuff my team supports is going to get so convoluted and ridiculous that it will be useless.",2023,Devops is not entry level
bumble938,6,I’ll learn all that stuff after you pay me.,2023,Devops is not entry level
evangamer9000,8,"These are just gotcha questions that can be EASILY understood within 5-10 minutes of googling. What does that get you?   


You should be asking questions around critical thinking and problem solving skills. Sure asking some baseline questions to possibly get a level of understanding to make sure their resume lines up with reality but it looks like all you're trying to get out of these questions is a very junior yes-man that will need to be hand held anyways. *Is that really what you are wanting?*",2023,Devops is not entry level
xorteP,0,Glad to see people more aligned with my vision on how an interview should be done.,2023,Devops is not entry level
lesstalkmorescience,8,"That's because these are all ops questions, not devops. Been doing devops for 5+ years, including a lot of deep ops and coding my own tools, so I would like to think I know my stuff, and I would turn down a job from any company that hit me with such obviously one-sided questions. I don't know what kind of operation you're running, but it gives a really bad impression when you're so off balance.",2023,Devops is not entry level
sysera,3,"It’s always been the same. Finding candidates that actually understand the tech behind the scenes is very difficult. Often people have all these certifications, etc. but they can’t actually operate the command line of a Unix based system at all. I feel you.",2023,Devops is not entry level
dhsjabsbsjkans,3,"I think one issue is that the technology is outpacing the ability to provide training in these skill sets. 

And just my opinion, the amount of apps in the landscape these days is outrageous. You can have an idea of tools for configuration management and automation, but which do you need to know. You've got fabric, salt, chef, puppet, Ansible, and who knows what's next. The guy that wrote Ansible is already talking about going it again and writing it in rust.

I personally can't keep up with it all. At this point, I just want to be able to keep up where I cam and retire in the next decade.",2023,Devops is not entry level
dowcet,3,How are you screening your candidates before you interview them? I can't blame the candidates for applying and showing up if you're willing to interview them.,2023,Devops is not entry level
definitely_not_tina,3,How DOES dns work? How low level do you really wanna get there and how much do you wanna overlap with irrelevant shit like SEO,2023,Devops is not entry level
676f626c7565,3,"its ""Argue About DevOps Tuesday"" again already?",2023,Devops is not entry level
water_bottle_goggles,3,Good for you,2023,Devops is not entry level
i-cant-stay-silent,3,"All your questions are about only the “Ops” side of the “DevOps” role. I think, you’re looking for a SysAdmin not a DevOps engineer. Moreover, some questions do not have an answer, like “How to diagnose a slow Linux machine?”. It depends on what distro is running on which architecture, what the symptoms are… I think you need to ask more specific questions. It would help if you defined the case, environment etc..",2023,Devops is not entry level
Deleted Account,3,[deleted],2023,Devops is not entry level
castlec,1,I can't tell if you intentionally said unskill rather than upskill but I appreciate it nonetheless.,2023,Devops is not entry level
Trakeen,4,I don’t ask linux questions outside of extreme basics. We have dedicated linux engineers for that. I need people who can build solutions in Azure with native services using terraform so azure networking and common solution architecture patterns. None of the people we’ve hired recently have any of that,2023,Devops is not entry level
DensePineapple,2,How do you expect to hire architects with no basic fundamental operations knowledge?,2023,Devops is not entry level
chkpwd,1,Any spots still open?,2023,Devops is not entry level
Trakeen,1,Not currently,2023,Devops is not entry level
Sufficient-West-5456,5,Sorry but we use azure and windows. How you expect us to know Linux you boomer?,2023,Devops is not entry level
Dismal_Boysenberry69,3,"If you start offering to pay people $200k, you’ll get better candidates. $130k is way on the low end of things.",2023,Devops is not entry level
Deleted Account,-2,i started as a devops above that w/ 0yoe....,2023,Devops is not entry level
Nosa2k,2,"Lots of charlatans in this industry, these days.",2023,Devops is not entry level
picturemeImperfect,2,Most of those bullets a Tier 2 help desk/jr sys admin utilize/deals with at work lol,2023,Devops is not entry level
NotAlwaysPolite,2,"Shame it's not remote otherwise I'd ask for the link 😅 

It's sadly common though as the field attracts people from different entry points. The people with all the knowledge there are usually those with a more traditional sysadmin background.
It's also such a vast field of different bits and bobs being a subject matter expert on anything is tricky.
I've been at this now for a decade nearly maybe... And I come across stuff every day a didn't know before.

I interview often for new team members and I hate it because it's fairly easy to find huge knowledge gaps when it's quite reasonable to both ask someone to explain TCP AND explain OOP in the next breath.
I've found really that knowledge can be found or learnt but attitude and resourcefulness is the thing that's important to me. But I would love it if I wasn't the only one who could talk to network engineers 😅",2023,Devops is not entry level
Ariquitaun,2,"£100k is pretty good for London.

But anyhow I agree, I came on to devops about 5 years ago after 15 years in software engineering and it's been challenging. But good. But challenging. I just don't see how someone with no experience at all has any hope of doing this job effectively. Plenty of experienced engineers don't know their way around the git command line, or bash, or know anything about Linux - it shows on their performance though.",2023,Devops is not entry level
PhishPhox,2,"I’ve got an entry devops interview coming up, any resources for the basics you can point me to? I have 2 YOE as an SE",2023,Devops is not entry level
Deleted Account,2,Tell HR. To make better job postings 🥲,2023,Devops is not entry level
Deleted Account,2,to be fair does anyone _really_ know how terraform works?,2023,Devops is not entry level
pr0t3us,1,"Well, they did...but not anymore after 2 weeks ago.",2023,Devops is not entry level
jba1224a,2,"What you’re asking for is not devops.  In the traditional sense it is ops but the industry definition of devops generally means “person who writes deployment pipelines”

If you want to hire someone with the right skill set, change your job req to meet your needs.  I use the title “Platform Engineer” or “Cloud Operations Analyst” for junior roles.  Putting “devops” anywhere in your req is going to get you more of the same.

I’m a technical agile coach by trade, so I’m familiar with nearly all of the concepts you listed.  I do a good bit of technical interviewing and I’d be interested to see what types of questions you are asking candidates to determine they lack knowledge.  I may be able to offer some suggestions to better clear the field.

Ps the number of people who can’t operate in a Linux environment is painful.  Especially when trying to containerize as much as possible.  Feel you there.",2023,Devops is not entry level
k2718,2,Sounds like you need to pay more,2023,Devops is not entry level
klemorali,2,"So much this. I've been asking management to just hire actual entry-level people for entry-level pay, and we'll just train them. It's got to be better than the hell of hunting for the perfect candidate. The good ones have jobs already...",2023,Devops is not entry level
olivierapex,2,"I'm sorry, but are you looking for a DevOPS or a SysAdmin? The things that you are asking is admin oriented more than DevOPS.... maybe you don't understand what DevOPS mean.
It's not about knowing how network protocols are working, there's google for that. It's how you automate and create tools for everything.
Maybe you should post a job description asking for a SRE, that is more ""support"" than a DevOPS. Or maybe looking for a Senior Admin knowing some Terraform and CI stuff?
Maybe is what you are looking for that you don't know or doesn't understand. In fact, 90% of people hiring DevOPS doesn't know what a fucking DevOPS do lol.
BTW, 130k is pretty much a average salary for a DevOPS, nothing special.",2023,Devops is not entry level
JustAnAverageGuy,2,I would not use any of those questions when looking for a dev ops engineer. Is there a chance your defined role that you're hiring for does not meet the industry's general definition for DevOps?,2023,Devops is not entry level
xiongmao1337,2,"I've done everything I can to not make a similar post that touches on how many other posts I'm seeing these days that talk about burnout, and I feel like everything you're saying right now leads right into it.  A lot of people don't understand the foundational stuff, and they don't have a passion for the work, but they try to get into it for the paycheck not quite realizing what they're getting themselves into, and a year later they're like ""i'm so burned out"".  i've been in tech for about 9 years now; 5 as a systems engineer and about 4 in devops, and i'm showing no signs of boredom or burnout.  it's because i enjoy the work immensely and can't imagine doing anything else.

re: chatgpt, I 100% use it to churn out boilerplate IaC and Lambda functions so I don't have to waste the time, BUT once it's done, I can (and do) confirm on my own every single line of code to make sure it's right (it usually isn't).  There is no way I could depend on it to be effective at my job, and while I would highly encourage anyone on my team to use it, I could never hire someone who depends on it.  If you can't get by without it, then there's no way you're going to get by with it.",2023,Devops is not entry level
darthvader69_aj,2,"I'm a fresher , I can answer all of it. Don't generalize. Btw aren't these questions too basic to ask and seems more inclined towards sys admin role. Damn what an easy way to get that 100k pound job wish it was me in that interview 😪",2023,Devops is not entry level
kaen_,2,"I know all of that stuff, but only because I learned it on the job... as a DevOps engineer. Mostly  bit by bit when something broke. Because someone who already knew told me.

Engineers (of all flavors) are hard to come by when you're not willing to train a fresh one or pay for an experienced one.",2023,Devops is not entry level
jgaa_from_north,2,"This stuff (except terraform) is pretty basic knowledge for anyone working with Linux system programming 15 - 20 years ago. Same for sysadmins at that time. 

It's probably less common today, as most of low level stuff that we actually implemented in C and later C++ in our projects is now abstracted away in layers of libraries in languages that hide how things actually works.",2023,Devops is not entry level
Horikoshi,2,Isn't most of this just common sense ? Learned all of it year 1 as a backend dev implementing a service based architecture,2023,Devops is not entry level
Ancillas,2,TIL that companies are significantly overpaying for the EKS equivalent of script kiddies.,2023,Devops is not entry level
Deleted Account,2,"OP has such weird brag/vent energy, more than actual interest in figuring out why they can't find a candidate to fill the position",2023,Devops is not entry level
tosS_ita,2,That’s very basic stuff tbh,2023,Devops is not entry level
Parzival_snow,2,"Haven't even gotten a job in IT yet but I can give an answer to 90% of the questions listed.
Although I'm haven't used terraform yet",2023,Devops is not entry level
cgssg,2,"OP points resonate well with me. A DevOps role should be staffed with engineers knowledgeable in both domains. Furthermore, the posted interview questions are quite basic. Would you seriously consider letting someone troubleshoot your production infra and application stack if they knew less than this? 

Knowing on-prem and cloud infra stacks and application SDLC is a wide field to cover. However, letting people into this role with a mindset of ""I know how to search StackOverFlow, Google, ChatGPT and YAML"" means that they will not be able to carry any responsibility in a team, let a alone working independently on issues and resolving them on their own. All you get then is forever-junior engineers with a ""you guide me"" mindset. Deadweight not adding value and in the worst case creating more problems with their insufficient attempts to fix things.",2023,Devops is not entry level
Deleted Account,2,thats nuts!,2023,Devops is not entry level
engimere,2,"okay so I started my first job as a DevOps Engineer two years ago and I can tell you this: Most of the things you listed aren't the responsibilities of a DevOps Engineer. Especially if you're deploying to cloud, why do I need to administer a Linux machine and manage its processes while I can deploy containers to cloud-managed Kubernetes clusters? why do I need to understand routing when I have cloud VPCs and subnets? These things you listed are needed only if you are managing your own infrastructure, and in that case you would need to hire system admins, network engineers AND DevOps engineers

&#x200B;

also, regarding your question on what happens when you type [google.com](https://google.com), checkout this GitHub repo that answers your question ironically https://github.com/alex/what-happens-when",2023,Devops is not entry level
negrusti,2,"A devops can make more than that with a fully remote position, no point to bother with location restrictions.",2023,Devops is not entry level
obscuresecurity,2,"Look at interviewing as a systems problem... Clearly, you aren't getting the results you want.  Figure out why, and make corrections.

DevOps isn't entry for 99.9% of people.  For the few it would be for... they are going to be finding homes in firms paying $$$$$, probably doing software development, or SRE.

And having hired for infra type folks... you kiss alot of frogs to find a prince.",2023,Devops is not entry level
herious89,2,"nah that’s a sysadmin job, devops today is called sde - infra/platform, you only need to pass leetcode",2023,Devops is not entry level
lavahot,2,Have you posted this before? This seems *really* familiar.,2023,Devops is not entry level
imnotabotareyou,6,This is why I’m 8 years into IT and still giving myself 1-2 years of the devops roadmap before I apply to roles lol,2023,Devops is not entry level
Deleted Account,44,waste of time... start applying.,2023,Devops is not entry level
imnotabotareyou,3,"I don’t know enough about CI/CD or docker or IaC yet. Too much theoretical not enough experience. 

Why do you think it’s a waste of time?

Thank you",2023,Devops is not entry level
Deleted Account,14,"b/c you have 8yrs IT experience, i assume you done a decent enough amount of sys admin stuff during that time?

I dunno, just don't spend 2yrs learning before you apply. if you're really not comfortable, give yourself at least 6 months and then start applying while you continue to learn.. there are people out there willing to teach on the job if you show an ability to think critically and some curiosity during interview.  market is different now than in 2021 but, don't self select yourself out of applying to certain jobs... you'd be surprised what you might be able to get interviews for.

also, would be very helpful to pick up a programming language... python or go. both useful for infra teams.",2023,Devops is not entry level
imnotabotareyou,2,"Thanks!

I have two kids under two, so I really only get between 10p to 12a at night to upskill, if I’m lucky. 

I’m currently focusing on python.",2023,Devops is not entry level
Deleted Account,4,ah you've already got plenty on your plate!  good luck... check out kodekloud if you haven't already.. i found it to be helpful.,2023,Devops is not entry level
Tren898,1,That’s where I’m currently learning. It seems pretty good so far,2023,Devops is not entry level
imnotabotareyou,1,"Thank you, and I’ll check it out!",2023,Devops is not entry level
joekinley,1,Same. Double speed youtube tutorials are awesome,2023,Devops is not entry level
SticklyLicklyHam,7,"To get experience, just do it. Build something and deploy it. Not enough people sit down and just do it.",2023,Devops is not entry level
imnotabotareyou,1,Oh I’m going to! I have one main project I’ll be working on as well as a few mini ideas. Combining DevOps mindset with AWS services.,2023,Devops is not entry level
justinsst,2,"I got my devops job without knowing anything about docker (like how it actually worked) and a surface level understanding of kubernetes. I did a lot of learning leading into my interviews but if you have a strong understanding of how it all works (networking, dns etc) it’s really not hard to pick up on the job. Pretty sure I only got the job because of my sysadmin and Python experience, they knew I could pick it all up since the foundation was there. 

I would only suggest waiting to apply if you don’t know a programming language.",2023,Devops is not entry level
imnotabotareyou,1,"That’s actually my biggest weakness. 

I coded a lot in college but my current job I only do some powershell and SQL. 

I’m brushing up on Python (want to get pretty good at it) and JavaScript (not as much just refresh) before I start sending out feelers",2023,Devops is not entry level
tcpWalker,1,"Worst case you learn some things studying for interviews and get interview practice.

You learn more rapidly on the job than off it usually, and get paid while doing it.  There will also always be more to learn, from now until the end times, which is awesome but means learning everything shouldn't be a barrier to applications.

Kick yourself out of the nest and start applying.",2023,Devops is not entry level
Deleted Account,1,"you'll learn on the job, like everyone else. start applying before the devops positions dry up haha",2023,Devops is not entry level
bossplayer09,1,Im beginning to agree.. why wait.,2023,Devops is not entry level
Deleted Account,2,"Yes keep it up, you will surely get very far this way.",2023,Devops is not entry level
imnotabotareyou,1,Thank you.,2023,Devops is not entry level
Snoopy-31,3,"Honestly just apply man, i had 0 experience but my dumb ass landed a DevOps job that required 3 - 5 YoE.",2023,Devops is not entry level
imnotabotareyou,1,Nice! How do you like it?,2023,Devops is not entry level
Snoopy-31,1,"Nope, niche tech stack and we have resource starvation of working hands.

I took it because you take what you get offered for your first job but later on I will make better decisions.",2023,Devops is not entry level
js_ps_ds,2,We hire people straight from school for devops.,2023,Devops is not entry level
Deleted Account,8,[deleted],2023,Devops is not entry level
Deleted Account,1,"yeah with the right mindset, google can usually help you figure out how to diagnose these issues anyways. But there is something to be said about knowing the process and info on hand as to where to start when you see a problem",2023,Devops is not entry level
Haunting_Phase_8781,5,I don't think I would hire someone for a devops role who hadn't spent at least 3-5 years working as a systems administrator,2023,Devops is not entry level
Deleted Account,4,[deleted],2023,Devops is not entry level
Haunting_Phase_8781,1,"Most of the ones I've met, aside from full stack engineers, only understand the higher levels of the stack and the bottom layers are a complete mystery to them.",2023,Devops is not entry level
Deleted Account,-4,"So you will be missing the most talented people and get the most square unimaginative, worst problem solvers, worst developers with 0 understanding of large scale system architectures.",2023,Devops is not entry level
Haunting_Phase_8781,2,"It sounds like I'll be missing out on the people that OP describes in this post, which is fine by me",2023,Devops is not entry level
Deleted Account,2,You do you,2023,Devops is not entry level
Deleted Account,3,"We interviewed a dozen candidates over a 3-4 month period who would talk a great game during the first interview, but who would absolutely blow it on the coding interview. I made them write terraform to spin up a simple EC2 instance in a VPC. Told them they could use whatever modules they needed (there's a very good VPC module and not 1 candidate used it). Had one clown tell me, ""That's not best practice""

At this point, I'm so glad I'm approaching retirement. I'm so done with this field. It's very rare to meet anybody anymore who is passionate about what they do and who are lifelong learners.

I fear for the future of our industry.",2023,Devops is not entry level
kdegraaf,5,"> I made them write terraform to spin up a simple EC2 instance in a VPC. Told them they could use whatever modules they needed (there's a very good VPC module and not 1 candidate used it). Had one clown tell me, ""That's not best practice""

A good candidate would reach for `terraform-aws-modules/terraform-aws-vpc` and just get it done.

A great candidate would say: I can reach for `terraform-aws-modules/terraform-aws-vpc` and just get it done, but here are some reasons why it might make sense for us to maintain a custom module in-house that calls the underlying `aws_vpc` and friends directly.

For example, the community one is kind of bloated (as it tries to be all things to all people) and it insists on shoving politics into code (`variable ""putin_khuylo""`).

I'd be impressed with a candidate who walked me through how s/he'd set up a lightweight module with the VPC itself, subnets, route tables, gateways and any custom stuff like DHCP options / transit gateway attachments / etc. In so doing, they'd display underlying knowledge, enthusiasm and a fondness for clean code.

Just my two cents.",2023,Devops is not entry level
Deleted Account,3,"I would have killed to have a candidate that walked me through the pros and cons of leveraging an existing module. None of them could string together a VPC from scratch. Some couldn't even get terraform to work - even though they showed significant TF experience on their resume.

Had one that asked me, ""Where on my computer should I be saving files?""

It was depressing.",2023,Devops is not entry level
Deleted Account,3,"Why would you use a module to spin up a vpc? That's like one resource block anyway. Do you mean vpc with subnets routes, nat etc?!",2023,Devops is not entry level
Deleted Account,1,"The full VPC - public/private subnets, NAT gateway, IG, route tables. Whatever they thought they needed to host infrastructure configured according to best practices.",2023,Devops is not entry level
Deleted Account,1,"I would not disqualify him if he did it without using a module though ""best practice"" is a term i kind of despise, every other person has a different idea of what ""best practice"" is. So it's just instead of saying ""i know best, i know better than you, and this is my opinion""",2023,Devops is not entry level
jammy192,2,"It’s utter bullshit if you disqualify candidate for not using your preferred module. I don’t have the best experience with the modules, in my projects we always ran into some issues in the long run. Besides it’s not that hard to create networking resources if you know what you are doing.",2023,Devops is not entry level
matsutaketea,1,that's job stability for me lol,2023,Devops is not entry level
Deleted Account,1,pay competitive? b/c we've had no problem finding good candidates like you and op are struggling to do...  I'm talking maybe interviewing 3 candidates tops for each of the last couple positions we hired for.,2023,Devops is not entry level
Deleted Account,1,"That's a good question. I don't know what the pay was, but the position would have been to work with me and I'm paid pretty well.

As a company, we **do** have quite a few top performers, both as software engineers and systems engineers. So, it's not like we only hire morons. We just seemed to attract them at that point for some reason. Could have been a fluke.",2023,Devops is not entry level
DensePineapple,1,"> there's a very good VPC module and not 1 candidate used it

The one provided by AWS?",2023,Devops is not entry level
Deleted Account,3,">how networking / routing works

Hardly relevant, as network is a commodity in the cloud era

>what common ports are

Hardly relevant if you need it, you google it

>how to diagnose a slow Linux machine

Nice skill to have for someone at a museum. For people working in modern environments? Meh

>how to check running processes

If something is failing, restart it. Believe me it's faster than troubleshooting and looking for one single proces

>what happens when you send a request to Google.com

I got this question about 20 years ago. If at some interview I would get the question again, I would probably turn around and leave the team. Chances are you'll end up in some legacy shit hole

>the difference between a stateless and stateful firewall

Who cares, you're not gonna configure that kind of stuff anymore? Learn to use the service you bought for it.

>how a web server works under the hood

My answer to this one would be ""Could you please explain how transistors work and how they form a CPU. In the modern era this is about as relevant as this question""

>how to check disk space / free mem on a Linux machine (?!?!???)

Again, are you looking for a DevOps engineer or a sysadmin? Nobody really cares about (free) memory on linux. If a pod gets oom-killed go to the developer. If you need extra storage, just configure it and follow the line in your monitoring. We neither got the time nor the crayons to do this by hand

>how DNS works (?!?!?!?)

DNS is a commodity. 

>the different record types and their purpose

If you need it, you google it. 

>how terraform works

I don't care how it works, as long as I can use it. Surprising few people know how a combustion engine works, while being perfectly capable of driving a car. The same for a battery charger. Care to explain how one works, or would you rather use one?

I guess seeing the rant in your post you might have better luck with a relic sysadmin nearing his retirement. than a DevOps engineer. Broaden your horizon",2023,Devops is not entry level
Rorixrebel,3,"DNS is a commodity.
You are insane",2023,Devops is not entry level
silentyeti82,2,"Wow...  Good luck when one of your ""commodity"" services starts misbehaving and you need to troubleshoot.  Or if you ever have to replatform legacy systems, or integrate with third parties.  Or run applications on dedicated instances for some shitty licensing reason.  If you're 100% greenfield and have full control over where your users access things from then maybe you can get away with being blissfully ignorant of everything you dismissed.

But, be warned, you will be replaced by AI within a few years based on what limited value you seem to add to the party.

Why pay for a DevOps engineer when the Devs can just do everything themselves?  Those of us that actually know how things work under the hood will be the ones still in a job fixing AI's mess and/or doing the things that AI can't work out how to do effectively.",2023,Devops is not entry level
Deleted Account,1,">Wow...  Good luck when one of your ""commodity"" services starts misbehaving and you need to troubleshoot.

How often do you troubleshoot your car if you have issues with the engine? It's something you buy, not build. Good luck refactoring BIND if you want when DNS fails because of a code issue, I have different hobbies and skills.

>But, be warned, you will be replaced by AI within a few years based on what limited value you seem to add to the party.

If AI ever manages to replace me, I'll probably have been doing something different for years. I don't care for, nor fear being replaced by AI",2023,Devops is not entry level
silentyeti82,2,"I wouldn't even contemplate refactoring BIND because that's not where most DNS issues arise, and you're a moron for even suggesting that.

Most DNS issues arise because something's cached somewhere it shouldn't be, or an NS record is incorrect, or an A or CNAME record is stale, or because a client is using the wrong DNS servers to try to resolve the address.

If you don't know how DNS works, how the hell can you possibly expect to resolve any of this class of problem, rather  than disappearing on a wild goose chase?

If you're happy doing something different, I suggest you make plans to do it sooner rather than later, because when it comes to DevOps it sounds like you're in a world of building with Duplo when the rest of us are at the very least using Lego Mindstorms...",2023,Devops is not entry level
Deleted Account,1,">I wouldn't even contemplate refactoring BIND because that's not where most DNS issues arise, and you're a moron for even suggesting that.

What why not, you don't know how it works?

>If you don't know how DNS works, how the hell can you possibly expect to resolve any of this class of problem, rather than disappearing on a wild goose chase?

According to the same logic, if you don't know how a combustion engine works, how can you operate a car?

>If you're happy doing something different, I suggest you make plans to do it sooner rather than later, 

I continuously do so. If I had done the same job over and over again, I would still be a C developer. I strongly believe there's a job for legacy lovers, like there's still a job for Cobol developers. They'll get more and more a niche  though",2023,Devops is not entry level
devfuckedup,4,yikes. I am glad to see people are still asking basic questions!,2023,Devops is not entry level
Mr_Education,3,"> the different record types and their purpose

This is a terrible question for a £102k ""Devops"" position. Based on the rest of your (also terrible) questions, you should advertise this as a Sysadmin role, or offer 1.5x more.",2023,Devops is not entry level
AishiFem,2,"Yes. All these people are chasing money and they are just terrible.

DevOps is only for really advanced engineers. You don't study DevOps directly...",2023,Devops is not entry level
burnbabyburn694200,2,"> how networking / routing works

incredibly open ended


> what common ports are

common for what?


> how to diagnose a slow Linux machine

yea i mean sure but did the job posting specifically ask for experience in a Linux environment?


> how to check running processes

everyone who's ever touched a computer should know this, fair. bonus points if you know htop vs top


> what happens when you send a request to google.com

Could be answered in numerous ways and take an hour to explain depending on how deep you go.


> difference between stateless and stateful firewall

if your devops engineers are expected to know the ins and outs of firewalls and you dont have a security team, sure, otherwise why?


> how a web server works under the hood

again, incredibly open ended and could take an hour+ to answer depending on how deep you go.


> how DNS works

fair game at *most places*


> how to check disk space/free mem

fair game.


> different record types and their purpose

fair enough if your devops team is also the networking team. otherwise why?


> how terraform works

lol.",2023,Devops is not entry level
xorteP,3,"""Tell me how a CPU works and I'll tell you if you are good developer""",2023,Devops is not entry level
burnbabyburn694200,2,yea this list of questions is just really odd imo,2023,Devops is not entry level
mouzfun,5,"Open-ended questions are meant to start a conversation, the interviewer then can go as deep as the candidate feasible can or skip to the next question if he is satisfied with the top-level answers. At least that's how I do them.

Also, a firewall is the core part of the linux kernel (netfilter) that you cannot separate at all from the whole networking stack even if you wanted to, so I feel those questions are also valid. I would expect anyone to understand what conntrack and NAT is (both the linux implementation and the general concept)",2023,Devops is not entry level
Cutlesnap,0,"A lot of those aren't devops questions? The correct way to diagnose a slow linux server is to take it behind the barn and shoot it.

It's called ""cattle not pets"" and it's one of the most important principles of our field.",2023,Devops is not entry level
matsutaketea,10,yeah but what if they are consistently slow? you could be deploying software that is making it so,2023,Devops is not entry level
Cutlesnap,1,"O definitely, but that's a different question.

Also, you'd probably still start by looking at your monitoring software, not the server itself. Most of the questions are network/system admin questions. Which, granted, we should be skilled in as well, but these questions are not central to devops.",2023,Devops is not entry level
NormalUserThirty,1,What are the app developers doing in this situation? We're supposed to manage the performance implications of decisions being on the application layer for them too?,2023,Devops is not entry level
matsutaketea,1,Thats pretty much the case. Long gone are the days when senior devs were able to do things like tune garbage collection and manage resources. Maybe at FAANG or something devs are actually self-starters and competent... I just get the scraps,2023,Devops is not entry level
bdeetz,4,"Sure. But if all of your hosts are in fact cattle, you have a disease and it won't go away without diagnosis and treatment. At some point, somebody is going to have to understand why it is slow. Is it io, mem, or cpu bound? If APM isn't present, can you use ebpf or strace? Yes, reprovisioning may hide the underlying issue sufficiently for some time. But eventually you will reach scale which brings this incident beyond acceptable risk and somebody will need to have the systems chops to diagnose the real issue.

Don't know about linux tunable? Good luck managing tons of established tcp connections in order to optimize your service cost. Or inotify. Or orphaned file handlers.",2023,Devops is not entry level
NormalUserThirty,2,"> At some point, somebody is going to have to understand why it is slow. Is it io, mem, or cpu bound?

Shouldn't the application developers be able to do this, given the right tools? Seems nuts to me to push this onto devops teams instead of the people building the software which result in the performance profile in the first place.",2023,Devops is not entry level
DensePineapple,1,You can shoot all the cattle you want but if you don't understand what's wrong with it in the first place you shouldn't be handling cattle.,2023,Devops is not entry level
Cutlesnap,1,And that's why monitoring is a part of our profession.,2023,Devops is not entry level
DensePineapple,1,And part of monitoring is understanding the fundamentals of the systems your infrastructure runs on.,2023,Devops is not entry level
VileEnd,3,"Where is the Dev part?
For me that looks like typical Admin questions.",2023,Devops is not entry level
DensePineapple,2,You still need to know the basics Ops part.,2023,Devops is not entry level
VileEnd,1,Ofc you need both - maybe they didn't even reach the Dev part?,2023,Devops is not entry level
sauvik_27,1,"Hello a newbie here, with 1 yoe in react dev, any roadmap or resources/ guidance on how to switch to devops?? Any help would be appreciated!

Also is it really worth switching to this domain or should I stick to development only, moving forward to full stack and all ...",2024,Devops is not entry level
SpecialistQuite1738,1,Sounds like you’re looking for a sysadmin and a dev but have called it devops so the hire can do more for less,2025,Devops is not entry level
PepeTheMule,0,I agree. It's crazy and sucks because it's so saturated right now.,2023,Devops is not entry level
Deleted Account,3,Saturated?!,2023,Devops is not entry level
Sneaky_Devil,1,"I just got hired for a devops role with no experience, and I'm kinda worried about performing. I had an internship with them and got a return offer, so I've got 4 more months of school before I start. Sounds like I should focus on linux? I'm *okay* on networking",2023,Devops is not entry level
Deleted Account,3,"bro you got a return offer, you are doing fine..  heavy linux focus really depends on where you work and what you're doing.  it's not a bad thing but, if you day to day is dealing w/ other shit, learn that first.",2023,Devops is not entry level
mrmoogler,2,"Don’t worry too much about this thread and others like it! A lot of people love to gatekeep here because the skill ceiling is so high.  If your company decided to offer you a job after your internship, that means they are probably willing to invest in your success and train you to fit their specific niche! 
DevOps means a lot of things to a lot of people, so it could be that your company has more beginner-friendly tasks than others, or you’re just really what they were looking for! 

In general though, DevOps takes a lot of knowledge, because you’re working on systems that touch so many different pieces of the business.  That’s why it’s the definition of “jack of all trades,” and also why interviews can take some interesting turns (like above) when people are trying to say they have all that generalized knowledge, but really don’t. 

Of course, if you want to really dive into DevOps as a career choice, most people here would strongly suggest using the roadmap, as it’s pretty robust, but I’d definitely focus on whatever your company uses first and foremost! 
Gain knowledge in that, then you can slowly start adding other pieces in that you might not have experience with yet (like terraform, cloud, etc), but that people in the subreddit mention often! 

Good luck on your journey!",2023,Devops is not entry level
SuperMiguel,1,"Holy shit i dont know whats more depressing:
- OP candidates 
- Reddit DevOps saying they cant answer these questions 
- Reddit people talking trash to OP for expecting his DevOps engineers to know networking, basic linux skills, etc etc",2023,Devops is not entry level
dupo24,1,Sr. DevOps here. I make k8s go brrrrrr… I couldn’t answer most of those questions except the terraform part. Where is your CICD? Git? ADO? Pulumi? Ansible? How do you scale while keeping costs low?,2023,Devops is not entry level
Deleted Account,-5,"DevOps IS ENTRY LEVEL!

so tired of the gatekeeping... There is plenty of shit for entry level people to do on a devOps team.

get over your ""i walked 5 miles in the snow to school both ways. you must suffer before i take you seriously"" attitude.

a dude that started w 0yoe in infrastructure and killing it and making as much or more than majority here I bet. yea, snarky but, fuck ya'll outdated gatekeeping.

edit: just find people who are good thinkers, know how to problem solve and teach them the rest. this is pretty easy to test for and if they can do that, they can learn a port number.",2023,Devops is not entry level
laurayco,9,">Case and point: During the week I had a vacation, someone / something removed the 0.0.0.0 route to the internet for one of our big clusters. All hell broke lose. Because management decided to hire people that only understand how to write a yaml file, it meant none of them could do the absolute basic amount of troubleshooting to find why the cluster had apparent died.  
>  
>It took them 7 hours, and a call with aws support to find the cause. SEVEN HOURS. It blew the SLA completely out and the following week when I flew out to the client for unrelated matters, they brought it up. I had to sit and try worm my way out of explaining the actual cause.  
>  
>This is embarrassing. Utterly, utterly embarrassing.

It's not gatekeeping for the sake of gatekeeping, it's a matter of wanting people that understand the tools they use well enough to fix them when they fail.",2023,Devops is not entry level
tcpWalker,7,"People who learn well and are \_interested\_ are good hires as a general rule, even if they have limited XP, but it will take them a little while to get up to speed. You should hire some of these people.

Seniors who learn well and are interested get things done faster and have better understanding, but they're also who you call when the juniors mess up. They will turn the seven hour incident into a 15m incident if you're lucky, or a 3 hr incident if you're not.",2023,Devops is not entry level
Deleted Account,-1,agreed. OP is testing the wrong metric.  we have not gone wrong yet hiring for thought process.  will take a thinker over someone who can answer op's q's but can't think through an abstract problem.,2023,Devops is not entry level
Deleted Account,3,"dude, if you've got a team of devs then, you shouldn't need to turn to the dude w/ 0yoe to resolve a production issue.  if that happens to be the only person you can turn to then, your org has bigger problems.

and tbh, sometimes the hardest problems are the ones staring you in the face.. I've definitely done above tbh(wasn't on a prod cluster though :p), didn't take me seven hours but also had the oh duh moment..

can't tell you how many times i couldn't start my motorcycle and then realized after way too much time it was b/c i had switch the emergency shutoff unknowingly.

dude just sounds like one of those coworkers that thinks he's the only one that can fix anything and doesn't let anyone touch anything.",2023,Devops is not entry level
laurayco,5,"What do you think devops is, exactly?",2023,Devops is not entry level
Deleted Account,-2,"does it matter? in reality there is no singular definition that all companies follow. devops as a culture is a fairytale.

one place it might be devs actually being responsible for their deployments. another it might just mean infrastructure team. another might just be dudes who do CI all day long.  maybe another is all of those combined.

I do all kinds of shit... write internal services, k8 deployments, ci, terraform, repackaging our saas for on prem / air gap. migrating services between cloud providers, customer support, create poc's, yada yada.

just hit 2yoe but, according to ya'll i shouldn't touch any of that until 5,10,15yrs???

doesn't matter. the complaints here are fundamentally about ""ops"" not being entry level. which i think is bs.

i started in infra. having no problems. ymmv.",2023,Devops is not entry level
laurayco,3,"Okay. Personally, I don't want someone inexperienced to be in charge of my build pipelines, deployment paths, or infrastructure. If you cannot manage these things without modern YAML toolings, you do not have this experience. This isn't about time spent, this is about understanding the tools you use and rely on. If you ssh into a node, do you know why the containers running on it don't show up in pgrep or why the host suggests a port is available when it isn't? Do you know how to determine where a container is routing its DNS requests to? Do you know what ""COULD NOT FIND _GLIBC_2.8"" means when you try to run node 18 on debian means? Like, being able to diagnose ops issues is important (though if that last one makes it into production that's....something lmao) None of this stuff is something I would describe as entry level. If you have that knowledge, great! It's fine, there's no issue and entry level isn't for you. But I'm not entrusting these tasks to someone who can't point out the explicit port number in a url or tell me the difference between this and a path.",2023,Devops is not entry level
Deleted Account,0,"you don't put someone w/ 0yoe ""in charge"" of your build pipelines. But, do give them a ci ticket that is not mission critical and that you will do PR review on.  you give them properly scoped tasks so that they learn incrementally. don't give a 0yoe junior direct access to prod. do include him in the troubleshooting of it though when it happens so he can learn from observing... etc etc...

stop acting like it's always do or die. there are a range of tasks. ops is not always troubleshooting prod and trying to put out a fire.",2023,Devops is not entry level
ThroawayPartyer,2,"I have 0yoe of experience and I am in charge of build pipelines for hundreds of devs. It's exactly how you describe it. I don't do it alone, however we are a small team. I receive guidance and code reviews from the more senior members. I am constantly learning but that's a good thing.

Most companies would rather complain that they can't find any experienced engineers. At the same time they don't offer any junior positions where people can get experience.",2023,Devops is not entry level
trinaryouroboros,1,"\[childlike spongebob\] ""I can do a devops!""",2023,Devops is not entry level
Work45oHSd8eZIYt,1,I can answer all of those questions and I fantasize about the day I feel prepared/confident enough to go on an interview for a Devops position,2023,Devops is not entry level
tcpWalker,3,Work on your confidence as much as your skills. Do a few practice interviews.,2023,Devops is not entry level
Deleted Account,2,"I was hired w 0 yoe and could maybe answer 2 or 3 of those at the time.  I didn't even know terraform. learned the most basic shit it over a weekend using ""terraform up and running"" book to turn in a take home assessment for the interview. got hired for a position that was listing 2yoe minimum.  doing fine. got promoted at 1yr mark... went from 150-195k.  op is full of shit.

OP's q's are trivia.  get a minimum understanding and learn how to problem solve and explain why you would/wouldn't do something and you'll be golden.",2023,Devops is not entry level
ph1294,1,Fuck this is all so basic,2023,Devops is not entry level
SpongederpSquarefap,1,"Shit I know all of these things, can I have £100k please?",2023,Devops is not entry level
Tiquortoo,1,"This used to be all the black magic that real full stack devs knew beyond writing front and and back end code to create btrees, linked lists, hashmaps and centering a div vertically. It's definitely not entry level.",2023,Devops is not entry level
kacsandicom,1,"I have 23 years developer and 13 years ops experience, worked as a developer, lead developer, devops engineer, infrastructure engineer, lead infrastructure engineer, tech lead, I redesigned the whole infrastructure of one of the most visited website in my country (30-40% of the whole country is using it on a monthly basis).

Currently working as an SRE at one of the biggest tech companies in the world.

Still I wouldn’t be able to answer some of these questions (and lot of interview questions like these) because I am not using them on a daily basis.",2023,Devops is not entry level
Spider_pig448,1,"You don't need to know most of that. I say that as someone that does know this and doesn't use it.

How to check running processes? Check the Grafana panel that graphs that. How to check disk space? Check the Grafana panel that graphs that. How a web server works under the hood? Like the syscalls? If they understand the basic OSI model, they're good. Stateless and stateful firewall? I've configured dozens but I couldn't tell you. How to diagnose a slow Linux machine? `kubectl kill pod`

We have to start letting go of the basics at some point. In particular, If you're running containers on scratch or some equivalent, then we're finally ready to let Linux and all it's horrible tools start dying off.",2023,Devops is not entry level
arghcisco,1,"It’s weird how I knew all the answers to these things at different points during my career, but it’s only now that I make k8s go brrrrrrrrr that I have to use them all at the same time.",2023,Devops is not entry level
yasarfa,1,"Interview processes need to change. There is no developer or admin who remembers such thing by heart. Each person does a lot exploration while on job. Plus there are new things today (managed cloud services) where you don’t even need to know these things. While the world has progressed a lot, our interview processes still remain more or less the same..",2023,Devops is not entry level
DensePineapple,1,"From this thread I'm getting the sense that most ""devops engineers"" are just hooking together cloud services and don't even have a basic understanding of what's under the hood.",2023,Devops is not entry level
rbsafa,0,"Whatever dude! You sound like the type of interviewer l’d straight up tell to piss off! Just because someone doesn’t check all the checkboxes of your “what is a DevOps Engineer” definition, doesn’t mean they are not capable of figuring it out when needed. Most of the things you have listed is rarely something you do or need to know on a daily basis. Like who the fuck cares what happens when you send a request to google.com? Time to get off your high horse!",2023,Devops is not entry level
xorteP,1,"Nah man, if you can't explain how the electricity is produced in the nuclear reactor to power the servers, how can you pretend you can do the job?",2023,Devops is not entry level
Deleted Account,0,"serious question, how much does your company pay and for what experience level. is it competitive?

reading your comments and post it sounds like you get shit candidates and the people you work w/ are shit. or you just think you're the shit.",2023,Devops is not entry level
xorteP,0,"The last few days I got interested in the “devops” topic.

I’m interested in the full life cycle of delivering software, make it efficient, and team collaboration (dev-ops).

By reading the questions you ask at interviews, and how you present it, I’m not sure it’s a role that could fit me.

Would you still say it’s “devops” I’m looking for or should I look for another role?",2023,Devops is not entry level
tcpWalker,2,"tools teams can be interesting, devops or SRE roles could be interesting, backend roles could be interesting, a lot of places where delivering software, making it efficient, and team collaboration are useful.",2023,Devops is not entry level
xorteP,1,Yep. I think I'm just not aligned with  OP's vision on how to conduct an interview for a devops role,2023,Devops is not entry level
Deleted Account,1,"OP is asking trivia q's more along lines of sys admin.  i got asked none of this shit and started in ""devops"". I prefer to call it infrastructure though... devops.... too much baggage

you want to look for positions that will likely be ""infrastructure"" engineer or ""platform"" engineer.  you will likely be doing deployment and writing internal tools... db management, system architecture, etc...

Don't let this post discourage you.  just find newer tech companies and not these old school corporate offices and you'll be in a good spot.",2023,Devops is not entry level
rp_001,0,It’s across all tech. Pretty frustrating.,2023,Devops is not entry level
ovirt001,0,"cheerful melodic offer direful lunchroom scandalous dazzling handle repeat tan

 *This post was mass deleted and anonymized with [Redact](https://redact.dev/home)*",2023,Devops is not entry level
CompetitiveJudge4761,0,Pay higher if you want better candidates. The type of people you are looking for aren’t even applying to the role. Anyone can make a similar rant post about an interviewer they found who is asking these questions despite the pay being only around 100K.,2023,Devops is not entry level
NetCraftAuto,0,"Homie, most of this questions are for network engineers not DevOps engineers.",2023,Devops is not entry level
Rorixrebel,2,Homie you need to know that,2023,Devops is not entry level
Nuxij,-1,PREEEEACH I hear ya!! The worst is when they use the word WiFi in place of the word internet 💀,2023,Devops is not entry level
sarathywebindia,1,"Hit me up, if you’re still hiring :)
Honestly, I can answer most of these questions",2023,Devops is not entry level
KazzaNamso,1,Book me in lol,2023,Devops is not entry level
cienta609,1,Please give me the answer to how to debug a slow Linux machine 😂. I upgraded one of my servers from Ubuntu 18.04 to 22.04 and for some god forsaken reason curl requests now take 3-5x longer,2023,Devops is not entry level
esyste,3,man strace,2023,Devops is not entry level
tcpWalker,1,"Downloads are slower, or curl is slower to start?

If curl is slower to start I would be curious about DNS etc...; Linux has far too many ways of doing network configuration and I'm sure there were changes between 18.04 and 22.04, maybe something is timing out along the way.

If downloads are slower I'd dig into network metrics, did it change from wired ethernet to wireless or something?",2023,Devops is not entry level
cienta609,1,"Aws ec2 running a php app. Have a process that uses multi_curl to process lots of data. After upgrade cpu spiked and the processes were taking 3-5x longer. 

Reducing the amount of simultaneous process seemed to bring down cpu usage but it's still about 10-15% higher with 2x less requests being sent at a time.",2023,Devops is not entry level
tcpWalker,2,Maybe profile the server on both versions and see where most of the time is being spent.,2023,Devops is not entry level
proper_ikea_boy,1,"Still hiring? I know all these things.

Shoot me a PM if you also offer decent benefits. I'm willing to relocate to the US for 130k/year.",2023,Devops is not entry level
senpaikcarter,1,Finally landed a devops job after several years of learning all of the common tools like aws azure terraform kubernetes docker etc and I still have a long ways to go to learn but that definitely helped me out,2023,Devops is not entry level
Deleted Account,1,"Hey I can answer all of those, hire me!",2023,Devops is not entry level
aldoughdo,1,"This makes me happy to be honest.

Looks like all my hard work and grinding are preparing me for devops. Though I still understand that I have years more in IT before I can reasonably apply for a position.

Maybe 10 years in system administration first :)",2023,Devops is not entry level
ignivs,1,"Here I'm getting tired of knowing the answers and still not getting a job.

Based in Europe, if the position is still open (would love to relocate there but yeah, seems not possible anymore)",2023,Devops is not entry level
DatalessUniverse,1,Tbh I don’t know all of those questions off the top of my head.  I don’t think about DNS and routing problems everyday depending on my projects … but yeah for interviewing one should brush up on everything you mentioned.,2023,Devops is not entry level
chiznite,1,"We've abstracted so far, most kids have never seen a stick of ram or a serial cable, and they have zero cage nut scars on their fingers",2023,Devops is not entry level
Deleted Account,1,Is this job remote?,2023,Devops is not entry level
thechosenwonton,1,"As a person who will be looking at the end of this year (layoffs, company gave me a heads up) this is very good news; I know all this stuff backwards and forwards, and then some.",2023,Devops is not entry level
floppy_panoos,1,"I’m in the US and will take that job if allowed, and will automate the entire thing in the first 6 months PROVIDED I get to keep my current job as well.  No employment like OverEmployment baybeeee!!!",2023,Devops is not entry level
wouterhummelink,1,"I can answer all of these questions, and I am always amazed how it's possible to work in IT without being able to answer at least some of these questions.

That said I've encountered so many software developers that don't know what a three way handshake is, I've stopped counting.

How can you be a professional software developer or DevOps engineer without knowing the basics?",2023,Devops is not entry level
Deleted Account,1,"I know all of the answers to these questions, consider them to be really basic actually, have good experience, a good personality, and have gotten one interview out of like 60 applications in the last few months.

Maybe you're not being picky enough when you hire people. Other employers certainly seem to be.",2023,Devops is not entry level
burgonies,1,"All of that but the terraform part seems little more like sysadmin or SRE-type.  Granted, in a lot of places those 3 roles are one in the same, but sounds like the candidates are expecting a different kind of role.",2023,Devops is not entry level
js_ps_ds,1,"I learned most of that stuff at uni. I started devops in the second year of my career. Got promoted to senior devops engineer in my third year. Although i do mostly cloud, yeah you can do it at entry level. Not everyone can though, it requires above average interest in how things work and how they should work.",2023,Devops is not entry level
deadadventure,1,I got nearly 2 yrs experience and I can honestly answer more than half of them… what are these interviewees doing…?,2023,Devops is not entry level
sydpermres,1,Say that to my ex-colleague(very green in IT field) who bagged a DevOps role without any idea of how to troubleshoot ANYTHING in IT.,2023,Devops is not entry level
Deleted Account,1,"Same here, I had like 20 candidates … no idea how linux works, docker etc … but all of them want 100k+ … There is a company that generates those “devops” engineers by promoting everyone to that role, thinking how cool it is …",2023,Devops is not entry level
raisinbreadboard,1,HAHAHAHAHA this post makes me feel better about myself.,2023,Devops is not entry level
_azulinho_,1,you still hiring? i have two team mates that need to leave the job i just left. city/morgate based.,2023,Devops is not entry level
ElectroChuck,1,"Had a candidate come in for a server admin job several years ago...What does GPO do?  His reply was ""Gross Product Output?""  NEXT",2023,Devops is not entry level
pneRock,1,"My favorite thing to date I've seen is not learning networking because it's irrelevant. Irrelevant meaning that AWS manages your serverless stack network for you, so obviously it's not needed any more :).",2023,Devops is not entry level
RomanToTheOG,1,"What exactly would you want to know about these?

>what happens when you send a request to Google.com

>how a web server works under the hood",2023,Devops is not entry level
nutcustard,1,"The people I know in devops that are mediocre command salaries nearly 50% and if they are good/exceptional they can get 2-3x more.

Entry level means needing training, it sounds like you’re looking for mid level with a system admin background. :
Sadly that experience costs more $$$.",2023,Devops is not entry level
TenchiSaWaDa,1,"Same could be said of many positions within tech. There are those who work in very established pre-existing infrastructure and environments who dont know how to think outside the box or build something from scratch.   


Even if the dev/eng knows Terraform and AWS and networking, they could be lacking on how to build a scalable solution.

  
Example, is Terraform modules.   


People usually just slap resources all over the place. but what happens if you need to write multiple resources of the same type? Copy and Paste?  


Or just take the time to write a for each loop on a TF module and Make the code efficient. It's stuff like this that separates Engineer from those in, once again, a streamlined env.   


Sadly,  Ive seen DevOps become two different extremes in many companies. Either ONLY CI/CD and K8s managers or Everything team that handles networking, data, Production support, and anything else no one wants to deal with.",2023,Devops is not entry level
Zothiqque,1,"To think I was going to try and get my CCNA before applying to these jobs, maybe my personal standards are too high",2023,Devops is not entry level
ProudOfYourBoy22,1,Senior SRE here….what is a Terraform?,2023,Devops is not entry level
Deleted Account,1,If I have to explain to someone else that AWS aren’t stateful…and then what “stateful” means…,2023,Devops is not entry level
tt000,1,So are you hiring?  Hmmm  Export me to London Im in the US .  I can answer 90% of those questions off the bat. lol,2023,Devops is not entry level
MasterJett,1,"Those are valid questions, but for DevOps it’s how you solve it or burn it.",2023,Devops is not entry level
frankrice,1,Can't be remote from europe? Looking for job rn and I can name at least three linux distros :),2023,Devops is not entry level
deblike,1,"I'll put up a London landscape at the meeting session and happily collect that $130k, please!",2023,Devops is not entry level
Deleted Account,1,"This blows my mind, I have a year's experience (plus a compsci degree) and I'm about to start an aws DevOps job that pays less than half your number and I understand all of your points (granted not perfectly as I assume you can but still). 
I learnt it all myself but everyone still considers my position as entry level/graduate. 
I'm aware I'm probably a minority so I won't detract from your rant lol. Big up r/self-hosting for learning DevOps though ;)

(But srsly, I'm London based, dm me if you cant find anyone)",2023,Devops is not entry level
LaOnionLaUnion,1,"130k is too low for US to know all that stuff plus on call that’s usually required. 

Unless you’re in a low cost of living city with few opportunities",2023,Devops is not entry level
threwahway,1,"one thing you can do is to tell them the answer and see how they connect it to real world examples and other areas of interest, other questions you already asked. shouldn't add much extra time and could unveil a candidate that can easily learn this.   


do you ever question about how candidates take notes? how they organize information? proposed solutions to hypothetical scenarios?",2023,Devops is not entry level
lupinegrey,1,haha yeah,2023,Devops is not entry level
SuperMiguel,1,Sorry my 2 weeks DevOps bootcamp didnt cover any of these questions…,2023,Devops is not entry level
McAids,1,"I just graduated & started my career as a SWE, besides these things, what are some things I should definitely learn to transition to devops in 5-10 yrs",2023,Devops is not entry level
guevera,1,"Without googling, I can’t tell stateful and stateless firewall and I don’t know terraform, but everything else is clear and I’m. A dev not ops guy.",2023,Devops is not entry level
New-fone_Who-Dis,1,"Do you recruit yourselves or do you use a recruiter? I've aced every direct hire interview I've been invited to almost all my working life...via recruiters, nope.

I'm junior to mid and could give proper answers to half your questions, the others I could take a good stab at.

To me, it sounds like your first sift in your recruitment process is letting you down, meaning you're wasting both you own time and the candidates time imo.

Forgive me if this sounds harsh, limited information will mean I give a limited answer, and I'm sure there's things which I'm picking at here you could brush aside with further information.  Another view I could take is that you are selecting from a limited pool of applicants that fit your needs, meaning you might have to home grow your internal talent in order to fill those roles...but I duno, I'm only a junior to mid.",2023,Devops is not entry level
j6000,1,Maybe this is why I’ve no issues finding a job lol. The playing field leaves a lot to be desired in a candidate,2023,Devops is not entry level
Emotional-Box-6386,1,"Been looking for this type of job since this is certainly my expertise. Got bored at some point and pursued cloud. And amazingly, the stuff you knew as sysad and a scripting nerd will forever be with you, no matter the “brand”. Whatever new provider comes up, you’re ready. If you’re willing to get a remote contractor for cheaper, let me know.",2023,Devops is not entry level
NormalUserThirty,1,Just hire a sysadmin if you want a sysadmin,2023,Devops is not entry level
siberianmi,1,Going to have to chime in here that you aren’t paying enough.  I can answer everything on that list without an issue but I’m in the Midwest and your pay is at least $50k if not $70k too light.  And even if it was higher I wouldn’t consider it since it wouldn’t be enough.,2023,Devops is not entry level
Perception-Dramatic,1,Is there any way i could apply op. I could answer most of these of these questions and have 6-7 months experience but based out of india.,2023,Devops is not entry level
Jupiter-Tank,1,"AWS DevOps/Architect role gave quarter million to people who could describe RAID.  Buddy everyone's out of touch, including you.",2023,Devops is not entry level
PudgyPatch,1,"I am (hopefully) in the last legs of the hire process for an embedded networking devops engineer (transition tools from Perl to python and off the shelf solutions patch management) I am super excited about it, even getting as far as I have! I have practically no experience beyond classroom projects, which is.... problematic. I do think a thing that is being missed as far as server management (for me) was i was largely taught with cloud tools: server giving you problems? burn it. that really isn't an amazing solution for a bare metal or even VMs running within a bare metal.  I need more Linux, yeah.  I also wish there would have been more playing with containers.  couple of units here and there but not a ton.  I did do my own project with a single container, but that only went so far (it was home assistant and the thing I wanted to do was Api locked...so gave up:( )oh and same issues with networking (i really liked cisco so I kept going, I have something close to a CCNA level of knowledge however with the amount of experience I have I don't think I would do great on the test, I know how I learn; I need to see more)my home lab issue is cost and utility: hello world can show me a build, but isn't really going to break, isn't going to need DB migration; I need something that is sufficently complex, but personally useful...that's going to get pricey .but OP: nothing about pipelines? infra testing?  testing types? it super seems like you want sys admin over devops, unless these are the questions everybody has problems with after getting devops questions correct.

EDIT: a word",2023,Devops is not entry level
Redstonefreedom,1,"These kinds of comments never made sense to me. What do you mean by ""how DNS works""? To what level of depth & complexity? That could mean:
- UDP
- that it's actually application layer supporting network layer in a weird way
- the real world setup of dns (openssl cert stuff on the CLI)
- resolvers, cache, servers
- change propagation & expected delays when you change something
- that mostly everything points to CloudFlare's (1x) or google's (8x) which is public
- that you Can configure, and orgs often do for convenience's sake, your own internal TLD
- oh, or what about TLD and subrouting
- or about how the subrouting usually just happens by pointing to the same server and mapping it all in Nginx, so really, it's basically just a PATH nowadays unless maintained by the architect to split on convention
- or why does DNS use UDP and not TCP
- or why DNS has recently been considered a security leak 
- or how to configure DNS to be publicly accessible (I definitely don't, never have, and just use a service)

I don't even know what I could consider ""knowing how"" DNS works & not. I'm definitely no expert and consider it a weak area. But when you share your experience of ""all devops people are dumber than you'd expect"", I just don't really get any value out of reading such a vaguely constructed post. 

Normally, when people interview, they have a nasty tendency to only testing on their specific scope of information, and sizing up people that way. I for example can tour you through what i think are 3 fundamental layers of abstraction when it comes to git (it's just diffs, actually it's not, but actually it is) including commands for each layer to highlight the implications of this abstractive layering. But if I test someone on that, it's unlikely they'll be able to match parity with what I myself could answer, since I'm the one asking the questions.

I would implore you to consider the old adage ""if everywhere you go, it smells like shit"" in terms of ""if no one seems to be meeting your expectations, perhaps you have too high of expectations"".

Computer science can be wildly complicated and if you expect, as a casual or basic aside, someone to ""know how DNS works"",  and only pay $130k, you're going to have a bad time. 130k is not sufficient to pay for someone who off-hand studies 100-hr domain areas of 100s of different possible topics that are available to us in CS. You've got to specialize somewhat. And you've got to coordinate those specialities. If you can't narrow down what you're looking for, you're going to have to pay for the knowledge you want out of someone.",2023,Devops is not entry level
rewgs,1,Suddenly feeling way better about my chances.,2023,Devops is not entry level
nestersan,1,I'm a lowly sysadmin and I know those things. Is there hope for me?,2023,Devops is not entry level
manjit2990,1,Hire me pls I know all of it.,2023,Devops is not entry level
conall88,1,"seems like I should start applying instead of thinking ""I'm not ready"".

\-I already offer enterprise support for a SaaS terraform provider

\-I'm kubernetes admin certified, and troubleshoot client implementations of our operators , deployments and statefulsets.- wireshark and fiddler see regular use for looking at TCP/IP and TLS handshakes.

\- I use configuration as code and provision my own infra in my homelab

\-I secure everything in my homelabs with TLS using cert manager and ansible playbooks, using a letsencrypt CA.

\-I observe my logs and setup alerts on metrics using prometheus and Grafana.

\- etc etc

Shame i'm in Ireland. oh well :-)",2023,Devops is not entry level
Deleted Account,1,"bro, start applying asap.",2023,Devops is not entry level
SShreyas17,1,"This sub is demotivating me more than anything else up until now. I've just completed my sophomore year (the next semester is yet to officially commence) and all I've done until now is DevOps (Linux, networking, docker, K8s, Jenkins, Ansible, Terraform, etc.). 

Should I switch my domain at this moment? I do wanna work in this domain (I just love it), but some are saying it's not an entry-level job, others are saying it'd be difficult to switch to the SWE role (I don't want to close that option either).",2023,Devops is not entry level
Deleted Account,1,nah ignore the grumps. buncha old fogeys nostalgic for the days of yore. stay on your track.,2023,Devops is not entry level
Deleted Account,1,I see a lot of k8 talk what does kubernetes have to do with devops?   I know we can create artifacts to be deployed via k8 but that’s seems like a small part of ‘devops’ Am I wrong to think that devops is mainly ci/cd/work item management?,2023,Devops is not entry level
rUbberDucky1984,1,Hey I’d take it but not moving to London. Also agree I meet plenty of people that use DevOps tools but know very little about DevOps as a discipline.,2023,Devops is not entry level
onyxengine,1,I don’t know complete answers to most of this stuff because ive been programming and not doing dev ops but i could have all that stuff straight in my head in a week.  I could solve dev ops problems you threw at me by just reading docs generally.,2023,Devops is not entry level
TechMeOwt,1,That’s terribly low for devops 🤣🤣🤣 and you have the nerve to be venting. Go vent to the big wigs for more budgeted money.,2023,Devops is not entry level
SaintEyegor,1,"I worked with a guy who billed himself as a devops engineer and fooled my idiot boss into hiring him.

I’ll admit that the guy was good at puppet, but doesn’t have the basic knowledge about Linux or networking that he needs, so he was an utter trainwreck. He left a few years ago and we’re still stumbling over broken crap that he pushed out. One of his classics was setting up services on his workstation that ran with his UID.",2023,Devops is not entry level
Deleted Account,1,"Wot I know about this, I have a degree and I make...$0, no trolling, i live in a shitty country.",2023,Devops is not entry level
zensayyy,1,"It's not about the entry level thing because these are all undergrad topics taught at almost any school. It's more a sign of the time where decades of abstraction and specialization has moved people toward becoming very good at one specific tool and not the topic itself. I mean it's also your fault, as someone who hires, for requiring X experience with Y TOOL, not topic in general. Obviously, people will take the short route it that case and focus on the tool. But it's actually super easy to learn a tool if you understand the concept, but I guess management/hiring process does not understand this sometimes. 

In my opinion, devops shouldn't even be a thing. A senior SE should be able to do that (obv also compensated equally) since its requirements are deeply nested with product the company builds (which a Senior SE should know best).",2023,Devops is not entry level
imti283,1,"unfortunately devops in the current context for freshers and up to 3-4 yrs exp folks means lots of tools, pipelines, Jenkins, docker, kubernetes blah blah. 
I had folks in my team hired as mid-level (4-6 yrs) exp and they don't know - how iis or nginx works. How table reindexing works. Fundamentals of tcp/ip. How CORS works..etc etc.",2023,Devops is not entry level
mojokanojojo,1,"So wait a second, i can answer all those questions, make k8s go brrrrr and a lot more and i make 60k a year? I think i need to change my job...",2023,Devops is not entry level
icecreamocon,1,"I have 5 years experience as a network guy and definitely feel like i know everything except the last two. But i don’t feel like learning Python and terraform and the rest of the stuff that comes up when you search for a devops roadmap is all that’s standing between me and devops cause of other posts on Reddit. I don’t feel like self teaching the things I’m missing would lead to me being able to find a job. That would be the general consensus of people with devops jobs in this sub, right? Cause that’s the biggest reason I’m more seriously considering going back to school than buckling down and self teaching",2023,Devops is not entry level
swaite,1,I learned all this and more while studying IT at community college. I can has entry level DevOps job?,2023,Devops is not entry level
ednnz,1,"That's what happens when your job title is trending, it's unfortunate but people want to be a devops eng/sre/you name it, because it's trending rather than because they are qualified for it.

People saying it's a salary issue are out of touch with EU salaries, basically double whatever EU salary to get the same QoL in the US.",2023,Devops is not entry level
rotten_911,1,Would be glad if you can list more questions so i can fill up my networking/admin knowledge as im software dev and kinda missing that stuff :),2023,Devops is not entry level
Edd90k,1,I mean to a point I agree but is your estate so old that those are the most relevant questions? I’d rather someone knew how to work kubernetes than tell me 15 Linux distro names. You’re old school. Most candidates won’t be. Also. Look for Linux sys admin not Devops.,2023,Devops is not entry level
todo_add_username,1,"Answers, in same order as questions:


- Talk to people at business related events and try to create connections
- Rotterdam, Hamburg, Antwerp
- Try to hit it or shake it and maybe it will bump the loose connection into place
- Record the subject while running and analyze the footage
- You either get a  reply or get ignored
- Oh, its like a computer
- Usually there is a label on the hard drives 
- Some hacker in a basement with a black hoodie and gloves on hacks into the mainframe
- 12 Inch albums (LP), 7 inch singles, colored vinyl records
- You actively alter the topography, atmosphere, temperature and such of a landscape or planet or similar - for example if we could terraform Mars it could be habitable for humans to live on


When can I start the job?",2023,Devops is not entry level
Lupexlol,1,"Of course you’re having issues with finding a good candidate.

You want a devops, but only ask sys admin questions. 🦦",2023,Devops is not entry level
vgk8931,1,"Funny, I have almost 7 years experience as a SRE, and about 16 years as an NetSysAdmin before that. I can answer all the above questions, and I am barely getting any interview calls.",2023,Devops is not entry level
Teker1no,1,I can give an answer to everything above except Terraform as I haven't used it before. Am I qualified? lol,2023,Devops is not entry level
Backlash5,1,OP wants your resume and wants it now,2023,Devops is not entry level
eschatosmos,1,"Feels good man. I'm a self-taught neet with nearly crippling learning disabilities and I could do 9/11 of those with flying carpets and I might be able to bs my way through the others. Hey op is cisco cert a good investment for me? I only don't know what terraform is and I don't know much about firewalls or actual corporate architecture/infrastructure but I can use wire shark and packet tracer and 'print statement debug' any network problem I've ever run into as a learner and geek.  


My understanding of dns, tcpip, udp and tunneling isn't elementary but it isn't graduate. I just haven't gotten much experience in networking yet. I can  I could probably stumble through some issue like what you mentioned on your vacation with some combination of looking at diffs and catting together some log files and taking a half hour to write a couple of regex or sql query or python script or whatever it is that's needed to massage out the bug... and adrenaline-fueled educated trial-and-error, of-course.",2023,Devops is not entry level
kYllChain,1,How do you calculate those 130k$ ? Is this your employer cost or your salary before taxes ?,2023,Devops is not entry level
Deleted Account,1,"Maybe look for a sysadmin with containers, k8s and CI/CD knowledge instead.",2023,Devops is not entry level
Ogi_GM,1,"Demand in London is quite high,anyway it seems that there is a shortage of qualified people.",2023,Devops is not entry level
Ok_Exit4065,1,here chemical engineer trying to set foot in IT can answer everything mentioned,2023,Devops is not entry level
Backlash5,1,">how to check disk space / free mem on a Linux machine  
what common ports are  


mate that really cracked me up   
what background are people trying to get the job? Not knowing fundamentals?!",2023,Devops is not entry level
Chieikes,1,"Hire me please, I know the answers and I haven’t landed on the new position yet.",2023,Devops is not entry level
foork,1,Oof. Good people are hard to come by.,2023,Devops is not entry level
pracyvnas,1,Thas because youre looking for an SRE.,2023,Devops is not entry level
someguytwo,1,"Do you hire remote? 'cause I know all that stuff, but live in eastern Europe. :))",2023,Devops is not entry level
LandADevOpsJob,1,"We are slowly losing our ability to do even basic tasks. Think of the ""change machine"" you see at most fast food or gas stations. It just spits out the change based on what the person keys in. Pretty soon, they won't even have to key anything in. A camera with AI will recognize the bills they are holding and spit out the correct change. Then one day, these poor souls won't even be able to count change, much less do basic math. The same thing is happening in DevOps. Everything is ""push button"" now. All the tools have become so opinionated that they don't even allow you to configure them beyond a certain point. This is all in the name of ""simplicity"" and ""ease of use"", but at some point, if you don't understand the underlying technology, you're not going to be able to fix or scale your solutions. 

If you want to do basic stuff and ""stay in your lane"", sure, you can disregard most of these things and never have to worry what a filesystem is. But the real stuff happens down in the weeds where people with actual experience and knowledge work. You can't idiot proof everything, and it seems the idiots are growing at a faster clip than the smart people can keep up with.",2023,Devops is not entry level
AlissonMMenezes,1,"Man,

I am a devops engineer since 2014 and i also do interviews.

Nowadays people don't know how to read anymore, they just copy commands from google and if it doesn't work, they dont't know what to do anymore.",2023,Devops is not entry level
irosesDoMar,1,">how networking / routing works

it's mostly tubes and a lot more cats than it probably should

>how to diagnose a slow Linux machine

are you from the past?

>the difference between a stateless and stateful firewall

the stateless firewall is very silly and forgets things

>what happens when you send a request to Google.com

the browser starts by correcting Google.com to all lowercase

>how to check disk space / free mem on a Linux machine

you look it up on grafana

&#x200B;

can I have 130k now?",2023,Devops is not entry level
Waabbu,1,Are you willing to hire for remote work?,2023,Devops is not entry level
Rorixrebel,1,"Interviewed someone recently and asked what DNS Is and what it does... Got told it's an encryption mechanism... How are you gonna design systems and its reliability with that knowledge..
Definitely not an entry position",2023,Devops is not entry level
StealthRabbi,1,"Either your job title and description are wrong, or the interviewer doesn't know what DevOps is.

What does knowing multiple Linux distros prove?",2023,Devops is not entry level
Ok_Message_2524,1,"100k for a solid DevOps/SRE Background in UK?  
I'm keen to see those Salaries in Germany in a Decade or so.  
Back then I've exited my old SRE-Role with 50k.  
You should consider hiring full-remote ;D",2023,Devops is not entry level
Bubby_Mang,1,"There are SOME devops stuff (iam accounts, ansible scripts) that an entry level kid with a degree can do for $80k.",2023,Devops is not entry level
Fantastic_Context645,1,"I run into this a lot as well. I think it’s a product of the “Digital Transformation Age” where people just assume that “everything is in the cloud and we don’t need to worry about those concepts”. For further context on my comments below, I do Infrastructure Architecture (mostly at the Solutions Architect level).

I can’t tell you how many times I’ve spoken with Directors, VPs, CIOs, CDOs, CTOs, CISOs that just don’t understand the concept that there’s more outside of AWS/Azure/GCP. I literally hear comments like “networking won’t exist in 5 years or it will be so basic anyone can do it, so why are you recommending we spend more money and have core and distribution layers at our offices when we can just do a cheaper access layer”. (Those offices in many cases being warehouses that need 100 APs and have 100 people and they want to add autonomous robots in the future).

As much as platforms like AWS have made things more simple (love cloud platforms by the way), the effects are people from the top thinking you don’t need all of that knowledge, and people from the bottom thinking you don’t need all that knowledge. “The cloud takes care of it FOR you”.

Just my $0.02.",2023,Devops is not entry level
jona187bx,1,Devops roles require a broad range of skills.  Honestly 130 wherever is way too low.,2023,Devops is not entry level
SeisMasUno,1,"I know all that stuff and then some, 10 years sysadmin, 1 year as DevOps, I’m not London based but if remote is ok I can do an interview with you.",2023,Devops is not entry level
JivanP,1,"I'm a Londoner looking for work and my expertise is at this level, so feel free to DM me here or on LinkedIn if you're still hiring: https://linkedin.com/in/jivanpal",2023,Devops is not entry level
gravityaddiction,1,Find someone who gets passionate if you tell them bsd and linux are the same thing.,2023,Devops is not entry level
bentbrewer,1,Wish I was in London. This is the job I’m looking for and have the experience to do.,2023,Devops is not entry level
SP_reborn,1,Geez I know all that stuff but I'm not getting paid nearly that amount...,2023,Devops is not entry level
Deleted Account,1,Looks like you're looking for a Sysadmin tbh.,2023,Devops is not entry level
Deleted Account,1,"Holy shit, I know ALL this stuff and I'm on a LOT less than that salary. I really should apply to some better positions.",2023,Devops is not entry level
Camp-Complete,1,"£102k is more equivalent to $200k US in terms of IT salaries. 

I've been a SysAdmin for 5 years (based in Wales) and I could answer most of those questions.  To me DevOps is a lot more than this though.",2023,Devops is not entry level
gpzj94,1,Is this remote? I'm in the states and would apply if it was 🙂,2023,Devops is not entry level
xouba,1,A pity it isn't remote. But at least I know how much I could be earning in London.,2023,Devops is not entry level
waste2muchtime,1,"I know most of the stuff you mentioned, so hit me up. UK based. DevOps Engineer. 2.5 years experience.",2023,Devops is not entry level
Deleted Account,1,You are not finding all that with that low pay. 130K is nothing in the field now days,2023,Devops is not entry level
NikolaeVarius,1,This is year 1-2 Stuff. Your pipeline needs help.,2023,Devops is not entry level
Deleted Account,1,"I can do all of those. My job title is ""Windows and cloud infrastructure engineer"" I can do all of those plus more. (VMware, storage, CCNA, a little bit Python) Should I apply?",2023,Devops is not entry level
Dzonikaaaa,1,"Man i know everything you mentioned and lot more, high demand technologies and i work for 20K eur per year... Sad parts of the Europe :( Im engaged on US and CA projects as a full time contractor and i have like 10 times less salary than my US and CA collegues for the role and project.. :)",2023,Devops is not entry level
brdn,1,"Your candidates are only going to be as good as your salary. You’re offering an entry level salary. Anyone that knows, also knows better not to apply.",2023,Devops is not entry level
Hotshot55,1,">Last week a candidate told us he’d use ChatGPT or Google to find the answer. Ok, I mean, it’s a valid answer, but when you have no understanding of the fundamentals, it’s an utterly horrific answer.

That's because everyone keeps telling new people ""you can just say you'll look up the answer because that's the real world solution"".",2023,Devops is not entry level
joemysterio86,1,"To be honest with you, I've been a network engineer for the last 4.5 years, I have 10+ total years of IT experience. I don't memorize common ports anymore, I would just Google that shit whenever I need it. But then again, I guess I would try to commit it back to memory once I start interviewing again........",2023,Devops is not entry level
adathor,1,"Back in the days (10-12 yrs ago) I was looking for people for both tech support and sysadmin roles, and faced similar problems. After some pain I came up with these 3 questions so we wouldn't waste each other's time:
- what is a MAC address
- what is an ip address
- what is the difference between the two.
You answer these 3 and we start the actual interview, if you can't just one we go separate ways in less than 5 minutes.
Never in my life have I ever gone through that fast that many people in a week, but we did find the right fits. 

And yes, DevOps is not an entry level job. Cringe when I see a company looking for junior DevOps folks...
I do hope that you find the right fit tho, there are still a lot of good, skilled engineers out there, it's just pretty hard to find them.",2023,Devops is not entry level
z-null,1,I know all of that. Where do I apply and can I work remotely from EU (I'm willing to take 20% pay cut for full EU remote)?,2023,Devops is not entry level
Dedcode_x,1,LOL I'm a graduate and know all the shit but no one hires here(India).,2023,Devops is not entry level
Definition-Ornery,1,"are these skills listed in your req or disguised as ‘linux proficiency’

listing the items may help the intrepid job seeker to learn and prep for the interview which may lead to better interviews for you",2023,Devops is not entry level
jamieelston,1,Sounds like your bringing in the wrong people for interviews,2023,Devops is not entry level
CapitanFlama,1,"Man, so many people here felt threatened by basic understanding of networking. 

6 of 11 bulletpoints of Op's rant are networking related. And they're not even CCNA-CCNP ""you'll work in a dusty datacenter with a 48 port switch"" type of knowledge. But basic DNS and networking that you'll find in any k8s, docker-swarm, ec2, google compute, azure compute environment.",2023,Devops is not entry level
28carslater,1,">One candidate, couldn’t name more than 1 Linux distro…. ONE!!!

Ubuntu, Lubuntu, Red Hat, Slackware, Knoppix, Debian, FreeBSD (no Linux, but still). Never professionally worked with anything but an MSFT stack, but I run Lubuntu on old Thinkpads.",2023,Devops is not entry level
raylui34,1,"I am about 1.5 years into DevOps, and I struggle with any sorts of programming and scripting (still learning). There are members on my team like you described who doesn't even know how to ssh into a linux server, what ports actually are, blew away backups , among others",2023,Devops is not entry level
Bubbly_Penalty6048,1,lmao wat?,2023,Devops is not entry level
LavishManatee,1,"First, lol at ""15 years and I've seen it all"". 
Might want to think about that a sec before talking to a large community of people doing tech, many for more than twice that length who still haven't come close to ""seeing it all"", whatever that means.

Second, I'll move to the UK to take this job at $130,000. I love the chatGPT answer, they haven't a clue on how to audit the answers - just ready to try anything it spits out in a production environment because ""the robot told me to!"" 😂 

Wow",2023,Devops is not entry level
vanlong-me,1,Can I have chance to apply to your job ? I can take only 50% salary base :seriously,2023,Devops is not entry level
BelladonaOfHappiness,1,"Are those subjects you mentioned really that important for interviewers in real life? I totally understand they should be basic requirements for positions dealing with systems, but are they a differentiator when competing with other candidates for a Junior-Mid level job?

I am a CS graduate and a data center engineer with 3 years of experience and I know my fair bit of networking, virtualization and scripting, but didn't get much hands on experience with cloud or more DevOps oriented technologies. I am dreaming about transitioning to DevOps after some studying of my own, but I fear I would have a downgrade when it comes to perceived experience and salary.
I need an honest opinion, as I've been struggling with the stupid thought that it's to late to transition to DevOps at 23.",2023,Devops is not entry level
Specific-Constant-20,1,I'm in ireland is that remote?,2023,Devops is not entry level
Swimming-Book-1296,1,"Look at people leaving amazon. They are requiring people show up to office now, so you can probably find remote people.  


oh wait: ""The candidate will be London based. So £102k. Which is typical for London""  
\- never mind, HAHAHAHAHAHAHAHAHA, that's why you can't find anyone.",2023,Devops is not entry level
liviudm,1,"Your expectations are right in terms of knowledge, but that’s very rare to find. These days everyone is doing yaml-ops with no knowledge of what actually happens underneath. When you started, you probably didn’t have any package manager, you had to compile the kernel, played with LFS, and knew all 7 OSI layers. You can’t find anyone with that experience these days easily. Not for that budget at least, in a market that basically has no borders. Stop looking for candidates coming from corporations and target the ones working at innovative startups. You might need to up your budget by 50% to become attractive and offer other incentives, like stock options. It will be hard and it will take time to find the right one, but you can find it. Good luck with your search. You know what you are looking for, you already know more than the rest of the companies that are currently hiring",2023,Devops is not entry level
giovaaa82,1,I wonder what is the net of those 130K $ considering healthcare/retirement funds and if it is sustainable based on cost of life,2023,Devops is not entry level
GloriousPudding,1,"You're mixing DevOps with Cloud Engineer and SysAdmin, I hope you gave an example of what the candidate is expected to do once hired because you wouldn't know from the title of your post compared to the contents.

Yes it is true those are basic questions and I would expect any type of web developer mid and above to answer most of them but strictly speaking person doing the DevOps doesn't need to know that.",2023,Devops is not entry level
Frustated-Nerd,1,"I will work in less than half the pay of that 🥲

Yes I will answer those questions with real life examples and my personal experiences dealing with them (:",2023,Devops is not entry level
axbu89,1,"Oh god, it's beginning.

Im wondering at what point ChatGPT has so much sensitive data about company/government/defence networks fed into it by dipshits that it gets spat out on someone's result and there's a massive data breach that ensues.

I literally raised it with our cyber security team as something that needs to be blocked and employees, especially high level admins need to be educated on the dangers.

That data doesn't just disappear, it's learning from your inputs amongst other things and it will spit something out to someone outside of the company one day.",2023,Devops is not entry level
nilo_ds,1,Ohhhh mate. I wished I had a different nationality to be able to apply. I'm a former Google engineer stuck in LatAm and tired of trying to find a job that isn't staff augmentation for a sector 7G team.,2023,Devops is not entry level
yukinok25,1,This gives me hope to start a career in DevOps thus.,2023,Devops is not entry level
dupie,1,"This thread is a wild ride between the greybeards and the PFY.

When you don't know fundamentals, just how do you justify your worth?",2023,Devops is not entry level
GCUArmchairTraveller,1,"Well, at least you did not ask the candidate to explain how strace works...",2023,Devops is not entry level
Zeal514,1,"Wow.....  I never had the opportunity to work on the software side of IT.  But I did manage to get into fixinghardwarefor the state.  Vending, terminals, deadlines, some software flashing, managing tons of local networks.  Nothing complex at all, 1 router, 1 or 2 devices, just run a cat5 cable lol.

That said, I been practicing and learning in my home lab the past year to get a job, somewhere in the it field, hopefully something with AWS, or maybe even devops, but I can't say I am hopeful for devops, I certainly am terrified of applying cause I don't think I know enough....   that said.  Imma try and answer these questions.

>how networking / routing works

I think I have a halfway decent understanding.  I did just setup a openwrt router with 10 VLANs, and a managed switch.  Set up a trunk to my main PC, so I can test and switch Vlans as I see fit.  Can't say I'm a expert.  But I know you need a proper dhcp server to dish out IPs or use static IPS.  You need to set the proper subject mask based on how many IPS you need, and you need to allow traffic through the firewall.



>what common ports are

53 DNS, 67 DHCP, 80 http, 443 https, those are the most common I think.

>how to diagnose a slow Linux machine 

Well check the processes.  What is causing the machine to run slowly?  Always the first step.  From there address what that issue may be, a program?  Lack of ram?  Failing storage drive?  I'd launch a process manager, do t know the cli command off the top of my head, but googles free.


>how to check running processes

Don't know the command off the top of my head.

>what happens when you send a request to Google.com

Well first you go to the DNS server to find the IP.  Than you get routed to Google's IP address, with a SSL handshake, they SSL match, you are good to go.

>the difference between a stateless and stateful firewall 

Ooo, just learned and forgot this in my AWS course.  Imma try though.  Stateful store data and use it going forward, while the stateless split are, with no knowledge of the past.  I imagine in a firewall this means the firewall remembers the traffic it's blocking and not blocking, or if it treats the user/client as if it's the first time everytime.

>how a web server works under the hood 

Not 100% on this.   I've set up reverse proxies, and can launch a site in 2.5 seconds.   But how the actual web server works can't say.   I can say that you need to choose either http or https.  If https, you need to setup a Let's Encrypt automation process, to gain a SSL cert.  This can be done by either tls or DNS checks, with the LE bot placing a file on your server, or setting a temp Domain to verify the SSL.  From there, you need to ensure the domain provider has the public IP, potentially setup a ddns, enable the proper port forwarding.  

>how to check disk space / free mem on a Linux machine (?!?!???)

lsblk, df -h, du-h (path).  Well, first you'll need to know the memory hogging processes, like I said don't know it off hand, but than you can just type kill PID.

>how DNS works (?!?!?!?)

It's just mapping domains to IPs.  It sends out a request, which is first checked at the cache level, than goes out to the DNS server, there's some chatting back and fourth (not 100% on the exact steps), but then it comes back with the proper mapping.

>the different record types and their purpose

I don't know what this means, I'd love info on it.

>how terraform works

Can't say I know how it works exactly.  I know it's infrastructure as code.  I know it's great for setting up base systems, but not so much at configuring the systems beyond that.   I know it's often used with ansible, and when used properly, you can deploy hundreds of the same machine over and over.",2023,Devops is not entry level
KaihogyoMeditations,1,Not to criticize you but is there a better way to screen out candidates before interviewing?,2023,Devops is not entry level
crzaynuts,1,"Started Linux in 1998 here. Working as sysadmin, troubleshooter, performance improver, incident manager since then…

I never found someone in a ready to go state. 

So my personal strategy is to select only those I perceive they are curious enough to learn and improve their skills/knowledge/ experience. 

Then I mentor them. 

A lot can be achieved with 6 months of proper training and slowly increasing stress/pressure of managing whole platform/system.

I also benefited the same process myself. When I had to climb a major step in my career. 

I was the 63th candidate for a specific role of managing 200 servers for a low latency trading desk in a bank. 

I just demonstrated that I was willing to learn and make overwork for it. 

Spent the next 9 months as ghost hand of the main sysadmin, and learnt everything I could, until the point I was able to fully manage the whole platform alone and continue the r&d in performance chasing by myself. 

I was then able to contribute to global design in very positive way. 

This resulted in a 37% latency improvement, and 0 incident on the whole platform for more than a year. 

This ended abruptly when the managers were pressured to shift contracting to another company, I wasn’t in charge for next candidate interview, they selected someone I had to handover for one month before my leave.

I raised warning that the new candidate wasn’t appropriate for the job, after he challenged me when I asked him for his ssh key. « I don’t use ssh, I just use the old fashion login/password way » 

No need to say that 2 months after I quit, they had a major incident on the platform with some few millions lost.

My personal strategy is that I try to select those with the good mental state. I don’t care much about their technical skills if they demonstrate positive mental posture about learning and critical thinking. 

Of course I’m happy when I find a shining diamond, but they are rares.

There are many stone in the mud, some of them are just asking to be polished and turn in a shining gems.",2023,Devops is not entry level
Zeal514,1,"Man, I hope I come across someone like you when I start looking for jobs in a few months!  Personally, I always been talented with PCs, just didn't go to college or work on the software side of things.   Been fixing mostly hardware, some light networking and software (I manage with my team, over 2000 locations of small networks, all hardware, from terminal to Vsat).  This past year I been getting back into my software tech side.   Trying to go either devops, or cloud engineer, studying for AWS certs next.   I made all desktops and laptops in my house Linux, and admin my wife's and father in laws as need.  Than built, now finishing, my 2nd Ubuntu server, running docker apps for media, reverse proxy, password manager cloud, etc, even published a few web apps live to the internet and have to setup either a headscale or netmaker instance tonight.  The rest is just minor app configurations.

Ultimately, I am trying to soak in as much as possible.  Are there any hard skills you'd recommend I take initiative on learning?  What could I say/do/put on my resume to show that I am willing to learn, and capable of doing so, to signify to someone like you I am the right candidate?

I am planning to make some YouTube videos documenting a lot of the work I've done at home, from building a wood shop, a CNC, 3d printer, home network/openwrt, and home lab, and using that as a portfolio.",2023,Devops is not entry level
YuraPoltora,1,"I know answers for all questions (10+ years of IT, started at ISP company, so even BGP I can explain) and am working as a devops, where to apply for a job? is it possible with relocation? 🙂",2023,Devops is not entry level
Specific-Constant-20,1,"I\`m a CCNA ""2023"" and a software engineer bsc ""2022"" and AWS SAA03 ""2023"" i'm pretty sure i could build myself to a point where I could solve your Linux issues fast with a bit of google and gpt  


I can answer most of your questions, but I would google the Linux troubleshooting and GPT as well i can use  ps -ef | grep processname but i don't always remember so i have then on my notes place  


your interview is just bad  
on top of that i can do terraform, python, ansible, CI, CD, docker and K8s you probably would say not to me cause  i forgot the Linux  command lmao",2023,Devops is not entry level
large_crimson_canine,1,Man…I have less than 2 YOE as a regular dev and can answer all this pretty easily lol. How tf can you be in this industry and not know Linux basics?,2023,Devops is not entry level
Cylon_Model-6,1,"Hell - I'll take that job.  
But needs to be remote, at least at first.  Please DM me.",2023,Devops is not entry level
Fearless-Peach,1,"Brb, saving this post for my devops interview",2023,Devops is not entry level
0Camus0,1,"Hey, but I am sure they can solve LC mediums in less than 45 minutes! That'a what matters, right? /s",2023,Devops is not entry level
Proof_Regular9667,1,I’ll interview for your position.,2023,Devops is not entry level
raisputin,1,"Sounds like you’re being very nitpicky and would be a horrible manager.


Add about 70k-100k to the salary, a 15-20% yearly bonus, $80k in RSUs, and  and I’ll interview for it",2023,Devops is not entry level
Organic_Guidance6814,1,Is this a remote job?,2023,Devops is not entry level
telecomprofi1111,1,"I feel for you. Welcome to the club. It is always easier to learn latest fashionable tool and ride it instead of start from foundations. I too remember times when during interview they asked if I read <insert your 40 y.old tech that runs internet here> rfc. So many people with no idea drawn to the trade by money, sigh. Sad but true.",2023,Devops is not entry level
Certain_Win6798,1,Some people would easily understand every one of your questions your asking without a problem if you gave them a hands-on interview but since I'm one of the people who seem to do that. I've found that people might not be able to  vocalize and answer but they can do the work  which is what i look for,2023,Devops is not entry level
smit_shah3469,1,"Well, not bragging but i do know all of this and my annual package is 6K Usd.",2023,Devops is not entry level
1Skits,1,"As a complete noob looking to get into DevOps, thank you for giving me a list of things to know before I get into an interview.",2023,Devops is not entry level
jovzta,1,"Absolutely, that's why I laugh when I see Junior DevOps roles. Or filtered out 80-90% of the CVs I get as, ie lacks the experience or completely have no idea in the shift of how traditional deployment Vs CI|CD, or what mutability is, etc... list goes on.",2023,Devops is not entry level
Appeal_Brilliant,1,"I don't know how to use linux also😢, i tried it back in college but, it prostrate me because I am unable to download/install the audio driver, its a realtek audio driver. And its really hard to install at that time the reason i guess was because my motherboard was cheap. So I wasn't able to install it,. It prostrate me so much i decided to just go back on installing windows again and never touch Linux again. But im now back on experimenting with linux again. Just downloaded a bunch of OS ganna try installing it to vm once i have some time.",2023,Devops is not entry level
jcouce,1,"Fully agree with this, im a software engineer with +10 years and im tired of working with devops that takes 1 week to give me permission on AWS or 2 weeks to create me a fucking pod in k8s.  


I know the work is challenging and all of that but DUDE I can do it myself dont make me wait 2 fucking weeks",2023,Devops is not entry level
tech-001,1,Welcome to my world. I cant tell you how many people I have interviewed for a network engineer role that didnt know the slightest concept of tcp/ip,2023,Devops is not entry level
pineapple_smoothy,1,"For the one thousandth time, we should require sys admin as a prereq for devOps positions",2023,Devops is not entry level
raghavendram,1,"Understand that ""devops"" is not implemented fully fledged in the industry. & finding the resource with all those experiences will be very tuff.
Prepare to give him more CTC.
If you want to get the JOB done, even the ""chat gpt"" candidates can help.
Need good leads(15+ yrs industry experience) to guide them.
But, I DO agree that the candidate should be good at the  fundamentals of all areas.",2023,Devops is not entry level
certpals,1,I'm a Network Engineer and I have to know everything you mentioned. Does that mean Network Engineers can easily transition into DevOps?,2023,Devops is not entry level
chaos_pal,1,"Always effective to blame the candidates vs. all the fly by night self-paced garbage, edX, Coursera, f'ing bootcamps etc.",2023,Devops is not entry level
the69boywholived69,1,You can say the same for almost all IT jobs. Many people are fake and have no idea how any of it works. But the thing is the people who do know some stuff are a lot and even they aren't experts and they have fear about it.,2023,Devops is not entry level
No_Virus_1416,1,I’m not a devops engineer but can answer almost all of those questions… I’m just outside London… maybe time for a career move,2023,Devops is not entry level
BrofessorBrochad,1,Those questions are valid for a sysadmin role not DevOps. For a DevOps working CI/CD with containers and monitoring they are pretty irrelevant in the bigger picture.,2023,Devops is not entry level
Lostpollen,1,Linux distros : Ubuntu + Hannah montana,2024,Devops is not entry level
Phate1989,1,"Wow this is something easy to fix.

Pay more.  Hey I fixed it!",2024,Devops is not entry level
bLeeKd,6,"First of all, congratulations on the role! Second, this is a big ask. I'd start by observing and listening to pain points of your customers, the developers, and work from there. My favorite exercise is outlining what it looks like now for code to go from local development all the way to production. It will tell you a lot about the current software delivery pipeline. Even better, make your own app and see how the onboarding process goes.  


You'll find out things like

* Are devs building from local only? time to choose a CI/CD pipeline!
* Are ops people just clicking things on the web console? time to IaC!
* Production is down, but no one knows where the logs are. time for some dashboard and observability!
* Are QA testers manually running tests? Add it to the CI/CD pipeline!",2024,Devops adoption guide needed for an org now adopting
approaching77,2,"Thank you. 

I have had several conversations over the past week about this and one thing that’s clear I’d the devs don’t see any need for DevOps. They just want to write code and go home. The initiative is being pushed by the CTO and some higher ups.

The precoces looks something like this:
1. Dev finishes code. 
2. Dev copies code to internally hosted file server
3. OPs guy logs into on-prem server
4. OPs guy downloads files from file server
5. OPs guy manually builds/copy files to appropriate locations
6. Mission accomplished (hopefully)

They suffer from “it-works-on-my-machine-syndrome” big time. 

Org is in a highly regulated industry so they are cloud averse. On-prem servers and everything.",2024,Devops adoption guide needed for an org now adopting
bLeeKd,1,">devs don’t see any need for DevOps.

This sounds like the big hurdle that you'll definitely need leadership to help you enforce. I always joke that my job is to get you out early on Friday so you can make it to happy hour instead of waiting for a deployment. It's also easier if ya'll have a ""you build it, you maintain it"" culture so if the developers build a poor application, they're on the hook.  


If they're on the hook, they'll be more incentivized to have better tools to fix their issues quicker such as having code scans, CI tests, etc. Regulated is fine, it just means you'll just have to find non-cloud specific tooling which is abundant. If you'd like to chat more, I'd be more than happy to entertain some discussions through DMs.",2024,Devops adoption guide needed for an org now adopting
approaching77,1,"Thanks that’s good insight. And yes, I’d definitely like to pick your brain a little in DMs",2024,Devops adoption guide needed for an org now adopting
rtpro1,2,"Congrats on the new role! Leading a DevOps transformation is a big but rewarding task. Start by understanding your developers' pain points and current workflows. Mapping out the journey of code from development to production can reveal areas for improvement. Look for opportunities to introduce CI/CD, IaC, and observability solutions. r/platform_engineering might offer valuable insights for your journey.",2024,Devops adoption guide needed for an org now adopting
ArieHein,3,"Hire a local trustable consulting company. Understand that what youre asking is not a single person work. Seek peers from other companies in the area, join any meetups, and plan enough time for your own learning.

People first, process later, tooling last. Rushing tools first isnt the answer. 

Read about CAMS (Culture, Automation, Measure, Sharing) and create a plan for adoption.
Find the people across that are more aligned and create a steering commitee that meets often and discuss. These people will become your ambassadors across the company to then create a Guild/Community of Practice that continues the path.

Invest considerable time on training and knowledge sharing.across teams. Bring people together to talk about their experience. Try to create your own better practices from all your learnings and discussion.",2024,Devops adoption guide needed for an org now adopting
VindicoAtrum,1,"I hope you're right below the CTO, or the CTO, because you're going to hit _so. many. walls._

We can't really help you. Talk to the developers, engineers, administrators etc at your new role.",2024,Devops adoption guide needed for an org now adopting
men2000,1,"I think you need more technical person who understands what the developer current process and design the pipeline, the automation test, and the first step is using the code repository and writing a couple test to make sure the PR raised at least pass basic test. It is a challenge if you don’t have a technical knowledge to establish best practices on an existing codebase and culture. Devops is a journey not a destination, and along this journey, you can make lot of changes and adjustments along the way.",2024,Devops adoption guide needed for an org now adopting
Deleted Account,1,"I would suggest you looking into devops maturity models, assess your current state and work up from there",2024,Devops adoption guide needed for an org now adopting
Deleted Account,18,[deleted],2022,What are the biggest security challenges for CI/CD in 2022?
Deleted Account,5,"This. Basically Developers not understanding, respecting, or caring about security. Hell, last week I had a developer open our private key during a recorded call.",2022,What are the biggest security challenges for CI/CD in 2022?
keftes,1,Why does he have access to it?,2022,What are the biggest security challenges for CI/CD in 2022?
Deleted Account,5,"Because another dev thought it should be in the git repo. Yeah, I don’t know about that either, I inherited this shit show.

It’s not in the git repo anymore. I am currently ensuring all of them have haven’t squirreled it away in some random folder.

Add on: the documentation was terrible, and I am basically going through a combination of processes in discovery, fixing issues, and rewriting the entirety of the documentation for the infra side of things.",2022,What are the biggest security challenges for CI/CD in 2022?
Deleted Account,2,God bless you for your hard work to make this shitty technical debt driven world spin around.,2022,What are the biggest security challenges for CI/CD in 2022?
fletch3555,3,So what you're saying is that developers are the problem and we should get rid of all developers...?,2022,What are the biggest security challenges for CI/CD in 2022?
Deleted Account,6,"Nah Devs don’t understand security. I hate to be this guy, but I am gonna be anyways. One thing I have noticed is Devs are the most naive and trusting people I have ever met. It’s a good thing in the workplace, I love working with my devs, but fuck me running when it comes to real life things like a series of systems that handles hundreds of millions in financial transactions monthly. I swear to god, they just assume nobody would hack it because it would be illegal and that enough. Like laws magically make criminals rethink their actions. Woefully naive to how the real world works.",2022,What are the biggest security challenges for CI/CD in 2022?
fletch3555,3,"As a dev (who recently moved into more of a devops role), well, okay you're not wrong... I will never claim to be an expert on security topics, but I do my best to be better than ""woefully naive""",2022,What are the biggest security challenges for CI/CD in 2022?
devoopsies,4,"> but I do my best to be better than ""woefully naive""

Welcome to DevOps you'll fit right in",2022,What are the biggest security challenges for CI/CD in 2022?
Deleted Account,2,"Well I hate to say this, but it reminds me of my military service and how we would force people through a rotation of jobs. I don’t think it would be a bad thing to force Devs through a couple of security incidents meetings. Remind  them that the world has criminals and they suck. That because of these a holes we have to do a ton of extra work too just to make sure they can’t engage in criminal activities. We learn through the pain of experience, and we often rob these guys of that pain that makes them grow. 

I think one of the funnier transitions into a security aware dev was a old ex coworkers whose project server got hacked. The hackers used his server to host CP, and he got a visit from some men in suits. Well I sat down with him and we learned what happened after they finished their investigation, which the feds rightfully determined he had been hacked. I felt bad for the guy at the time, but watching him become the dev who said, “what are doing? You’re just begging for us to be hacked, right?” Well it kind of made me realize the problem, and why Devs should be forced to sit through at least the post mortem of incidents like these. It’s a growth experience we rob them of.",2022,What are the biggest security challenges for CI/CD in 2022?
kjarkr,29,Dependencies are full of vulnerabilities.,2022,What are the biggest security challenges for CI/CD in 2022?
Deleted Account,9,[deleted],2022,What are the biggest security challenges for CI/CD in 2022?
rejuicekeve,1,Log4j in a nutshell tbh,2022,What are the biggest security challenges for CI/CD in 2022?
beth_maloney,1,Except log4j was a mature product used by millions of people. Goes to show that just because a library has thousands of stars on GitHub doesn't mean it's not vulnerable.,2022,What are the biggest security challenges for CI/CD in 2022?
Deleted Account,0,"It shows that research is focused on widely used libraries.

If a hacker is good and determined -> is going to find a way.

Penthagon and US elections were hacked, ppl simply believe their shitty java apps wont. Because what?  They apply security patches ?

Nobody cares about those apps and its the only reason for them not being hacked.",2022,What are the biggest security challenges for CI/CD in 2022?
namenotpicked,0,SBOMs are so hot right now. So hot.,2022,What are the biggest security challenges for CI/CD in 2022?
Deleted Account,1,[deleted],2022,What are the biggest security challenges for CI/CD in 2022?
kjarkr,1,The post text doesn’t come up when you only vote and comment.,2022,What are the biggest security challenges for CI/CD in 2022?
rejuicekeve,1,My dependencies dependencies are full of vulnerabilities,2022,What are the biggest security challenges for CI/CD in 2022?
soundwave_rk,19,People still don't believe that automation actually provides value.,2022,What are the biggest security challenges for CI/CD in 2022?
pnutjam,1,"It's also the wheat to chaff ratio. A bad admin can break way more stuff, way more quickly with automation. 

Ask me how many times I've seen someone break something in a new and interesting way when they try to cowboy their way out of a problem they don't understand and don't know how to properly test their solution.",2022,What are the biggest security challenges for CI/CD in 2022?
soundwave_rk,1,At least you can quickly see what they actually did because it's in automation code instead of some ephemeral bash history file ;),2022,What are the biggest security challenges for CI/CD in 2022?
pnutjam,1,"I wish, usually they just wrap bash in adhoc ansible, but I was just talking about the one off destruction.",2022,What are the biggest security challenges for CI/CD in 2022?
Hank-Sc0rpio,9,"Developers checking in crap code/frameworks and using the pipeline to push it into production. But, that’s a different beast to slay.",2022,What are the biggest security challenges for CI/CD in 2022?
ConsistentComment919,4,"Start with governance that impacts both your security and operational risk, such as:

* Ensure branch protection is configured correctly, e.g. [configure and enforce CODEOWNERS](https://www.arnica.io/blog/what-every-developer-should-know-about-github-codeowners) where it is important.
* [Developer accounts are becoming more targeted to phishing](https://github.blog/2022-09-21-security-alert-new-phishing-campaign-targets-github-users/). It is bad for the business and bad for the developers use their private GitHub identities, as it can impact both your source code and open source code the developers contribute to. It can also cause to source code exfiltration. Somehow related to spoofing developer's identity - did you hear about the [infamous PHP hack](https://arstechnica.com/gadgets/2021/03/hackers-backdoor-php-source-code-after-breaching-internal-git-server/)?  
* You can implement CI/CD firewall by simply running hosted pipelines (e.g. [GitHub Hosted Runners](https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners)) and blocking any egress traffic except the destinations you trust. If you don't know, monitor the traffic before enforcing.",2022,What are the biggest security challenges for CI/CD in 2022?
Ok-Photo-7835,1,"Builds of all branches happening in the same context with access to the same credentials and network. Codeowners and mandatory PR review are for naught if an attacker can push malicious code to a branch and compromise your build servers, artifact repository, and ultimately your production environment.",2022,What are the biggest security challenges for CI/CD in 2022?
ConsistentAd9631,1,People being given enough time and having adequate level of interest in understanding the systems they are running.,2022,What are the biggest security challenges for CI/CD in 2022?
Paladin_Cloud,1,"Incorporating security in CI/CD pipelines is the biggest challenge, whether it's application code scanning or cloud security posture management.  Open source tools are preferred and they have to fit into the developer's workflow.",2022,What are the biggest security challenges for CI/CD in 2022?
jftuga,1,Preventing supply chain attacks,2022,What are the biggest security challenges for CI/CD in 2022?
isugimpy,170,"This is not a shitpost or trolling:  [https://www.cncf.io/phippy/the-childrens-illustrated-guide-to-kubernetes/](https://www.cncf.io/phippy/the-childrens-illustrated-guide-to-kubernetes/)  Start here.  These books are legit.  When I still worked in an office, I physically kept a copy of the first one on my desk to loan out to new hires and junior engineers.  They don't get into the deep technical details, but they give you a solid foundation to start from with the concepts, and that's important just to wrap your brain around it.

Edit:  I linked the first book, but here's the link to the rest.  https://www.cncf.io/phippy/",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Seankala,13,Wow this is great! Thanks for the share.,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
EnvironmentOptimal98,9,That's funny.. Kubernetes really clicked for me after a different illustrated explanation comic.. pretty hilarious that somehow it's the best way to explain it,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Deleted Account,2,[deleted],2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
MindlessRip5915,8,Like EKS and AKS? Or a 3000 page book to explain the hundreds of services?,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
souldeux,16,"This is the story of Wilbur, the IAM beaver. He has a substance abuse problem and is on probation.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
sprouting_broccoli,1,I have a copy on my desk that I give to anyone that wants to learn regardless of level. It’s a fantastic resource and I’ve suggested it in interviews (very carefully) to people who want to learn k8s.,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Deleted Account,1,So great!! Thanks for the support! Monday @work I'll be the one due to you :) have a great weekend!,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
skripper9090,1,Thanks for linking with Phippy :-),2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Common-Ad4308,47,"i think if you have some years of Sys Admin and Ops, this k8s should not be hard to overcome. Without experience and training, learning k8s or working w k8s is not for the faint of heart",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Seankala,8,Yeah the engineers who I've been working with and asking for help all have backgrounds in DevOps/MLOps. They also told me when they were first learning k8s it was quite the journey for them as well.,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Deleted Account,9,I know people who do it full time for a living and they barely understand it sometimes…just take copious amounts of notes and build a solid reference base for yourself. It takes a minute to really understand and it can be very complex.,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
BiteFancy9628,1,It doesn't help that they keep making breaking changes in their apis with new versions.,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
jarmojobbo,2,"You don’t even necessarily need backgrounds in those fields. You’re barely out of school, with almost zero experience with building or supporting a real live web application, in production, that serves hundreds of thousands of requests in a day. There is a lot of information to learn. The basics, like in the comic, are fairly straightforward, but using them in real life is nuanced and challenging. 

Stick with it, keep learning.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
BatshitTerror,2,What is ML ops? I mean i get the acronym but never really heard of the term before. Is that just devops for ML pipelines?,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Deleted Account,3,"MLOps = ML + DevOps.

It gets pretty spicy and divergent from DevOps once you start doing things like ""fault tolerant incremental distributed model training"" and ""continuous neural architecture optimization"".

There is no way an ordinary DevOps guy can do MLOps. You need ML + Dev + Ops knowledge which basically a unicorn.

Most companies struggle to to get ML in production and if they do it will basically sit untouched for months at a time. Daily iteration is out of the question.

I for example have AutoML running in production training 100's of models per day and have basically made data scientists redundant in our organization. The job of wrangling data and training models is gone. There are a bunch of ML Engineers implementing new algorithms and a bunch of analysts that use the platform from PowerBI and data engineers to make sure the data is accessible.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
wikipedia_answer_bot,3,"**MLOps or ML Ops is a paradigm that aims to deploy and maintain machine learning models in production reliably and efficiently. The word is a compound of ""machine learning"" and the continuous development practice of DevOps in the software field.**

More details here: <https://en.wikipedia.org/wiki/MLOps> 



*This comment was left automatically (by a bot). If I don't get this right, don't get mad at me, I'm still learning!*

[^(opt out)](https://www.reddit.com/r/wikipedia_answer_bot/comments/ozztfy/post_for_opting_out/) ^(|) [^(delete)](https://www.reddit.com/r/wikipedia_answer_bot/comments/q79g2t/delete_feature_added/) ^(|) [^(report/suggest)](https://www.reddit.com/r/wikipedia_answer_bot) ^(|) [^(GitHub)](https://github.com/TheBugYouCantFix/wiki-reddit-bot)",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Deleted Account,3,[deleted],2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
pysouth,2,"It's good for the resume, lol. I do ""MLOps"" and yeah it's largely just normal DevOps stuff, but throw in some GPUs and other ML-specific tech/tooling. Companies do love to see ""machine learning"" and ""Kubernetes"" on the same resume, though.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
kane49,-2,"I recently started a job as a consultant and the company works with kubernetes. Ihave never worked with kubernetes  or containers before however i have a lot of experience with IT in general. 

Turns out all of the concepts used in kubernetes are either exact matches to something i already know or very similar. Took me 10 days from zero to getting my CKA, if you know how to navigate IT documentations its a breeze.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
thinkscience,1,Wow this is exactly how i feel,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
jameshearttech,62,">It's come to a point where I feel bad for my senior engineers because I'm constantly pestering them with questions. ""What is a volume?"" ""What makes it persistent?"" ""What is a pod?"" ""How the hell am I supposed to debug this?"" etc. etc...

These questions can be answered for the most part by reading the K8s documentation. These are not the kind of questions you should be asking a senior. They will wonder why you are not able to find answers to simple questions on your own. It's not a good look.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Deleted Account,29,[deleted],2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
suchapalaver,4,Not saying this is good or bad but my senior engineer just wouldn’t reply to me asking that. Anything that he thinks is a good question - immediate generous response. Anything he thinks I should’ve figured out myself - .,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
princeofgonville,28,"One of the hallmarks of a good senior is not just to answer the question, but to help a junior to know where to look for the answers themselves. ""Just google it"" isn't helpful. I would show perhaps 2 online resources that give the details (official docs, kubectl -h). Show them how to experiment. Teach them to fish.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
abreeden90,11,"I don’t know why you’re being downvoted this is the right approach. Teaching them how to fish is the right call. 

I guess you’re just supposed to call them an idiot and send them on their way according to some people in this thread.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
wflanagan,5,"The problem with the K8s documentation, IMO, is that it's written in a way that isn't helpful to troubleshooting problems. It's written around how it works when things go right.. vs when things are going wrong.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
feitingen,3,"I thought of it more of a reference for the developers who make kubernetes. In any case, it's not written for us, that is clear.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
beragis,3,"K8s documentation, like most Unix based documentation, is useful once you know what you are doing, but not at all helpful if you are trying to learn.

Tutorials and how to’s helped me learn along with a few simple projects.  Four years later and I am still
learning more.

It gets even more complicated once you add in build pipelines, helm charts, cloud deployments, twistlock scans, sonar scans, harness deployments and enforcement policies things start turning into such Rube Goldberg like contraptions that I wonder how anything gets done.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
wflanagan,1,"I think the docs are useful for finding things like syntax or how it's supposed to work. For troubleshooting, it's not very helpful IMO.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Deleted Account,1,"Don't forget that k8s is Google's baby.. nothing from there is easy to understand from the bare beginning, but after a time, the magic occurs :)",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Seankala,-19,Eh I agree and disagree lol. They're actually the ones who encourage me to ask these kinds of questions. What would take me 20-30 minutes searching through documentation will take 2-3 minutes after asking them. If they look busy then I'll use ChatGPT + documentation + Googling but if they seem free enough I just ask them.,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Suspicious_Ad9561,28,"I’m a senior and have juniors. I want my junior engineers to at least try to find answers for themselves, not just because I’m busy, but because at least half the job of working in tech and especially kubernetes is learning new stuff quickly and figuring out gotchas. When I give them the answers they don’t gain the context they would have gotten from reading the docs or the experience of searching for the answer that will eventually make them self sufficient. 

I don’t know the answer to a large percentage of the problems I’m faced with. Finding answers is a huge part of the job.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
spider_irl,2,"Right with you. I have 2 juniors now. One of them will will tell me “give me some time, I want to figure it out.” Even if they make mistakes, and they will, they have a frame of reference to understand the feedback.

While the other one will ask a question, I will open google in front of them, click one of the first links that leads to the official docs, and read what’s written there. Then they will follow with “wow! how did you know that?” I don’t want to make them sound hopeless, because they’re not, but is it annoying sometimes…

I don’t agree with research being “half” or “part” of the job, I’d say it’s majority of the job. If you’re proficient with information - everything else will come easy.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Lj101,14,Dunno if you've picked bad examples there - but it can't be taking you 20-30 minutes to find the doc explaining what a Pod is.,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
kane49,2,"You gotta ... open the documentation page, type in: pod and click the first link

Thats at least 20 minutes of work",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
jameshearttech,4,"Makes sense if that is the company culture, I guess. I have to often reference the K8s docs. For example, [let's find K8s docs on volumes](https://duckduckgo.com/?q=k8s+volumes+documentation&ia=web).",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Seankala,-6,Yeah I guess it's one of those things where common sense is important lol. If the other person obviously doesn't seem to like being bothered then I probably wouldn't.,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
jameshearttech,14,"It's not about whether they like it. It's more about not distracting them from their work. Mental context switching takes a lot of time, and as seniors, they likely have challenging tasks to focus on.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
IamTheGorf,2,"I've been in industry for 25 years. I have been thrust into new experiences more times than I can count. People hire me because I can demonstrate that I can take on new things with little to no assistance and scale up fast. I get that you claim this is your company culture. And if it is, they are doing you a massive disservice. If I hired a junior admin who couldn't do Google searches to find answers like this, they would be the first on a chopping block when we needed to scale back head count if not sooner. ""What is a volume"" is literally something you can type into Google and I just did it and the answer is the very first response. Sorry if this sounds harsh, but you are entering into a very competitive space as a junior person. If you want to move beyond being seen as a junior admin, you need to be able to do this stuff on your own.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
DangerousElement,20,"K8s is complicated, just because of the features it offers. Relatively speaking, it is not complex. However, a few weeks is too short a time to absorb all of these.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
ArtisticHamster,9,"> However, a few weeks is too short a time to absorb all of these.

I think the main problem is that many people (myself in the past) approach k8 as a thing which does all the cool stuff without understanding what's going on under the hood. When you understand what's in there, and what would it take to implement the same yourself with other tools, you appreciate how simple it is much more.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
etcsudonters,3,"This is pretty much my path to learning a tool.

1. Do cool stuff, but feel like you're just copying and pasting
2. The same, but writing some things from scratch
3. Get frustrated and pop open the hood to see why it's making a ticking noise
4. Whoops, how'd the transmission end up disassembled on the floor?
5. Time to grab the haynes manual and print out alldata to get this back together 
6. Gather all the mallets just in case",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
red_flock,17,"For many of us, the technology grew as part of our work. Eg. EC2 has no persistent storage by default, so you lose everything on reboot. If you want persistent storage, you need to add EBS. The PV is the EBS. Many of us learnt bit by bit this way. Like the frog in slowly warming waters, we dont notice the heat or the complexity. You OTOH, is tossed into hot water and feel it immediately.

Anyway, I wouldnt be too bothered in the first month. You are supposed to feel like drowning. If not, every Uber driver will be doing our work. You may want to look for a video course as well. There are some free ones like the Nana ones on youtube.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
hilbertglm,5,"Kubernetes has a lot of challenging aspects.  I struggled with parts of it, and I was first exposed to Unix in 1979, I have used virtual machines since 1982,  and have used Linux for over 20 years.

There is a lot of complexity, and multiple ways to do things.  It is operationally complex (I was a mainframe systems programmer and a Unix sysadmin in the past).  It requires telemetry to manage it, but getting that working has it own choices and complexities.  


Kubernetes has its place, but I would recommended against it, unless there are some circumstances where it is a good fit, and I think that applies to less than 10% of the enterprises.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Deleted Account,15,[deleted],2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Seankala,8,"I believe your first sentence 😂😭 Thanks for the words of encouragement, I guess I just need to keep at it.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Deleted Account,2,"You are basically now doing your apprenticeship, when you learn real world stuff. When I started, as an ""H1"" graduate of a good university, I was very overwhelmed. The programming tasks we got had estimated hours of work, which was not adjusted for beginners (although managers were very clear that they also didn't care how long the new hires took). After about three months, I beat the estimate for the first time. A great feeling. But three months.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
total_tea,10,"Problem with Kubernetes it is a collection of many parts and best practices.

I understood everything from IPtables, SELinux, Docker, etcd, basically the whole stack before they stuck it all together and called it Kubernetes.

An example would be a pod, its just SELinux and Chroot, with some iptables thrown in.

Or a volume its just a mount into the chrooted environment.

So you can learn the individual parts and build up which is probably way too much effort. Or you can learn  the Kubernetes abstraction layer on top of all this technology. Then when it turns to custard you can ring the support team to fix it.

BTW All the parts a very easy to learn, the problem is there are lots of them and layers on top. Which really is how IT works for basically everything, so welcome to the puddle of mud (cake).",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Tango1777,3,"It's not easy, but if you don't know what a pod is, and you say you ARE learning now, something is not right. Same to volumes. Currently the dev tools allow you to work with containerized apps pretty easily. Thanks to docker, minikube, k9s, IDEs generating docker build code for you, attaching debugger to those as to any other host-ran app and many more stuff. Okay networking in Docker is a little fucked up, but you probably don't need to go in-depth about it. About Kubernetes. It really is a wide subject, so the basics are easy, it does the job for you, you only specify how. The problem starts when you go complex, you need real zero-downtime, you need proper autoscaling, you need proper logging, good health checks, control over deployment, CI/CD, vertical scaling, horizontal scaling and all this stuff. But it's all doable. And you can really set it up yourself for free in your test, local environment  and go through every scenario. I don't know a better way to learn if not by trying. You can watch about it for days and then you won't be able to do shit yourself. Just go one by one. Try one feature after another with a simple console app. Subjects are often very wide rather than hard. There is a lot to learn, so you have to take it piece by piece. You've mentioned a book. That's fine, but I think books are worth reading when you already know the basics and have set it up yourself and it works. Then you can connect the dots. I haven't read a single book when I had to create my very first AKS cluster with CI/CD, Helm Charts and horizontal scaling based on KEDA. I knew shit, I learnt everything by trying and testing. And looking for solutions, guides, manuals, docs, examples. Leave the books for later. Till when you can actually understand them.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
hellzxmaker,7,"My advice is to focus on the ""how"" first; the ""why"" will come with time and additional context. 

Ex: Learn the steps involved with deploying a PVC in k8s or building your application in a container. This gives you small building blocks of useful knowledge you can apply and not feel like a drag. 

My mentor used to tell me: ""learn enough to be dangerous then go play.""

This stuff is difficult if you have no context or experience.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Sea_Quit_5050,9,"Kubernetes is like legos, it provides building blocks. You might need to understand the bigger architecture in your work. Don't worry about why they are where they are, focus on making the house. But learning about basic blocks helps  
This link might help if you are into animals and zoo:

https://azure.microsoft.com/en-us/resources/phippy-goes-to-the-zoo/en-us/",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
jaypee42,1,">https://azure.microsoft.com/en-us/resources/phippy-goes-to-the-zoo/en-us/

they 404'd that link - I found it in a PDF here: [https://azure.microsoft.com/mediahandler/files/resourcefiles/phippy-goes-to-the-zoo/Phippy%20Goes%20To%20The%20Zoo\_MSFTonline.pdf](https://azure.microsoft.com/mediahandler/files/resourcefiles/phippy-goes-to-the-zoo/Phippy%20Goes%20To%20The%20Zoo_MSFTonline.pdf)",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
rnmkrmn,7,"The problem it tries to solve is hard. Orchestration. If you were in a traditional shop with bare metal servers or VMs and managing your apps directly on top of them you'd have to do soooo much more than k8s (At least at scale). I generally appreciate k8s / containers and definitely understand what it's bringing on the table. It actually simplifies a lot of things. If this line is not visible to you (it usually isn't early in your career), k8s will feel overwhelming or maybe an overkill for your environment.

It's like trying to learn React on day one without even understanding HTML, CSS, JS first.

Not everyone has to understand or use k8s if they don't see the value it brings. Are you forced to use k8s? Why don't you just start with just Linux. Maybe Docker on top of it.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
skreak,3,I've got 20 years of DevOps/SysAdmin experience and K8s is a clusterfuck. We looked at running an on-prem version for hosting some of our services and honestly the complexity required for a service that doesn't need to scale out that large just wasn't worth it. If we end up needing K8s for anything we'll use a hosted service like aws/google for it so I don't have to worry about maintain all the backend peices.,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Pas__,1,"is there something similarly declarative that's designed for small scale?

while I don't like the YAML-driven development, and the memory and CPU hungry control plane, I do like that it solves problems, it's well supported, it's robust (especially compared to DIY NIH-syndrome scripts)

microk8s is pretty lightweight (instead of etcd it uses dqlite)",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
psilo_polymathicus,3,"A few things:
- getting a good handle on everything that k8s can do takes months, not weeks. 
- Zooming out, working with k8s has an implicit assumption: you have some understanding of how applications get made and deployed. If that assumption is untrue, then your learning curve just got steeper. It’s solving a set of problems related to how applications get deployed and managed in production. You have to understand those problems to understand how k8s solves them. 
- These questions are totally normal, but they are also answered in numerous different ways in the docs and in videos. You’re gonna have to put in the time learning/watching/reading. 
- Since you said you haven’t really done development before jumping in, I *highly* recommend this course: https://www.udemy.com/course/docker-and-kubernetes-the-complete-guide/

He’s such a good teacher, and he starts at “I know how to program, but not much else” and goes from there. 

Full disclosure, I get this for free through my work, but I would’ve easily paid for it. It’s that good. 
-",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
kubexpert,6,"Welcome to the open source model, designed to make your company depend on support",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
GoofAckYoorsElf,6,"> How the hell am I supposed to debug this?

Senior dev here with 20+ years of experience in the field. Seriously, I have no fucking idea.

Kubernetes, as cool as the idea behind it is, and as cool as some of it works, is, in my opinion, a goddamn mess. Especially when it comes to documentation and tutorials. It is comparable to Angular in web development. The core developers do not give a damn about established concepts like SemVer, tutorials are outdated the moment they are published, many of which do not even come with information about the version they are written for. If you want to learn Kubernetes by solving your own problem, you end up with 78 tutorials, 6 or 7 for each of your tiny little challenges, none of which are compatible with the others. Solution for problem 1: *Do it like this, but, oh, you need version 1.X! It only works with 1.X!* oh cool that works, now to solution for problem 2: *Do it like that! Ah, but be aware, it does not work with version 1.X! You need 1.Y!* and you notice after days of working on problem 48 that it is incompatible with the solution to problem 13. 

It's not just you! Kubernetes, or rather it's metaverse, is like that.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
sr_dayne,2,"So much true. Documentation is the biggest issue. But only k8s. Argo, flux, istio, cilium, eks, kubernetes sigs - all those docs also crap. Those are which come in my mind at first place. I know there are more.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
MDSExpro,0,"I have conspiracy theory that Kubernetes was created this way to force people back into cloud, because if it would be easy, cheap on-premises infrastructure for containers would decimate cloud services. But because Kubernetes is hard, most businesses sooner or later ops for managed cluster in one of the public clouds or at least for external consulting and services company to run it for them.

Why else Kubernetes would be created and maintained for over 8 years in a way that it's:

* So incomplete that it requires at least 3 3rd party plugins (CNI, CSI, load balancer) to get it to minimal working state. More (~5-6 3d party plugins) if you expect basic services such as encrypted networking between pods and semi-decent monitoring and visibility.
* With ecosystem that is clearly adopting ""write code first, document never"" approach so even if you try to implement and use ""open"" projects, you ends up failing and needing help.
* Constantly changing basic interfaces - why would basic clustering solution need to constantly reworking it's foundation?
* After all this year still have barely working integration with devices other that CPUs or not having them at all - device plugin for Nvidia GPUs is mess, AMD GPUs even more, more advanced devices are impossible to use. Processing moves more and more toward accelerators and with open source Kubernetes you cannot utilize that. 
* Integrated into OS deeper that it needs to.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
sr_dayne,1,"Actually, I don't see problems in addos itself. Another thing that almost all of them barely compatible between themselfs.  And I supporter of the aproach - do only one thing but do it perfect. At first place, k8s is orchestration system, so orchestrate. But no,  we have realy stupid scalling and schedulling mechanism and at the same time very good and robus RBAC system. How is it possible, that rbac system is  better than orchestration system in orchestration software. And I'm realy afraid of onprem. Currently we used only EKS and planning to use onprem at the same time. I can't describe that amount of problems that we had with EKS. I can't imagine what will be on prem, total mess I suppose.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
glotzerhotze,1,"After reading this comment I have to admit: I really dig your username. Such a quality fit for the answer I was about to note down… incredible!

On the topic: you‘re either stuck in the past lamenting about new tech you deem inferior to all the solutions you grew up with… OR: you man up and research / understand what you‘re dealing with. 

Blindly following tutorials after 20+ years of experience would make me NOT wanting to hire a person voicing things like in the above comment.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Deleted Account,-4,"I disagree. What you're saying reminds me of someone at work who always tries to bruteforce a solution instead of actually understanding what they're reading. He will scroll furiously through docs and also use YouTube(???) for very specific stuff.

Kubernetes isn't hard, it's just that people are trying to learn everything all at once, always asking the 'why' instead of the 'how'.


Keep downvoting me, it doesn’t make it any less true",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
NinjaAmbush,1,"I think you've hit the nail on the head referring to the 'metaverse'.  When folks say ""kubernetes"" they're usually referring to k8s + 17 different additional software projects all working in concert.  And everyone posting on Reddit has strong (often ambiguously derived) opinions about which tools are best to combine in which ways.  Kubernetes does some neat stuff, but it's not a complete platform.  Building a platform, combining all of the pieces, selecting the correct components and having them interoperate successfully is a massive challenge.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
slapula,2,"I want to second the certification route. Say what you will about the certifications themselves but the coursework and the structured learning around passing those tests really helped me understand all the moving pieces (even if just at a basic level).  It's not going to make you an expert but it's going to give you that baseline knowledge that you can work from instead of flying blind.

With that said, yes k8s is a pain to learn but if it were easy employers wouldn't be throwing bags of cash at us.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
JackSpyder,3,"If you check this channel, and sort by most popular vids, there are some cool short into videos in a really cool format i found quite helpful.  


[https://www.youtube.com/@vmwarecloudnativeapps816/videos](https://www.youtube.com/@vmwarecloudnativeapps816/videos)  


I'd also maybe question why you're having to do the devops/platform side of kubernetes as an MLE.  


Really i'd expect the cluster management to be handle by a platform team. and your work is to build the working container image and then hand off to a pipeline they've made for delivery into the cluster.  


If you're in a very small company i understand the teams may all just be one big blob. I'd personally expect the MLE to be able to build their own image and push it to container registry somewhere, and perhaps edit some values in the helm chart template (if being used) to configure some settings, but the actual cluster management etc would be someone else.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Seankala,3,"Yeah I currently work at a startup and the MLOps guys on our team usually deal with most of the platform management. Frankly speaking I am happy that I'm learning all of this though. I've wanted to learn how to use tools like Kubeflow to automate pipelines and whatnot. I guess I personally think that if you're a MLE then you need to know at least _some_ MLOps. My background up until this was very research-focused, so not a lot of opportunity to do that kind of work at all.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
JackSpyder,1,"Oh it's definitely good to know. I think though you want to really focus on the core components as a person developing for kubernetes as a platform rather than a person learning how to administer and maintain a cluster.

They have 2 certification paths for this reason. CKAD and CKA as the skills and knowledge is different.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
bservies,3,"Definitely not alone. I've had a long career, but am having to retrain myself on K8s. Every building block is its own unique and special iceberg. I'm going through some LinkedIn courses (my company provides them free) but it is a slog. 

And this senior engineer, at least, loved it when my new hires asked ton of questions.  Always a good sign.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Comprehensive-Pea812,3,"in my opinion, kubernetes is not for beginners. 

I had 10 years experience back then and I needed 1 year to be comfortable using it for development. and even 3 years later I haven't really gone through all the features yet. 


Unless you are going to be Kubernetes Administrator, just skip details and focus on how to deploy on kubernetes and learn the terms and lingo along the way.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
myspotontheweb,1,"This is so true. Everyone I meet, starting to learn k8s, gets lost in the details of how clusters are built and managed. 

My constant advice is to spend time on the technology in this order:

1. Spin up a cluster on Google, Azure or AWS (in that order of preference) and use a managed offering to first learn how the technology is designed to complement Docker. Learn all about Docker builds, Docker Registries how to deploy to k8s using Helm or Kustomize
1. Learn a tool like devspace or skaffold to make your life easier
1. Next spin up a cluster on you laptop for playtime (see k3d , minikube, kind, microk8s). You'll start to learn about DNS and ingress controllers. Most importantly you'll learn the limitations of running k8s on a single node.
1. Build your own bare metal clusters using one of the many options (my favourite being k3s)

I agree with people who advocate that Kubernetes can be overkill. If you only deploy your code on a single server, then that opinion is correct. The caution I give is that in today's world of cloud hosting infrastructure, single server deployments in production are very rare. 

Lastly, just like Docker has become a universal standard for packaging our software, I propose that Kubernetes is the complementary universal standard for deployment. 

I hope my opinions have not upset too many.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
kobumaister,2,"Depends on your background, if you come from systems much things make sense straightforward, pod->server, service->dns record, ingress->load balancer with nginx, deployment->(kind of) autoscaling group, etc.. 

k8s it's not reinventing the wheel, but abstracting some concepts and manging them with yaml.

For me, the hard part is ""under the hood"" of all that. A broken cluster can be a nightmare.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
sbbh1,2,You might want to invest some time in a proper course. Only after I did the CKA Kodekloud course did I really understand the fundamentals of k8s,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
HayabusaJack,1,"Heck, the best one I took was the LinuxAcademy Kubernetes Security course. That one gave some excellent details and instruction in how Kubernetes works. Too bad LA is long gone and the class is history.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
gowtham150,2,"Kubernetes is not a beginner's topic - so what you are feeling is completely normal. First a basic  knowledge of linux, databases, loadbalancers , proxy, DNS , networking is required. It would be better if you have experience with deploying something on a VM and see the cons that it has. Next you have to venture into container world - to start with docker and how it deals with above components. Next comes the question - how do I control containers on multiple VMs for disaster recovery or multiple regions. To address this comes orchestration solutions - docker swarm, kubernetes , Hashicorp Nomad. 

If you are straight starting to learn kubernetes , you can follow this route - system engineering(basics - 1hr course),  docker , docker swarm, kubernetes 

When you see people telling that deploying in kubernetes is so easy - it's not so. 

So cheer up , keep learning you will get there.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
whif42,3,Dude. https://chat.openai.com/ save the humans for the tough stuff you can't Google. But maybe ask anyway if you haven't talked to them in a while.,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
_Red_King__,2,"Go for certifications. CKAD/CKA/CKS. It will add fancy badges to your resume but, what’s more important, it’s a nice way to get knowledge in a systematic way and have a lot of lab practice.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
kmai0,1,"The problem is that you probably don’t have many of the foundations normally in use when doing Kubernetes.

This gets even worse if you’re new to containers in general.

I’d recommend understanding how an OS works, then how a VM works and finally how a container works.

Then you have the orchestration part of it. You need to understand which problems Kubernetes aims to solve and how it does that.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
sp_dev_guy,1,"This is a common feeling getting into anything in the field.. and kubernetes hits this way to the experienced as well. In helping people adjust I have found drawing rectanglels only to be most effective. I usually start with:
Network sqr
Cluster ( 1 control plane sqr, 1 data plane sqr)
Fun cubes into data plane
And build on that

More useful information:
I very highly recommend Mohammed <long last name> that runs kodekloud. His udemy course is absolutely killer, especially for someone who is already in the field & knows the application of the work but (reasonably) can't keep track of all the various similar interlocking terms at the same time.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
koshrf,1,"K8s Is a journey, and you aren't the only one that feel the way you do. I had 20 years of sysadmin and developer before starting on K8s, and it was so confusing and frustrating. I have few years on K8s now and sometimes it still can get frustrating to setup something, but mostly because they are things that the documentation is just horrible, and in my experience anything that is 'paid' to implement it is even worse on the documentation side.

Don't be so hard on you, once you start deploying and connecting things together you will get the flow and see that it isn't that bad.

And right now is the perfect time to learn and use K8s with the ease that some distros bring like k3s and such. So take your time, and once you want to go hardcore then try out the 'kubernetes the hard-way' to understand each piece and what they do.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Deleted Account,1,Thanks for your post op I’ve been running in to similar circumstances. Feel like it took me a month to learn how to do a thing I could do with my first coffee. This community has been really helpful.,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
bitcycle,1,"I spent about 6mo to figure out k8s. It really helped to start using k9s to inspect things.  Also, knowing help and how it works helps.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
theblasterr,1,"Yes, at first it's hard and confusing but don't worry, after a year or two it's getting even more hard and confusing.

But yea seriously, I've been using Kubernetes for about two years and I feel like I'm only now starting understand it better. Don't get me wrong, I've been able to manage stuff for longer but it's more clear now naturally. I feel like when you open one door, 100 other doors open and IMO that's one of the thing that keeps it interesting.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
SticklyLicklyHam,1,"It’s not hard if you’ve got years of Sysadmin experience. Kubernetes has essentially packaged up a bunch of processes into something that can be declared an automated via an API. 

It may be hard initially, but you’ll come to understand it.

I’m working with a devops engineer now, and he hasn’t got a clue on how to use Kubernetes, why Kubernetes does what it does, it’s a nightmare trying to teach him. To be honest, the fact he was hired as a devops engineer considering he knows nothing about IT in general is a different topic altogether.

Kubernetes / Devops is not entry level whatsoever.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
dotmit,1,Yes it is supposed to be this hard. It’s why you have to think about whether you need all the complication of kubernetes for your application. It is not always the answer to a problem!,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Pierma,1,"learning kubernetes as first job is like learning to go in a bicicle by riding a motorcicle first.

I went more gradually by learning how docker works, then learning how a docker-compose works, add in volumes and understand how it's networking works, then going kubernetes. Keep in mind that nothing translated one to one, but it will help you understand the scale and the core concepts of containerized environments.

Learning a strong foundation on how docker works will take you nothing more than a week, it's pretty straightforward",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Gold-Market160,1,"agree, k8s doc is obscure",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
LiquIDMeower,1,Maybe Devops and k8s are not for you..,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
dambles,0,"The best place to start is kubernetes.io the docs are really good. Also chatgpt might be able to help you out, it's nice in that it can give you an example of creating a
 manifest you can really use",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
SnooDingos8194,0,"Pointers were easy.  If you struggled then, you are definitely going to be struggling now.  Mix in some vnets, network security, many namespaces, 10 000 pods, replicas, health probes for god-knows what, pvcs, and other cloud components,  you will be completely lost.   If you're any good, you do everything with automation, and let it run on a schedule while you're kicking back on the boat with hotties in bikinis. Your Best option is to go back to school, and pick some other profession not nearly as challenging.  Leave k8s to the pros.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
glotzerhotze,2,"Dude, pssst. there‘s white stuff in your nose, go clean yourself up.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Nosa2k,0,"Kubernetes is a combination of lots of Engineering concepts and IT in general.

IMO it’s best to get started when you have a firm grasp of the basics first. This can only be gotten with some years of experience on the Job",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
ACC-Janst,-2,"Kubernetes is not hard. Yes there are lots of tools. Yes there is lots of information around. Yes lots of new things.. but kubernetes is not hard..   
The hardest thing that it is a way of thinking. Containers, microservices those are different then a single machine.. A great story about this is the pets and cattle story..   
And also the original concepts are old.   


And the is the rest just tooling..",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Dry-Excitement-6954,1,"Problem with Kubernetes is - it's designed for power users, by power users.  Almost a self-perpetuating bubble.   


Most organisations end up in a state where multiple teams get involved, so nobody ever owns the whole thing.     


And I remember C pointers.  Easy once you got the hang of them :)",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
LocoMod,1,"First, study what an API is. Keep it simple and go run some curl commands against public APIs once you understand the basics of making a call and receiving data.

Then, understand that Kubernetes is an API that exposes data center infrastructure as declarative resources. A “node” is an abstraction for a server whose configuration is defined in a yaml template.

An ingress…

A volume…

Etc.

Everything you would tinker with in a data center is now defined by this yaml template, and you can change its configurations and state using the kubeapi. 

That’s basically what Kubernetes is. An API that defines the configuration and state of a data center. Each “thing” in that environment has a yaml file that defines that thing, and how it relates to other things.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Speeddymon,1,"This course goes on sale regularly and I highly, HIGHLY, recommend it:
https://www.udemy.com/share/1013LO/",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
suchapalaver,1,"I relate to the feeling of being overwhelmed. I’m a year on in my first job where I’m required to learn Kubernetes but I’d never used it before. In terms of concrete help, it helped me to focus on Helm as a way into using Kubernetes for myself and I found the documentation of that project and the Learning Helm book to be good. Writing a test for a Helm Chart using `helm test` was the first little project I worked on with Kubernetes. Are you using Kind to run up a local test environment? That can be super handy. But other than it it’s all painful realization that K8s is the culmination of a history of evolution of how software is deployed and so learning it only gets easier the more you know about Linux, networking in general, Go, Docker, Docker Compose, and then a whole load of other things I’m probably not experienced enough to realize at this stage.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
wflanagan,1,"So, I built a tutorial to get around the problems I had with deploying an app to Kubernetes (both in a Rails/Nonrails environment).  I am charging for it, but if it's helpful to you message me and I'll give you a 100% off coupon.

I was 100% where you were not that long ago. It was challenging to get up to speed. I found the best way was to deploy an app.. that expertise taught me a lot more than the tutorials out there.

Here is the course: https://audienti.com/resources/hetzner-kubernetes-rails-course-checkout/",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
ryebread157,1,Interesting how disconnected schools are from the real world,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
ArtisticHamster,1,"The problem is that distributed systems are hard, and require experience which you will get with time to understand why stuff done this way. I had a big gap with not touching k8 from 2019 till start 2023, and will say that it became much much easier to use and operate. 

Just continue learning and getting better at your job, and the stuff will get more and more understandable with time. Don't just dive into MLE, learn other things which you interact with, talk to your colleagues. Also, being able to operate clusters is invaluable for MLEs. (k8 is widely used at OpenAI: https://openai.com/research/scaling-kubernetes-to-7500-nodes)

P.S. Concerning books, I highly recommend this one: https://nostarch.com/book-kubernetes It's pretty short and dives into depth of how k8 and how you could achieve similar things with using linux commands (like creating containers, mounting volumes to them, connecting them with virtual network etc). I wish I had such a book in 2018 :-)",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
lightmatter501,1,"I would watch this series to start: https://youtube.com/playlist?list=PL2_OBreMn7FoYmfx27iSwocotjiikS5BD

I’m not usually a video person but the author really knows his stuff.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
dayeye2006,1,"If you have used any cloud provider offerings, it will be easier for you to understand k8s. Lots of the resources in k8s are abstractions of the essentials in cloud. Pod for compute, volume for storage, service for network.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Deleted Account,1,Eventually it clicks. Just give it time.,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Tanchwa,1,Plus Kubefkow is not that easy to understand on top of things lol. You're learning an entire data pipeline program on top of a already confusing architecture.,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Tanchwa,1,"Also to answer your question, it really shouldn't be. If your Kubernetes cluster was set up well, you shouldn't have to deal with most of the Kubernetes aspects of things to do your job. MAYBE choosing how much resources you need to run your python job, but that should be about it.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Fork_the_bomb,1,"Depends on your knowledge of other stuff. 
For me it was nix->docker/composer->k8s so stuff made sense - its for running containers at scale. Nginx and openvz/lxc experience did not hurt either. 
But if you're starting from scratch its probably a tall order, that's why I always recommend learning some nix/docker 1st.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
gitar0oman,1,do some learning on your own first.  It is complicated but logical.  I watched a 4 hour lesson on youtube to get the basics,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
youngeng,1,"Kubernetes is indeed complex, and it certainly has its quirks, but it is essentially a unified API for container compute, storage and network orchestration. If you don't know what volumes and mounts are, PV and PVCs make little sense. And so on.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
fourpac,1,"Don't feel bad.  When I was working as a data center engineer, one of the senior developers with a systems background would bring all the new hires into the data center to show them what servers looked like.  These were Stanford and Berkley CS grads.  Lots of them had never seen hard drives before.  They had only ever used coding tools on a Macbook.  So I think that lack of structural knowledge is normal, don't get discouraged.  Get a home lab going and setup a K8s cluster in ProxMox and break it a bunch of times.  Deploy some stuff to it with Helm.  That's the best way to learn.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Itom1IlI1IlI1IlI,1,"Don't get caught up in the little details and try to memorize everything. It's much smarter to just grasp the core concepts: pods, nodes, deployments, setting resource limits, that stuff. It's pretty simple at a high level, it mostly boils down to just pods running on nodes. If you need to learn specific things for work like security or filesystem stuff or networking, that's when you pull up the documentation and use it then. Don't go deep until you actually need to, IMO it's just inefficient and you don't know if you'll even need to know that stuff. Just have the basics, the core ideas behind each section.

I guarantee your senior guys still reference documentation all the time. Don't memorize. Just be able to describe the core concepts.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
FluidIdea,1,"You received a lot of replies but let me just tell you what helped me.. i was you few weeks ago.

Read about concepts form official k8s website. https://kubernetes.io/docs/concepts/

Then read about CNI here:
https://www.tigera.io/learn/guides/kubernetes-networking/kubernetes-cni/

Tigera has more interesting docs about k8s

It is all easy reads.

Hope this helps",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Mobile-Pirate4937,1,"Hmm, so I think if you have a strong Linux sysadmin foundation and skills you can slash through Kubernetes and learn it. But yeah it's overly complex for its own good. It reminds me of OpenStack.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Sensitive-Layer6002,1,"Dont worry kid. Its tough, I’m a DevOps engineer. We’re currently migrating all our services from EC2 to EKS. Its been a bumpy ride even for our most senior engineers

I know people are in the comments like “Yeah it just really all kicked for me” but I’m doubtful all of them have actually migrated a whole ass micro-service platform to Kubernetes. They may understand the concepts, but the implementation isnt so straight forward

Hang in there, like most things, practise makes perfect. Get your hands on it and work with it. I found this course very helpful https://www.udemy.com/share/101WzI3@DiSGaOBIdEkPaUxD2x6LaDCgNGj0wyzf08Sz31w5JU_kBJMSJaSw5Om6Py1kMc_U/

Good luck",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
mandrade2,1,"Try k9s. It makes exploring way easier. With that you can start reading more and more of the official docs as you discover new resources. It kind of worked for me, coming from web dev.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
IncelDetected,1,"I know this isn’t helpful in a specific way but I found that I was making it more complex in my mind than it really is. If you’re not learning how to actually run and deploy Kube just focus on the resources, their purpose and how they relate to each other.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
serverhorror,1,"One thing you should try and hone as a skill is to accept abstraction. 

* What’s a volume? - Place to store things (because containers can’t store anything; which is an abstraction already)
* What makes it persistent? — Does it matter for the task at hand? No? Accept that it is and think about the question of “how?” at a different time

At its core Kubernetes is really simple. 3 binaries that need to run and it creates pods (atomic unit of work) and volumes. 

Everything else is (largely) built n that. This is where thing do get complex. 

Focus on the concepts at large and look at those details that are important “now”. Refrain from going down a rabbit hole trying to understand all the details.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
mikelevan,1,"I was thinking about this the other day. I feel that the barrier to entry in the tech space right now is insane. My career started out in systems administration and moved to development, so I was “groomed” for the Kubernetes space.

My advice to a new engineer just getting into tech and working on Kubernetes is to understand infrastructure and networking.

1. Utilize YouTube and find a free course on Linux.
2. Utilize YouTube and find a free cloud course.
2. Go through the Network+ training (you don’t have to get the cert. just understand the material).
4. Take a lite programming tutorial. You don’t need to be a principal engineer building the next IG. You just have to understand how application stacks and dependencies work. 

It may sound silly, but I truly believe that the above is what’s truly needed to get started in the Kubernetes space.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Responsible_Paint_68,1,You’ll find over time that almost every developer deploying apps to k8s will never bother to learn the k8s platform benefits and design their apps to take advantage of the ecosystem. They’ll just smash apps into an image no optimization 5 apps per container no checks or security concerns in the code. Most programmers treat pods like virtual machine desktops and ask why the 20gb image they are running takes 15 minutes to spin up the pod,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Cyber_Fist,1,"I myself have been working on it for 1.5 years now coming from windows administration background. I had zero coding experience.  Only ops I would say. I didn't even study for it , only worked with customers who use kubernetes on our cloud platform and even though it was a tough road that way but I learned it over screenshares and troubleshooting sessions. Of course there were times I was stuck but I didn't let them realise that I knew any less. You will get a hang of it as well soon.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
EddySmalls,1,"This is def true, check out this webinar if you wanna learn more about other solutions, today at 16:30 CEST: https://tilaa.webinargeek.com/the-future-of-containerization",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Ill-Kaleidoscope-621,1,"I have worked professionally for a mega huge company for the past decade where i am a very senior engineer.  I have been doing networking and web development for the past 25 years. I loved my job until kubernetes came around. Now I hate it.

I am pretty certain it was created so that nobody has any jobs left. There’s no other reason something so difficult should be utilized by so many companies when nobody knows how to fucking use it. I have a good understanding of what nodes containers and pods are, and have used docker fluently for many years. Even so I cannot get this shit to make sense in my head.

When people can’t figure stuff out, they come to me to figure it out. When I can’t figure it out, we are in trouble.",2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Deleted Account,1,[deleted],2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Seankala,1,Right. So I suppose people should just suppress any sort of questions that come out during a conversation lol. 🙄🙄,2023,"Is it just me, or is Kubernetes supposed to be this frikkin hard and confusing to learn?"
Superb_Raccoon,103,"Missing: Persistent Volumes....

it is probably circling like a shark around that iceberg.",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
Deleted Account,42,[deleted],2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
rxscissors,17,Yes- *kubectl delete pv --all* should be in lightning bolt hitting the iceberg LOL,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
nbastar778,10,Thanks for giving me nightmare fuel,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
deejeycris,8,"that's why i always put them on ""Retain"" except if i have a very valid reason not to do so",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
davispw,1,https://www.reddit.com/r/kubernetes/comments/i0obl8/kubectl_delete_pv_all_n_mynamespace/,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
Deleted Account,1,[deleted],2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
reverse_ops,3,If you use something like GKE then you increase the PV by editing the PVC and then delete the pod attached to it.,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
hockeygurly01,3,with storage claims that are referenced by custom yamls.,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
Deleted Account,1,[deleted],2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
Deleted Account,6,Oh you sweet summer child...,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
ihsw,134,Yaml is my favorite programming language.,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
Deleted Account,30,I see many hours of my life in this comment and I don't like it.,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
lickinglikelassie,4,Kubectl autoscale --dry-run -o yaml and the book writes itself,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
amemingfullife,2,"Are there any good configuration languages out there that compile down to yaml? I have a template service that defines 80% of my deployments. It makes sense to script the generation of those deployment YAMLs (but with shared variables like third party APIs/databases etc.). 

I’ve tried Cuelang and I love the idea but it’s super complicated and OTT for my relatively modest needs https://cuelang.org",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
camh-,7,"My favourite is jsonnet. It produces JSON, since a valid JSON document is a valid YAML document, you can pass the output of jsonnet to anything that accepts YAML. You get to keep using YAML while the config is small and uncomplicated, but switch to generating JSON with jsonnet once it gets too big for YAML.

You can start easy with jsonnet - treat it like JSON with unquoted keys, commas at the end of lists/objects and comments. Then you can add references to reduce duplication, then you can start factoring out parts with local variables to keep each chunk manageable, then you can start building libraries of structures that you can reuse across projects.",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
ihsw,3,"It seems like Terraform is the favored alternative to hand-rolled configurations.

Kustomize templates look competitive, especially given that `kubectl` natively supports them:

https://kustomize.io/",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
oji816,2,"There's also Hashicorp's HCL, via Terraform and it's Kubernetes provider. Doesn't compile to YAML though, but does the trick for dynamic data within your manifests, as well as many kinds of compositions you may need (via splitting things into modules as needed), for most (if not all) cases.",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
junior_dos_nachos,1,"cdk8s is godsend once you catch the hang of it
https://cdk8s.io",2023,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
amemingfullife,1,"I’ve since all-inned on CUE and it’s been fantastic. My 2023 wish is that it supplants YAML. It won’t, but a man can dream.",2023,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
hieplenet,-4,is it a programming language though?,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
redldr1,10,"No,

Markup Language. 

Or what I call, weird whitespace.",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
darthmacdaddy__,2,"Seriously, whoever came up with this...!! I guess he must have hated his neighbour..!!",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
Earthisround,36,At end there is etcd running in dark.,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
mdaniel,19,"I hadn't considered it until I went spelunking around giphy looking for the perfect Satan gif to represent etcd, but ... it's eeary:

> I'm your source of self-destruction
>
> Leading on your death's construction
> 
> Master of Puppets I'm pulling your strings
>
> Twisting your mind and smashing your dreams
>
> Blinded by me, you can't see a thing
>
> Just call my name 'cause I'll hear you scream
>
> etcd, etcd",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
itamarperez,8,"Obey yourrrr clusterrrr clusterrrr.
Deploys from master
Obey your clusterrrrr",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
CMDR_Shazbot,7,"    ETCD MASTER, ETCD MASTER. NO QUORUM - THE SOURCE OF YOUR DISASTER",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
Earthisround,2,WOW...,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
spilloid,3,God I love Metallica,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
Gwynnie,16,Apparently I'm a half neckbeard Beluga,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
bob_cheesey,3,I'm all the way down at the bottom; I fear I'll never see daylight again.,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
esixar,1,"Speaking of, does anyone know the source for that Beluga picture? It would be a cool pfp",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
Deleted Account,29,"Strangely no one ever told me kubernetes was easy. They all told me it was too complex and a hot mess. Then I had to use it myself and I absolutely love it. :D On-prem, persistent storage, networkpolicies and all.

I think it helped to have had a long career in Linux hosting already. I can totally see it for what it is, a ton of abstractions to create a container orchestrator with clustering support. Yeah I know that sounds obvious but it's not harder than that. Everything else is just added on top to give you features.",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
distark,7,Yup.. 'loosely coupled yet highly opinionated'.. a bit like the UNIX philosophy or Linux ABI,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
HayabusaJack,6,It's tough. I deal with something in every row it appears. Sometimes just one thing but every row. I just completed a course in GitOps so my next step is to implement flux and play with it a bit.,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
distark,2,"Ye, gets easier once you've done it all.. flux is nice, been using it for years now.. enjoy",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
MisterDefenestrator,1,Flux is great. Make sure you start with Flux V2 / GitOps Toolkit. It’s substantially more consistent and “batteries included” than flux + helm operator,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
HayabusaJack,1,"Yep. The class I took was a little out of date. When I checked flux out, I saw it was on v2.",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
alexellisuk,15,"This seems where PaaS and FaaS solutions are supposed to come in and cruise way over the top of the iceberg.

I shared a really similar slide to this in my talk at KubeCon showing the differences between OpenFaaS or Knative on Kubernetes vs faasd (OpenFaaS on containerd directly)

Meet faasd. Look Ma’ No Kubernetes! - https://www.youtube.com/watch?v=ZnZJXI377ak 

The cost per execution is dramatically reduced, cold starts basically don't exist in this model.

Then a little later on after we picked up more users, I was able to run 10x more functions on a node than Kubernetes would allow with its defaults [https://metal.equinix.com/proximity/?wchannelid=ujj9b20qi5&wmediaid=hkkw4b4o5n](https://metal.equinix.com/proximity/?wchannelid=ujj9b20qi5&wmediaid=hkkw4b4o5n)

On a slightly different note - for anyone feeling overwhelmed by the Kubernetes learning-curve might want to checkout the new LF / CNCF course on K8s at the edge - it includes the basics of building apps - [https://www.cncf.io/announcements/2021/05/04/linux-foundation-cncf-launch-free-kubernetes-on-edge-training/](https://www.cncf.io/announcements/2021/05/04/linux-foundation-cncf-launch-free-kubernetes-on-edge-training/)",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
dentistwithcavity,12,"The problem with Knative is it does too much. For example one should start off real easy, using most of the defaults as standards and in case something doesn't fit the Knative model anymore it should be trivial to switch back to deployment, service, virtual services etc. and have higher level of configuration options. But that's not the case with Knative. Why is it trying to solve both PaaS and Faas at the same time? They are both different category of problem and target different kind of developer crowd.",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
blanonymous,1,"But does faasd support clusters of nodes? As far as I understood it is meant to run on a single node, right?",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
Deleted Account,4,You forgot to add terraform to the mix,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
Melodic_Ad_8747,23,"It really isn't that hard. Becoming a k8s expert really isn't more content than becoming a Cisco expert, or networking expert.

Running a cookie cutter deployment on gke (ie, stateless app) requires minimal knowledge.",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
distark,34,"Hello... Cisco expert here.. the road to k8s ""expert"" is longer..

Not because k8s is complicated.. it's fundamentally simple.. but because it's ability to be extended means the ""things to learn"" go well beyond official api-groups.

(5+ years of k8s in prod.. Still learning more every year than I've needed to learn about Cisco in the last ten years)",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
SomeGuyNamedPaul,8,Cisco is a single company's product line whereas Kubernetes is an ever-expanding currently evolving competitive ecosystem.,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
Deleted Account,1,[deleted],2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
BassSounds,1,Join a standards group such as CNCF.,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
Deleted Account,2,"Thank you! If you're on a managed service, it's actually much easier than running groups of VMs or physical servers to get stuff done. People act like it's complicated to use it, but it's not.",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
Zauxst,3,I don't get the difficulty of difference of STS and DS compared to standard DEPLOY.,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
spectre013,3,Want to have some real fun do Kubernetes in a totally disconnected environment ...,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
TEK_E,2,Are we all on that sinking ship 🚢that just crashed on that nightmare ?,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
mirrax,1,"Nah, some of us are already at the lightless bottom of the ocean.",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
moebaca,2,Who the hell tried to sell you on that lie? Little did you know right when they got back to their desks they were desperately scrambling the docs themselves.,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
jotkaPL,2,"after dealing all day 7AM-8PM with self managed cluster, this made my day :D thanks.",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
dhsjabsbsjkans,2,"My favorite things about containers and khbernetes.

1. I was told containers could be run anywhere. Reality: I find any number of vendors containerizing apps, them they tell me that the underlying container OS has to be x, y, or z.

2. Kubernetes makes deploying and scaling microservices simple and decreases time to production. And it provides the ability to scale with ease. My reality: here is this huge app we want to throw in a container. PS, it doesn't scale past on pod.

The truth is that 1 and 2 are true. But the reality is not what I was sold/told.",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
Dragotac,2,Wait until you upgrade to AKS 1.19 and realize your runtime is now CRI and not Docker….,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
SomeGuyNamedPaul,2,"MutatingWebhooks aren't all *that* bad.  I wrote one as an excuse to write something in golang.  Have a string, change a string, woo...",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
lechatsportif,3,Damn this meme looks really accurate.,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
ipreferc17,1,I hate that volumes is beneath the water. This is daunting.,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
Deleted Account,1,cold storage,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
mvaaam,1,"Yeah, but once you got it - you got it.",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
quantomworks,1,"Oh c'mon self managed crio ""bleeding edge"" is just `apt-get install kubeadm kubelet cri-o`",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
MaximumRich7961,1,"Haha, so true 🤣🙏",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
blue-ash,1,"My goodness! Seriously??? 
I just started learning Docker. Then I want to learn kubernetes. 
If this is the truth behind the curtain, how should I approach this giant iceberg to learn effectively?

Gurus, please guide me!!",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
amemingfullife,1,"Sure, it’s been a long road to production with k8s. But if you start small on a managed service (I use DigitalOcean) it’s really not that bad. It’s much much better than the alternative, running loads of instances and managing scripts for all of them. As a solo engineer with a SaaS product it’s been a godsend. Cluster autoscaling alone is worth the price of admission. 

My only advice is keep your cluster stateless for as long as possible. Don’t touch statefulsets or persistent volumes until you know exactly what  you’re doing. 

Oh, and invest time in monitoring.",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
ineedacs,1,Is PSP the one being deprecated?,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
kerOssin,1,"Why is CRI-O at the very bottom?

It doesn't seem that different from Docker from a users perspective. Apart from different Linux capability defaults I didn't notice anything different when using it as a container runtime for k8s.",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
slapula,1,It's more like a submarine reaching crush depth lol,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
lickinglikelassie,1,Namespaces!,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
eci-inc,1,If you have to RTD then you don’t know what you’re doing.,2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
quantomworks,1,"Join me as we descend
To godhood",2021,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
mstatv,1,I’ve always felt that making the choice to learn K8s was a ‘red pill / blue pill’ moment. Maybe the K8s logo should be red?,2023,Kubernetes isn't that hard they said. You'll have no trouble picking it up they said.
Deleted Account,8,So what is it about and how did you get into it?,2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,6,"Okay so I misread your comment and I now see that you're asking how I got into it, so let me actually answer your question. Sorry for misreading that.

About 3-4 years ago, I was working for one of the biggest MSPs in my country, primarily as Senior Systems/Linux Administrator. I was trying to shake and hustle there, get into business development and big stuff, in addition to my day job. There came a point where one of the VPs there was working with me on new biz ops, and when I talked about DevOps, he latched on to that. I then proceeded to exhaustively go down that rabbit hole of concept so I could speak comprehensively on the topic in meetings with him (and others).

I requested the purchase of several books for the company library for me to also study and get into the topic, which was approved. Reading through The Phoenix Project gave me significant insight into realistic applications of DevOps and what it can look like. I also went through exhaustive, countless, online research on the topic. All sorts of online resources talking about it, and also this is where I observed the dichotomy of Software Development and Infrastructure Management.

As that year progressed I continued to work with that VP on working towards some new biz ops, including DevOps stuff at that MSP. So more continual study. Unfortunately there was a point where I was terminated without cause, they refused to tell me why, and any reasoning is irrelevant to this discussion.

Naturally, I needed a new job. While I was working an interim job a job prospect came to me for work that was effectively DevSecOps (but was pitched as Linux Admin/Automation). It was a 6mo contract for correcting IT Security issues that were reported to me/us (our team), and I would correct them with DevOps methods and technology. In this case this was Red Hat Satellite, and scripting automation.

Naturally, that contracted job came to the end of duration, and while they really loved my work, they were not able to get approval for renewal of me in-time, and I had to hit the bricks. Got the job I have now a few months later, and now I'm in an even more mature DevOps ecosystem, and have been continuing my education this whole time. In more recent history fleshing things out a hell of a lot more in my own homelab, roughly replication a good bit of what is at my current job (in terms of methods).

So that's a high level story of how I got into it.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,1,"Alright so I know it may come across as a bit crass, but check out [this previous description I wrote](https://www.reddit.com/r/sysadmin/comments/t4btu9/i_am_fucked_company_sold_out_5_months_into_my/hyxywqt/) and then let me know if you have further questions, or areas you want me to flesh out.

DevSecOps builds on DevOps, but uses the same automation aspects to automate checking ITSecurity for stuff in DevOps workflows, and things like that.

Seriously though, don't hold back on any questions! I don't want my linking (to my own post) making you feel like I don't want to hear what you have to say. :)",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Deleted Account,6,"I get the concept of DevOps everything in code, repeatable etc etc. As a sysadmin from a traditional (on-prem) environment I'm trying to work out how to transition what I do into this model.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,3,"Well one thing I would like to bring to your attention is that DevOps does not _require_ cloud infrastructure, or public (not on-prem) cloud usage. You can 100% have DevOps all on-prem. Were you aware of that?

As for the aspect where you are trying to work out how to transition into this model, are there parts you're stuck at or confused by? Tell us about that. :)",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Deleted Account,1,"Thanks, yes I'm aware I can implement a DevOps solution with on-prem stuff and that tools like Desired State Configuration are out there (looked at it, not used it)
I guess the big hurdle is that if, for example, I'm tasked with setting up a web sever. I could build one out, document it and have it going in no time at all.
Repeatable steps but not in code.
How would i go about turning this into a
DevOps model?
Script out the server build steps from VMM or Other tools and then just put this into a GIT repository?",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,0,"Some people are fans of things like ansible where you describe how systems are _built_, in terms of order-of-operations instructions. This is not the ideal way to do this from a DevOps perspective.

Instead, you want to have CI/CD pipelines (I'll explain this in a sec here), and you define systems in that ""this is what I want it to look like"". Think about a yaml file (this is a style of a feature-rich config text file) which literally describes the parts of the system you want defined, and parameters for configuration. You want to use $thisdockerimage, and you want it to mount this share to this folder, you want to set these environment variables to these values, you want to use these launch parameters, etc.

Once you have defined the yaml file, the concept is that then the CI/CD pipelines detect the new yaml file (or that it has changed), and applies it to the environment. Which either creates new systems (for example, kubernetes/k8s pods/services/whatever) within your environment, or reconfigures existing systems to match changes you made (let's say you're changing parameters for something you've already defined).

This is tangibly different from an ""ansible playbook"" style, where in that regard you define the steps to create it, but in this way you define what you want it to look like and your environment automates making that happen.

A CI/CD pipeline is Continual Integration/Continual Delivery. Continual Integration talks about regularly ""commiting code"" to the repo, in that you make lots of ""small"" changes, frequently, instead of big lumps of code as releases (think, major version #). So you make some changes to an existing yaml file, or commit one or a few new yaml files, and that's Continual Integration, instead of one big massive wad of a project. Continual Delivery is the automation of implementing these things as commits/merge requests/merges happen. Whether it's compiling software and rolling out a new application you're developing, or pushing a k8s yaml file to reconfigure a system, the Continual Delivery is that automation.

Questions?",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Deleted Account,2,"Thanks, that makes sense and I've done somevery light work in Azure DevOps and have got an API in built and released using CI/CD to a Azure Web App. Made a lot of sense.

I guess what I've not seen is that Ymal file that will go out a build my web server for me, with IIS configured for said API etc. Or what would execute that file?

I'm probably a bit backwards here thinking in terms of servers as apposed to a containers?",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,1,"I can't speak to IIS as I don't know how well that application aspect has been ""containerised"" so to say, so I'm going to describe roughly how this could be achieved with something like nginx/apache instead. This is conceptual, not exactly code you can copy/paste to immediately use. :P

So, there's an aspect like Nginx Ingress that will eventually be relevant (or other ingresses) to this topic, in that they behave as reverse-proxies, so heads-up on that. But it is not a REQUIREMENT for this to succeed, it just is frequently used, so that aspect is likely to be on your radar at some point.

For the sake of example let's assume your CI/CD pipeline ""just works"" and all that. I want to define a yaml file for hosting a website that's already written with nginx or apache. This is roughly the aspects I would define in the yaml file:

1. I would declare which container image I want to use (in this case, a docker image, probably served on docker hub, for apache or nginx). So in the yaml file I may need to declare the source, but sometimes docker hub is assumed so you may not need to declare the source (container repository is the term for where you can get container images). I would declare the name of the container image, and I may also explicitly declare the version (tag) I want, but this is an option, and not a requirement (generally). Sometimes you do not want to declare a version, sometimes you do.
2. I would then declare how the web content shows up within the container. Am I mounting an NFS/other share where the web files exist? Am I downloading the files each time into the container? Effectively defining how the files the web server (apache/nginx) serves gets into the container.
3. I may want to declare headers/configuration aspects I want apache/nginx to use, TLS version, which SSL cert to use/where to get it, stuff like that.
4. I may want to declare logging configuration, what I want logged, where it gets logged to (if I want it to be a different location), stuff like that.

Eventually once I've figured out all I want declared in the yaml file (sometimes it is only a few declarations, it doesn't have to be huge, it's up to you), I save it, the CI/CD pipeline executes it.

You can see some example yaml stuff here : https://kubernetes.io/docs/tasks/run-application/run-stateless-application-deployment/

Oh and you're welcome! :D",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Deleted Account,2,"Thanks I'll try to process that when it's not almost midnight :) I'm sure there will be more questions. 

My org has been dealing with some very embedded legacy data systems (think 1990's level of DB) which if all goes to plan will be gone by July.

However because of this practicaly everthing we do has been limited to very traditional management and deployments. I'm trying to plan out for the future so a good post at the right time, for me anyway!",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,1,"Yeah no worries about coming back to this thread later ;D

Oof that's definitely going to involve a whole bunch of work, but for the better! And the aspects in DevOps for sure involve Business Process, Cultural, and Technological shifts. Change management is not a thing in a fully realised DevOps ecosystem for example, due to MTTR being orders of magnitude lower.

Hope it helps! Let me know any questions or whatever when you get to it ;D",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Deleted Account,2,This can also be done with traditional infrastructure with combination tools such as Terraform and Ansible.,2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,0,"I can't speak to Terraform, but for Ansible, yes and no. Ansible is about defining systems being built from scratch in more of a way that is automating how humans would have built it previously, but it is not stateful enforcement of configurations. By contrast IaC (Infrastructure as Code) in the way I described it actually enforces state. In that, changes you make do not require an entire rebuild in the same way ansible would. Additionally IaC is substantially faster than ansible or similar alternatives to ansible, in that you're using container images and not rebuilding things from scratch each time.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Deleted Account,2,If you are correct then how does a ansible kubernetes operator work?,2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,1,"I can't speak to how ansible interfaces with kubernetes as I haven't worked with that. I've more heavily researched into puppet instead of ansible (before I learned about CI/CD pipelines for kubernetes, which is where I've shifted my focus and really just dropped puppet).",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BreakdancingGorillas,3,"I'm just starting on the DevOps path. Gt into an organization as an apprentice through some program. I see what you're getting at about it being pretty fair to work life. The philosophy side of it is what struck me as interesting the most. How? It's not simply things that relate to IT or tech work, but also in a sense to life.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,2,Agile methodology is applicable to so many things in life that aren't even technical. Like for real! Glad that it's working out well for you! Have you had any particularly challenging aspects so far?,2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
2cats2hats,7,"> Why aren't you getting into it? Do you want to?

I don't want to be on-call ever again. Period.

> Comments? Thoughts?

I'd love to export my 32 years' experience in IT(sysadmin, IT director, R&D IoT) into cybersec but only during business hours.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,3,"Why do you think DevOps/DevSecOps requires you to be on-call?

Your IT experience is probably relevant into DevOps and/or DevSecOps. What do you feel is getting in your way of doing that?",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
CatoDomine,3,"What does DevOps philosophy have to do with on-call?

This seems unrelated.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,2,Generally it is.,2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
DeadFyre,3,"I *am* into it. Honestly, everyone should have AWS in their toolkit, and every enterprise should have an account spun up, in case you need to stand up a server *right now*.

I just got done doing a big appliance upgrade over the weekend, and the whole thing would have been scuffed for hours if I hadn't been able to take a snapshot of the box when I started, and then created a copy of the machine with a reconstituted volume when I needed one. That whole process took, maybe, 30 minutes, compared to *hours* to shift around 700+GB of rsyncs. Now perhaps your virtualization system has a snapshotting feature, but there's lots of other slick things you can do with nothing but a credit card, a VPN tunnel to AWS, and your brain.

If you own a credit card, consider picking up a personal AWS account, and start messing around. Many, many useful features can be used at the free tier, which lasts for one year, and afterward, your added skillset can start paying its own way.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,1,AWS isn't a requirement for DevOps. But AWS does have a lot ready to go for enabling rapid changes and operations. Sounds like a success story right here!,2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
IndieDiscovery,3,"I've never not been into DevOps personally. Automation is awesome, infrastructure as code is awesome, Terraform and AWS are fun as hell to work with and manage. Reading some of the content of this sub is like stepping into a time machine going back to when I was happy with sub $100K salary, I'm at $160K salary or so now and loving it. Only problem is I'm a contractor at an hourly rate and not full time which is kind of a bummer.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,4,"Dude I'm 100% in agreement with this, which is a good bit of what pushed me to start this thread. If you want FTE why not just go get it? Companies are super thirsty for DevOps talent, no joke.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
IndieDiscovery,2,"Yep. I'm interviewing, it's a lot harder getting a FTE role than a contracting one. It's contract to hire so worst case scenario I should be FTE in 6 months time, or be signed on with another company by then.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,2,"I really don't see why it's harder. My first DevSecOps/DevOps role was 6mo contract, and then a few months later got my current FTE job. Are you job-hunting across the country with WFH remote in-mind, or just limiting to your immediate geographic region? For me applying cross-nation to work remotely absolutely massively increased my job-opps.

Seriously, how is it ""a lot harder""?

As for contract to hire, nice! That's something to appreciate right there. :D Hopefully you like them ;)",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
IndieDiscovery,2,"Contracting gigs typically have a one and done interview process, whereas full time gigs can span multiple weeks. I'm job searching across the country with WFH in mind. I get plenty of hits on LinkedIn but usually fizzles out after the first or second interview stage. Either it's not a good match because the tech stack is too different from what I have experience with or there's no personality click with the interviewer. 

Thanks, they have been good so far we'll see if it continues.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,2,"Hmmm curious. My first contract for the work was a 3-stage interview kinda deal, so I guess you experiencing 1-stage interviews for that clearly is less effort, I see that, lol. And yeah, 1-stage vs 3-stage interviews, tangible increase in effort. At this point I'm just so used to every job I'm gunning for being 3-stage it just comes with the territory and I expect it, a blur of sorts.

You get plenty of hits on Linkedin, as in they come to you, yes? If they're not coming to you, you need to tune your linkedin better esse.

Keep giv'n'er!",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
IndieDiscovery,2,"Every day I get 4-5 recruiters spamming my inbox with roles, the resume is not a problem.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,2,"LOL NICE. Yeah never mind then ;P I just wasn't 100% sure I knew what you meant by what you said. It's so nice to have jobs come to you instead of having to go hunt for them, don't you think?",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
commandsupernova,3,"I'm an experienced sysadmin who's interested in DevOps but just haven't taken the plunge to get really into it. I've read The Phoenix Project (and loved it), reviewed the DevOps roadmap ([https://roadmap.sh/devops](https://roadmap.sh/devops)), and gained a basic high-level/theoretical understanding of many DevOps tools (Ansible, Terraform, ARM templates/Bicep, Pulumi, Docker, Kubernetes, etc.). I love learning about all the tools are and how they can be used to automate solutions. 

There are more books I want to read and I know I could start trying to use the tools in a home lab. But I don't quite feel driven to do it yet. I worry that to switch from typical enterprise sysadmin work to DevOps, I would have to take more of a junior DevOps position and a pay cut. This might be wrong, but I can't help but feel worried about it. 

Also, I suspect a lot of DevOps jobs are fully remote, but there are very few opportunities locally for me. This isn't a big deal, but again, just another thing that feels like it's inhibiting me.

I feel like I'd love a switch from traditional sysadmin work to either DevOps or a security job, so DevSecOps sounds really appealing to me. I'm tired of all the manual work I see in enterprise environments, so a culture focused on automation sounds like a dream.

But I've spent so much time learning on-prem and cloud solutions from Microsoft. It would feel so wrong to abandon a lot of it and switch to DevOps (or even a security focused role, for that matter). I think it's just a matter of time until I do switch, but again, just hard to take that chance without something lighting a fire underneath me to do it.

Thanks for listening to my rambling and confusion about what to do with my life - Anybody want to tell me what to do? 😁",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,2,"1. I can empathise with the hesitancy to build it up in the homelab. But honestly that is the best thing for you to do at this point. Partly because you personally will benefit from being able to spin up your own things more rapidly, even as permanent fixtures, but also because you can start to see in-practice how absolutely bonkers fast things can go. I didn't quite get how fast k8s could be until I saw it in my current job, and ho boy did my neck snap around from that speed! I'd recommend starting with rancher, gitlab, argo-cd, and Codium/VSCode to get you started, you'll get up real quick let me tell you! And pick containers from [this list](https://fleet.linuxserver.io) that you find interesting.
2. Don't fixate on the title, DevOps will pay more than even Enterprise Sys Admin hands-down. You will love the work so much more, the work/life balance is superior, systems are substantially more reliable and faster. What's not to love?
3. What is your concern about remote work? This is how you're going to make more money, you won't have interruptions to your productivity (like open-office concepts, or people coming and distracting you with face to face conversation). You'll still be able to engage people like on Slack or whatever in realtime, but on your terms, instead of people interjecting. There's other benefits too, like just going downstairs to get a snack, or not having to waste half or more of your lunch time just finding food, or not having to spend so much time commuting. But yeah, remote opens up very large amounts of job opportunities and pay scales, and with DevOps the market is THIRSTY.
4. DevSecOps is a worthwhile thing to aim for. If you want to start to see what that can look like, go read up on DAST and SAST automation in CI/CD pipelines, that's not all of it but a good chunk of it. Plus another is OWASP ZAP docker website scanning automation (something I'm working on currently).
5. You're not abandoning your experience, you're building on it. Also, Linux is a big thing, be comfortable with that.

Allow me to be the fire that burns your ass. Git'r'don!

Questions?",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
commandsupernova,2,">DevOps will pay more than even Enterprise Sys Admin hands-down. 

I don't disagree with this over the long term! But again, I fear that I would have to take a pay cut to get started. I have 7 years of experience (almost entirely sysadmin with a focus on Microsoft tech), many IT certs, and am at the point where I'm looking for senior sysadmin/team lead roles. When it comes to DevOps job postings, anything that pays similar to what I'm making now seems to insist on 2 - 3 years or experience with Docker, K8s, etc. I worry they wouldn't be interested if I am a good sysadmin but only have home lab experience with these DevOps tools. And again, then I could get into a *junior* DevOps position, but make around 30% less than I do now. This wouldn't work for my family, unfortunately. 

I think I would need to get lucky and find the right job at the right time - similar to how you mentioned in a comment finding a Linux admin/automation job, and not a formal ""DevOps Engineer"" posting (or whatever title they chose). I think something like ""Automation engineer"" would be a great entry point for me. But those seem harder to find than ""DevOps Engineer"" etc. postings that are calling for several years of DevOps experience. 

&#x200B;

>What is your concern about remote work? 

Sorry, I wasn't clear - I love and am all for remote work, and do almost 100% WFH right now, and want to keep it that way! I guess it doesn't matter if there aren't any *local* DevOps jobs, but it still feels scary to switch to a field without anything local. I guess remote jobs aren't about to go away and I should get this fear out of my head.

Overall, I think I would love to work for an org practicing DevOps, but am still just not convinced the amount of training required would have an immediate payoff. And if that's the case, I can continue pursuing more knowledge of Microsoft cloud tech and continue to advance on that side.

Maybe long term I could pursue the ""Microsoft Certified: DevOps Engineer Expert"" cert, and keep an eye out for remote DevOps postings that would give a seasoned (but not crusty) sysadmin a shot. Would just have to pray that home lab experience would be enough, since any enterprise I've worked at doesn't even seem to know what DevOps is yet 😂",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,2,"1. I don't know what your current compensation is, but ""entry""/intermediate DevOps/similar roles (SRE, etc) are in the realm of $90k-$120k/yr (USD and/or CAD). How does that stack up vs your current compensation? And of course that is not including benefits and other nice things.
2. Don't let the ""#-#yrs experience"" get in your way, that's just a rough approximation of what anyone is looking for. What employers really care about is if you can do the job and can you learn. The better places to work care MORE about if you can learn, than whether you have the knowledge right now.
3. Homelab experience is absolutely relevant. Put that shit on your resume, refer to it in interviews, leverage it. There may be places that don't see value in it, but either you need to present it more effectively in interviews, or those places just straight up aren't worth working because they want ""cert checkboxes"", which really is not a good environment to live in.
4. Do not let the sunk-cost fallacy hold you back. Just because you have certs and such, does not mean advancing your career into DevOps (or anything else for that matter) is a mistake. DevOps/related builds upon your experience in areas, it does not inherently replace or discard it.
5. Again, Linux is bigger in this space than Windows, so be prepared for that. There are Windows DevOps roles out there, but AFAIK they don't pay as well as Linux, and there's more Linux DevOps roles anyways, so easier to get them based on numbers. But this is also your call to make, just letting you know.
6. Chances are, you may already have enough to get a job today. Update your linkedin, tune it for DevOps stuff, same with your resume, state you're open for new opportunities on your linkedin profile, chances are jobs will come to you. Explore those, and apply for job listings too. This doesn't necessarily mean you need to leave the job you have to just explore these things. Hell, what's the worst that could happen, you get a job you like and pays you more? Oh noes, such trouble! And if nothing comes of it, well it can likely give you some more guidance as to where you may want to spend your efforts on growing your skills. I cannot stress this enough, the market is THIRSTY right now, get in on it!
7. I myself would not recommend going down Microsoft certs for DevOps, unless you're married to Windows. Windows or Linux, most places care more about your ability to troubleshoot, solve complex problems, learn, say ""I don't know"", stuff like that. Some places may care about those certs, but their value is short-lived.

Questions?",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Deleted Account,5,[removed],2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,2,"Just like any method/technology/whatever it can be implemented poorly, and/or understood poorly. There's no bones about that.

That being said, the majority of businesses that transition to DevOps (and/or DevSecOps) find that the value is very substantial, and that does not require a minimum size for the value to be realised.

Let's put aside the wank for now, because I do appreciate when people use terminology in DevOps discussions poorly and it just looks like jargon vomit. What aspects of your DevOps implementation do you feel have been problematic for you? Where do you feel stuck or lacking clarity on? Let's hear your efforts thus-far and build on that.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
No_Pirate_6831,-2,"Proper devops assumes you have a 4 year degree in computer science and years of experience as a software developer.

Since you're an experienced programmer you don't need the implementation details. You'd just look them up in the codebase. You want the big picture stuff for inspiration.

And since you're an experienced programmer you're fully expected to write code yourself. Basically none of the devops stuff is plug&play and is NOT production-ready. At most you'll get some gimped hello-world type of setup that can't actually do anything useful. A lot of things will assume you'll bring your own networking, storage, PKI, security etc. and do not include them nor have any documentation on how to integrate. You're a software developer after all, you should be able to look at their code and figure it out.

A lot of ""devops"" is basically jenkins/gitlab and good ol' sysadmin stuff mixed in with some hand waving powerpoint people. Proper devops is either done at FAANG or at tiny startups with lots of ex-FAANG people.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,3,"> Proper devops assumes you have a 4 year degree in computer science and years of experience as a software developer

LOL NOPE. I have neither. You can 100% self-learn this.

Are they beneficial to have? Well yes, but they are not a fair assumption nor requirement.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
ThisGreenWhore,2,"Okay I'll bite! :o)

I'm a 95% Windows Admin and the other 5% is Linux.

But I am not a master of anything.

I want to start over. What are your thoughts as far as training and moving on to something different? I do not want or expect a manager role. In fact, I'd like to start at the bottom. 

What do I need to learn?",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,3,"Alright well to start I recommend you read [this](https://www.reddit.com/r/sysadmin/comments/t4btu9/i_am_fucked_company_sold_out_5_months_into_my/hyxywqt/) as it covers a lot of what I would say but it's already written.

In addition to that, I would recommend that you be prepared to do a lot more Linux stuff, but DevOps is not exclusive to Linux. But there is way more market share for LInux than Windows. If you want to stay married to Windows then so be it, but if you are alright switching to Linux you will make more money and have better career opportunities. 100% your call.

As I mention in the linked post I wrote, I would say reading The Phoenix Project will give you a lot of insight and example as to how it could look. It is not the only way to do things, but it can help guide you conceptually.

In addition to that, I would recommend building a homelab so you can build your own DevOps environment in a safe area where failure has no cost. If you already have a homelab, then use it for building your own DevOps stuff.

As I mention in the post, the two aspects are Software Development and Infrastructure Management. Decide which (or both?) you want to learn, and use that to help guide building/replicating that in your homelab.

As for tech that you can use, I'm going to point you to (but this is NOT an exhaustive/exclusive list):

1. Rancher, to help you manage kubernetes/k8s nodes/clusters.
2. Gitlab, so you can self-host your own repositories for IaC (Infrastructure as Code) yaml/other content, and/or for software development code if you so desire.
3. Proxmox VE to run VMs on, and k8s nodes within those VMs, gitlab in a VM, stuff like that.
4. TrueNAS for a NAS system everything is going to be kept on.
5. VSCode or Codium for an IDE (think, feature-rich text editor) to help you with writing/editing code on your Gitlab repos.
6. Check out [this list](https://fleet.linuxserver.io) of docker images you can use for some example starting projects to use in your environment. There are plenty elsewhere too, but this can help give you many starting options.

Questions?",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
ThisGreenWhore,2,"No questions yet. But you've given me a bit quite a bit to learn. Thank you for this. I know there are other several parts to this (which desktop OS as well s sever) that I'll discover on this path.

Thank you!",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,2,"Desktop OS? Ubuntu Linux. it's not the only Linux distro, but you'll get up and running quick, it's reliable, and its consistent.

Server? Ubuntu Server in VMs, for example. But don't forget the Proxmox VE aspect (as the hypervisor).

And you're welcome! Yay! :D If you do come up with more questions, post them here please!",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
ThisGreenWhore,2,"Honestly r/sysadmin has been a bit all over the place with regards to Linux OS. Many are ""myfavoritedistro"" fans. So I've never been sure what route to pursue.

I will come up with more questions, but will DM you as at some point, this conversation will drop off.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,1,"No worries! I use Ubuntu (Desktop and Server) on personal and work systems (yes work laptop runs Ubuntu Desktop) and there's a lot that keeps me there vs other distros. I understand there's a lot of different opinions, but this is what I recommend first.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
2cats2hats,1,"Ubuntu is good to learn because of the community support around it. Just about any issue you'll encounter, odds are someone else already has.

Much of enterprise is redhat(which is why some gravitate toward that) but debian is used lots also. IMHO, debian is still an underdog because it isn't as ""corporate"" as redhat is.

Once you get adept with ubuntu you'll come to realize other linux distros are fairly easy to get used to.

Hope this helps.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
MechaCola,2,"Windows guy here. Is having a power shell script that intergrates with ad, sccm, hr app etc to automate IT workflows considered DevOps. Like when does scripting turn into DevOps.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,1,"This is a valid question and a curious one to answer.

I would say the script itself and how it interoperates may not necessarily be itself DevOps. What would need to be additionally considered is how rapid your environment is setup for change and how tolerant of that change it is, and that includes recovery from failure.

Generally a script in and of itself isn't inherently DevOps, but when you make changes to that script and the environment automatically detects the change to the script, and then executes it, then that's getting close.

However, this sounds a lot more like the automation of the creation of systems, akin to Ansible, and not stateful enforcement in the sense that say Puppet or yaml/k8s operate. In that, you define how a system should look (puppet manifest, or k8s yaml file), save that definition somewhere (repo, network share, s3 bucket, wtvr), a component detects the change or new file and then applies it to the environment.

Just building the system in an automated sense is not necessarily DevOps in a fully realised regard. One of the big parts of it is rapid change, not just rapid deployment. Be it scaling up/down rapidly, or reconfiguring rapidly (changing how the system is defined without necessarily rebuilding it).

So, now that I've thought about it more, I would say it's getting close but not exactly DevOps.

Honestly I don't know SCCM well enough to know whether it does stateful enforcement in the ""proper"" sense.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BitGamerX,2,I work in end user computing. While we utilise automation for deployments and management I don't also see a clear path for DevOps implementation for our processes and procedures. I guess what I'm asking what can be implemented agnostically without requiring a certain of specific tools?,2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,2,"DevOps for endpoint management (as in, desktops, laptops, phones, tablets) I haven't really seen examples of that, and when I speculate to myself what that could look like, I'm not so sure it could have value there. But when it comes to endpoint management of like say VMs, container clusters, other forms of infrastructure, is where it becomes relevant and tangible.

The difference that I see is with desktops/laptops/tablets/phones the users are likely to change a lot of stuff about those devices, through reasonable usage, that DevOps for those systems doesn't really make sense.

So this thread isn't necessarily trying to wedge DevOps into spaces where it doesn't make sense, more-so I've seen a lot of misconceptions, lack of understanding, etc, on the topic of DevOps and wanted to help others better understand that are confused, lack insight, and stuff like that. Because I've been there, and let me tell you, it is not necessarily self-explanatory from my past experience.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BitGamerX,2,I appreciate your candor and creating this thread. I do think some of people hesitancies is the one size fits all mentality that gets pushed down with these latest frameworks (Is DevOps a framework?). I do think it has some good ideals and principles that can be used across the industry.,2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,2,"Dude I don't exactly care for the wank marketing jank either. That's one of the (multiple) reasons that I created this thread. To cut through the marketing bullshit. A lot of people either misrepresent it, don't know it well enough, just blurt out buzzwords, or any other number of wanky things. I've spent a lot of time and effort studying past that crap so I can accurately understand it, and boy was there a lot of wank to wade through!

I can't say I blame people for being hesitant considering how much buzzword-bs the IT industry has endured over the decades. Hell, cloud was ""the new sliced bread"" for so long and boy was that mis-represented for so long. Even now it's over-sold as money saving in scenarios where it isn't!

Wikipedia says ""DevOps is a set of practices..."", so maybe that's one way to verbalise it.

Thanks for noticing my candor efforts and such! :) I am trying to put effort into that. Hopefully what I said was helpful to you though! :D",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Deleted Account,2,[deleted],2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,1,"> Oh, and ""Automate everything you can."" Oh, you mean like every sysadmin on the planet worth their salt has already been doing with their scripts for decades? What a novel concept.

Script automation is not the same as stateful enforcement, like you see in docker containers/equivalent.

> And a lot of the training I took actually recommends the use of specific, brand-named tools. Gee, no way kick-backs were involved there.

Plenty of that going on, but it's not exclusively that. There's plenty of open source options such as rancher, argo-cd, codium, etc. The existence of ""premium"" closed source options does not mean they are the only option.

> A lot of companies just use it as an excuse to put Sysadmin responsibilities on the Developers

And this is where it is an improper implementation. DevOps staff and SREs are the dedicated resources that should be taking that role on, not Developers directly.

It sounds like you're working at a place that is not really properly implementing it. This is not an accurate representation of what it can be like.

> DevOps itself is literally nothing more than a way for corporate consultants to swoop in, change a few processes, stick ""Implemented DevOps Strategies"" on their resume

While that does happen, your representation here is a far cry from when it is correctly implemented.

I can empathise with your jaded position, but do not allow yourself to believe that this is the reality everywhere. This sounds like a massive company trying to do a transition they barely understand and are following paid consultants because that's how they typically operate their company. That is not the rest of the world.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Deleted Account,-1,[deleted],2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,1,"> You can't say, ""It wasn't correctly implemented""

Yes I can. Because I've seen what correctly implemented looks like, in many orgs of many sizes. The largest involving over 5,000 physical systems running multiples more of logical systems on top of that.

Yes, it does look different from one company to the next, but that doesn't mean correct implementations happen every time. Even with non-DevOps implementations/transitions improper work happens plenty. Ever heard of SAP?

Your attribution of the No True Scotsman fallacy is missing the mark here. And the more I see what you have to say here, the more I see that you're coming from a jaded position where you're surrounded by jargon vomit but have not seen what it can look like and run well. Who even is ""They""? Consultants? SREs? DevOps staff?

You really don't sound like you want an actual conversation here, you want to just get angry at me because you're frustrated with those around you. I don't have time for that, I'd rather go help people who want to be helped, not people who are just angry and want someone to yell at.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
kyshwn,2,"I would love to get into learning some of this... but it's all so... big.  It's so hard to figure out where to start.  A lot of the starting pages all just talk a big game but no one tells you what to do or how to do anything to get started.

Also, like, what do you do?  I've stood up Docker Containers before... but I had nothing to run on them.  So I took them down.  I wanted to try running some of our stuff her at my job in Docker, but the ones that made the most sense wouldn't work because they are RDP hosts... and apparently RDP isn't workable in Docker?

It's just... a lot to relearn from the ground up for someone who's been doing this for 20+ years.  And I'm a bit overwhelmed.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,2,"Your observations here are valid. It is a large topic, and I can empathise with being uncertain what to do, and how. Perhaps I can help give you direction.

1. I recommend you [read this first](https://www.reddit.com/r/sysadmin/comments/t4btu9/i_am_fucked_company_sold_out_5_months_into_my/hyxywqt/), namely because a lot of it is already covered by my comment there. Plus the book I mention is worth reading as it can give you a lot of ""aha"" moments.
2. In terms of what to do/how to get started, this can be dictated by the goals you/your org have. I generally advocate operating a homelab for may reasons, and running your own homelab is a great way to build DevOps in ways that can work for you, and you can make tangible what it can look like. Plus by trying things out you can see what does and does not work for your goals, or even at times inspire you to clarify what your goals are through exposure.
3. DevOps does rely on technology, but it is not necessarily married to specific technology, more certain capabilities that technology can perform. So docker is relevant, but not the only way to go. But it is worth expanding upon. I would say that instead of necessarily thinking strictly at the docker container regard, put your efforts into learning kubernetes/k8s which expands upon (and uses) docker containers. If you want a menu to pick a bunch of container images from [check this one out](https://fleet.linuxserver.io/), it is not the only source of good docker images, but I think it would be helpful for you.
4. Additionally, perhaps expand on what tools you're using, and how. For k8s, I would recommend working with Rancher to help you manage k8s clusters, and this can help you get up and running quickly. In addition to that, work towards having a gitlab self-hosted repo (for the code for IaC/Infrastructure As Code), as well as having argo-cd connect your repo(s) to your k8s clusters, so it starts becoming the automation glue for creading/editing/destroying/updating systems within k8s. I myself am a fan of Codium as an editor/IDE for writing the yaml.

Now, I can appreciate I just said a lot, and I'm going to add some more context. Plus, this is not the _ONLY_ way to do this, this is a successful way to do it that costs $0 as it is all open source.

Kubernetes/k8s builds on and uses docker containers. It adds features such as how many docker containers work together, automatically spinup/down across nodes (fault-tolerance/high-availability), improved security, and a whole lot of stuff that docker itself does not have out of the box. It is heavily used all over the place.

Yaml files are basic text files that have a specific syntax and are ""feature rich"" config files, so to say. In this case, they are used to define how you want systems/things to look, and if you want things to change how they look you edit the yaml file and save/commit to the repo.

The premise behind the particular tools I'm recommending is that it follows this rough flow, but this is not the only way, if you wanted to spin a new thing up:
1. You open your editor/IDE that is already set up to connect to your IaC repository.
2. You create a new yaml file, naming it something sensible, and write out all the aspects that define this new system/thing you want spun up. This could be a website, a database, a SIP/STUN/TURN phone system, a game server, or any other number of things. The sky is the limit.
3. Once you have written all you want, you save and commit the changes to the repo (and/or merge your branch, another topic another time).
4. The new yaml file now is in your repository (on your gitlab system) and you have nice version control stuff so you can roll back if you make mistakes, things like that.
5. argo-cd detects this new yaml file exists, check that it makes sense, and then interfaces with the relevant k8s cluster/namespace. argo-cd then begins applying this yaml file to create the necessary components that are defined in this yaml file.
6. Your new shiny thing becomes operational.

The amount of work at this point is roughly just writing a really good text file that describes what you want.

Now, as for your other aspects...

Why are you given the impression RDP is not workable in docker? And when you say ""the ones that made the most sense wouldn't work because they are RDP hosts"", can you flesh this out more? I'm not following you yet as to what this is.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
kyshwn,2,"That is a lot of information, and I am going to go through it all repeatedly and try to learn from it... thank you.

After taking a closer look, and re-engaging my memory... it's that I found that RDP on Windows didn't work within Windows containers.  And the software that the RDP hosts run is Windows-only.  At least, that's what I found out when I was looking into it.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,2,"Yeah, I know it's a lot. Sorry, not sorry. In that, I wanted to properly respond and say useful things. That means saying a lot at times. :)

I really do hope it helps! In part, or whole.

I can't really speak to how Windows containers work, as I haven't worked with Windows in containers specifically. DevOps certainly is relevant to Windows/Microsoft stuff, but from a market-share perspective, the majority is Linux related, so perhaps consider that.

That being said, the stubborn side of me is saying ""Surely RDP for Windows containers has a way to work, that's stupid if it cant!"" and if I were in your shoes I'd pursue that topic with ravenous intent. So here's to being stubborn! Or something like that :P

If you have any more questions, thoughts, or whatever, please let me know and post here!",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
kyshwn,2,"Oh it was definitely not a complaint... I appreciated it greatly.

And I have no problem with Linux...been using it for our new servers lately.  But I just don't have the 20 years of experience behind it that I have with Windows, so it's a learning curve.

And yeah, I went down a huge rabbit hole of RDP for Windows within Containers and it came down to basically, ""This might work, but it's not recommended or supported..."" and since I wanted to run it on our production servers that customers touch... it wasn't a great business decision at the time :)

Thanks again!",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,2,"Ugh I hate it when Microsoft says ""not recommended or supported"" for something like that. It's so stupid. Like there's real demand and value in that, why can't they just make it happen? That's so not what I would expect.

And no worries about the learning curve! Just like any foundation, keep building on it and it will be solid ;)

You're welcome! Also, reddit is being so silly in this thread, can't see which you're responding to on this one either, but I think I pieced together which one it is, hah! How odd...",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
kyshwn,2,"Hey quick question for you!  Sorry to necro this thread :)  
Can you think of any good online courses for learning DevOps?  I've been told my company will pay for any courses I want to take to help me go that direction.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,1,"Honestly, I'm an advocate that a homelab is the best tool for learning anything, and this includes DevOps. Furthermore, I actually recently [posted a thread on this topic](https://www.reddit.com/r/sysadmin/comments/um1bra/lets_talk_devopsdevsecops_why_arent_you_getting/) and I recommend that you read through it to help give you initial direction, as there's a good bit I've already posted on this topic.

I'm not bothered at all that you're asking me about this, but I would like you to read through that first, and then if you have questions please ask me in response to this, or some other way. That way I can minimise having to repeat myself before I can give you more specific answers to whatever questions you have.

That being said, while I do think that a homelab is going to be a worthwhile thing for you for learning DevOps, I don't necessarily think online courses should be ruled out fully. But being able to have your own safe space where you can make/break things (whether they are temporary things or permanent) is going to help you learn at an accelerated rate.

As for specific educational resources, I don't have anything specific to recommend this moment. But I would recommend you be open to free/unpaid sources online too, depending on the circumstance. And the resources (paid/unpaid/whatever) will also depend on what DevOps stuff you want to get into (software development? infrastructure management? etc).

But yeah, just let me know if you have any more questions or whatnot, and I'll do my best to help further. :)",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Deleted Account,2,[deleted],2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,1,Have you ever worked with a .conf or .ini file?,2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Deleted Account,2,[deleted],2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,1,"Okay well what I'm talking about is not the same as a scripting/programming language like powershell. I too do not grasp regex, or your particular example.

You do not necessarily need to know that level of programming to get into DevOps. [Here's an example of a yaml file for kubernetes](https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/#describing-a-kubernetes-object), hopefully this gives you a better impression of what that's about. It's more describing what you want, not necessarily using logic expression (in reference to your example) to do that.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Deleted Account,2,[deleted],2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,1,"Programming for sure has very high longevity, it probably will never get automated away, as you always need someone to write the automations. AI generating code will never be good enough to replace a human's ability to be creative and innovate. So yeah that's an accurate assessment.

I would say you may just be looking at the wrong languages, and other languages could likely work better for you. Perhaps consider that ;)

As for your environment, do you mean at your job, or at home? Homelab! If you want to see things you can spin up and induce change with [try these](https://fleet.linuxserver.io/), see how you can build them to be highly available, or whatever. It sounds like you're really not that far from actually segueing into DevOps ;)

Don't be so hard on yourself. It's okay to encounter hard things. Imagine how satisfying it is to overcome it anyways? I believe in you.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Deleted Account,2,[deleted],2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,1,"No worries! It wouldn't be much of a discussion if shooting people down was the thing ;P

Sounds like you need a homelab and to look for a job/scene change. Are you going to look into those?

You can get out of that rut! I believe in you!",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
UCB1984,2,"This is something I'm currently trying to do. I have 15 years of experience in IT, 11 of them as a sysadmin of some sort. Pretty much all traditional on prem stuff though. This is my list of links I've saved from stuff people have posted on reddit that other people thought was helpful. I'm mainly focusing on AWS for right now:

[https://learn.cantrill.io/](https://learn.cantrill.io/) (I cannot recommend his courses enough. He is an amazing teacher and his courses are very in depth, but easy to understand)  
  
[https://cloudresumechallenge.dev/docs/the-challenge/aws/](https://cloudresumechallenge.dev/docs/the-challenge/aws/) (this challenge seems to be recommended by a lot of people)

[https://kodekloud.com/playgrounds/](https://kodekloud.com/playgrounds/) (I haven't tried this one, but I've heard a lot of good things)  
  
[https://killer.sh/](https://killer.sh/) (kubernetes exam sims)  
  
[https://dropbox.github.io/dbx-career-framework/ic1\_reliability\_engineer.html](https://dropbox.github.io/dbx-career-framework/ic1_reliability_engineer.html) (descriptions of different SRE levels)  
  
[https://huntr.co/](https://huntr.co/) (this was recommended for organizing job searches)  
  
https://blog.kasten.io/devops-learning-curve  
  
[https://github.com/MichaelCade/90DaysOfDevOps](https://github.com/MichaelCade/90DaysOfDevOps) (free devops tutorials)  
  
[https://awsnewbies.com/](https://awsnewbies.com/) (AWS learning resources)  
  
[https://vscode.dev/](https://vscode.dev/) (in browser Visual Studio code! some features that work in the desktop app aren't supported though)  
  
[https://github.com/josharrington/devops-upgrade](https://github.com/josharrington/devops-upgrade) (a loose guide to learning devops)  
  
[https://acloud.guru](https://acloud.guru) (I like this site for stuff other than AWS)  
  
[http://2ndwatch.com/blog/how-to-upgrade-your-chances-of-passing-any-aws-certification-exam/](http://2ndwatch.com/blog/how-to-upgrade-your-chances-of-passing-any-aws-certification-exam/) (AWS exam tips)  
  
[https://www.reddit.com/r/AWSCertifications/comments/gkwcif/passed\_saac02/](https://www.reddit.com/r/AWSCertifications/comments/gkwcif/passed_saac02/) (more AWS exam tips)  
  
[https://tutorialsdojo.com/](https://tutorialsdojo.com/) (practice exams were highly recommended on this site)

Hopefully someone else finds it useful!",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,2,"For the vscode.dev I'd point to -> https://github.com/coder/code-server so that you can self-host, instead of rely on the security of that host.

Have you looked at rancher, argo-cd, gitlab?",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
UCB1984,2,"Code server is actually something I setup on an AWS EC2 instance accessible through a domain I registered on Route 54 as a project! It was really fun to figure out :) As for the other stuff, I've heard of rancher in passing but haven't learned about it yet. I'll add that stuff to my list of things to learn, thank you! I'm still pretty new to all of this, but it's nice to feel excited about something IT instead for a change haha. My current job is really stale, and I feel so left behind. I know plenty about stuff like SCCM, AD, group policy, powershell scripting, citrix etc, but all the cool new stuff like kubernetes and infrastructure as code are just something that we don't do and I don't have the power to change that unfortunately.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,2,"Build in your homelab. Look for [stuff here you want to spin up in k8s](https://fleet.linuxserver.io/), have fun with it! As you learn more about it, work towards updating your resume/linkedin to take you to a new job along these lines. And then there will be a point where you can just move into a DevOps job and not have to worry about all that crap. SCCM wishes it could keep up.

I totally get the being excited about tech. Let me tell you, Windows stopped being exciting so long ago. What a borefest. Do you really want to care about registries? Nahhh.

Rancher is pretty dang quick to get up and going, this weekend? ;))) And you're welcome! \o/",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
UCB1984,2,"Awesome, thank you! Guess I know what I'm doing with my old computer this weekend lol",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,1,Nice! :D You're welcome :),2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Deleted Account,1,"to me, DevOps and DevSecOps sounds like my cue to exit IT and go somewhere else. I enjoy the networking aspect of things and have very little desire to branch out. I've been the IT grunt on the helpdesk, the field tech, the tier 2 guy, the sysadmin. Networking is my jam these days.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,1,Why?,2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Deleted Account,1,Why what?,2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,2,"I don't see how my question was unclear...

Why does it ""sound like my cue to exit IT and go somewhere else""...?",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Deleted Account,1,"Because it seems like everything is pushing it's way towards some compound worded DevSecHelpNetOps thing. I like my current work and don't want to get more lumped on top. I'm lucky that my current job is basically insulated from that kind of thing but eventually I'm going to want more money, and maybe it's time to pursue a different field.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,1,"So I can appreciate the concern about the time-burden of learning new things when you feel already competent.

But what if doing that meant that you had a better work/life balance? You earned more money? Your systems were more reliable? You worked on actually interesting problems, instead of re-work and fixing shitty systems from the past?

This isn't the same as going from Token Ring to Ethernet. DevOps (from an infrastructure management perspective) builds on the experience you have and improves things in a lot of ways.

I'm not going to sugar-coat it, there is plenty to learn, but there's a lot to gain from learning it.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Deleted Account,1,Simplicity is better. Networks are already far more reliable than the crap people insist on putting on them.,2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,1,"Reddit isn't showing what you're replying to, so I'm sorry if I'm missing context.

I agree that simplicity is generally better. The fewer things to consider, the easier it is to see what is needed, or needs to change to fix something.

I agree networks are pretty dang reliable now, it's really quite nice! But yeah, since I can't see what you're replying to right now (due to reddit), I am unsure what you're talking about. Sorry!",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
robvas,1,I'm in B2BDevNetSecOps,2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Deleted Account,0,"In my opinion DevOps has nothing to to with the technologies or stacks you manage or use. DevOps is a culture and a mindset that starts with accepting failure, fostering learning, and enabling transparency across teams.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,1,"Yes, DevOps isn't just about technologies used, but to say it ""has nothing to do with the technologies or stacks you manage or use"" is factually false. It is a critical aspect to DevOps ecosystems. You need different tools to have CI/CD pipelines, execute stateful IaC aspects, and that requires specific technologies.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Deleted Account,0,Yes you need these tools to do your job of delivering code or deploying infrastructure. These tools are not what make something DevOps. People use and have been using these tools everyday (before anyone ever said devops).,2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,1,"GitOps, CI/CD pipelines, Agile methodology, these and the related technologies to enable them have traditionally not been in-use before DevOps conceptually was more formalised. Yes, there is parts that overlap, but enough to significantly differentiate that it is tangibly distinct. I've spent over 3 years studying this topic, and I've been working in IT for over 15 years. I know enough to see the difference, and you sure don't. How about instead of just arguing with me, you go see why I'm saying these things. Or is it that you're just here to be contrarian, instead of considering that there's something to this?

Now, if you're going to continue to argue this, I'm not interested. If you have actual questions or want to know more about it, let me know.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Deleted Account,0,[removed],2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,0,"Okay so you would rather ""call me out"" than try to contribute and help others in this thread get into the field? I really don't see why you need to fixate on being pedantic here, and instead try to actually contribute to helping others. That's really the whole point of this thread, to try to help people, not to try and call out the pedantic trolls.

I didn't ask for feedback. None of this is about asking for feedback. And it's completely clear you've missed the entire point of this thread. And you're now seriously off-topic.

I will not engage you further. I'm choosing to spend my time to help others, not waste it with someone who prefers to inflate their own ego (yes, you are) by ""calling me out"" simply because they have a piece of paper and a different opinion/experience.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
indigo945,0,"When did DevOps stop meaning ""standing up a Jenkins server to automate building and testing for software development and QA teams"", and start meaning ""just regular system administration for end users, but with buzzwords""?",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,1,"Because it's not actually necessarily either of those, it's a lot more [read this](https://www.reddit.com/r/sysadmin/comments/t4btu9/i_am_fucked_company_sold_out_5_months_into_my/hyxywqt/).",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Due_Bass7191,0,"During a job interview, I like to throw i back and say ""What does DevOps mean to you?"" Normaly they stammer and can't explain. And If they can, I say, ""This job is a sys asmin job, not a developer job. I am not a developer.""",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,1,"[Does this look like programming to you?](https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/)

DevOps for software development is one thing, but DevOps for Infrastructure Management is not inherently software development. It would behove you to learn the difference, because you've just demonstrated you do not know the difference.

Do you actually want to learn it? Or are you just commenting here in an attempt to try and look smug? This is meant as a helpful thread on the topic, not an opportunity for attempts to look smug.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
ie-sudoroot,-3,It’s just a SysAdmin role but more $$$$,2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,4,"That would not be an accurate representation. For those interested in a more accurate representation [check this out](https://www.reddit.com/r/sysadmin/comments/t4btu9/i_am_fucked_company_sold_out_5_months_into_my/hyxywqt/).

If you would like to discuss this further, or have questions, let's do it!",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
ie-sudoroot,-1,"Size of organisation also defines this… bigger org equals more $$$$.

Smaller organisation the SysAdmin gets all those hats normally as culture isn’t a primary driver for a fancy title & salary.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
h3xkey,-4,Ok glorified sysadmin ;),2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,2,I highly recommend you learn what stateful enforcement is vs building from scratch or traditional systems administration. The difference is very real and tangible. It sounds like you do not know the difference.,2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Andazah,-6,To this day I will never understand what devops means and I don’t plan to learn it,2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Leucippus1,3,it isn't that hard,2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,2,"I would not agree with that. For me it took a good bit of time and research to properly understand it, and that's with me putting the effort in, not having someone succinctly and accurately summarise it in a way that translates to how I understood IT perviously. It was hard, but it was and is achievable to understand.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Leucippus1,2,"I read your descriptions and, now that I work in DevOps more than I did before, it seems like you are conflating the idea of DevOps with agile project management. The two often go hand in hand, inevitably, but they are not equivalent practices. When we talk about DevOps on this thread we often fall into the trap of just blurting out different tools we use to accomplish ""DevOps"" and it can look super confusing when you are using Jenkins or doing a Git build and then some guy comes in and says **CONTAINERS.** The inverse of that is the idiotic fish symbol used to denote DevOps with nice sounding words that mean nothing to anyone without needed context. For a lot of shops, the 'new' way of doing things are just as janky or worse than the 'old' way except when things go wrong fewer people know what to do to fix it. That all will come with maturity but simply singing the praises of DevOps and suggesting that we can eliminate change management because we 'fail fast' isn't a really actionable string of words. What does that even mean? Don't get me wrong, I know what it means, but we don't eliminate change management in DevOps. We do fail faster, but the point isn't to fail faster and more often at the expense of success.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,2,"Agile methodology is a component of DevOps in that you switch to better habits of having staged environments that you promote changes through. Dev/Testing/Prod, which is time consuming to do without Agile methodology and related automation (CI/CD pipelines) in the traditional sense, but is trivial to actually execute day to day when you have the relevant automations.

Change management is not relevant in a fully realised DevOps ecosystem, not because you stop caring about it, but because the way change management formally works does not work in DevOps ecosystems, and the risk justifying Change management in the first place is mitigated. It is mitigated by having version controls of the IaC aspects, for example (commits/merges for code in repos, being able to roll back code, diff changes of databases automatically managed, etc). So in environments like that having change management, where you meet once a week to review all the changes and have them justified and approved, is a massive hamstring. When you can instead have daily scrums, do merge requests that require approval from peers that get processed within minutes/hours.

There are plenty of orgs that have pursued the ""digital transformation"" of transforming how they operate into DevOps (to say in short-parlance), but they either did it poorly or in an incomplete fashion. These issues can derive from many different regards, such as management/executive unwilling to give up the control that change management gave them prior, such as improperly configuring CI/CD pipelines, insufficiently educating/training staff on what this is going to look like and how to be successful in ""the new world"" so to say. There are plenty of examples of really incomplete/poor implementations of DevOps, but there are a steady supply of very successful DevOps transitions. Generally, those are the companies that are excelling.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Leucippus1,0,"Again, you are just stringing together nice sounding words without the benefit of any substance. I can say for absolute certain change management doesn't go away because of DevOps. You may shift the burden of risk management to a technical supervisor instead of a CAB or something like that but a DevOps shop / agile shops do not eliminate change management they just do it differently. Better? Maybe, I have seen it go sour fast.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,1,"> Again, you are just stringing together nice sounding words without the benefit of any substance

So your problem is that I use terms in my explanation? That's a weak counterpoint.

> I can say for absolute certain change management doesn't go away because of DevOps

I've worked at multiple massive orgs (thousands of staff) with formal Change Management that had not transitioned to Agile Methodology/DevOps Ecosystems, and I have seen those that have. Change management has no value in these transitions. Go look up the MTTR difference before and after. This isn't the only thing that makes change management obsolete in such a transition, but it is the biggest aspect.

Now, since it sounds like you're not really interested in discussing this further, I'm going to go help others who are actually interested in having a conversation. Maybe don't treat people who use relevant terms as ""just stringing together nice sounding words"" which you seemingly do not yet understand (and are unwilling to actually learn why those terms are used).",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,3,"Okay so you don't know it, but don't want to learn it, so why did you comment in a thread discussing it? If you want a concise overview [check this out](https://www.reddit.com/r/sysadmin/comments/t4btu9/i_am_fucked_company_sold_out_5_months_into_my/hyxywqt/).",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
madscoot,-7,Because I hate the security field. It’s a nerd pissing contest and the NO department,2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,2,"This is not strictly about security, by the way. DevOps does not inherently involve IT Security.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
MechaCola,1,"Windows guy here. Is having a power shell script that intergrates with ad, sccm, hr app etc to automate IT workflows considered DevOps. Like when does scripting turn into DevOps.",2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
BloodyIron,1,I think you accidentally posted twice my man. I responded to your other post though :P,2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
Chillin521,1,Did you work DevOps before transitioning to DevSecOps? Any advice / suggestions for a more recent college grad working in DevOps that is trying to transition in the future to a more security aligned role?,2022,"Lets talk DevOps/DevSecOps. Why aren't you getting into it? Do you want to? Do you have questions? Let's chat, let's compare notes, let's help each other."
drpinkcream,135,"I joined a team that set up Jenkins six years prior. 

The host is the definition of configuration drift, and it's been broken and manually fixed so many times, no one has any idea exactly how it's all set up. 

After our pipelines went down for a few days due to incompatibility with an OS security patch, we evaluated rebuilding Jenkins vs moving to GitHub Actions which our Enterprise account had recently added. 

GH Actions won by a landslide. *Nobody* wanted to rebuild Jenkins. We are in the process of converting all our pipelines over and finally flushing Jenkins this summer.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Deleted Account,20,[deleted],2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
flagbearer223,25,Yep!  Fully supported - all of our deploys happen on GH Actions Runners that are inside of our different clusters.  It's slick shit,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
derprondo,8,"How do you prevent modification of the .github files on an arbitrary branch?  For example, you protect main/master but allow folks to create arbitrary branches.  On an arbitrary branch, someone changes the application code maliciously, then also changes your GH Actions yaml to go ahead and do the deploy from the arbitrary branch.  Boom you have malicious code that wasn't reviewed by anyone in production.  There's a long standing GH Actions issue open about this, not sure if they've addressed it yet or not, will have to find it.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Deleted Account,15,[deleted],2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
GoldenMoe,7,"Two, I was gonna say this. We use bitbucket pipelines but it’s the same thing. You can only deploy to prod from master branch and that is a compliance setting org wide",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
flagbearer223,6,"All of our repos are private, and devs introducing deliberately malicious code that would get them fired isn't a major concern",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
derprondo,3,SOX auditors love this lol.  Yeah unfortunately we are unable to use GH Actions for CD because of this.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
kabrandon,-2,"GH Actions is legitimately trash, but that is actually not one of the problems with it. In fact it never really was a problem except for a lack of imagination of the users using it. Even before Actions secrets could be branch-scoped, you could have done this with Hashicorp Vault, using a JWT token from the job to authenticate, and configuring Vault only to dish out the secrets if the trunk branch was included in the JWT’s payload. 

Like I said, just a lack of imagination from the users.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
dad_called_me_beaker,1,Security takes...work?  Looks like you shocked some people,2023,Why do y'all hate Jenkins? (What pipeline tools do you use?)
flagbearer223,1,"LOL yea, we don't even have integration tests yet. It's a fractal of dumpster fires that I was dropped into, hahaha",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Lazy-Alternative-666,2,"Separate release from deploy. Gitlab runners are a CI tool, not CD.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
derprondo,2,This indeed is what we have done.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
PleasantAdvertising,2,"Is there an option to disable forks from running on your runners, unless manually approved during a pr by the owners?",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
hackrunner,6,"Where I work, Jenkins is deployed as a helm chart in kubernetes, with all config done using the Config-as-code plugin, and all jobs are created with the Job DSL.  Each team gets their own instance, and except for job history, it's basically stateless.

It wasn't exactly easy to get setup, but it's possible to avoid the configuration drift.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Bloodrose_GW2,-5,"On the other hand you can self-host jenkins and it can work in isolation whole for github actions, well, you need github, right? :)",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
steamy_wolfie,21,Host GitLab for free and use its runners,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Bloodrose_GW2,12,"Comment was about github.

For gitlab, certainly you can.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Deleted Account,2,Gitlab CI is a different product from Github actions. Just want that out there.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Hinkepeet,6,"Or host your own github. 
Although this is no free option.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
SquiffSquiff,5,Parent said 'GitHub enterprise'. That's self hosted,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
drpinkcream,2,"Manged by another team :D 

I just had to setup some runners which is a cinch.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
shakygator,3,"This sounds exactly like us but I alone have to manage the jenkins infra on EKS for FOUR TEAMS. Three of which I don't work for. Currently my team is moving our new stuff to gitlab, where I only have to manage the runner. Once we are done moving....good luck everybody else.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Zauxst,1,So who is managing Gitlab?,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
johntash,1,"You can use the saas version of gitlab with self hosted runners, even on the free tiers.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
shakygator,1,In this case - NOT ME,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Deleted Account,-14,[deleted],2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
drpinkcream,10,"Our GitHub instance is on-prem. 

We are replacing the unreliable thing the team doesn't like with the reliable thing the team tells me they want. I didn't say ""suddenly Jenkins sucks"". 

Please try to be more respectful...",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Zauxst,-13,You pretty much summed it up. Incompetence at its finest.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
ddoij,112,"The best thing about Jenkins is you can make it do whatever you want, however you want.

The worst thing about Jenkins is you can do whatever you want, however you want.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Deleted Account,30,Maybe kids don't remember but 10 years ago there really weren't patterns for running builds. Jenkins was necessary because every build was a snowflake or even a pile of them. Jenkins was like a garage full of tools. But nowadays no software platform is viable if it doesn't come with its own dependency and build management tools. If it can't build in one command no one will touch it. Plus Docker is a thing. Jenkins was a miracle back then and we all just outgrew it.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Zauxst,25,"It still is bleeding edge with a lot of the features, it was one of the first to start using docker containers, and also kubernetes pods as agents...

People are just incapable of managing it so they blame it on a complex tool. They install all sorts of plugins that are not managed by anyone and then they complain when the plugins stop working after an update.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Deleted Account,3,"This. Jenkins served is purposes, as a lot of legacy tools, but as DevOps mature the natural move is towards more opinionated, leaner tools.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
StephanXX,9,This is the truth. Jenkins is a robust tool. It's up to the engineer(s) involved to make it amazing.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Deleted Account,4,"Came to say this same thing. 

Also amount of plugins that break if you upgrade jenkins version  
And GUI bugs like endless recurssion that can only be fixed by upgrade that breaks some plugins doesnt help either.
Using Jenkins was an adventure but now I prefet github actions or gitlab just for  the simplicty ( ci/cd shouldnt be a rocket science ) and stability",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Deleted Account,3,Analogous to Perl’s *flexible* syntax making the language write-only lol,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
iusehttps,5,So much this!!! Any tool is as good as the person using it.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
mister2d,159,"For me it was simple. I hated the anxiety of updating and breaking plugins (sometimes derelict ones). All of my builds are done ephemerally in containers and at the time (3 years ago) Jenkins didn't seem to do that well consistently without breaking with upgrades. Finally, the fact that this environment is disconnected from the Internet made matters worse chasing down dependencies.

GitLab with runners quickly became a stress reliever for builds, artifact security scanning, and image repositories. Within the last 8 months I've also been using the Terraform and SAST integration of GitLab too.

I don't think the modern devops/devsecops/gitops thing works well with Jenkins.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Deleted Account,51,Gitlab runners FTW!,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Deleted Account,15,[removed],2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Deleted Account,7,Gitlab is especially good for a Ruby shop because of the analysis tools that can tell when code quality degrades or improves. We also used runners to do a deploy using Elastic Beanstalk every time there was a merge to trunk.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Zauxst,9,"If you are afraid of ""breaking plugins"". Stop installing plugins. You can also just test the update and plugin updates before actually updating...

Even more you cheer on Gitlab runners which is just a strip down jenkins with an agent and pipelines, with no other plugins... If that is what you wish, why not remove all plugins from Jenkins?",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
mister2d,6,"Oh I stopped installing plugins long ago. Once you have what you need there is no need to go crazy with it. The problem was, like I said, performing upgrades over the long term. There was a few things that broke due to deprecation. 

Nowadays I don't deal with plugins of any sort.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
TooSimpleSometimes,1,"One problem of Jenkins is that many core CI features  
are not available in Jenkins itself,  
like tag builds.

So people who want to do basic stuff are forced to install plugins   
or write the plugin code themselves.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
durple,3,I don't have as much Jenkins hate but I'm about to start a new greenfield role where I get a lot of the responsibility at early stage. I really hope what I see when I start makes me think Gitlab more than it makes me think Jenkins :),2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Deleted Account,2,Fuck plug-ins!,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Deleted Account,1,[deleted],2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Zauxst,2,Where is it onpoint because nothing is an issue with Jenkins.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
BoxElderBug,45,"I've sometimes seen Jenkins used in a way that aligns with DevOps, but more often I see it used to create crushing technical debt. If you use it in a very basic way, you're probably fine.

I think it gets a lot of hate because it gets a lot of use, and it's prone to [antipatterns](https://www.google.com/search?q=jenkins+anti+patterns).",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
fezzik02,18,"Yep big ""shoot the messenger"" culture well (aka I hate it for failing my build).

Also... that mousefeel (user experience) is soooo bad.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
gordonv,10,Mousefeel... first time i've heard this. I like.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Deleted Account,6,"Can I …

*looks around*

Feel your mouse?",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Deleted Account,23,[deleted],2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
jrkkrj1,3,Ya we use Concourse and it definitely is overkill for basic stuff but the guardrails are nice.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
StephanXX,77,"This will absolutely be unpopular, but in the past most teams built and groomed a pet using something called jenkins.  Today, one can fire up a jenkins master as a Kubernetes statefulset, and configure it declaratively using CASC, and have it fire slave containers for everything.  Pipelines can (and should) be stored in git, secrets stored in vault, and upgrades are almost alway just a version change to the image. Yes, it's old, and has a terrible reputation.  The modern incarnation is incredibly sophisticated, robust, and has millions of users, far and away more that just about any other platform.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
elitesense,28,"To add to that, in order to run your pipelines that are stored in git, you must already have the pipeline project itself, and all credentials, parameters, global config, plugins, etc created in Jenkins. 

I think that's one huge thing that's not great in Jenkins is the programmatic configuration of global settings, jobs, plugins, folders, credentials, etc. It can be done with groovy scripts but it's an absolute chore with horrible documentation - all Jenkins guides are UI focused. Totally doable though.

Once you get the actual jenkins provisioning and init (from scratch, not from an existing jenkins_home) is when you really get rid of most of the the shortcomings Jenkins has.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Zauxst,6,"> I think that's one huge thing that's not great in Jenkins is the programmatic configuration of global settings, jobs, plugins, folders, credentials, etc. It can be done with groovy scripts but it's an absolute chore with horrible documentation - all Jenkins guides are UI focused. Totally doable though.

Jenkins Configuration as a Code can do it quite easily. 

We store secrets in the Kubernetes store and load them in the pod as text files which are then read by Jenkins.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
elitesense,1,"Nice. Never used it, thanks. I've been getting by with init.groovy.d scripts.

Looks like it does pretty much everything except install plugins (""We don't support installing plugins with JCasC"" https://github.com/jenkinsci/configuration-as-code-plugin/blob/master/README.md)",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Zauxst,1,"For plugin installation, you can do it at docker image build tjme using the built in scripts to install plugins. You basically feed a liar or plugin names and then build the image, it will install all the plugins needed.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
StephanXX,16,"I really think the frustrations come from how Jenkins lets you do it any way you want, with very few guard rails. Most other systems are highly opinionated (circleci, github actions, etc), and so the blame is unfairly assigned to the tool. It's a poor craftsman who blames their hammers.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
cstoner,9,"> It's a poor craftsman who blames their hammers.

Well, most hammers don't have a lot of razor sharp edges on them. Sure, an experienced hand can use one without cutting up themselves and their friends, but maybe we shouldn't have untrained hands wielding the hammers.

Alternately, use some hammers that don't have so many sharp edges :shrug:

There's nothing inherently bad about Jenkins, but they don't make it easy to do the right things. In fact it's often hard. So when people do the easy thing, it's wrong and they don't find out until way later, after it's hard to change.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
StephanXX,5,">There's nothing inherently bad about Jenkins, but they don't make it easy to do the right things.

This is spot on. 

Is it not the clear distinction between an experienced engineer and a person who just got thrown into the role?  I was that person many years ago. CI is super challenging, CD is practically a unicorn. 

It's still blaming the tools.  The other CI tools have their own quirks and frustrations.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
smook1980,6,"Who's blaming the hammer? It's that there is a better hammer focussed on the use cases I my teams commonly have (run tests, deploy code) that are much simpler and quick to deploy. Any time spent getting Jenkins configured and deployed is time I could be actually crafting a product. Reading the jenkins docs, understanding how to fit the pieces together to do what I need , then figure out how to apply that all in code so it's reproducible provides no value to my teams users. 

Jenkins is a victim of its age, feature bloat and an out of the box setup that isn't useful without some effort.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
UrbanArcologist,2,"documentation

https://jenkinsci.github.io/job-dsl-plugin/",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
elitesense,4,"That's great for abstracting job config, but how do you install that plugin itself? Either groovy or the UI. How do you configure credentials without the UI, or set auth config or any other config? Groovy or the UI.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
coderanger,2,"What's worse is because of how Stapler works, when the UI changes, your Groovy often needs to change too. And that happens a lot.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
UrbanArcologist,2,"I use it to build my pipelines, and call each stage with another groovy library method that takes care of all of the logic, that way all of my parameters and envars are sure to exist. 

Management if Jenkins itself? I just use the UI, our team doesn't change that often, but the jobDSL plugin is mature and not going anywhere.

I also only use jenkins-lts.

I enjoy it, and gives me the freedom to code exactly what I need.

EDIT: also made a class to runs outside of the sandbox to pull secrets and credentials, but still find using the credentials manager in groovy from time to time. It's groovy all the way down. I don't use many plugins to be honest.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
SMillerNL,1,"Reddit Wants to Get Paid for Helping to Teach Big A.I. Systems
The internet site has long been a forum for discussion on a huge variety of topics, and companies like Google and OpenAI have been using it in their A.I. projects.
https://web.archive.org/web/20240225075400/https://www.nytimes.com/2023/04/18/technology/reddit-ai-openai-google.html",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Rakn,13,"I think I posted a rant a week ago about exactly that. Since these Jenkins posts come up like every other day. Thing is: it’s only robust if you use it on a small scale. The issues start to show the more instances you are managing. And of course you can do it all proper like you described (to a certain degree). But compared to a just working out of the box solution that doesn’t break ever and just works it’s still not really good.

Even the plug-in installation system isn’t robust. Did you know that there is discrepancy between the plug-in listing and the plug-in binaries being available on the server? That leads to some Jenkins masters not booting up when installing plugins or updating plugins and executing the plug-in installer script (which those docker images do automatically). I assume that is also a reason CloudBees maintains their own plug-in registry/server for their paid product (next to those paid only plugins). But there are a lot of these little things that just break from time to time. Kinda annoying.

There is soooo much more I could complain about with Jenkins. Luckily I don’t have to maintain any instances anymore.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Deleted Account,4,">But compared to a just working out of the box solution that doesn’t break ever and just works it’s still not really good.

So what's the solution in your mind that fits this criteria?",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Rakn,5,Well that was kind of a hyperbole. A system that never breaks probably doesn't exist. But I had a way better experience with GitLab than with Jenkins personally. If it fits your use case is another question.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Zauxst,2,"> Did you know that there is discrepancy between the plug-in listing and the plug-in binaries being available on the server?

This literally happens when you install a plugin that is meant for daily setups instead of the LTS Jenkins plugins... I don't know how you are getting to these conclusions... You are probably not quering the proper plugin list server.

>  I assume that is also a reason CloudBees maintains their own plug-in registry/server for their paid product

They do it because they have a list of vetted plugins. They do not accept any plugin in the list so people are not going to install random plugins in their Jenkins instance and then complain about stability.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Rakn,1,"I know that this is one of the main reasons. That’s why I also mentioned it. And as I said, you only notice it when you manage a lot of Jenkins instances. Of course you can manage every single version of every plug-in by hand. But that gets you into another kind of hell with a lot of instances. The best Jenkins server is one with as few plugins as possible.

In the end you can do a lot with Jenkins. But it really shows that it wasn’t meant for all this automated setup stuff. It’s all layers on top of layers to make an old product with design choices that did not include such ideas work.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
cametosayshadk,30,"Jenkins = awesome

instability with plugins = not awesome

*edit: technical debt accumulated = super not awesome",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
sentient_penguin,36,Have you seen Groovy? It makes JSON look like it was meant for humans.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
RisingPhoenix___,15,"Oh maaan I feel the pain of this.  

It's anything but 'groovy'",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Zauxst,3,"Yes, have you guys seen Java? Makes it look like Groovy is a scripting language for Java...",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
rhodope,5,Groovy is enough to deter me from using Jenkins whatsoever.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
toconnor,9,"My experience has been:

1. it is a pain to automate the creation of the master so it ends up becoming a pet
1. it requires plugins for everything and every plugin update causes you to hold your breath and pray
1. there are countless plugins for each task you want but most have been abandoned or don't do quite what you want
1. the lack of an opinionated approach means that each instance or even pipeline might be completely different
1. Groovy is horrible",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Zauxst,3,"> it is a pain to automate the creation of the master so it ends up becoming a pet

What this mean? Why do you need to create a master? What are you using to automate? You can easily create a docker container with a set of plugins and spin it up and be done with it.

> it requires plugins for everything and every plugin update causes you to hold your breath and pray

It doesn't require plugins for everything. If anything, power users recommend to use as few plugins as possible for your Jenkins instance and rely on the Jenkisnfiles and proper pipelines to achieve CICD.

> the lack of an opinionated approach means that each instance or even pipeline might be completely different

What opiniated approach do you need? If you would work with a Jenkinsfile it would be same as you would work with a Gitlab CI file.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
anakinpt,7,"I hate Jenkins because I use it and I don't plan to change, because it does everything I really need.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Seeruk,8,"Because Gitlab exists and once you have had a nice stress free and really advanced tool based on SaaS, you really realise what a waste of time it was to fight to keep an interior solution just running.

Also actions is catching up... But I still find myself saying ""awwww Gitlab did that 5 years ago"" when I see github's updates 😁",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
jolly_mr_worf,3,This. GitLab is so ahead of GitHub it's not funny. I see so many people talking about struggling with things GitLab does easily out of the box. I personally don't want to use other platforms after using GitLab.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
PleasantAdvertising,8,"There's 2 facts in life. Everyone complains about Jenkins, and nobody complains about things they don't use.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
bryantbiggs,0,https://www.linkedin.com/posts/bryantbiggs_we-have-all-heard-the-saying-regarding-3-activity-6897197204851843073-6K_s,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
tnjeditor,8,"Jenkins can be really good if you know how to use it right.  I see people make a real mess with it by asking it to handle too many demands from too many people.  Its best as a team tool.  For scale I use the enterprise version of Jenkin which has solutions for things like the plugin management, easy upgrades, central pipeline management, etc.  At scale it is like night/day.

I also see people write monsterous groovy pipelines when they should be using declarative pipelines instead.  Groovy is good as glue code but not as the entire pipeline.   People tend to think that when they tell Jenkins to use an agent that all that pipeline code runs on the agent, it doesn't.  The agent is only used for external commands.  

There are a number of best practices that can make use of Jenkins work really well TBH I'd much rather write Jenkins declarative over any YAML pipeline format.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
elitesense,15,"I don't hate it. It's the most flexible out of every tool. You can customize it to work with your systems, not customize your systems to work with the automation tool.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
badguy84,14,"We stick with Azure DevOps and GitHub/GitActions, which is a dogfood situation more than anything. I still ""hate"" Jenkins:

* It's community plugin driven, resulting on third party dependencies
* It enforces no actual patterns: you can plugin whatever you want and are infinitely flexible
* The UI/UX is horrible

I believe firmly that all these things can be overcome in a well structured organization with a strong set of practices/policies that are well understood and enforced. So hate really isn't the right word, it can work and some things (like UI/UX) are subjective.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
elitesense,4,"Google didn't tell me what the phrase ""dogfood situation"" means. Can you please explain?",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
badguy84,11,"It’s a phrase: eat your own dog food. As in: I work for a Microsoft adjacent company and we will advice companies on their platform.

So specifically, to make sure I can provide the appropriate consulting: I work with this stack, and I’m very comfortable with it. As an opposite I am not very comfortable with Jenkins.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Insok,2,"I've never heard anyone say that before, I'm gonna steal it",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
dmr83457,0,So it is so bad it is like eating dog food? Sounds terrible.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
manfre,3,No longer wish this content to be here due to the site changes,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
badguy84,1,Neither good or bad just biased and a scoped view of things.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Deleted Account,6,"We found ourselves spending too much time managing Jenkins rather than concentrating on improving our CI/CD. I also didn't like that you can really do ANYTHING with Jenkins. It became the solution to every problem: just use Jenkins!

We moved to Gitlab and it's been great. Very easy to stay organized. We went Saas so we don't have to manage the product itself. And its just for building and deploying code.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Zauxst,1,"This is actually a valid reason and response to jenkins. It requires time, and if you are a large organisation it can take full time to administer Jenkins.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Analytiks,13,"If we ignore the fact that jenkins or it’s plugins seem to end up with CVE’s published against them so often.entry. 

Jenkins just isn’t the powerhouse it used to be and we’ve got better things like GitHub actions with a lower barrier of entry now. It just doesn’t seem to fit anymore.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Zauxst,1,What does Github actions do better than Jenkins in your opinion?,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Analytiks,2,"I could maintain groovy pipeline libraries myself forever or look for talent specifically in this space to take it on. 

Or… I could just grab literally any random devops engineer and put them in front of GitHub actions for a day or two. 

Jenkins can do whatever you want but so can GitHub actions… it’s not about being lazy or unskilled, it’s just like using Python instead of c++… sure you’re could spend way more time using c++ but you’re throwing money/time away supporting a dated more complex solution. Would rather just spend the money",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Zauxst,1,"You are comparing a complex aspect of jenkins (groovy pipelines) with a simple aspect in github. 

If your needs are not fkmoels, you should not refer to shared libraries and scripted language but should compare the descriptive language of Jenkins with Github, which is an abstract version of the groovy pipelines and are pretty human readable.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Deleted Account,2,"There is nothing what github actions does worse. If I need smth sophisticated I can always write some js code ( or any other language and run as container ) .
Most of ci/cd  things shouldnt be overcomplicated and if they are - there must be something else that is a problem with the approach.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
IHasToaster,1,We use both but GitHub actions mainly to build and scan images before pushing them. Then Jenkins to deploy to different environments,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
InsolentDreams,12,"Well, since I don't see a good clear answer I think I'll dive in... and I'll do it as simply as possible.  With key points...

* Jenkins was (arguably) an decent tool, when it was the only fish in the sea.
* The web GUI for Jenkins, compared to basically any other CI/CD tool out there really makes you want to pull your hair out.  Configuration, especially of plugins, but even of your pipelines is very difficult.  You practically need a degree in using Jenkins to be effective at it.
* Jenkins used to only be configurable via their web GUI, and the CI/CD world around started using an in-codebase lingo and that was universally accepted as best/better practice so you could ""version"" your CI/CD with your code.  Jenkins tried to help fill this with ""Pipeline/Configuration as Code"" feature(s).  This attempt was abysmal.
* When Jenkins defined-as-code, please compare the (arguably insane) syntax necessary for Jenkinsfiles compared to basically ANY other tool in the industry.  It makes me want to claw my hair out.  This was likely engineered this way to support the internals of how Jenkins logic worked.  You have to basically ""know"" Jenkins in and out to engineer their pipelines as code effectively.  Their language doesn't support ""object-oriented"" anything, doesn't leverage re-use or building blocks/standards to implement at a company.
* Their plugin architecture is absolutely insane.  Hard to manage, maintain, and support.  Very difficult (or impossible) to update/upgrade Jenkins for fear of breaking things.  You basically install Jenkins and never upgrade, ever.
* Jenkins is ""heavy"" (as are most any Java-based tools out there).  This requires an excess of RAM and CPU just to host and run Jenkins.
* In my experience, folks who are still setting up Jenkins servers, have never used another CI/CD tool in their life.  This industry has a lot of people that are afraid of change and tend to like to learn one thing and try to do that one thing forever.  This is a HUGE flaw in our industry, as antiquated tools and technologies tend to forever haunt us.  (Arguably, the flip-side of fear-of-change is folks that want to always be bleeding edge, which I am also highly-against)
* EVERY time I've shown someone an well engineered Gitlab CI, or Github Actions, or Circle CI setup, I've converted teams instantly to those tools.  In modern CI/CD tools, they have built-in features like Environments, with automated integrations available for most to automatically delete old (eg: dynamic) dev environments.  An nice GUI available for any of them to view all the different environments you've deployed your code to, and an easy single-button interface to rollback to a previous version.
* Jenkins doesn't ""host"" anything, and doesn't have a cloud offering (afaik?).  So, this is where I really lean on how great it is for your SCM provider to ALSO be your CI/CD provider.  Github + Github Actions, Gitlab + Gitlab CI, etc.  The tight integration and security model around an SCM provider and their own CI tool is unparalleled compared to having to use and manage two tools.
* I personally do not accept jobs that use Jenkins that won't let me help them switch off it.  This is, by far, the worst CI/CD tool in this industry that I hope dies in a fire.  There is no amount of money (not even millions of dollars) that would get me to work in a role where I had to build and support Jenkins.

Reference: Been doing CI/CD since before tools for this existed.  Engineered my own CI/CD stuff based on CVS, SVN, manual shell scripts, polling SCM servers 20+ years ago to deploy code.  Made a living as an DevOps person before it was called DevOps, automating infrastructures and codebases since basically I was a kid.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Deleted Account,3,"You forgot one more point - hardcore jenkins fans are annoying to deal with.
Used jenkins in and out, had very decent ci/cd setup using declerative pipelines with shared libs  - still - compared to how my ci/cd, infra deployment code looks like now vs what it was in jenkins ( not even talking about shitty codebase of some legacy systems ) it's like a day and night. Under gitlab ( same applies to github actions or any other modern ci platform )  Everything is much more straightforward, not as overengineered cz for complicated issues we went with right tooling as it was harder to hack shit in gitlab and now all of our pipelines just works and are easy to grasp.

Would never go back to being part time jenkins administrator and supervisor as any non ""jenkins guy"" would just create mess in there. It was a great system ""back then"" tho",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Zauxst,2,"> using an in-codebase lingo and that was universally accepted as best/better practice so you could ""version"" your CI/CD with your code. Jenkins tried to help fill this with ""Pipeline/Configuration as Code"" feature(s). This attempt was abysmal.

Why are jenkinsfiles and pipelines abysmal to you? 

> please compare the (arguably insane) syntax necessary for Jenkinsfiles compared to basically ANY other tool in the industry.

There are two syntaxes that we can discuss. The Scripted language and the Descriptive Language (DSL). Which of them is insane and why do you think it as such?

They are easily split into common logic for example the DSL: Agent, Options, Steps, Post Steps.

> I personally do not accept jobs that use Jenkins that won't let me help them switch off it. This is, by far, the worst CI/CD tool in this industry that I hope dies in a fire. There is no amount of money (not even millions of dollars) that would get me to work in a role where I had to build and support Jenkins.

I completely disagree with you. If even more, I see the opposite. And it is not that the tool is old and frail, if anything the modern versions are powerhouses for enterprises.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
InsolentDreams,2,"I think the easiest and simplest way to explain this u/Zauxst is that Jenkins file format and DSL is unlike any other programming or scripting language out there.  They've invented their own unique DSL that makes it so you must ""live and breathe"" their DSL or you're absolutely useless at it.  As an DevOps architect and a trainer, I can't hand a bunch of Jenkins DSL over to an Dev team even with training and expect them to be even reasonably decent at supporting/engineering more pipelines without them taking days/weeks of training and practice to learn the format and its intricacies.

Whereas, with most modern CI/CDs, they use an common and widely accepted file format (YAML), and they basically run bash/shell/etc scripts.  Any developer with almost no experience of Gitlab CI or Circle CI could jump into an existing setup and add some tests and modify scripts with ease without spending hours/days learning an entire new unique DSL and file format specific for Jenkins.

Admittedly, the DSL of Jenkins is quite powerful, but its power is also its greatest weakness.  The readability and digestability comes at a high complexity for most folks.  As I said, you have to basically be an expert at Jenkins and their Jenkinsfile/DSL to be even remotely effective.

This high complexity-to-entry of this ends up being (imho) tech debt from day one and it ends up gating which of your engineers (if any) can support the pipelines and CI/CD.  This high complexity/debt ends up having to be supported by either your team of DevOps/Sysadmins, or which I've seen numerous times it ends up being supported in an enterprise by ""one guy whose religion is Jenkins"" which ends up being a huge SPOF when that person quits.

Jenkins does something which I as an DevOps consultant firmly stand against, which is using any technology which ""gates"" people (intentionally or unintentionally) from being able to understand, support, maintain, and use it.  Jenkins is one of those insanely over-complicated technologies, which almost any other CI/CD system out there is much more easily understood and supported by engineers at any level of seniority.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Zauxst,2,"> They've invented their own unique DSL that makes it so you must ""live and breathe"" their DSL

This applies to every CICD that accepts pipeline files. They have their own DSL language to write the pipelines. Even more most people actually write wrappers to write in their favorite language if they have something advanced.

> I can't hand a bunch of Jenkins DSL over to an Dev team

If anything, a Dev team should be the best one that learn Jenkins DSL, because you know... They are programmers, not Jira Power Users...

> Whereas, with most modern CI/CDs, they use an common and widely accepted file format

So you are going to refuse to use Chef or Terraform or Vagrant because they don't use YAMLs? It's Groovy Syntax which is basically a Java Scripting Language.

> you have to basically be an expert at Jenkins and their Jenkinsfile/DSL to be even remotely effective

This is universally true for every language and CICD. Whatever you do in Jenkins that it requires expert levels will be the same in Gitlab or Github actions. 

I can agree that YAMLs are human readable at a different level than any other config language, but this does not mean you require a different skill level to achieve the same thing you would do in Gitlab or GitHub.

Sure, Github actions actually has some built in managed features that work quite well with their platform, one that comes into my mind is the deployer feature where you can generate nice changelogs and patchnotes for users.

> using any technology which ""gates"" people (intentionally or unintentionally) from being able to understand, support, maintain, and use it.

This is equally valid for every pipeline language out there. You have specific syntax to the pipelines and you have to learn the building block. 

Developers that never seen Gitlab CI syntax will be equally gated by it as you would have developers that never seen Jenkins DSL language...

This analogy is similar to actually putting a Java Developer handle a python project and expect the same results and agility in fixing issues because we are talking about Developers.

> Jenkins does something which I as an DevOps consultant firmly stand against

Jenkins literally has Shared Libraries, Template Jobs, Pipeline Jobs, Configuration as a Code, Dynamic and Static Agents, capability of a full blown scripting language, easy extensive plugins and is open source.

Jenkins literally has everything that a software actually needs to be everlasting and supported for at least 10years. 

I don't see how you are augmenting this as Jenkins literally has the same things that Gitlab has and it is decoupled from your repository system.

>  Jenkins is one of those insanely over-complicated technologies

This is slander. There is nothing complicated about Jenkins right now. Anyone can easily spin it over docker, learn how to use the pipelines, connect an agent and it will work out for everyone...

You have to equally do the things to Gitlab but even bother of the repository, gitlab becomes even more critical with a lot of moving components that can fail independent. Inside Gitlab you have everything, you have issue tracking, wiki, cicd and the main feature which is Git Code Repositories...

You are literally running a monolith application in a world where everyone wants to decouple things and ensure everything is not critically dependent of each other component.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
mysteriousbaba,1,">This applies to every CICD that accepts pipeline files. They have their own DSL language to write the pipelines. Even more most people actually write wrappers to write in their favorite language if they have something advanced.

I don't think that's true. Github Actions is literally yaml + bash, I guess with a few specific commands and environment variables. I wouldn't call it it's own DSL. I saw it for the first time last summer, and it took about a day to understand how to use it.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Zauxst,1,Yaml is not a scripting language. It's just a style.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
mysteriousbaba,1,"Which is further supportive of my point, Github Actions literally is just bash scripts, with support for a few additional environment variables. I think its a slight stretch to say each CI/CD has it its own DSL - even if it is technically true, in practice many of them have very light DSLs.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Zauxst,1,"That's incorrect. Github has their own language style, because it has keywords.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
mysteriousbaba,1,"Our team went the opposite direction. We had GitHub Actions setup and working. A new very experienced engineer comes in, and says he wants to use Jenkins (because he's been doing it 20 years). Boom, now we're all having to work on Jenkins by next month, no ifs, buts or consultation :(. I'm hoping it doesn't end up being too bad.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
pinpinbo,9,"Jenkins doesn’t do a single thing well.

The bash runner is clumsy. The plugin system is a chaos. Jenkins config itself is a mess. Docker/Kubernetes integration is kludgy.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
suur-siil,3,"I feel your pain there.

Oh hey Jenkins - I'd like to run some bash, capture the output, and also get the exit status code.  Can you do that for me?  No?  And there's been an open issue for this for years now too?  Wonderful.

The whole ecosystem is built on abandonware and WONTFIX.

To make it more friendly for users to interact with, let's use Blue Ocean.  Yes, that other big pile of abandonware that does annoying stuff like periodic scrolljacking, and for some reason has _two_ nested scrollable boxes in pipeline view.

The only reason I still manage Jenkins here is that I can't get buy-in to replace it with an Airflow instance, even though it's be cheaper and more reliable + user-friendly, and pipelines would run through faster too due to ""DAG"" vs ""stages"" orchestration.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Grunchlk,6,"I was tasked with deploying an SCM/CICD solution on premises for a small team (no kubernetes). I came into it cold with git/jenkins/docker. It was kludgey. Jenkins was a mess, poorly documented and just wouldn't do what we wanted.

Switched to Gitlab for a more fully managed solution. It was much better, full featured, had all three things I need. However, it was a resource hog and was not FIPS compliant so I couldn't deploy it.

Finally settled on gitea and Drone CI. Drone's documented but not in an extremely cohesive manner but it's easy enough to figure out (moreso that jenkins). There's a free model and a paid for model. We started on free, liked it and converted to the paid model.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Jdelnano,5,"While I can understand *why* some people have disdain for Jenkins, so long as you use it the right way, you can build some incredibly tooling around it and have yourself a kickass CI environment that is 100% customizable/extendable. At my last job, we had a great setup with Jenkins leveraging kubernetes & a well designed shared library that really empowered the user by limiting how much ""jenkins fu"" they had to do on their end. Obviously it took time and money to build that out ourselves, but no other CI system would've allowed us that level of customizability.

However, things can totally go the other way and your Jenkins experience can be understandably miserable.

But, in my opinion, you can misuse/mis-administer any CI system. How much responsibility & the pain you feel might vary.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
CSI_Tech_Dept,5,"I believe the one included with Gitlab is the best one I used so far.

Edit: I don't understand the Jenkins hate. Maybe the UI is not the nicest, and it can get complicated, but it also is very powerful.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
znpy,18,"Keep in mind that 90% of the IT industry is fads, memes and hivemind groupthinking.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Zauxst,1,I think this is what happens right now with Jenkins and the reddit community.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
smook1980,5,"I don't hate Jenkins, and would reach for it again in the right situation, but that situation also hasn't presented itself in 5+ years.. My major beefs were:  
1. There was a lot of manual work to configure and setup a build environment and at the time no reliable options to keep build configs with the source code.

2. Builds did not happen in a clean isolated environment. I suspect this is now solved with by using docker.

3. Plugins had various levels of reliability and we relied on a number of them to get the functionality we needed. 

4. He had to manage updates for Jenkins and the plugins, and those updates broke our setup at times which meant we avoided updating certain plugins because of major functionality change or a dev on the team took the time to understand the changes and update Jenkins and each individual build (between 20-30) . 

I believe the first and second points are non issues these days, but I'm not sure if that's the case out of the box or if you need to use certain plugins. But not wanting to waste time on managing a build server I think still stands. There are better solutions these days for the two major use cases the engineering teams I've worked with have:  running a tests/linters against a PR  or certain git branches and automated deployment.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
RootHouston,4,Groovy sucks compared to YAML.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Deleted Account,3,"The UI, the RBAC management, the plug-in system, and Groovy, to start. Cloudbees Jenkins improved on some of it, but it became horribly expensive after they redid the licensing scheme.

GitLab.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
TheMagicTorch,3,Azure DevOps ftw; Jenkins missed the hype and will fade into obscurity.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
lbpowar,3,"It's fine. I always found it stressful to update plugins, though.  The fewer plugins you need, the better.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
qubitrenegade,3,"It's a stupid language.

It's really good at building.  It's really bad at deployment.

Everyone uses the CI tool for CD.  I can use a shoe to hammer a nail, but a hammer is a much better choice.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
DustinDortch,3,"Friction.  It isn’t just Jenkins, for me.  I am not interested in running a CI platform, period.  From my perspective I work with customers around these concepts and there is far too much friction in adopting the practice without having the burden of building up the platform infrastructure to make it happen.  Give me services for it all day so we can hop into the platform and start moving.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Bloodrose_GW2,6,"I don't hate it. It's a tool. If it does what I need, I use it. If it doesn't, I dont. :)",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
slowclicker,2,We are moving some of our pipelines from Jenkins to GitHub Actions exclusively. I am about to learn this soon.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
neowiz92,2,"We use azure pipelines, i personally love it. Just start right into it building pipelines.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
PretentiousGolfer,2,Java,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
DildoSmudge,2,100% hosted by AWS so CodeBuild/CodePipeline…,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
OfMaliceHearts,2,"I like to call it Jankins.

Gitlab is my favorite, seamless integration.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
QwertzOne,2,"Personally I don't see any reason for using Jenkins except legacy. It's pain to maintain, plugins constantly brake, syntax is mess and you can easily change that for new projects. Do you have access to Gitlab/GitHub? Easy. Do you have access to k8s? Argo/ArgoCD/Tekton pipelines.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Odd_Junket,2,I find it easier to write and read yaml than the complex dsl that Jenkins provides. I’d rather spend that time with my app,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
gatewaynode,3,"Jenkins is a fine tool, but everywhere I've seen it used it becomes a plugin/customized monster after a while.  I've started introducing teams to JenkinsX, it's actually just Tekton but the name similarity makes it easy to bring into consideration.  No idea if it's any better over time, I think only a good SaaS solution could avoid over customization/dependency hell like Azure DevOps or CircleCI.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
dgibbons0,3,I kinda miss Jenkins tbh. Although I hated groovy,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Zauxst,1,"Jenkins is awsome, and you will find out that most people that ditch Jenkins they will complain about plugins and go to another CICD system that will be similar as Jenkins without any of the experimental plugins and just pipelines...

Whenever I see GitLab CI recommendations I realize there are made by young people in the industry that didn't manage a Jenkins Service for a corporation with at least 1k developers and they still somehow fucked it up...

There is nothing that comes to my mind that gitlab has and Jenkins doesn't... Even Gitlab has a comparison page that is so childish, actually compares Jenkins with Gitlab and says: ""jenkins doesn't have issue tracking"" like what? :))",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
bryantbiggs,0,Wut,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Zauxst,0,wut I said.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
neopointer,1,"Let me summarize for you:

People don't want to use Jenkins because it's using a programming language (groovy), and they prefer to use something more declarative (yaml) even though Jenkins has a declarative option (groovy again) which is not better than the imperative option...

Then these same people will start writing shell scripts to be used in the pipeline...

Don't get be wrong: Jenkins is not the greatest CI/CD tool, and groovy sucks big time. Yet, it's better than the others when it comes to reusability of pipelines and flexibility.

But the people whining are usually the ones that will create spagetti pipeline with any tool anyway.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
ingcognito92,-1,Set your LinkedIn as Groovy Developer and let me know what types of jobs you hit up for 😹,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Deleted Account,0,"Jenkins is pretty much just a link between scripts that’s visually easier for non developers to read.  If you can code, it’s not very impressive",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Delicious_Alarm_1502,-1,"Cause it’s a POS and the only reason people use it is because many organizations are too cheap to spend money on devops so techies are forced to use what is free. 

So I take that back - it’s a free POS.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
hirschnase,-9,Jenkins is from the 90s,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Deleted Account,4,When’s Linux from?,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
hirschnase,4,The difference is that Jenkins is stuck in the 90s and Linux is not.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
miken07,1,"I heard someone once say in a thick accent ""Jenkins is crom with gui"".  I laughed my ass off.

The real pain points of Jenkins is plug-ins and groovy.  I'm not even in dev ops.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
StoneOfTriumph,1,"Jenkins works well with multi  branch pipelines to be triggered after a PR and executing your CI/build, run unit tests etc. and report back. It works well for that with zero pipeline as code/script. It's all quickly configurable and easy to maintain.

Where Jenkins becomes a dark place is when people use undocumented plugins (not all are equally mature in doc) and start triggering these scripts left and right. That are not well documented, the console logs are dififcult to troubleshoot, etc. I think that's its failure is by being too flexible, and of course not playing very nicely with containers.

I had more positive experiences from a maintainability and scalability standpoint using Drone CI and GH Actions and ArgoCD for k8s. With time I have to come appreciate different orchestrators VS the generalist all capable Jenkins that becomes difficult to manage from a scalability and technical debt standpoint.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
FruityWelsh,1,"Man trying to configure and secure Jenkins has been a pain for me. Gitlab runners were easy enough that I was able to use them on personal projects, plus securing them just ment making sure the containers we could pull from were secure, so something we already had to do.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Deleted Account,1,I hate Jenkins to the core. It is good for my personal projects but I can't write scripts all the time to glue my pipelines where I have tools like azure devops which has an inbuilt cohesity.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
french_commenter,1,"I see lots of people hating Jenkins because it let's you do anything you want.

I have to agree on some points, like plugins hell.

I joined a team were they use Jenkins, and had a lot of scripted pipelines that were hard to maintain.

We decided to only use a small set of plugins and migrate to declarative pipelines, and docker agents.
We still have the ability to call some utils functions in a scripted way when necessary.

For us, it's just a matter of trying to keep it simple and clear.
So having the ""possibility"" of doing whatever you want and installing hundreds of plugins doesn't mean you have to do it.

Right now we are quite happy, and I think we wouldn't have much more benefits of using GitLab-ci or circle or other tools.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Nowaker,1,"The principle of modern CI is simple: your CI is defined as code, so whenever your code changes, your CI adapts. Main branch still does the old thing, while a new fresh branch does something else. This approach was totally impossible with these outdated systems. So the best way is to keep your CI where your code is. If you use GitHub, use GitHub Actions. If you use GitLab, use GitLab CI. If you outlive GitHub Actions, look at Drone CI or GitLab CI.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Rorasaurus_Prime,1,The only reason you wouldn’t think Jenkins sucks is because you’ve not tried Gitlab or GitHub Actions.,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
verx_x,1,"Match tools for the problems. Not problems for the tools.

Jenkins was a great tool when was released 11 years ago. But today we have 2022 and the bouquet of tools for CICD is much, much bigger than had been.

What I want to say: For oldschool legacy apps which was designed and developed 15-30 years ago and more and connected with Jenkins when he was released that can be ok.
But today if you have fresh project based on fresh stack and you probably want host him on cloud or on-prem you should definitely choose one of newest tools which need to less work to build an efficient CICD.
There are a lot of tools from TeamCity to FluxCD, ArgoCD maybe selfhosted Gitlab or JenkinsX.

These tools gave you a more reliable process and more built-in options to configure whole pipeline. Some of them can help you a lot if you want implement GitOps.

So it's ok to use Jenkins. But if you want less work and more efficient you should look for something newer.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Deleted Account,1,"I want to spend my time using tools to solve problems. I don’t want to spend my time managing, upgrading, and troubleshooting the tools.

For this reason we also prefer managed AWS services at my company. We couldn’t manage the underlying software better or cheaper than AWS and don’t have any problems would be solved via tweaking container hosts, etc",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
Comprehensive-Pea812,1,"yeah not sure why. 

for me jenkins does the job well. 

maybe there are some scenarios that jenkins cant perform really well and getting all the hate.

I saw a team using CircleCI, praising it, hate it and planned to migrate to jenkins.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
soxfannh,1,100% AWS here so we use the CodeBuild/CodePipeline combo,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
ChickenNoodle519,1,"Jenkins's UI is hard to navigate and looked dated ten years ago. Updating it is a nightmare. It's hard to maintain. In general, self-hosted CI/CD frameworks are a nightmare. I've self-hosted Jenkins and CircleCI, would not go back to doing either if I can help it.

Hybrid CI/CD, where you host the runners but a third party hosts the UI and handles orchestration are a huge improvement over fully self-managed — Gitlab, GitHub actions, buildkite, etc are much less work to maintain.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
yass3r_,1,Teamcity,2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
gcavalcante8808,1,"Gitlab/GitHub/tekton or something else that is container powdered and allows our developers to really create their pipelines without the need of a ‘science’ on how to setup the thing properly in a ephemeral wAy, SSO and other things.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
trnka,1,"I don't hate Jenkins, just have a number of frustrations with it compared to Github Actions:

* To add Jenkins to a new repo at my current employer, we need to submit a request to another team, which is normally quick but can take hours or days if they're busy or on PTO
* To configure Jenkins images, we have to work with another team to do it. GH Actions feels more self-service
* Once in a while we've had issues where there weren't enough Jenkins workers available and had to wait
* The Jenkins user interface is pretty janky at times, like the wait for approval button renders off-screen in the pipeline view but it works fine if you click into the build. I think it has some weird silent failures if you're not logged in too
* Updating the Jenkins install is a manual effort by another team, likewise updating plugins

Github Actions has been generally nicer. My main gripe is that shared actions seems like it's just asking for a security problem. You can pin shared actions to a git sha but I don't know if you can have version numbers like other types of dependencies.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
djk29a_,1,"I’ve been using and operating Jenkins since it was called Hudson and was doing CI even earlier with our CruiseControl service at a start-up. Besides more technical issues it comes down to its manageability, usability, and performance deficits that do not make up for its raw flexibility to do so many things. I commonly see that many organizations started with Jenkins about a decade or so ago when they didn’t have any real experience with CI nor their organization’s needs and capabilities. Along the journey many organizations have come to rely upon more specialized tools and identified their core needs to balance appropriately with the maintenance costs of their respective solutions.

Jenkins gives the most of any rope tools out there, no contest here. Most tools have structures to build bridges as first class citizens but Jenkins makes it easier to build more varieties of nooses than rope bridges and pulleys unless one willfully ignores the vast majority of documentation that exists (read: just use containers, try to avoid plugins, refrain from use of Groovy or pipeline / job definitions in any form, etc). Think of it similar to how PHP was viewed around 2011 by web developers - it was ridiculed yet clearly popular.

The (mis)use of Jenkins in the industry has soured many lower maturity organizations on CI/CD efforts that literally all high performance software and operational organizations use, and this great divide of organizational performance likely makes a lot of the survivors in this sub feel bitter about Jenkins’s role in cratering their efforts at the companies that have failed.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
bilingual-german,1,"I hate Jenkins, but I also hate BitBucket. :)

And you can both replace with Gitlab and also replace Nexus (or wherever you store your jars), Docker Hub (or wherever you store your Docker images) and a whole lot of other tools, if you want to.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
MrScotchyScotch,1,"Imagine a 10-car locomotive that was retrofitted to run on city streets and used to deliver pizzas.

Every single best practice for modern systems is foreign to Jenkins. Configuration as code is a plug-in, it depends on writing everything to a filesystem, the jobs are either XML or a weird variant of Java, there's an entirely different job format needed just to load jobs when the server starts, none of the configuration changes are versioned, and all the millions of plugins you need to do basic things are chronically insecure or broken. The teams maintaining it end up breaking it more as they try to improve parts. Doing anything is 50x harder than it should be, and it's always breaking.

Jenkins is the single best example of why you want a modern, cloud-native design. Find a solution that has versioned config changes, simple jobs, uses a database for state, and requires as few plugins as possible.

I personally love Drone.io. It's not free for commercial use but it is the single best experience I've ever had with CI tools and it's the best design I've ever seen for any cloud-native app. It's the easiest tool I've ever set up and it's the easiest experience for developers, it's the easiest to maintain and has integrations for difficult 3rd party stuff. By comparison, GitHub Actions is a lot more complicated, difficult to set up, has weird billing and org management, and its interface is more confusing.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
GaggingMaggot,1,"As a dev tester, I hate Jenkins because it not only doesn't add value, it has negative value.

I can run an entire test suite on an independent system (i.e. my own) and have virtually no false fails and no false passes. The system runs and acts as expected.

Put it on Jenkins as a scheduled job and suddenly test results are a configuration shitshow. False fails galore. Timing issues. Access issues. I'd like to blame IT but they're actually quite good about fixing issues as they come up.

I could start my test suite as a Chron task on a dedicated server with less trouble, but the company has drunk the kool-aid and won't change the process.",2022,Why do y'all hate Jenkins? (What pipeline tools do you use?)
wasabiiii,15,Depends if you're actually running an agile team or not. That's the benefit. Work items. Workflow. Cards. Etc.,2023,Azure DevOps or github?
Capable-Mail-2020,2,"Use Azure Devops for your ALM... e.g. tasks, boards, stories, etc.  Use Git for your source control.  You can tag git pull requests to tasks, etc.  Works well.",2023,Azure DevOps or github?
wasabiiii,2,OP is talking about GitHub not git.,2023,Azure DevOps or github?
Capable-Mail-2020,1,"Fair point... I tend to use Git and GitHub interchangeably... but the comment is still valid whether one uses a Git repo hosted on GitHub or elsewhere.

Many folks 'stuck' in the Azure/Microsoft universe use TFS for source control.  I'm pointing out that it doesn't have to be that way.",2023,Azure DevOps or github?
MonkeyJunky5,4,">I tend to use Git and GitHub interchangeably...

Very not good because git is a protocol that numerous SCMs use and just capitalizing Git doesn’t make it clear that you are talking about GitHub (a platform) and not just git (the protocol).",2023,Azure DevOps or github?
ninetofivedev,4,"Uh.. well you're just wrong for using them interchangeably. The development experiences changes quite a bit based on the SCM platform you go with. Even with Github and ADO both being owned by Microsoft, the UX is vastly different and the CI/CD platform, although with plenty of similarities, is also quite a different experience.",2023,Azure DevOps or github?
punkologist,1,"we have our git repos in azure devops, but i was wondering if it would be beneficial to continue using devops from ci/cd and card/tasks/sprints etc but store our repos in github..",2024,Azure DevOps or github?
zvado1,2,Yet you cant assign more than one person per task. So when we pair code one guy gets left out.,2023,Azure DevOps or github?
wasabiiii,12,That's two tasks.,2023,Azure DevOps or github?
zvado1,3,So just duplicate the same task?,2023,Azure DevOps or github?
wasabiiii,15,Yup. That way scheduling works. Fact is you're consuming double man hours. That effects velocity. You're scheduling around two people's allocated hours.,2023,Azure DevOps or github?
blackn1ght,2,"Does this not just lead to a cluttered board?  What if you mob on something, have 3 or 4 duplicate tickets?",2023,Azure DevOps or github?
wasabiiii,2,The board does what people are working on what. Same number of items if you have the same number of people,2023,Azure DevOps or github?
blackn1ght,2,"I'd find this annoying personally, we've always just assigned a single person to the ticket and it's worked out fine.",2023,Azure DevOps or github?
wasabiiii,3,"If you don't have a requirement to track productivity by person, sure.

Having a single person on a task however, but letting a second person spend time working, means that second person's time isn't accounted for. At the end of the sprint you won't know how much he actually got done. Numbers will be off.",2023,Azure DevOps or github?
Capable-Mail-2020,1,add a task for each.  that's how we manage it.,2023,Azure DevOps or github?
blackpawed,1,"No Agile, we're too small a team for that really :)",2023,Azure DevOps or github?
kid_jenius,7,I use azure devops. And it still integrates with GitHub if you need,2023,Azure DevOps or github?
blackpawed,1,I'm definitely going to have to experiment with the GH integration to see how it works,2023,Azure DevOps or github?
Sweaty_Variation_951,6,Azure Devops of course,2023,Azure DevOps or github?
RecognitionOwn4214,10,"You'll probably be happy with both.

We're using Azure (on-prem) for everything private and GitHub for OSS.
Both are manageable in small teams.",2023,Azure DevOps or github?
dr_driller,14,"azure devops is easy and powerfull, i'm really surprise you struggle, maybe you were already used to git ?

the microsoft documentation is outstanding, did you check it ? 

i may help if you struggle on a particular point..

https://learn.microsoft.com/en-us/azure/devops/?view=azure-devops",2023,Azure DevOps or github?
Deleted Account,7,"Yeah I’m kinda surprised by their comments. 

ADO is super easy to master and much more powerful in certain ways. 

Not that Git is a slouch. And with MS investing its well support as a source origin for ADO projects and pipelines.",2023,Azure DevOps or github?
stroborobo,3,">	pipelines

Let’s be real, Azure Pipelines are a mess. Bugs everywhere, incomplete docs, terrible defaults, no input validation, no testability…

I’ve started moving a lot of it into build scripts and we’re considering to generate all the pipeline files in the future, because they are just hard to write and maintain. Looking forward to just having the trigger, it’s includes, some minimal setup and the script call in there, hopefully soon.",2023,Azure DevOps or github?
blackpawed,1,"Nice set of guides, thanks.

Not so much struggle, I get it, just find it painful to use, and I have to consider my other team members.",2023,Azure DevOps or github?
Cra4ord,9,"I think Azure Devops is better for private apps. You can pick your project workflow and customise the work item cards for what ever metrics you are wanting to report on. You can even migrate your workflow if you find that it’s not the best 

I have a email that is auto generated every deployment that goes out to management with all the attached work items and GIt commits.

The PRs are easy to configure with policies. But I use git compare branch for reviews and put the feedback and task lists into the PR.

I wish I had Devops years ago it has everything I need to keep on top of my product and team",2023,Azure DevOps or github?
klekmek,13,"Go for GitHub. Microsoft is investing a lot more and really cool features are available in the Enterprise version.
CICD integration is a main focal point with GitHub actions and you can expect a lot more improvements in the next 6 months.",2023,Azure DevOps or github?
blackpawed,2,">CICD integration is a main focal point with GitHub actions 

The docs and tutorials are excellent

&#x200B;

>and you can expect a lot more improvements in the next 6 months.

&#x200B;

Interesting",2023,Azure DevOps or github?
MattePatte303,1,"They shifted the focus a bit last year and are working hard to improve Azure DevOps even more.
 https://devblogs.microsoft.com/devops/integrate-security-into-your-developer-workflow-with-github-advanced-security-for-azure-devops/",2023,Azure DevOps or github?
zarlo5899,3,i go with gitlab as it has subgroups and if needed at any point we can move to self hosting it all,2023,Azure DevOps or github?
Standard_Wish,3,"Try them both and decide. You won't curse yourself for making an incorrect decision & most of the knowledge translates betwixt.

If you're in a learning stage I'd lean you toward GitHub due to a higher volume of docs & videos. Good luck & have fun!",2023,Azure DevOps or github?
blackpawed,1,"Yes, the docs and community are excellent and well organised.

Have been suffering from the curse of too many good choices! Indecisive :)",2023,Azure DevOps or github?
Equivalent_Nature_67,3,I'll use anything over github. I just don't like the UI and it's hard to find stuff,2023,Azure DevOps or github?
ninetofivedev,2,Github UI isn't great... but in comparison to the ADO UI? Blows it out of the water. Both need some work.,2023,Azure DevOps or github?
Equivalent_Nature_67,1,Bitbucket >>>>>>>>,2023,Azure DevOps or github?
blackpawed,1,"Each to their own I guess, personally I find it more straightforward.",2023,Azure DevOps or github?
chucker23n,4,"ADO is stronger in project management. GitHub has a few things that are simpler/easier to use. Overall, I don’t think you’d regret either of the two.",2023,Azure DevOps or github?
maxinstuff,2,"Mostly the same - except for small random things.

For instance why is it that hooking a Linux function app up to my Azure Devops repo is just not supported for some reason? But a Windows function app is?? I have to set up a pipeline and do push deploy (a fiddly process, again due to inconsistent support - have to load the Windows template and modify it. IT WORKS FINE BY THE WAY MICROSOFT - JUST PUBLISH THE LINUX OPTION ALREADY) but regular app services are supported for both Windows and Linux out of the box….

Weirdly inconsistent support. Wouldn’t have had this problem with GitHub or Bitbucket even.

Probably moving everything to pipelines anyway - but both GitHub and Bitbucket also do that too so….",2023,Azure DevOps or github?
steveo600rr,3,"We use pipelines for our Linux functions apps. What part doesn’t work for you? I created a yaml file for the pipeline and it does it thing. 
The first pipeline took the longest to setup since I had to skim the docs for the correct configuration.",2023,Azure DevOps or github?
maxinstuff,1,"It does work - that’s what I said.

My point was that I shouldn’t have had to mess with it.

Issue was: 1. You can’t use webhook deploy from Azure Devops to a Linux Function App (it’s the odd specificity of this omission that really gets me), and 2. There is no pipeline template in Azure DevOps for this either - you have to take the Windows template and modify it, or write it from scratch.

It’s just a very odd middle finger to a specific scenario.",2023,Azure DevOps or github?
steveo600rr,1,"Yeah, not having a template was an annoyance. I haven't needed to deploy via webhook. We use DevOps and deploy after we approve our PR's. Our apps are pretty basic.",2023,Azure DevOps or github?
Neophyte-,2,"Azure makes it easy if you put your ci cd pipelines there and host there.

I'd avoid aws if you can use azure. I might be biased but azure is far less confusing and the billing is less opaque. Better to support for SQL server if you plan on using that rdbms",2023,Azure DevOps or github?
blackpawed,1,"> I might be biased but azure is far less confusing and the billing is less opaque. Better to support for SQL server if you plan on using that rdbms

Yeah, on the hosting side I'd probably say Azure seems more straightforward. I do drool over AWS Aurora Serverless though (MYSQL/Postgres only).

Wouldn't say the pricing for either is terribly straightforward... Half of that is trying to estimate your workload though.

But yeah, far more comfortable with MS SQL Server.",2023,Azure DevOps or github?
Valnutenheinen,2,Azure has serverless options for those databases as well.,2023,Azure DevOps or github?
blackpawed,1,Can it load balance read only queries over multiple instances the way Aurora can?,2023,Azure DevOps or github?
Valnutenheinen,2," I live on the app side so don't have as much depth on data. Would be worth looking into flexible server though maybe. 

https://learn.microsoft.com/en-us/azure/postgresql/flexible-server/concepts-pgbouncer",2023,Azure DevOps or github?
blackpawed,1,"Interesting, thanks",2023,Azure DevOps or github?
betty_humpter,2,GitHub repo for sure. Just integrate dev ops with your git repo and you have your choice between ado pipelines and GitHub actions.  The ado board can connect to your git repo as well. Ado pipelines still have more to offer but GitHub actions are closing the gap. You could start in pipelines then move to GitHub actions later if they ever decide to kill pipelines.,2023,Azure DevOps or github?
blackpawed,1,">Just integrate dev ops with your git repo and you have your choice between ado pipelines and GitHub actions.  The ado board can connect to your git repo as well

I'll definitely look into that, some of our contractors are far more comfortable with ADO Boards.

Quite liking GH Actions.",2023,Azure DevOps or github?
TonyNicholls,2,What’s the story on GitHub repos being scanned for populating AI models? Is it just public repos?,2023,Azure DevOps or github?
chucker23n,2,They claim they've only trained on public repos.,2023,Azure DevOps or github?
TonyNicholls,1,"I wonder if we are being paranoid enough?

If true - might explain some of the quality issues reported with co-pilot :)",2023,Azure DevOps or github?
chucker23n,1,"Hard to say, but I’m not sure Microsoft wants the slightest suspicion from corporate partners that it’s analyzing their code.",2023,Azure DevOps or github?
jayerp,2,I would probably go with GitHub. I’m assuming their pricing plans are cheaper than Azure?,2023,Azure DevOps or github?
blackpawed,1,"They are reasonable, and tbh, our requirements are small enough for now that both free tiers work.",2023,Azure DevOps or github?
ujustdontgetdubstep,2,"TeamCity blows them both out of the water imo, but may come with higher overhead?

Anyways the nice thing about Azure is the Microsoft-hosted machines which make cross-platform testing a breeze.",2023,Azure DevOps or github?
citroensm,5,"I have the exact same dev team and use Github exclusively, very happy with project management and CI actions. I have used ADO in the past with a client, but found it too clunky for my taste. You'll propably do fine with both.",2023,Azure DevOps or github?
blackpawed,1,"Thanks, yeah the GH Project and issues are enough for our requirements and the actions more than enough.",2023,Azure DevOps or github?
kbuck21991,3,"GitHub for code management, azure pipelines for ci/cd",2023,Azure DevOps or github?
avoere,2,"We use both at my job, and while I agree that the UI for working with PRs is not that good in devops (for example, typing lags seriously to, close to being impossible if you are trying to comment on a large PR), the major advantage of DevOps is that the ticketing system is good enough to satisfy ""those other people"" so we don't have to use JIRA for that project.",2023,Azure DevOps or github?
Neophyte-,9,What's wrong with the prs in DevOps?,2023,Azure DevOps or github?
fieryscorpion,5,PR works just fine for us.,2023,Azure DevOps or github?
avoere,1,"As I wrote: if the PR is big, typing lags to the point of being close to impossible",2023,Azure DevOps or github?
Neophyte-,1,"it does get laggy shitty

for big prs i like to take a local brancch and use beyond compare with

git difftool -d branch-name

or 

git difftool -d commitHash1..commitHash2

wondering if uve got better ideas for compares on doing prs, i generally hate doing code reviews, i trust the devs i work with, unless its something im vested in e.g. something i wrote",2023,Azure DevOps or github?
Jaruden,1,"I often use GitHub for the repo then devops for the ci/cd. Neither one is great for issue management imo, but just starting out GitHub is probably simpler and fine for your needs.",2023,Azure DevOps or github?
Alywan,1,Bitbucket,2023,Azure DevOps or github?
blackpawed,2,"Heh, sticking with the MS Ecosystem for now.",2023,Azure DevOps or github?
Valnutenheinen,0,"If I were starting from scratch I would choose GitHub for source control, actions, and project management.  If I needed to drive a more waterfall or ""jira"" like project management model, I may consider using Azure Boards.   

GitHub also gives you access to Advanced Security and Co-Pilot which in Enterprise scenarios are very much gamechangers.

If you have a license for Visual Studio on an Enterprise Agreement, your team can upgrade them to include GitHub as well. 

Use both!",2023,Azure DevOps or github?
blackpawed,1,"Thanks! Think we'll definitely go with GH for source and project management for now, evaluate the CI/CD stuff. Its nice being able to mix and match.",2023,Azure DevOps or github?
carl-di-ortus,-4,GitLab,2023,Azure DevOps or github?
Secure-Hearing-9138,1,"Compared to GitHub, Azure DevOps tends to be preferred by enterprises and cloud enablement initiatives. Like Github, it offers both public and private repositories",2023,Azure DevOps or github?
dylanberry,47,"I agree, this is definitely a big issue. Particularly when dealing with large and/or complex pipelines. 

To cope, I have changed my workflow in the following ways:
1. Use a script-first approach (PowerShell/Python/Bash).
2. Avoid all Azure Pipelines tasks aside from cli-based tasks (due to above)
3. Build a ""test harness"" script to replicate how the pipeline will function
4. Work locally until your test harness functions as expected
5. Build a yaml pipeline based on what was laid out in your test harness
6. Test and tweak your yaml pipeline

Using this approach allows you to work locally and iterate much faster. I understand it's likely not the answer you want, but this approach has massively improved productivity, particularly when working with IAC pipelines or complex CI/CD.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
Deleted Account,8,"Yep, exactly what I do. We should connect and share ideas. You seem to be my kind of guy 🙂",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
dylanberry,7,The other advantage with this approach is that your scripts will be largely portable so they can run on any task runner/pipeline/build system.,2022,Azure Devops Pipelines - anyone else find them infuriating bad?
Deleted Account,3,"Multiple reasons why this the way to. Not only portability, but it removes the gap between cli and ado",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
qdbigyellow,3,"I use the very similar appoach.  Use python based build script appoach which could run on both Windows and Linux.     I use Teamcity in my former company, now use ADO. It is much easier to manage the complex environment.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
RedChihuahua,3,"I work in a team that owns a sort of internal ""DevOps platform"" for a bunch of other teams and ADO (we didn't get to choose) is the cornerstone of our CI/CD infrastructure. What you describe is exactly what I ended up establishing as ""the way to go"".

It's not perfect, but it's the best you can do given ADO's limitations. Besides, it makes our pipelines modular enough that we could move to another CI/CD engine in the future without much hassle.

Also, I can't stress point # 2 enough: stay away from built-in tasks unless you only need something quick and dirty. Anything serious you want to script it yourself.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
Premun,2,"For these reasons I have created a library called Sharpliner which lets you define pipelines in C# instead of YAML. Complex pipelines become more bearable then

https://github.com/sharpliner/sharpliner",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
Deleted Account,1,Thanks for sharing your approach. Looks more productive.,2022,Azure Devops Pipelines - anyone else find them infuriating bad?
daedalus_structure,12,"Is there a declarative CI system that provides local iteration? I'm not aware of one but haven't used everything. 

This is the tradeoff. 

If you don't like it one option for you is to use the agent like a dumb executor that calls a makefile. With no logic in the pipeline itself you shouldn't need to test it once you've stamped out a template. 

However, then you get the other side of the trade-off that now AzDo features, i.e. KeyVault libraries, service connections, environments and approvals, etc...  are no longer available to you.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
CalvinR,9,drone.io and circleci both have local runners.,2022,Azure Devops Pipelines - anyone else find them infuriating bad?
cleancole,7,Gitlab CI can execute a runner locally. If you are using predefined env vars then it's gets a little tricky. I still just change push rinse and repeat. Grass just looks greener here.,2022,Azure Devops Pipelines - anyone else find them infuriating bad?
c-digs,1,GitLab also has a linter and you can see the fully composited YAML in the browser.,2022,Azure Devops Pipelines - anyone else find them infuriating bad?
PM_ME_CAREER_CHOICES,3,"Github actions has [act](https://github.com/nektos/act), though I haven't tried it myself.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
CalvinR,4,"It works but is not the best, the images for the runners are quite large 
 and by default it doesn't pull down a full image, so you end up having conditional steps that install some of the tools if you are using act or ignoring them if you aren't.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
reallydontask,1,"It's been hit and miss for me, but when it works it makes life very simple",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
lazyoracle42,1,Mixed experience with act. Works fine for simple workflows but the images can be quite large and doesn't work well for complex multi-step workflows.,2022,Azure Devops Pipelines - anyone else find them infuriating bad?
c0Re69,2,"You can also run Jenkins locally, no problem.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
craigthackerx,22,"I actually don't mind them.  They aren't perfect admittedly, but they are no different to GitHub Actions for me.

The lack of an inbuilt parser is gaping hole in the product, but strong integration with the other parts of Azure makes it more worthwhile.

The thing I normally do is just have a single repo with a pipeline inside it and copy and paste my code into it and validate there, no need to commit, can validate using the code editor console on the portal.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
PM_ME_CAREER_CHOICES,1,"> The thing I normally do is just have a single repo with a pipeline inside it and copy and paste my code into it and validate there, no need to commit, can validate using the code editor console on the portal.

This does not work if you use templates, right?",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
craigthackerx,7,"Ah, right, you'd need to check the templates out using a checkout step to validate them so would only have knowledge of them after a checkout...yeah as I said, a weak point for sure.

Another notable weak point is ""Release pipelines"" which actually don't have a YAML counter part yet. I can't think of any features off the top of my head you can't replicate in YAML but some people have been using Release pipelines for 5+ years and moving them to YAML is always challenging.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
ratel26,1,"Multi-stage YAML pipelines have been available for a while now which allows you to perform releases.  They don't have feature parity, but you can achieve pretty much the same objectives.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
craigthackerx,1,"Yeah I use multi stages for my own Pipelines, 3 stages a few jobs and some steps in this jobs, but as you say, not all there yet, some of the notable thing you need to do is manual intervention hacks, you need to use environments to do so with yaml pipelines whereas release has them baked in with gates 
>Multi-stage YAML pipelines have been available for a while now which allows you to perform releases.  They don't have feature parity, but you can achieve pretty much the same objectives.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
sebkow,0,I havnt used azure devops recently so not sure how much is changed. But when github actions was started it was forked from azure devops so they were very silimar. Give a take a few things to target the open source community vs enterprise.,2022,Azure Devops Pipelines - anyone else find them infuriating bad?
Deleted Account,1,GitHub actions use Azure pipelines anyway as far as I'm aware,2023,Azure Devops Pipelines - anyone else find them infuriating bad?
snarkhunter,7,I'm feeling like a good practice is to have most of the hard stuff in scripts that your yaml pipelines call.,2022,Azure Devops Pipelines - anyone else find them infuriating bad?
Deleted Account,1,Correct,2022,Azure Devops Pipelines - anyone else find them infuriating bad?
wywywywy,13,"OP, the solution is to use their **web-based editor** to edit pipelines.

It supports validation and recently it's added support for templates too.

https://docs.microsoft.com/en-us/azure/devops/pipelines/get-started/yaml-pipeline-editor?view=azure-devops",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
PM_ME_CAREER_CHOICES,6,"Neat! Had no idea about the template support, will try it out at work tomorrow.

Hows your experience with it? I'm a little sceptical since it has been in preview for 7 months and [they removed a line from the docs saying they would fix some of the known issues](https://github.com/MicrosoftDocs/azure-devops-docs/commit/8bda9dfc04cc7c4182272967f55fcdcf7833e049#diff-64ba1037de0d22b7608fde0a2f18a523c6dcf68de8de826ee6c28507a0532362).

Edit: if anyone else is surprised how they missed this, it's because it's an preview feature that must be activated.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
wywywywy,2,"It's ok. But on the other hand I also don't mind keep committing to validate pipelines, so I haven't used that extensively, and our painpoints are obviously very different.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
0ofnik,5,"> My plan going forward is to put as little as possible in the pipeline and have everything in separate scrips.

This is generally recommended, but don't go overboard with this approach. I haven't used ADO pipelines, but after cutting my teeth on Jenkins, GitLab, and GitHub Actions, I've found that a lot of these platforms offer significant features (job parallelization, error handling, composability) that it would be foolish to try to re-implement in your scripting language of choice.

A good general rule of thumb I follow is to implement the top-level logic in the native pipeline syntax (build these two jobs at the same time, then run this third job which depends on the last two being successful, then always run this cleanup job no matter what), while the more intricate, prone-to-error stuff should be written in Groovy / Bash / Python / whatever in a way that can be tested locally - preferably with some kind of case logic to determine whether or not we're running in CI and behave accordingly.

The lack of even basic syntax checking or schema validation does indeed sound like a major oversight. But if having 47 commits in your Git log with the message ""maybe this time ci will work jk lol"" bothers you so much, you can use squash merges.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
Deleted Account,10,[removed],2022,Azure Devops Pipelines - anyone else find them infuriating bad?
PM_ME_CAREER_CHOICES,12,"Yes, so you need to commit, push your changes to that branch, then check manually, fix it if needed, commit, push again and so on.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
jcbevns,6,If you edit via pipelines editor (not in repo view) you get squiggly lines and alerts. Not always perfect though I've found.,2022,Azure Devops Pipelines - anyone else find them infuriating bad?
Deleted Account,2,[deleted],2022,Azure Devops Pipelines - anyone else find them infuriating bad?
celluj34,1,"After validating the top level file, you can navigate to templates via a tiny link in the yaml editor.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
PM_ME_CAREER_CHOICES,1,"For anyone confused about this it's a preview feature you have to activate:
https://docs.microsoft.com/en-us/azure/devops/pipelines/get-started/yaml-pipeline-editor?view=azure-devops#view-and-edit-templates",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
InternationalMany452,1,Those artifacts are bombers monitoring your xen engines.,2022,Azure Devops Pipelines - anyone else find them infuriating bad?
thisisnotmyrealemail,5,"It is not infuriatingly bad but I feel you. That is annoying and you have to commit like 5-6 times on your branch to test. They can be like Cloud Build and just allow it to run generated YAMLs via a CLI and it would make things so much easier!!!!

But they have so many other features that you cannot call it infuriatingly bad. It is a much more mature project than many other build tools and is a solid CI/CD tool that allows manipulation as much as you need easily (easily being a key word here). I can build and deploy almost anything with it. I prefer it over the currently available solutions. Just because it has the word Microsoft attached to it and is a evolutions of VSTS there is a kind of stigma towards it.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
DataDecay,4,"I came from gitlab that had a parser and validator, and it was great. Don't get me wrong, more complex testing I had to still run the pipeline, and containing most logic in go binaries or scripts solved a lot of that issue. But In my latest gig I now have to use bamboo and bitbucket, which is missing so many features in comparison to gitlab, including that yaml parser/validator. However you have to work with what you got, and complaining does not magically migrate you to a better platform, so I do what I can.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
dissonantloos,1,They have this [validator](https://bitbucket-pipelines.atlassian.io/validator). What's missing from it?,2022,Azure Devops Pipelines - anyone else find them infuriating bad?
DataDecay,1,"That's for bitbucket-pipelines not bamboo-specs, same company different products.

To your point though there is some bamboo-specs integrations with the IDEs that has a validator. However it's extremely clunky in my experience, and forces you to use the Java syntax and not yaml.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
derekmckinnon,2,"I feel your pain. I have since moved over to GitHub Actions, and I can tell you it doesn’t get easier. I think the main issue is that all of this stuff is still really really new and ever changing. In my opinion, these systems haven’t had enough time to bake…tooling and best practices just haven’t had adequate time to properly develop.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
ThrawnGrows,2,"[You can add syntax highlighting to most editors/IDEs if you'd like](https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema%2Cparameter-schema#syntax-highlighting), but it doesn't work with pipelines that use templates.

[There's also a YAML Validator](https://marketplace.visualstudio.com/items?itemName=TomAustin.azure-devops-yaml-pipeline-validator#:~:text=From%20within%20a%20YAML%20file,validated%20and%20any%20problems%20reported.), but again templates are nonos.

Good ol' [Mike Rodionov made a PS Module](https://mikerodionov.com/validating-azure-devops-yaml-pipeline-locally/) that you can use with templates.

Not locally they actually have an API endpoint where you can validate [as seen in this comment](https://github.com/microsoft/azure-pipelines-yaml/issues/34#issuecomment-584253286) and gitjub user JustinGrote created a PS commandlet for it [here](https://gist.github.com/JustinGrote/4ece827540da00d5ffce1d9eb593e56c).  I'm not sure about templates on either.

I do feel your pain though, one of my biggest gripes with them so far is that you can't cancel previous builds as a setting.  Like if I have 30 builds to dev and then I promote build #30 to QA, I want pipelines 1-29 to cancel.  There are super hacky workarounds that I don't bother with, but it has [been a decently hot request for over two years now](https://developercommunity.visualstudio.com/t/bring-queuing-policies-to-yaml-multistage-pipeline/776356).",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
livebeta,2,"if you like the nice stuff just pay for it. 

Harness.io is where it's at.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
aleochoam,2,"For me azure devops is one of the most complete ci tools out there. Approvals, service connections, templates are things that you don't find in other build servers.

For me, that issue of the slow test pace because you need to commit an d execute the remote pipeline is present in almost all ci.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
Premun,2,"If you struggle with YAML and are familiar with C# you could use Sharpliner - a library that lets you define pipelines in C# instead of YAML

https://github.com/sharpliner/sharpliner

It performs some basic validations (more are to come) on compile time, the resulting YAML is always valid..",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
Stealth022,2,"I used to love writing Azure Pipelines in YAML, lol.

They're frustrating when you can't get shit working, but oh so satisfying when you actually do. 😂

Seriously though, I get that having to commit to a branch can be frustrating, but just do your work in a feature branch, and squash your commits when you're done. You can also use VSCode extensions (both the Azure Pipelines and plain YAML extensions) to help you with syntax highlighting and validation.

IMO, it's really not that bad once you get used to it. Writing pipelines and IAC was literally my full time job, so I got so used to doing it that the YAML syntax just became second nature.

You can also put some of your stuff in PowerShell and Bash scripts, but a lot of the available tasks simplify things for you and offer integrations with Key Vault and other Azure services.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
vibe_assassin,1,"Yea, the yaml pipelines are sort of jarringly bad compared to how well the rest of azure DevOps works",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
wyrdfish42,1,"You can validate the yaml in the web ui, click validate.

If you use the VScode extension it has intellisense and error highlighting.  


I do use powershell for anything super complex and that can be run locally.   


Its essentially a way of running tools in an order so keep the yaml for that and more complex things in script.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
Deleted Account,1,"Only thing I hate about them are templates. Never. Use. Templates. Other than they are pretty awesome.

We do however maintain a full kit of PowerShell modules to do actual stuff with them, so 8/10 tasks are basically call outs to ps",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
zenmaster24,1,agreed - its rubbish i hope to never work with again,2022,Azure Devops Pipelines - anyone else find them infuriating bad?
Deleted Account,0,"This is a problem made worse by fussing about it. It's a PITA to iterate, but that's how it is. Judge yourself on the outcome, and less of the process. Some may say the opposite to this, but in this case I wouldn't apply it.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
LMAOBUDS,1,"I can see a YAML parser/validator being nice for AzDO pipelines, but I'm not sure about local pipeline testing.


Pretty sure we've all run into syntax issues, and sometimes your IDE doesn't throws false positives etc. This post really made me want to go look into local parsers, maybe as a pre-commit hook.


Local pipeline testing is sus imo, and I haven't used a system that had that function (granted, I've only used pipelines and GitHub actions). I can build out flows no problem, but the tricky part is when I decide to use built in variables that AzDO pipelines support (just like with any other pipeline system, they have built in variables) -- if I'm testing locally, how does my local system know what values to assign these variables? Along with this, your local environment does not equal the environment where the hosted/self-hosted agent runs (that ""well it works on my computer, it must be yours"" situation).


As far as AzDO goes, I think it's a great jack of all trades, master of none. The main benefit I've worked with, is the integration with Azure and other Microsoft services. I can create a service connection to Azure with a service principal and authenticate my pipelines to run in Azure pretty easily.


Not bashing you or anything, everything is opinion and based off experience. Would love other's thoughts!",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
Deleted Account,1,You need a good yaml IDE preferably with a dev ops plugin to validate more things. Visual Studio code is the best i've used so far but not perfect.,2022,Azure Devops Pipelines - anyone else find them infuriating bad?
theTrebleClef,1,"Having started with Azure DevOps and then learned other tools like CircleCI, I think the Pipelines feature is more... Entry level.

It has several limitations and restrictions but in typical Microsoft format if you know what you're doing you can do a ton. But it's probably not the right tool for everyone.

I think if you're new, need a backlog, need to host repos, need pipelines, it's a good starting tool with a bit of everything in one place.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
wugiewugiewugie,1,"fwiw i have yet to find any product that as completely covers the work item/code integration with very complex workflows. was able to move a i think ~130 step production release process to ado pipelines in a few days with appropriate manual steps that was handled in email, making the entire code promotion from sprint to production auditable and automatable with very clear steps.

i'd feel very comfortable putting certain steps to other systems, for instance argocd/flux in, and keeping ado pipelines - especially in politically complex organizations.

edit to add:

yeah i do find working with them very frustrating, maybe not moreso than any other ci/cd system but that initial annoyance and lack of quality of life support def turned off a lot of devs while mentoring on ado pipelines. just wanted to throw in that i think there's a situation where they're the best thing on the market right now.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
EenAfleidingErbij,1,"same issue with gitlab

a gitlab local runner used to be a thing to validate it with a single command but alas",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
badguy84,1,"I work in the Microsoft space with .NET framework (classic) SDKs. So I have little choice if I want a somewhat native platform. I'm aware of how I can spin up build servers and such but that's such a pain when I can use hosted agents practically for free and scale up easily.

I find the pipelines relatively easy to work with, but most of the stuff I need to do is fairly straight forward and is easily tested (since most steps take little time to run and are somewhat non-destructive/reversible), it'd definitely be great to execute things locally first.

I've gotten to touch gitlab a few times and bitbucket/bamboo, but it all ended up to kind of skip the build phase since they don't do well building Microsoft .NET framework 6.x stuff without significant effort to create build servers etc. So it just wasn't worth the effort for what we needed (it's a lot of SaaS with relatively simple code bases, most of the ""value"" comes from configuration work)",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
skilledpigeon,1,Not azure but AWS... I hate it. The reason though is that these cloud providers provide underlying services. Unlike something like BB pipelines or GitHub actions or Jenkins etc it's not designed to be user friendly but functional.,2022,Azure Devops Pipelines - anyone else find them infuriating bad?
wobbleside,1,"I remember finding them incredibly annoying to work with. Hell, good luck trying do something like pull a secret or key file from an Azure Key Vault (at least a year ago it was a massive pita.)",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
iputfuinfun,1,"Similar to others, I use containers and scripts to do the heavy lifting. Even the CI plugins aren't that great for complex tasks. Pushing to an artifact registry, publishing to their temporary storage, plugins are good.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
AustinScript,1,"I loved ADOS yaml based pipelines 1.5years ago before I hot a new job. 

YAML made it way easier to test all of our changes before being released to the rest of our repos. The template repo allowed our merge request validate that the steps actually worked before we rolled it out. You can version them and everything. As it relates to scripting, inside of our yaml template repo, I did have a step to download scripts that accompanied the yaml. It is awesome if you have repeatable-ish patterns and don’t want to manage 50 projects in 50 places 

Debugging is a little annoying but that is part of what makes the merge request validation super nice, you can get feedback way faster.

I was a release engineer @ 1500ish person company, 60% of my time was on ADOS probably.  I could see being really annoyed with ADOS if it was just an occasional thing",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
the-computer-guy,1,"Iterate on a separate branch and squash it to main when you're done.

Write separate scripts that simply get called from the yaml. You can test those locally or in a docker container.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
Shakedko,1,Definitely agree with you. I find it so annoying that the only way you can authenticate is by using PAT. Such a useless solution,2022,Azure Devops Pipelines - anyone else find them infuriating bad?
daniele_dll,1,"I built an entire framework in powershell to be CI/CD agnostic and being able to debug everything locally, it really changed my life :)

Pipelines with 80+ tasks, in any CI/CD platform (github actions, gitlab workflows, Circle Ci, Travis Ci, Jenkins, etc.) , would have been a certain blood bath, now they are absolutely fine!

Writing automation as series of tasks is a smart approach and if you want to have them executed by any Ci as a native pipeline than you just need to build a framework capable of generating the necessary yaml and a framework that to pass the context around automatically defines the pipeline variables as needed.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
dambros666,1,"Kinda late to the party, but with your approach you would then just have a single step of executing the powershell script?

I liked the idea of what you suggested, if possible explain a little more because I wanna stab myself in the eye every time I need to debug azure pipelines.",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
daniele_dll,1,"Yes, you would have just 1 single step plus potentially some steps specifics for the env (for example if you need to setup the nuget authentication and you can do it automatically via azure devops pipelines pre-defined tasks).

The idea is simple: you need a component that will go over a number of files and execute them simply including them.

Then if you want to make it extra smart you can trap the inclusion in try & catch and implement retries, of course the tasks need to be idempotent, which is easy if you have manu small tasks.

On top of this, if you have a small library of function to deal with common things, e.g. for logging, metrics, telemetry and a wrapper around invoke-command to ""export"" all the library functions that you might want to execute remotely (e.g. logging) then happy days",2022,Azure Devops Pipelines - anyone else find them infuriating bad?
Deleted Account,1,[removed],2023,Azure Devops Pipelines - anyone else find them infuriating bad?
Deleted Account,238,"If you want to be a pure developer, be one. 

That shit is grindy as fuck too, especially in an older codebase where your job is just endlessly adding features. I ended up moving over to ops precisely because I wanted to get away from that. 

Now I'm ops but also get to architect most of the new stuff because I understand infrastructure better than anyone else around.",2019,"I really hate working ""DevOps"" jobs"
r3lik,72,"Exactly, or try being a developer that has to pick up a shitty (most) codebase. You will almost never have your pipe dream of building your own from scratch. And then a new framework will come around and then another and soon you won’t be able to keep up and 20 y/o kids from college who will be seen as more attractive than your old, expensive and outdated ass. 
As Devops you can literally spin your position in any way you want: systems, networks, DBA, build engineer, whatever you want.",2019,"I really hate working ""DevOps"" jobs"
tech_tuna,18,"> Exactly, or try being a developer that has to pick up a shitty (most) codebase.

Which is pretty much every codebase older than 6 months. :)",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,90,"I transitioned from software engineer to ""DevOps"" over the past few years, and what astonishes me is that by every measure DevOps is harder, more stressful, and requires a wider variety of ""soft"" as well as technical skills (including programming) than your typical front or backend developer role, but is somehow *less* respected by management. It honestly boggles my mind.",2019,"I really hate working ""DevOps"" jobs"
badtux99,55,"That's why I despise infrastructure work. Infrastructure makes the world go 'round, nobody gets anything done if the infrastructure isn't working, yet infrastructure people get no credit when things go right, only blame when things go wrong. And they're treated like crap at many companies. I'm happy that at my current company my boss values what I'm doing, but too many of my coworkers fall into the ""no credit when things go right"" crowd and seem to think what I do is not as important as what they do, even though we'd literally have no product if not for me because I designed the entire cloud infrastructure that runs it and serves it to customers. SIGH.",2019,"I really hate working ""DevOps"" jobs"
HayabusaJack,17,That’s funny. I enjoy the work but can’t get a break. I’ve spent the last several years trying to get visibility into our crumbling infrastructure to no avail. The last few weeks has had me figuratively shooting fireworks off trying to get some attention to how bad things are. My reports show just the gear I am aware of is 90% end of life/end of support. We’re at severely reduced staff where the teams can barely keep up and the only time gear gets replaced is when it fails and can’t be brought back to life.,2019,"I really hate working ""DevOps"" jobs"
Deleted Account,10,Looks like you need one of these: https://etherkiller.org/,2019,"I really hate working ""DevOps"" jobs"
Deleted Account,2,"oh weird, each place i've worked has seen drastic improvements from our added automation, visibility, and monitoring, and reporting functionality that everyone from dev, through PM and even the business side has literally vocalized their praise.  so much so we've taken our work on the road  and help local businesses modernize their whole process",2019,"I really hate working ""DevOps"" jobs"
Rakialtj,-7,what does infrastructure means to you please ? Thank u.,2019,"I really hate working ""DevOps"" jobs"
klebsiella_pneumonae,10,"Please do the needful quickly.

Kind regards",2019,"I really hate working ""DevOps"" jobs"
suthernfriend,22,"Less respected? Wow, your management seams to be awful.",2019,"I really hate working ""DevOps"" jobs"
Pliqui,9,"It's reverse psychology. They treat us bad so we work harder and better to prove them wrong... Mommy? 

Jokes aside tho. In a company meeting, management gave a shout out to ALL IT related departments and guess who was left out... DevOps.

I transitioned from sysadmin to DevOps recently and I agree, is way more harder and stressful, but I'm learning a lot and like it so it's a win for me.",2019,"I really hate working ""DevOps"" jobs"
erjcan,1,"thx u for mentioning it s more stressful. i did not know this. i plan to become devops, mainly for money..

&#x200B;

""less respected"" - how so? if it pays well or better than front/back devs?",2019,"I really hate working ""DevOps"" jobs"
no_ragrats,5,"I'd imagine this is simply due to the fact that a devops is father away from the end user.   Many in management find themselves bogged down with user requests. They would rather devote more time right now to helping the end user and bringing down the queue of bug fixes and feature requests than spending time on something that can (potentially)  save time in the future, but would not help with the pile in the constantly increasing queue size of user requests",2019,"I really hate working ""DevOps"" jobs"
BloodAndTsundere,9,Operations is one of those things which is invisible when it's done right. Hard to get accolades when your work is not in the spotlight.,2019,"I really hate working ""DevOps"" jobs"
PreferenceFickle1717,1,"It's not about management it's about developers envy and how that can affect you and get to you. 4 years later from this post and nothing changed, it got worse. 

&#x200B;

. Many of managers were developers before it and they disregard an average devops engineer as lower class.

It's astonishing how vane big number of software developers are considering that they are so dependent on number of things.",2024,"I really hate working ""DevOps"" jobs"
siberianmi,113,"Hey man, tell you what I've been in pure developer roles, pure operational roles, and DevOps both as a consultant and now ""DevOps"" at rapidly growing start-up.

I couldn't be happier in this role.  The tooling available even in DSL and having no responsibility for managing the bare metal, power, batteries, generators, hypervisor, etc... It's astounding how much more you can do effectively and with a focus on keeping all production under code - it's far better then just old school operations.",2019,"I really hate working ""DevOps"" jobs"
Sheepza,49,+1 for not being responsible for the infrastructure anymore,2019,"I really hate working ""DevOps"" jobs"
devops_to,22,Doctors hate this little trick.,2019,"I really hate working ""DevOps"" jobs"
intolerantidiot,11,\+3,2019,"I really hate working ""DevOps"" jobs"
tech_tuna,2,Software defined infrastructure FTW.,2019,"I really hate working ""DevOps"" jobs"
flagbearer223,12,"Yeah, I'm also in a DevOps role at my startup.  Got to build out an entire CI/CD system, improve local development processes by developing some tools to properly run our services in docker (and allow devs to run them on the host machine if they prefer to develop that way), built out a system to replace BrowserStack because they're so fucking expensive, created deployment scripts for a service that I also designed the infrastructure for, cut our integration testing time down to 1/4th of what it was, etc etc etc.  I've done all of that in about a year and a half, and I'm also pretty lazy overall, haha.  Feels good to be able to be so productive with minimal-ish effort",2019,"I really hate working ""DevOps"" jobs"
tech_tuna,6,"Me too. I have my fair share of shitty days and shitty projects but I'm perfectly happy being a Jack of All Trades.

Do not miss bare metal at all.",2019,"I really hate working ""DevOps"" jobs"
osidelivin,2,"I’m hired by technology vendors and suppliers (VARs, MSPs,Integrators) to market to the DevOps community.  They all want in on your disfunction :)

It’s definitely the “in” thing right now.  Funny to hear the other side",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,2,"Fucking nail on the head mate.  Spending all day in a data centre, endlessly chasing cables or racking bare metal, only to come home to the soothing sound of white noise embedded in my ears for the next 6 hours.   I'll take managing an array of YAML or HCL over that any day.",2019,"I really hate working ""DevOps"" jobs"
GassiestFunInTheWest,97,"Preach.

I just went through a phase of job applications and interviews, and most jobs with the word ""devops"" in the name are straight up IT operations from the mid-2000s. Except now automation is entirely about knowing the wrinkles of the particular yaml schema of whatever tool your using, where 15 years ago it was about knowing the particular shell syntax of whatever flavour OS.

On the plus side, devops jobs are ludicrously well paid at the moment. Bafflingly though, the ones that want you to do nothing interesting or difficult whatsoever are the ones paying +30% over what a dev of similar caliber would earn. Places trying to truly adopt a devops culture, looking for engineers to build tooling to solve problems and not just gophers to do stuff that everyone else is too lazy to do, seem to have much less budget to pay you.

I think there was a glorious, beautiful moment where the job title ""SRE"" meant what it was supposed to mean. That also seems to be over now, as I interviewed with more than one company who thought SRE meant ""first line support"".

I'm rebranding myself now as a ""platform developer"". I think it will take the idiots another couple of years to corrupt that one.",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,30,[deleted],2019,"I really hate working ""DevOps"" jobs"
WildVelociraptor,3,This is so accurate it hurts.,2019,"I really hate working ""DevOps"" jobs"
GassiestFunInTheWest,56,"Oh, and everybody says they want CI/CD, but nobody knows what that means. When I explain what continuous delivery or deployment would actually entail, they look at me like I'm nuts. I think it's because trying to tie merges to master tightly to releases to production, no matter how many steps in between, puts too much responsibility in the hands of developers. Better to let them merge every damn thing to master and move on to the next feature. Let QA and ""devops"" figure out what needs to be released where.

But we're using Jenkins and kubernetes, so it must be CI/CD.",2019,"I really hate working ""DevOps"" jobs"
ThrawnWasGood,49,"""What do you mean we need tests?""",2019,"I really hate working ""DevOps"" jobs"
steveeurcol,51,"I was told the other day from our lead:

""We have too many automated tests"".",2019,"I really hate working ""DevOps"" jobs"
sternone_2,36,There must be a special hell for people like that.,2019,"I really hate working ""DevOps"" jobs"
mycall,19,Developers are lazy and hate that test introduce 2x the amount of work for them to maintain.,2019,"I really hate working ""DevOps"" jobs"
JessicaLostInSpace,26,That’s why you only test in production.,2019,"I really hate working ""DevOps"" jobs"
Deleted Account,10,"You think it’s a joke, but I actually know a place that deploys to production.   Then, if it goes south, rolls back and deploys to QA.

On the bank’s friggin Mainframe!",2019,"I really hate working ""DevOps"" jobs"
lysergic_tryptamino,4,"I worked in a place that had no QA, often times no Dev either. Just git'r done in production.",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,11,"*I* am lazy, and I hate being woken up at 3AM for something that clearly shouldn’t have gone past integration tests...",2019,"I really hate working ""DevOps"" jobs"
WN_Todd,8,"Hell yes.  I try to harness my innate laziness to guide me to the most valuable uses of my time. ""Which change will create the most new opportunity for me to be lazy?""

I'll let y'all know of I ever get to the end of the chain and obtain peak lazy.  There's no telling, I might be CTO by then.",2019,"I really hate working ""DevOps"" jobs"
mycall,2,"oh, my phone didn't ring. sorry.",2019,"I really hate working ""DevOps"" jobs"
sternone_2,-10,Developers don't write automated tests.,2019,"I really hate working ""DevOps"" jobs"
badtux99,13,"The best place I ever worked had developers write the tests \*first\*... then write the code. If the code didn't pass the tests, the code didn't get checked in. QA was responsible mostly for making sure that the whole system held together, not for making sure that individual chunks of code worked properly.",2019,"I really hate working ""DevOps"" jobs"
no_ragrats,11,"Test driven development.  Interestingly enough it's (lightly) proven to speed up development time.  

 It's really a huge shift in thought process for most developers though.  It requires, at least in my experience,  knowing how to architect or define class relationships for a program/changes very well before writing the code.  And if you dont have that design right off the bat then you'll have to modify the design as you go until it 'works' and that means you're wasting time writing tests up front only to realize that the design is wrong or could be designed better with different classes handling different things.  

I love the idea but when starting out with new projects or extensive features or tech that I haven't worked with before it does seem to get in the way a bit.

Maybe I'm just going about my TDD process wrong though",2019,"I really hate working ""DevOps"" jobs"
randomkale,9,"I think you are right in that it introduces a lot more required thinking at the beginning, and a risk of writing a lot of tests that never end up getting merged because of redesigns and refactoring, but as devs get more practice at thinking (instead of the easier way of just getting to write code), they get better at design and anticipating good patterns for use cases.

TDD also tends to make much nicer, neater code in my experience.  There is certainly a longer start up loop, but then the project that gets to v1.0 is so much stronger, easier to contribute to (even if you have the burden of keeping test coverage up) and just more maintainable.  That's where I've found the most time-to-complete-ticket benefit.",2019,"I really hate working ""DevOps"" jobs"
no_ragrats,2,"That's precisely why I'm putting more time into it with every project.  If I'm getting behind on a timeline I still may scrap TDD and go with my normal codeslinging ways and add tests at the end. 

But my shop is a company that is somewhat behind times for software dev and especially devops initiatives, but recently it's been very active in trying to improve that culture.  In our 50 person shop we have noone who use TDD even though those that are working on our culture advocate learning or at least trying it.  

It's an interesting learning process but I'm determined to not only figure it out myself,  but to help the department get to a point to where devs can understand it and make their own choice on whether to use it rather than hitting that road block and stopping.   

Also currently working on getting code review to be seen as a positive thing.  Right now there's pretty much no code review.  There's a few who have expressed they'd be happy to review,  it's just a matter of convincing people it's a learning tool rather than destructive criticism

Definitely trailing off topic,  but it's all exciting to me",2019,"I really hate working ""DevOps"" jobs"
Inoko,1,"As someone who just got started (<6months in tech), and I just wrote my first mammoth script to solve a complex technical problem...

God I wish I'd written tests for it before I wrote it. It's a nightmare trying to make tests that make sense for it now.

I didn't even know TDD was a thing, and I think I'm going to deploy tests before features for new adds to this...",2019,"I really hate working ""DevOps"" jobs"
no_ragrats,1,"Just remember that it's much easier to write tests on methods that are smaller and do one thing.  If you cant describe a method in two to three words  that clearly establish what the method does, it's probably doing to much.  Even if all you do is split one method that does three things into three methods, it'll be much easier to read and much easier to write a unit test.  Also try to avoid passing non DTO classes all over the place.  If you see a class being passed down more than a couple methods, you probably want to change your design as that really bloat your tests. 

Sorry if youre aware of this already, figure I'd just give some advice since you said you are new.  If you have any questions, feel free to send ne a DM",2019,"I really hate working ""DevOps"" jobs"
Inoko,1,"No that's quite helpful. The hard part of testing this particular utility is it takes 1 source file, produces 2 product files, then later merges the 2 products into 1 final result file (one of them is edited by another script in the mean time). So testing to make sure everything is doing what's expected is... a little tough!

But that's the fun of it - in a certain way. Understanding the logic of each step, splitting it as much as possible, and testing each piece.

I may take you up on that DM offer though!",2019,"I really hate working ""DevOps"" jobs"
PopePoopinpants,5,"You just wrote out one of the very reasons why tdd is beneficial. It helps you write quality code, whereas, without doing that exercise, you're introducing low quality into your ecosystem. Even more so if you're unfamiliar with the project, or language!

Learning to write quality tests is as important a writing quality code.",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,1,"I think the whole thing is broken.  An architect should design the interfaces, then TWO teams should take turns at designing the code and the tests, based only on  the interface specifications.",2019,"I really hate working ""DevOps"" jobs"
no_ragrats,1,"Imo I think a senior should definitely be there to review or aid in that design, but allowing someone to work through the process is probably the best way for them to learn as well.  

I think continuous pair programming would probably be one of the hardest things for me to get behind personally though.  I'd rather collaborate with someone on a project where we both understand the design, work on implementing separate parts of the project by contract, and reconvene to discuss any alterations - then review each other's code if necessary.

Edit: Looking back at your comment I'm pretty sure I misread your statement on my initial reply or that I am now, but are you saying have two team duplicate the same work?",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,2,"No, it’s two teams that swap roles: one team writes tests based on the spec, the other writes the code based on the spec.   Success is writing code that passes the tests, and writing a test that breaks the app.  On Friday, everyone sits together to review failed tests, discuss the meaning of the spec, and change roles. (It’s hard to write a meaningful/effective test, when your mind is busy implementing the spec)",2019,"I really hate working ""DevOps"" jobs"
no_ragrats,1,"Oh, that's really interesting..  I guess I've never been a part of a project were several people are working simultaneously like that.  

How is that time managed when, for instance, the testing team finishes faster than the implementation team?  Do they move along to implementing a different feature that the paired group would start writing tests for once they caught up?",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,1,"Write more tests. Create more test data.

In the end, the objective is that QA is a byproduct of the development.",2019,"I really hate working ""DevOps"" jobs"
joergen99,9,They should imo,2019,"I really hate working ""DevOps"" jobs"
sternone_2,-10,No they shouldn't that is QA - Testers their task.,2019,"I really hate working ""DevOps"" jobs"
ShadowPouncer,14,"So, I am of two minds here.  I very much get the point that sometimes the person that wrote the code is sometimes too close to the problem to write good edge case tests.  They know how it _should_ work, and with that knowledge they write a test that matches the code.

And so there is some value to having a separate QA team.

But it is also a complete and utter shit show once you have a development team that believes that it's _not their job_ to identify or catch problems with their code, and if the QA team blesses the results it's the QA team's fault when it all blows up.

The _attitudes_ that splitting things up sometimes causes can be completely and utterly toxic to the goal of having a product that actually works.

There's a bug?  Great, the developer's job is to figure out what it is, _write a test case to reproduce the bug_, fix the bug, make sure that the test case confirms that the bug is fixed, and make nice clean commits to fix the problem and add the test case to the test suite.  And then to work with the team through any code review.

If that code blows up in production, the developers who wrote it _also_ need to be involved in tracking it down and fixing it.  Not just a developer on the team, but the ones that wrote _that_ code.

Why?  Because the development team needs to be responsible for producing a product that works.  Not just something that more or less checks the boxes and them throw it over the wall and forget it.",2019,"I really hate working ""DevOps"" jobs"
sternone_2,-1,What you wrote has nothing to do with having QA Writing automated tests and not developers.,2019,"I really hate working ""DevOps"" jobs"
ShadowPouncer,5,"I disagree.  The developers should, absolutely, be writing automated tests.

They should be writing new tests for every new API, and for every bug fix.  Those tests should absolutely be added to the automated test framework.  They should be run as part as every release.

This is because it should be the developer's responsibility to ensure that what they deliver is actually usable and fit for purpose.  It's part of the job.

That doesn't mean that there's no value in a QA team _also_ writing additional tests, or refining existing tests.

But it is in my experience absolutely a mistake to have your development team not be responsible for these things.

And I say this having done quite a bit of pure development.",2019,"I really hate working ""DevOps"" jobs"
joergen99,1,"This, theres 2 additional points to bring up. Silofication and knowledge about the ecosystem.

Silofication culture tends to put blame where its not needed. Ex. Theres nothing wrong my code its ur test.
If both devs and testers write tests awesome, share your findings/knowledge.

The dev could pausibly find more specific edge cases and or take more responsibility for the maturity of the code as he/she is writing its own tests. The tester can then write more far out test cases which the squared in dev wouldnt do because ""thats not how you use this software""

My point is more tests = more good.",2019,"I really hate working ""DevOps"" jobs"
randomkale,2,"While I agree with you that testing more edge cases and having someone less familiar with the code or use cases write far-out test cases has benefits, I do think there are cases when you have too many tests.  They can take too long to run, or be flaky (have non-informative failures), or be integration tests when really you want unit tests, etc",2019,"I really hate working ""DevOps"" jobs"
joergen99,1,Great points!,2019,"I really hate working ""DevOps"" jobs"
ShadowPouncer,1,Absolutely agreed.,2019,"I really hate working ""DevOps"" jobs"
Carr0t,1,"Devs absolutely need to understand tests, TDD, and good testing methodologies. Easiest way to understand is to do. We pair program on everything. Although working together, one person writes the unit test and the other person implements the code (in terms of who is actually using they keyboard at the time). For our integration tests a *different* pair will write them, according to the user stories we’ve defined etc, but they’re still developers and will implement some other feature.",2019,"I really hate working ""DevOps"" jobs"
unixwasright,6,"I disagree. If you implement something, you implement the test. At least at a local level. QA should perhaps be more ""big picture"".",2019,"I really hate working ""DevOps"" jobs"
RationalTim,5,"If you are using Scrum, Done means that the code meets the acceptance criteria, and the story needs to be Done by the end of the sprint. So it is the Team's job to make sure the stories and code are wrapped in tests. It's everyone's responsibility, not just a couple of people badged QA. The ops side of DevOps need those tests to run in production as well (IMO), so it's in everyone's interests to dive in and get them written.",2019,"I really hate working ""DevOps"" jobs"
ginbear,2,Tell that to Kent Beck..,2019,"I really hate working ""DevOps"" jobs"
Deleted Account,17,[deleted],2019,"I really hate working ""DevOps"" jobs"
steveeurcol,9,"Well, he did write three paragraphs about it. So I think I clearly received the message. The first time we met him and we asked about his previous project, he told us they didn't do automated testing, and that when his team finishes the code, they ""throw it over the wall to QA"" and its no longer his problem.",2019,"I really hate working ""DevOps"" jobs"
badtux99,11,"That is an unprofessional manager who doesn't know how to create a quality product. It's the same kind of bullshit that ended up with American car manufacturers having their ass handed to them by the Japanese. You have to build in quality at the design and assembly phase, you can't have quality assurance people at the end of the line testing each car to make sure all the bolts got tightly properly etc., because they'd have to tear the whole bloody thing apart and put it back together again to do that, and if they're doing that, might as well just assemble it properly the first time. The reality is that ""leave the quality to QA"" ends up with a rattletrap car that manages to drive off the dealership lot but breaks down or falls apart when it hits anything out of the ordinary. Or a rattletrap computer program. Whatever.",2019,"I really hate working ""DevOps"" jobs"
TundraWolf_,10,"""our regression tests take 3 hours to run, are in selenium, and every other test fails every other time"" is pretty much every integration test strategy I've ran into in the wild.",2019,"I really hate working ""DevOps"" jobs"
steveeurcol,3,"Our stats are:

About 1 hour run time

Over 1500 tests - average is about 50 failures per run.

Its not the best, but it finds things most issues way faster than our devs do poking around.",2019,"I really hate working ""DevOps"" jobs"
punkwalrus,4,"""Who are these 'QA analysts' and why are they so down on our product? Every damn mail they seem to send is nothing but pointing out flaws and complaints.""

Yeah. Been there.",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,3,How can I upvote this comment a million times?,2019,"I really hate working ""DevOps"" jobs"
Deleted Account,14,"""continuous integration/continuous deployment"" ... therefore, many short sprints with incremental delivery of new features. . . 

"". . . by the way, we're moving the entire operation from the data center to the cloud, in one huge 'big bang' operation, and we have to get this done by date X because we're (either not renewing lease on property, or stopped buying hardware spares, and we're rapidly ageing out, and shit's starting to fail) . . . so could you just do that instead of your little feature-by-feature incremental release thing? - - - yeah, re-implement our entire tech stack. With no documentation. And none of the staff who were here when they originally put it all together.  And 'automate' is a 'nice to have'.""",2019,"I really hate working ""DevOps"" jobs"
shiftpgdn,11,I was recently rejected from a job after explaining what actually makes up a CI/CD pipeline.  The HR!!! person interviewing me claimed that it really was about using Python and AGILE.  I wanted to tear my hair out.  This was a third round interview with this company too.,2019,"I really hate working ""DevOps"" jobs"
badtux99,21,"You dodged a bullet there, mate.",2019,"I really hate working ""DevOps"" jobs"
shiftpgdn,4,"You're right. It's just irritating that every single company is now jumping on the ""devops"" cargo cult bandwagon and having absolutely clueless nobs be the ones who filter candidates.   It's just so disrespectful that I take hours out of my day to prepare and interview and they can't be bothered to do even the most basic of research.",2019,"I really hate working ""DevOps"" jobs"
GassiestFunInTheWest,10,"Argh. I've spent a few weeks with a team where everybody has authority to deploy straight to production, and they call that CD. I suggested moving to actual CD pipelines promoting releases through dev, test, staging, but they didn't want to do it because they don't have good automated tests.

You're not running any tests now! At least making sure it can be released in an environment is a step up from that!",2019,"I really hate working ""DevOps"" jobs"
ndarwincorn,13,"> nobody knows what that means

Cargo-culting around Git Flow (it's rampant here too) doesn't help.",2019,"I really hate working ""DevOps"" jobs"
GassiestFunInTheWest,6,Argh. I've seen this too. CD is much more closely aligned with trunk based development.,2019,"I really hate working ""DevOps"" jobs"
benyanke,9,"""Devops is about automation""

&#x200B;

""Stop, you need to make sure X is in the right place before Y can happen""

&#x200B;

\> pick one pls",2019,"I really hate working ""DevOps"" jobs"
tech_tuna,2,"I love building CI/CD pipelines but holy hell I agree, there's a lot of confusion about what it actually means and why you want a good CI/CD system in place.

Also. . . there is no such thing as a perfect CI/CD pipeline! No matter how you do it, there will be a compromise, pain points or some other imperfection.

That's OK of course, but most people don't seem to understand this.",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,12,"Could not agree more with what you said about ""most jobs with the word ""devops"" in the name are straight up IT operations from the mid-2000s.""

I had like 10 calls in 2 weeks where every one called me about how much the devops culture in their company was changing things and proceeded to tell me how I will be required to maintain linux servers which run Java 1.4 code written around \~2005.",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,3,Sounds like a docker dream job... or <something>job...,2019,"I really hate working ""DevOps"" jobs"
Deleted Account,7,"""platform developer"". hmmm.  I'll have to consider that one.

I was actually going to try to get my job title changed to ""Systems Engineer"".  Because that's really what this is.",2019,"I really hate working ""DevOps"" jobs"
simonwgill,3,Hope you like drawing diagrams and explaining test plans - because that's all I've seen Systems Engineers doing.,2019,"I really hate working ""DevOps"" jobs"
Deleted Account,3,">SRE meant ""first line support"".

I have now completed my first year as a devops engineer and I am shocked by this reality. During interviews I was told that we will be working with kubernetes, go and all that. In reality all I am doing is kubectl get pods and kubectl logs XXX.

The bright side for me is that I didn't studied computer science at university but have another engineering degree, and this is the best place to learn about architecture and system level details. 

However I have lost most of my ability as a developer and become much more slower as time passes.

I personally do not know how to move forward from here. I am making plans constantly but cannot decide on this or that. I just let it go at this point and riding the high salary wave.",2019,"I really hate working ""DevOps"" jobs"
vikinick,2,"""Platform Engineer"" works pretty well.",2019,"I really hate working ""DevOps"" jobs"
badtux99,1,"Except ""platform engineer"" in the hardware business means that you design the Linux (or other OS) distribution that runs on the hardware, including writing or integrating any device drivers needed to drive the hardware, not that you do devops. I was doing ""platform engineering"" when I designed the contents of the boot flash for a NAS system and modified a driver to have a memory pool that it recycled along with tracking for ""lost"" memory for requests that never came back from the next driver in the chain (that went into debug logs so we could figure out why that was happening). Writing a Cloudformation JSON using a Python-based templating engine that generates chunks according to my needs is something else. Though I suppose the fact that I designed the contents of those instances being generated by my Cloudformation, Mercurial (used to hold the contents of the instances), and Puppet (used to deploy the contents to new instances) is platform engineering.",2019,"I really hate working ""DevOps"" jobs"
Firmeza,1,"""yaml engineer"" 🧐🤣😂",2022,"I really hate working ""DevOps"" jobs"
viraptor,15,">You usually have some tool where you need to create some complex system via yaml,json documents, or even better some custom DSL. All of it's limited. And at the end of the day you're left wonder ""why am I not just using a real programming language for all of this"".

While you may disagree with the approach, there is a good reason for them to be limited. A lot of that stuff defines resources which you want to modify/create/remove in a very specific way. Sure, you could write a script that creates something, another that changes a tag on it, another that updates the base image, another that... Now I want to version control what happened.

But at some point you'd likely arrive at the same point - you've got a description of what you want the environment to look like and all your scripts add up to a framework which applies those changes. Congratulations, it's terraform. It's limited and works well within the constraints.

You don't use real programming language anymore so that you don't go outside of the constraints. For that you change one line of description instead of writing and testing a real app to do the same.",2019,"I really hate working ""DevOps"" jobs"
lorarc,4,"I once had in a project a set of scripts to create a database, each change was incremental and while it was cool to apply just the latest script to the database in prod trying to recreate a new db from scratch by applying all the scripts one after the other meant that tables were created, populated, transformed and then deleted. And the end result was different than the live database because so many things have changed along the way like the version of db used. It's much easier to use a tool that describes the final result and let it figure out what needs to be done. Writing that tool on your own is not easy but a 3rd party one like TF is collaborative effort so we can all benefit from it.",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,39,[deleted],2019,"I really hate working ""DevOps"" jobs"
GassiestFunInTheWest,19,"Not OP, but I sympathize with their view.

You might have the opportunity to create a perfect system, but you're responsible for it whether it's perfect or not, and you're rarely given the time or resources to make it perfect.

Instead, I've seen so many teams where the DevOps guys just inherit some godawful collection of half-baked tools and processes. They're constantly prevented from making serious improvement in favour of servicing ridiculous petty requests from the whole team, or firefighting problems that they weren't involved in causing.

And at the end of all that, they're still held responsible for every outage, security vulnerability, performance issue, or failed release.",2019,"I really hate working ""DevOps"" jobs"
Soverance,4,[Am I still to create the perfect system?](https://www.youtube.com/watch?v=yCg07snNhyw),2019,"I really hate working ""DevOps"" jobs"
Deleted Account,2,[deleted],2019,"I really hate working ""DevOps"" jobs"
GassiestFunInTheWest,3,"I agree with everything you say.

I don't want to seem condescending, but you may have missed the quotes around the word ""DevOps"" in the title of this thread. The point of this discussion is that so many companies make a pig's ear of devops as a culture. To the point that job titles which include the term devops are a big red flag that you're probably not going to be working in a true DevOps culture.",2019,"I really hate working ""DevOps"" jobs"
cd83,1,"Sure and I agree with that as well. I guess maybe I did miss the quotes around DevOps and just figured OP was in a bad place with a bad experience of being a devops engineer.

I think what got me was the original block of text I quoted (pasting here for easier reference):

> You have to do just about everything, and somehow you do nothing at the same time. You have to build out the cloud, do monitoring, automate everything, build the CI/CD process, containerize things, and also help build the network. This role almost fall on one person or team just about 110% of the time. So DevOps becomes more of a grind than anything. You're so multi-functional to the point where anything that is ""product development"" pretty much falls in your lap. 

That part, I think, is awesome. I love it. But, as OP did point out, it ""... falls on one person or team about 110% of the time"", which is definitely wrong. But that doesn't mean the term ""DevOps Engineer"" is wrong.

The DOE should be the Subject Matter Expert on it, but not the single point of failure either. If they're not training other members of a cross-functional team, that's wrong. 

But,  my title is ""Senior Solutions Engineer"" and not ""DevOps Engineer"". My role is to build that system (including all of those things) while training those other members of my team and other teams how to ""do devops, cloud, agile, scrum"". There's backing from the C levels and upper management on this, so I don't have that culture problem. But even so, a huge portion of my work focuses on the culture, which is usually the biggest problem. I'm just expected to be the expert on it.

Which again, is awesome.

I would probably leave if it was like that other situation though. There are definitely good organizations that are either doing DevOps right, or at least trying to and are open to it.",2019,"I really hate working ""DevOps"" jobs"
GassiestFunInTheWest,4,"Again, I agree with basically everything you say, except your interpretation of what OP is about. I won't put words in their mouth, and it could be that I'm letting recent experience colour my views, but the complaint is about organisations which are DevOps-In-Name-Only. You having a job with great support from C-levels to do things the right way doesn't help me when I have higher-ups actively pushing for fewer, more monolithic releases and for the precious devs not to be bothered with mere operational concerns.

I'm definitely leaving this company, and I regret joining in the first place. But from what I've seen on the jobs market in my city, what I'm experiencing now is large proportion if not the majority of ""DevOps engineer"" jobs. It doesn't matter how much I say it ""should"" be different if the people who sign the cheques like it this way.

Basically, at this point, I consider the term ""DevOps engineer"" to be a lost cause, and I'll probably avoid any jobs advertised as such in the future. In the meantime, I'm going back to a previous employer which I know not to be staffed by lazy fuckwits who want to outsource their common sense to devops sitting in the corner.",2019,"I really hate working ""DevOps"" jobs"
cd83,1,"Gotcha. I definitely understand there are situations and experiences different from what I have or have seen. When I was interviewing, I'd ask the company what devops meant to them, and consistently got varied responses. It is a mess.

Question. If you're going to avoid jobs with that tile, what are you looking for instead? What type of work do you do or focus on?",2019,"I really hate working ""DevOps"" jobs"
GassiestFunInTheWest,4,"Yeah, in my recent round of job hunting I would ask a couple of questions to get a sense of what the company wanted out of devops. ""Who is responsible for responding to production incidents?"" and ""If I wanted to release code to production on my first day, what steps would I follow?"". I wasn't expecting perfectly evolved processes for either of those, but at least to get a sense of what they valued and how they approached work. I want to say that there are no wrong answers, but in both cases ""devops does it"" is a wrong answer.

I'm now going to an SRE job title, which I negotiated specifically because of my gripes above. What I like doing, day to day, is all the same stuff you talked about: designing and implementing platforms for application development and operations. I love building monitoring systems, CD pipelines, distributed systems, it's all good stuff. I like having exposure to every aspect of the whole application, knowing a little bit about the front end, the back end, the database, the test automation.

What I don't like is the assumption that the platform/operations are the only team or discipline that will step outside their silo like this. The idea that developers don't have to know anything outside of their IDE, but ops have to be responsible for everything inside the application. That's where most companies I've seen are really failing at devops.",2019,"I really hate working ""DevOps"" jobs"
koreth,9,"> I think the faster we just toss out ""devops"" tools and make a devops person a ""developer with a focus on infrastructure"" the better off we are.

That's pretty much Google's original definition of ""SRE"" in a nutshell, isn't it? They require SREs to spend a certain percentage of time writing code. This role totally exists, and it's in huge demand.",2019,"I really hate working ""DevOps"" jobs"
prophetx2,9,"I get head hunted quite a bit and I’ll always ask for the clarification.  I won’t take any calls that have devops as a title because that generally shows the immaturity of their journey as a company. If a title has SRE I specifically ask if they are asking for a platform engineering SRE role (like a k8s operator or supporting the ci/cd tools) or a role focusing on SWE. If the role doesn’t involve developing or utilizing development practices to solve an issue
then it’s personally a red flag for me as I’m more interested in the SWE of the discipline. 

The trick is to ask HR  and the hiring manager SWE questions rather than SRE questions if you are more into the SRE-SWE discipline (for instance most are surprised my current SRE role has a product owner and an agile lead/scrum master).   It’s usually a bummer if they say those skills aren’t required for this role etc.",2019,"I really hate working ""DevOps"" jobs"
PabloEdvardo,16,You sound like a developer that is frustrated by dealing with infrastructure rather than an ops/sysadmin who is excited to finally see code based testing and change management come to infrastructure.,2019,"I really hate working ""DevOps"" jobs"
StartingOverAccount,7,"I'm sure this is going to be an unpopular post.

We help companies move their infrastructure to an off premises solution.  A lot of companies we work with have these large cobbled together networks.  Networks that are the result of years of mergers, divestitures, legacy systems that are expensive to replace, different management ideas, lazy administrators, the list goes on.  In an effort to get their IT costs under control these companies turn to the latest buzzword in IT 'devops'.  What happens after a few years is they have a bunch of admins and developers with new titles basically doing the same work they've always did.  To fast forward through all the lib lob after we get done most of their on-site infrastructure is gone, the data centers are gone, the huge complex AD structure is gone, most applications are hosted, databases instances are cut significantly, the the IT workforce cut by at least 75%.

The reality is a company truly following the devops philosophy doesn't need administrators (hence dev and ops not dev admin ops).  There is no need for a team of high paid admins to manage on-site hardware, then another team to manage the applications on that hardware.  Then another team for facilities to mange the data centers.  The hardware is hosted by a cloud provider, the application is in a pipeline or hosted by a 3PP

&#x200B;

This being said it will be a long long time before all workloads are hosted by a third party and the need for an admin is gone.  (Though I suspect the next recession is going to do to IT jobs what the 2008 recession did to manufacturing jobs.)",2019,"I really hate working ""DevOps"" jobs"
roninhockley,4,"It damn sure shouldn't be unpopular. It says everything perfectly without swimming in buzzwords that make me wanna scream.

I have been an ""OPS"" guy for nearly 3 decades. OPS as in ""not a programmer, didn't love math enough and wanted to go to work"". I do, however, love working in higher level abstract planning, such as with CI/CD pipelines. I also love containers. And I know Python.

So right now with everything going to cloud, and the whole microservices thing to fully exploit containers, I am fighting my ass off to plot the rest of my career as a former ops guy who needs to know just enough coding to make it work.

I REALLY need to connect with people like you and ensure I am budgeting my time wisely going forward.

In fact, at this point, I honestly think it might be easier for me to just file a DBA and go solo again to get new companies on the cloud. It sounds arrogant but as an OPS guy I always hated fixing other people's broken shit.",2019,"I really hate working ""DevOps"" jobs"
ndarwincorn,7,"> And the reality is because ""only real developers use the real programming language, now take your terraform HCL and love it"".

[Just gonna leave my rant from last week here.](https://www.reddit.com/r/devops/comments/ce1tvc/so_so_confused_on_terraform_directory_structuring/eu4601s/)",2019,"I really hate working ""DevOps"" jobs"
vikinick,5,"I'm just waiting for someone to add a layer of abstraction on to terraform, like what happened with Ansible and Jinja2 because the Ansible devs couldn't be fucked to implement features and instead just decided templating was good enough.",2019,"I really hate working ""DevOps"" jobs"
srvg,2,That was actually one single Dev's decision. Lots of having around since then to make Jinja more than just just spitting strings...,2019,"I really hate working ""DevOps"" jobs"
hookahmasta,4,"From my perspective, a new spin on the frustration that I've dealt with/dealing with is a case of ""Worked in Dev, Ops problem now"" becomes ""did it work in dev?  I dunno, DevOps problem anyway.""

APM shows problems with the app code?  Who cares, throw more servers at it.

Our redis client library is outdated on our app?  No, we won't update it because it's too hard.

Have aggregation of logs to build dashboard and alert on?  Who cares... our app doesn't log/log useless events as ""ERROR"" and we won't fix it.

My app needs access to S3 via and I'm too lazy to write code for signed URL, what do you mean I can't just give the box the IAM role for S3?

What I realize is that, after many years working as sysadmins, then transitioning to DevOps, if there are dev teams who doesn't want to take ownership of their own work, no toolsets or buzzwords or methodology will make them take responsibility.",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,10,[deleted],2019,"I really hate working ""DevOps"" jobs"
erjcan,-1,oh i see now. i wanted to become devops cuz of the paycheck & salary report from stackoverflow. so it turns out devops usually does the work of 2 people?! damn.,2019,"I really hate working ""DevOps"" jobs"
Deleted Account,5,"There are definitely companies out there that hire ""DevOps Engineers"" and do treat them as a one person job with proper responsibilities. Those responsibilities are almost always those of an operations engineer role, and in my experience often times jobs that are titled as ""Operations"" or ""Infrastructure"" engineer will actually pay more anyway. The unfortunate thing is that a lot of companies are hiring ""DevOps Engineers"" to be both operations and development, doing the job of two people for the pay of 1.25. These companies are why the buzzword title is junk.

There are also other titles like SRE that you need to be careful with, but that's a whole other story.",2019,"I really hate working ""DevOps"" jobs"
erjcan,1,1.25 is demotivating. ((( is this practice of combining coding + devops present mostly in US?,2019,"I really hate working ""DevOps"" jobs"
Deleted Account,1,Absolutely not. It’s probably less problematic in the US at this point because it’s been going on for a few years and people have wisened up.,2019,"I really hate working ""DevOps"" jobs"
baby__groot,3,"I guess you are more inclined towards a ""Cloud Native Engineer"" or ""Platforms Engineer"" role.",2019,"I really hate working ""DevOps"" jobs"
no_ragrats,4,Here I am a software developer in a role that is ironically similar to yours.  I have my user end applications and any sort of infastructure/tooling is met with 'not enough time'.  Luckily the culture is slowly growing and somewhat recently there seems to be an understanding that more time should be spent in saving time.,2019,"I really hate working ""DevOps"" jobs"
Deleted Account,11,"Isn't that what DevOps is; SysOps from years ago? yeah my age is showing I call them `System Operators`... 

Sure we automate; some of us are actually really good coders but honestly good operations engineers also code and automate and have been doing this before DevOps was a term.  Why is this important? because some companies have never moved past Operations teams; others struggle to find this mythical `DevOps` person who they hear about.

So if you have the DevOps title you are a Unicorn",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,10,Not every company has to “move past” operations teams. Not everything needs to be IaC.,2019,"I really hate working ""DevOps"" jobs"
wildcarde815,4,Some days saying that in this forum seems like it'll get you crucified.,2019,"I really hate working ""DevOps"" jobs"
Deleted Account,5,"No; but there is this illusion that some people have that they can force a developer to do the same job as an system operator and his own job.  I remember when it became a thing; I worked with my developers daily but I didn't give them root access to our database servers.  It was like a Christmas party for them because they wanted power and they had assumed if I could do it; they could certainly do it better.  

I left a few months later with a 30k year and didn't look back; they would login as root and just do everything as root and moved the wrong files here and there and couldn't login anymore.

Looking back I'm truly ashamed at the DevOps movement because before that day everyone logged in with their individual user and those who had access used sudo correctly.  Sure they had root before on their Xen VM's 

Just a very bad way of enabling developers to have their `own` development environment.",2019,"I really hate working ""DevOps"" jobs"
no_ragrats,8,"Having your own development environment is perfect, having the ability to change system files that dont relate to you is less than so.  A developer should be able to install third party packages, system tools, play around with ports and generally fuck up their own dev environment without affecting anyone else.   And the same developer should be able to 'reset' that environment and pull all their committed configuration and codebase without having to call a sysadmin.",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,1,"Since then I only see developers with this development environment locally.  Couple years ago I had a customer who used a vagrant image with chef-solo to bake the changes ...

Anyway yeah these developers had their own Xen VM's that they could upgrade or play around with whatever; and they could run chef-client and it should fix whatever goes left.  They really didn't use them; why? because there's nothing like developing (and testing) on production software so you know your code is good.

https://i1.wp.com/www.developermemes.com/wp-content/uploads/2013/03/third-party-facepalm.jpg",2019,"I really hate working ""DevOps"" jobs"
no_ragrats,1,But a VM provides a hardware abstraction?,2019,"I really hate working ""DevOps"" jobs"
Deleted Account,1,"VM was just a way to use an old server and split it up into 6 servers for the 6 developers to use.

The word from management was they should be developing on the same software as production.  So that's what I did.",2019,"I really hate working ""DevOps"" jobs"
no_ragrats,2,"Previously you said prod hardware,  but you said software this time.  I apologize if I'm misunderstanding, but you should be able to emulate prod software in a dev environment",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,0,I edited my comment; running on production hardware actually isn't a bad goal.  I've done that before.  Managers had their reasons I just made it happen.,2019,"I really hate working ""DevOps"" jobs"
Deleted Account,1,"impossible wipe hat wide attraction workable cagey dam rustic lavish

 *This post was mass deleted and anonymized with [Redact](https://redact.dev)*",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,3,This was 2009.,2019,"I really hate working ""DevOps"" jobs"
TheIncorrigible1,2,chroot predates docker and is not the same thing in the slightest.,2019,"I really hate working ""DevOps"" jobs"
Deleted Account,2,"faulty jeans rotten enjoy paltry dazzling overconfident soup cooing automatic

 *This post was mass deleted and anonymized with [Redact](https://redact.dev)*",2019,"I really hate working ""DevOps"" jobs"
roninhockley,2,"In all fairness there IS an analogy there, I use it all the time in fact.

Kernel namespaces and chroot environments are at least distant cousins",2019,"I really hate working ""DevOps"" jobs"
intolerantidiot,3, [https://devops.com/a-devops-engineer-walks-into-a-bar/](https://devops.com/a-devops-engineer-walks-into-a-bar/),2019,"I really hate working ""DevOps"" jobs"
DeliciousMagician,3,"One point of discussion in the devops vs pure dev analysis which I don’t see represented here is the topic of on-call hours.

Not only are devops engineers required to act as the ultimate point of escalation for any unexpected/unexplained issue, but, when problems appear during off work hours, the devops guy is required to dive into the problematic code introduced by pure dev and illustrate where the problem lies, offer a helpful suggestion, and/or fix/remove the bad code.

So stupid mistakes the 100+ person dev team introduce on Friday morning, end up being fixed at 4AM by the devops guy who knows not to try to load 600 million rows into memory.

Thankfully our dev team has an on-call rotation too, but this amounts to about 1 day of on-call every 3 months. While over here on the sre team, I am on-call 24/7 and take primary shifts two weeks per month.

A popular app is going to have many, many problems and the on-call load is so heavy that the few souls who agree to respond to such a torturous schedule have wonderful job security.",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,3,"It’s the same in the operating system side:

DB is sucking up 8 cores at 95% user.... next step ?  Call the AIX guy!

(I tend to use colorful imagery when describing what the *application* is doing to DB2/Oracle/Whatever...)",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,2,"It’s the same in the operating system side:

DB is sucking up 8 cores at 95% user.... next step ?  Call the AIX guy!

(I tend to use colorful imagery when describing what the *application* is doing to DB2/Oracle/Whatever...)",2019,"I really hate working ""DevOps"" jobs"
funix,3,"If it looks, smells, sounds and acts like a dog, are we supposed to call it a cat?",2019,"I really hate working ""DevOps"" jobs"
Points_To_You,3,"Our DevOps team definitely doesn't do most of what you described. The bulk of what they do is support the enterprise wide applications that developers use: jenkins, bambo, bitbucket, jira, octopus, nexus, sonarqube, qmetry, appium, etc

They help a little bit with some automated testing that lives outside of the projects, but anything that is part of the codebase like CI/CD pipelines is managed by the developer team.",2019,"I really hate working ""DevOps"" jobs"
saalih416,3,"To each their own. For whatever reason, I just love DevOps. I used to be an English teacher and then was a tradesman in the Alberta oil sands. I’m pretty much a Junior DevOps Engineer now and this is the most exciting job that I’ve ever had.",2019,"I really hate working ""DevOps"" jobs"
PhilosophicalSanders,3,"I’m a “DevOps Software Engineer” and if you want to use a real programming language, you should. 

I use Python to essentially glue everything together; parse YAML, make decisions based on file/config input, talk with APIs in the cloud, make more decisions, inject and execute programs and scripts, etc. I absolutely love it. 

It’s a real grind... at first. Once you figure out what everything needs to use, you have your glue connect everything.",2019,"I really hate working ""DevOps"" jobs"
lattakia,3,"Instead of Terraform, just use [Pulumi](https://www.pulumi.com/) in your favorite language.",2019,"I really hate working ""DevOps"" jobs"
Helpyourbromike,1,Did they make the docs better? Last I checked the docs were weak. I have some issues with pulumi,2019,"I really hate working ""DevOps"" jobs"
Tontmakaroni1,3,Rename DevOps to something like 'CanDoOps'.,2019,"I really hate working ""DevOps"" jobs"
JohnRofrano,3,"Welcome to the world of companies that want to ""change"" without actually ""changing"" anything! (except to change the title of ""SysAdmin"" to ""DevOps Engineer""). ;-)

This is the sad reality for a lot of companies. I see lots of job postings for DevOps Engineers that describe what is essentially a system administrator job with the added responsibility of running CI/CD servers. Here's a hint: If you apply for a DevOps job and your team is not doing Development, run for the hills because DevOps is **Dev**elopment+**Op**eration**s**. i.e., ""you build it, you run it"". If someone else built it and you are running it, then you are just doing Ops (or SRE). There is no separate development and operations team in a company that is practicing DevOps, there is just one team which is cross functional.

One of the primary reasons for adopting a DevOps culture is to break down the silos. So, if the company you work for still has silos with hand-offs, (or even worse, they have created a 3rd silo between development and operations called the ""DevOps Team"") they are not doing DevOps! DevOps squads have end-to-end responsibility for what they commit, build, test, deploy, maintain, operate, everything!!! Of course there are different ways to accomplish this but the ""you build it, you run it"" mantra is at the core of DevOps.

SRE is a completely different philosophy where you maintain separate development and operations teams but one of the tools the ops teams has is a deployment gate (called an ""error budget"") with which they can control the flow of new deployments from development based on quality. SRE is a separate and distinct practice from DevOps. They have common goals but they achieve them in different ways.

It sounds like the jobs you have had are rebranded sysadmin jobs. That's unfortunate, but that's not DevOps.",2019,"I really hate working ""DevOps"" jobs"
justinhamlin,4,"Preach on. 

Was hired as “Ops” and now they’ve changed us to being titled “SRE” but our job description is “devops” - basically we are still Ops just using more powershell and terraform",2019,"I really hate working ""DevOps"" jobs"
ifatree,3,"which is crazy to me because configuring pre-packaged containers and writing shell scripts hasn't traditionally ever been considered ""development"". it was barely developing when you were doing the same thing as those shell scripts in Ruby to get Chef and Vagrant to work together and occasionally calling APIs (via other people's wrappers) to your cloud platform. i mean, someone is doing some ops developing somewhere, but it's not the end-user system engineers.",2019,"I really hate working ""DevOps"" jobs"
grumpieroldman,2,"Amen. Burn it to the ground and start over.  
Call it the ... Phoenix Project.  
  
SRE regarded the agile methods of development and applied the core concepts to deployment and distribution in a post-shrink-wrap world.",2019,"I really hate working ""DevOps"" jobs"
justanearthling,2,Let them call it whatever they want. As long as you’re happy what your doing why the title matters? P.S. Not that I’m not enjoying milking the DevOps hype ;),2019,"I really hate working ""DevOps"" jobs"
xaviarrob,2,"Agree with a lot of points here. Our teams have become separated, but the ""DevOps"" team is turning into an infrastructure team who focus on development of the infrastructure. We've basically become our own development team who are treated no different (by most at least, there are always the legacy people who think they still can) no different than a developer. We have the same kind of work queue and have been working to port some of our applications to kubernetes, while also focusing more on things like monitoring, security, etc. 

We're pushing further and further away from being the ""on call always sysadmins"" and more towards just focusing on scaling our infrastructure up with the platform. I'm sure there are plenty of places out there just using the DevOps name to get cannidates, but that said if you have the ability be sure to be thorough about investing companies before you work for them. The attitude and culture makes a big deal for long term career development.",2019,"I really hate working ""DevOps"" jobs"
marvinfuture,2,"At my old job we had 1 devops/IT guy for a team of about 15 devs. He was so resource constrained that when we had issues they would take quite a bit of time to fix. That and their deployment model was so screwed up due to using no containerization. 

At my new job, devs actually are the ones building out the CI/CD and we script out our manual production deployments. It's so much nicer and you're absolutely right, having devs own it makes it so much easier to care about the entire development pipeline",2019,"I really hate working ""DevOps"" jobs"
Nosa2k,2,"I think the DevOps role is gradually morphing on to an Advanced SysAdmin role.

The demands are the same only you are a lot more skillful with bags of tools to play around with",2019,"I really hate working ""DevOps"" jobs"
sternone_2,9,"Upvoted. This is probably the post of the year that I agree 100% with. 

Devops is a shitty job with usually shitty tools that are gone in a few years to be replaced with some new shitty tool. NoOps and Serverless are going to kill DevOps anyway in 5 years. Will there still be working? Sure, but 80% less than we have now. Be warned.",2019,"I really hate working ""DevOps"" jobs"
badtux99,16,"Serverless just moves DevOps back toward the Dev end of things, it doesn't totally eliminate the Ops part of things. There's still a need for tooling to deploy all this stuff. I mean, I was writing deployment tooling in 1995 for an application tarball that ran on SCO Unix and had to be deployed on dozens of machines scattered across a two-state area where the only hands on site often had no clue, and I'm still writing deployment tooling in 2019 for applications packaged as war files that run on the Java virtual machine in the cloud. It never ends, it just changes over time. Almost 25 years of this so far, and it just keeps on keeping on.",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,14,[deleted],2019,"I really hate working ""DevOps"" jobs"
badtux99,6,"Startups actually are more likely to do DevOps the right way, as a merger of development and operations. It's when you get to big companies that they tend to just rename the operations team to be the ""DevOps"" team, except with more responsibilities including interfacing with the development teams to automate their workflows for them. That's not what DevOps is supposed to be, but my friends who work big companies, that's what happened there -- the operations team just got renamed to be the ""DevOps"" team and given more work. There's no real DevOps going on there.",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,9,"Operations dont just go away when you bind your product to a PAAS. There will always be architecture and infrastructure needs: networking, security, compliance, cost management, logging, etc.",2019,"I really hate working ""DevOps"" jobs"
sternone_2,-2,"yeah, but just at least 80% less than what we have now as I wrote in my post.",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,10,Why 80% ? Seems like a number you just pulled out of your ass.,2019,"I really hate working ""DevOps"" jobs"
CODESIGN2,3,"Oh lord... we have this where I work atm. Someone wants to throw away concourse CI, AWS, multi-cloud CloudFoundry & terraform for CircleCi & Heroku...

Concourse supports the notion there are jobs which don't need to complete without pretending they have passed. This allows for say deploy to CloudFoundry to work (critical it does) and you to fail a build if it fails; but perhaps updating NewRelic to say ""we have deployed"" causes intermittent 500 errors (for NewRelic). 

We don't really give a hoot, and it shouldn't stop features which work from going out because logging a deploy in newrelic (using their agent) didn't work.

Lots of people are moving to the idea of buy vs build, but they are doing it in the same shitty way they built tools and rejected NiH",2019,"I really hate working ""DevOps"" jobs"
zerocoldx911,5,"Lol, you’re just in the wrong field.

Go to development if that’s what you want it is what it is",2019,"I really hate working ""DevOps"" jobs"
sternone_2,-19,"serverless will kill devops in 5 years max. 

good luck with lolling",2019,"I really hate working ""DevOps"" jobs"
leafstrip,11,How serverless is gonna kill devops ? Care to explain ? People were already saying this 2 years ago...,2019,"I really hate working ""DevOps"" jobs"
sternone_2,-4,And it's already happening in some departments I worked in.,2019,"I really hate working ""DevOps"" jobs"
xaviarrob,6,"Tldr: People are solving abstraction with Containerization, kubernetes and serverless setups when they are relevant. There isn't a single golden technology that's perfect for everything.

Might wanna reach out of your bucket before saying these types of things. Not everything can be completely serverless without a cost/pitfall. There is a cost in both performance and time to develop the same / similar solution of an app to be serverless instead. Among other things there are also many non-functional requirements serverless just isn't made to support easily. If I have for example more than a handful of microservices, I have to easily be able to spin them up, keep them up, monitor them, and get logs from them. In some cases (a lot of cases) this isn't something straightforwardly done by trying to abstract a bunch of scripts together. This also then requires your developers to understand a complex web of connections between serverless apps, especially the more you have, and the more dependencies they have.

This is (one reason) everyone is aboard the kubernetes/container train. Having ported quite a few of what I'd consider ""legacy"" apps, I can say that dockerizing the app and putting it on a kubernetes cluster while difficult is much more straight forward than having to learn everything about how the app works and trying to move it into being something that's serverless. You use these technologies where they make sense, not try and fit everything to them. It's the same thing a lot of people have run into with infrastructure as code, e.g. with terraform it's very complicated to use it for databases / stateful things due to the nature of them being stateful which is requiring people to have to find other tools that fit it better.",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,1,"I’ve certainly noticed this as well. First “DevOps” job I landed my first task was to write up a summary of what Ansible was to the CTO...

But for me I don’t really mind, it’s just a job and it pays a lot better than doing the same thing with Sys Admin as your title.",2019,"I really hate working ""DevOps"" jobs"
badtux99,1,"Yeah, it's devolved to be what a Unix systems administrator used to be. A sad fate for what was originally an attempt to integrate developers into the operations environment.",2019,"I really hate working ""DevOps"" jobs"
xaviarrob,1,Tbf I'd be more scared your CTO doesn't know a thing about ansible than anything. Not a good sign of someone who's gonna push for their team to innovate if they don't even look for this stuff on their own at any point,2019,"I really hate working ""DevOps"" jobs"
Deleted Account,1,"Eh doesn't bother me, pay is good and I only had to explain Ansible once and he was onboard.

I don't really care what people do and don't know, so long as we all get paid at the end of the day.",2019,"I really hate working ""DevOps"" jobs"
xaviarrob,1,"I guess that's fair enough, I've definitely been there before when work was just a paycheck and nothing more! Now adays I push more for having a job where our team is innovating, and has something solid to show the people outside our department to justify the paycheck we make. While the nitty gritty of ""DevOps"" is not something most care to understand, explaining the benefits of it works wonders, e.g. a sales team doesn't care at all about kubernetes, but they love selling to customers explaining how our technology stack allows us to scale to their size, or the product team loves the fast, lean deployment.",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,1,"> You usually have some tool where you need to create some complex system via yaml,json documents, or even better some custom DSL. All of it's limited. And at the end of the day you're left wonder ""why am I not just using a real programming language for all of this"".

this.

> The biggest frustration with DevOps is that you're not respected as developers. Oftentimes discouraged from doing any real development because ""there is not enough time"".

mucho this",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,1,[deleted],2019,"I really hate working ""DevOps"" jobs"
Deleted Account,9,"If at 35 you feel you’re too old to learn Kubernetes, then you should consider gardening or piano-playing at a bordello...",2019,"I really hate working ""DevOps"" jobs"
ammorbidiente,2,"I lol'd thanks

Anyway I said ""I never coded before"" so maybe it will be hard to compete with code guys 15 years younger",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,8,"Note: I’m 52, and I haven’t stopped learning.",2019,"I really hate working ""DevOps"" jobs"
thecrius,1,"My experience is similar to /u/ge0n1, I come from a (nearly 20 years at this point) experience in the ""developer"" role, coming from the times in which PHP was the only way to do dynamical website and was procedural, growing to be backend developer, then fullstack and moving recently into specialized frontend.

My next step will be as devops as my main role. It comes natural when you are curious of the new technologies and trends in our corner of IT.

But I also see that OP is not going so far from the target when it says: 

> The best DevOps roles are developer roles. When a manager or a company has an epiphany, and realize that ""for all of the tools I'm trying to bolt onto my architecture, it would be better just to have a infrastructure and tooling focused developer"". [...]

I did already have my excursion in the devops role in the past and left the company I was working on because it was becoming exactly like OP describes. In this one, the IT dept is not so central in the business in the eyes of the big bosses (but it is in reality, as for many other companies) and we get to basically manage ourselves. We discussed for a year more or less and decided which steps to take from an on-premises / no-tests / monolithic to a more modern approach. We then assigned ourselves the ""next iteration"" roles in which I'll be the main developer in charge of basically exploring and experimenting in the devops side of things. The difference is that the rest of the time will be anyway expected to (1) follow my directions in terms of changes in the way we write our products (2) follow up with me whenever there is a moment to share the knowledge so that it's not everything on my shoulder.

I feel like this is the most healthy way of working I could ever find and I know that I'm very lucky for having it. I hope that you, /u/branh0913 , can find something like that soon.",2019,"I really hate working ""DevOps"" jobs"
packeteer,1,"yeah, my job is like this, but my develops are barely literate code monkeys, so I have that going for me",2019,"I really hate working ""DevOps"" jobs"
modmonk,1,I love terraform though :),2019,"I really hate working ""DevOps"" jobs"
ting_bu_dong,1,"As I understand the problem:  Devops, as a philosophy, means improved communication and collaboration between development and operations.  

It exists  to try to bridge the competing interests of system admins, who want to fulfill the business need of stability and reliability, and developers, who want want to fulfill the business need of ""more new stuff, faster.""

It tries to eliminate the issue where operations doesn't understand the new stuff that is running in their environment, but is on the hook if it goes kersplooey, so they put up roadblocks.

So, hey, that's a noble goal.

But ""devops"" in practice just means whatever the management at your particular company wants it to mean.  

Maybe it means actual devops.  Or, maybe it means operations.  Maybe infrastructure.  Maybe release management.  Maybe development.  Maybe QA.  Maybe helpdesk support when the boss's email doesn't work.",2019,"I really hate working ""DevOps"" jobs"
votebluein2018plz,1,Sounds like your job is just grindy. I work in devops consulting and its anything but that.,2019,"I really hate working ""DevOps"" jobs"
Bluemoo25,1,"I agree, I do the Windows side and Powershell can do anything you need it to as well as let you leverage .net libraries. People just don't value building your own tools as much I think because lots of people have sold corporate on selling their products. And new people who are trying to figure DevOps out generally only see the sales people selling tools. This fine details distinguishes the experienced from the not.",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,1,"I quit a aws msp after realizing devops in the cloud was just using someone else’s framework/development and that I’d get bored out of my mind

So I went back to the isp I came from where I’m free to invent whatever I want and get crash courses in production on network issues

Real skills that I could bring anywhere and adapt",2019,"I really hate working ""DevOps"" jobs"
lazyant,1,"> best devops jobs are dev jobs 

That’s the whole idea, to treat Ops as Dev.

Looks like your company tech leadership needs to take the devops team more seriously and give you more people instead of throwing anything random your way.",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,2,For force ops to learn to code. A skillset VERY different and hard to do,2019,"I really hate working ""DevOps"" jobs"
Deleted Account,1,Glad to know I’m not the only one who feels this way. I think I’m done doing this. I’m fortunate enough to be at a company with tools that I can contribute too but it’s not my full time job.,2019,"I really hate working ""DevOps"" jobs"
JerryZhang2012,1,"At first I think `DevOps` just `DEV` job, actually SRE/DevOps do most Ops ..., this is shit.

Before, I become a DevOps, I am a pure developer. Theory and practice very far away for many company.",2019,"I really hate working ""DevOps"" jobs"
cuvaalex,1,"In 10 years, DevOps becomes the preferred buzzword for IT Commercials. You can seeing everything, between the job role and new names like bizDevOps, DevSecOps... none are correct and all of then are clear misunderstood of DevOps.
My job is too coach companies on the adoption of DevOps, Agile... mindset. My preferred question is: What is for you the meaning of DevOps? 9 times to 10, it is a misunderstanding of DevOps.
Do you believe that some of my customers believe that putting in place a bunch of Service like OpenShift, will make them DevOps... oh my goddess...
This IT companies made a huge mess out there.

My tips, never accept any job role DevOps, it doesn’t exist, it’s just rebranding of the operation role, in worse. If you found a company tell they try to do some DevOps practice in a cross-Function team, then you get probably a good hit. Otherwise don’t",2019,"I really hate working ""DevOps"" jobs"
roninhockley,1,"DevOps and Agile are both incredibly misinterpreted and misused. At my last gig, the job title ""DevOps Engineer"" was suggested to the company by the recruiter that placed me.  I am from the SysAdmin world, so I went into this not knowing shit from shinola. It took me 6 months to even know what questions to ask. 

All told, a year into it I realized that without a clear plan and commitment this company would never adopt the principles, because they simply could not get ahead of the fires starting from the misapplication of Jenkins, Puppet, and Vsphere. 

So I left this position with a wealth of valuable knowledge about how NOT to do software. I can't really say that I had a bad experience with DevOps itself, because this position ultimately had little to do with it.

But to the OP, yea the title is ridiculous. But why wouldn't it be, I'm sure it was created in some meeting somewhere, most likely by headhunters or venture capitalists or some such.",2019,"I really hate working ""DevOps"" jobs"
bootstrapml,1,"I started as front-end developer in my organisation. I used to work on shitty and old Js library knockoutJS. I am getting very frustrated and am learning my best to shift to DevOps team. I know I could've learnt other wonderful front-end stacks like React, Angular but working in this for some time made me go crazy",2019,"I really hate working ""DevOps"" jobs"
Zippyddqd,1,"100% agree with op. 
5 years into DevOps, multiple companies and all the time the same shit tasks of fixing others mistakes and pasting them the stacktrace on Slack because they aren't able to do it themselves and because that's what DevOps guys are, just developers assistants. 

We see more and more job ads of being DevOps for Developer Proeficiency. 

I have moved to SWE and I tackle much deeper and abstracts challenges than ever before as a DevOps.",2019,"I really hate working ""DevOps"" jobs"
Deleted Account,1,"We are in transition, even now. If you consider yourself a DevOps engineer and you hate what you're doing - you'ren to doing a DevOps engineer job. The way I see it DevOps Engineers should aim at eliminating this position/role in general, your job is to teach the organization what DevOps is and to transfer your skills/understanding to everyone in the organization.",2021,"I really hate working ""DevOps"" jobs"
azteroidz,1,"Take it like this.  You're in this role cause you're an elite.  Everyone pretty much relies on you.  Ask for more money or find it elsewhere.  It's a grind especially when you do everything because basically everyone else can't, won't or you just would not even think handing it to that person really slows you down anyways.",2021,"I really hate working ""DevOps"" jobs"
Deleted Account,1,Why do people not want to work as DevOps Engineer. I was strongly encouraged against going into the DevOps path way? Why,2022,"I really hate working ""DevOps"" jobs"
Fast_Assistance2394,1,"Right on, you pretty much described all the reasons that I recently quit from a DevOps team and moved to a SW team in my company.",2022,"I really hate working ""DevOps"" jobs"
Deleted Account,1,"What also sucks: You're responsible in the sense of ""fix it when it catches fire"", but not in the sense of ""involved when decisions are taken"".",2023,"I really hate working ""DevOps"" jobs"
Deleted Account,374,"I think you should really dig deep about what it is you dislike about your job. From what I can gather it sounds like you aren’t being challenged enough (sick of writing YAML..), don’t like long hours, and don’t like the toil which I’m guessing is a result of poorly executed CI/CD. As the architect these are all things you can change. 

You’ve got that “grass is always greener” mentality, but you should consider that practically all of the problems you’ve described would still exist as a dev. 

Here’s a dose of reality; wallowing in regret isn’t going to do anything for you but drag you down. If you don’t like your current situation then change it. You deserve to be happy and have a fulfilling career. Your future is teeming with possibilities, but your past is immutable.",2024,Rant: I regret every single moment being in DevOps
Scared_Diamond_4373,42,"Thanks for your kind words. I’ve been trying to move out of this role for a long time but may be as I’m currently in a senior position it’s difficult to start from scratch. I try motivating myself every day I start my work but at the end of the day I feel terribly miserable & hopeless when introspecting what exactly am I doing or what values am I adding considering my position and experience. I may sound dramatic but trust me the last time I remember my mind and soul was joyful when I designed and written an API for an internal tool using FastApi. I remember, I honestly didn’t even used to realise when time flew and I was still busy building and debugging my stuff. It was pure heavenly!",2024,Rant: I regret every single moment being in DevOps
cloudsommelier,49,"I've been in your situation before and it poisoned my entire life. I branched out of SWE 7 years ago, and nowadays in the brief moments in which I have to code I feel a blissful calmness, some kind of nostalgia.  After some personal work though, it turned out the problem was not my job (changed employers 2 times) but something else in my life.  

Being a dev probably sucks/rocks just as much as any other tech job",2024,Rant: I regret every single moment being in DevOps
klipseracer,11,"Did you solve that problem or still working on it?

For me, trying to figure out the balance of everything can be challenging, knowing when to keep your mouth closed, being more empathetic, patient etc. My struggle is getting triggered by things people at my company do or decisions that are made or not made. I have what feels like PTSD over work and trying to not get triggered about stuff can be hard to control. 

I think some of these skills I mentioned can lead to being a better employee but not necessarily a better person as it can be exploited by the employer and coworkers.",2024,Rant: I regret every single moment being in DevOps
klipseracer,7,"Yeah but were you learning while writing that API? The learning part can be the interesting part for some people. What about when you're no longer learning? Imagine yourself maintaining the same piece of code that has no impact on people for five years straight, just because you're the SME? That shit can get boring and repetitive. Also you're more susceptible to crunch as a developer, that can be straight up toxic unhealthy stuff right there, can make you question your career when faced with too much of that. As a dev you can do some really amazing stuff, you can also have a different set of problems.

I too have worked roles where I was thinking they pay me to have fun. That didn't last for too long though and what the other commenter above said is true, build a platform. Start making your own tools. Use your imagination, make a slack bot from python, a CLI tool for something you guys do. I'm not talking about writing scripts, apply software design principals to an actual application. Build package and version it. You can have your own software you develop within a devops team. I do it now, my team owns multiple APIs and CLI tools that facilitate what we do, we roll some of our own things, not everything is off the shelf (disclaimer: I work for a startup which is a bit different). 

Another thing worth mentioning, if you're at a place that is entirely web based, that can limit your options, realize that some people are devops for software that isn't a website, go find one of those as it can change it up.",2024,Rant: I regret every single moment being in DevOps
Deleted Account,6,"I was in the same position as you. Principal devops engineer, trying to pivot to backend engineer or otherwise, the seniority of my title didn't match my lack of experience in backend engineering. I haven't had a backend engineer role in 8 years. 

I ended up quitting and doing devops consulting where I do about 10-15 hours of devops project work on a good week. I'm not trying to work a lot right now. I had 200k in savings built up so I'm just taking a break, doing some game dev projects.",2024,Rant: I regret every single moment being in DevOps
Telion-Fondrad,2,"What game genres are you working in? Is it Unity or GD or maybe something custom? Always curious to hear more about those game projects, one day I'll finish all my game ideas as well..",2024,Rant: I regret every single moment being in DevOps
Deleted Account,1,"I've dabbled in Godot. Trying out raylib to do things in C to brush up on my C. 

But currently working on something custom. An online game. Implementing collision detection, pathing, etc. to match a game I used to play. Not using one of the big engines.",2024,Rant: I regret every single moment being in DevOps
Telion-Fondrad,1,"That's cool. I'm avoiding C and C++, cuz I'm scared of them, sticking to Godot and Unity worked well for me so far. Wishing you luck on your development, gaming is in a weird state, hopefully such projects can bring more joy into it.",2024,Rant: I regret every single moment being in DevOps
Jesus_Chicken,2,"I started my career in C/C++ and python for scripting. I built motor controls and sensor input logic for lab equipment.

The low level stuff I did before was harder in the sense that I had to use bitwise operations to compact messages across wires and worry about memory utilization. The web dev stuff I do now is throw shit in a json object and who cares about a few milliseconds extra when you can pay for an extra server.

However, the complexity of a distributed system is that we have to worry more about how each piece of the system works together.

Games is the pinnacle of software engineering. Not only do you need to care about speed and memory, but you have to define fun mechanics. You could spend weeks on an idea and learn that it is terrible for the ""fun"" factor, or is a bad performing implementation. I am way more scared of game dev than I am at writing C/C++ code",2024,Rant: I regret every single moment being in DevOps
Telion-Fondrad,1,"You said it better than I could have. Been there done that, bad ideas are sometimes very interesting to develop though",2024,Rant: I regret every single moment being in DevOps
nappycappy,3,"being in a senior position doesn't make it difficult to start from scratch.  if anything it should be easier.  I've been in senior positions and I find it refreshing to start over again knowing the bs mistakes I've made and things I would've done better but didn't and so on.  take it as a means to better yourself by not being your old self.  if you find yourself dragging your feet not wanting to go to work or even start then it's really time to evaluate what you really prefer to do and go do that.  if it's not in devops, then don't do devops.  if it's dev you like more than ops, then go be a dev.  life is too short to settle for this and truthfully if you don't enjoy what you do, you should find something that does and pursue that.  I've known people who have walked away from tech and never looked back.  one became a train engineer. . go figure.  

oh yeah if your current place isn't going to support your transition to a different role then f them and go somewhere that will.  take your time, find the right place and go enjoy work/life.",2024,Rant: I regret every single moment being in DevOps
AemonQE,2,"Because it's a novel experience.

There isn't much you could automate when doing normal Dev tasks. You still have to do all the shit that comes with that job, like writing tests or updating from one framework version (Angular, that little shit) to another - for 100 repos - and then fix the bugs the update causes - for all of these repos.
Why would you do that? Because, maybe, you are the one who's fastest at exactly that thing.",2024,Rant: I regret every single moment being in DevOps
haragoshi,1,Data engineering may be one adjacent role that makes use of your skills but is one step closer to software,2024,Rant: I regret every single moment being in DevOps
Suspicious_Bake1350,1,"data engineers do not solve software solutions though like backend and frontend, they have oncalls too btw and play with data more or less all the time and python is their main language so yea!  
Data engineering is closer though i feel ya to dev, especially backend because that's where the real engineering is what i feel not biased just because im from team backend but just saying!",2024,Rant: I regret every single moment being in DevOps
amitavroy,6,"Well, I can only think how you might be feeling especially if you are not enjoying your job.

I enjoy DevOps only as an add-on thing to my development skills. Like I learned about Gitlab's CI/CD pipeline and Docker and all those trending stuff so that I read about. 

You have been working as a DevOps person and that too at a senior level, so why don't you look at moving towards being a security consultant? I have seen that field is now something companies take very seriously. There is always new stuff coming up, so you will always have new challenges which will keep you interested. And, security is such a thing that you can for sure get a good pay for those services.

What do you think?",2024,Rant: I regret every single moment being in DevOps
ang29g,4,YAML is one of my least favorite parts of the job.  I want to write software not yaml.,2024,Rant: I regret every single moment being in DevOps
csoare1234,113,Just imagine how the person writing CRUD apps in every job must feel.,2024,Rant: I regret every single moment being in DevOps
Deleted Account,53,[deleted],2024,Rant: I regret every single moment being in DevOps
numice,13,I wonder how writing yaml and scripts would be more refreshing than crud apps.,2024,Rant: I regret every single moment being in DevOps
AemonQE,6,I'm sorry for the worker ants slaving away their backlogs. Features - Bugs - Updates. Features - Bugs - Updates. I'd kill myself.,2024,Rant: I regret every single moment being in DevOps
Deleted Account,4,[deleted],2024,Rant: I regret every single moment being in DevOps
Deleted Account,3,Oh god u just sparked my PTSD. For the past 3 months this is all we’ve been doing. Trying to unit test shitty code from the 10 yrs that’s had several different programmers. It’s a nightmare.,2024,Rant: I regret every single moment being in DevOps
AemonQE,3,"""We don't write comments.
A program should be written well enough to be self-expanatory)""

Yep.",2024,Rant: I regret every single moment being in DevOps
4dr14n31t0r,4,"Fuck them. Fuck then for real. Seriously. It really boils my blood when I hear that absolute bullshit nonsense. I hate whoever says that crap with my whole heart. FUCK THEM!
Seriously, why is it so bloody hard to understand that writing a program well enough to be self explanatory is NO EXCUSE to completely disregard comments? What would you think if I freaking told you that a program should also then be written well enough to not need stupid unit tests because it will work flawlessly?

One argument I once got against comments is that sometimes what some functions do change so much the explanation given by the comments wouldn't apply. For fuck sake... As if that logic didn't apply to unit tests too.",2024,Rant: I regret every single moment being in DevOps
Deleted Account,3,"We have many applications that are 20 yo written by Indian programmers. You can image how shitty it is.

  
Class having 1000-1500 lines of code with if statements inside having 400 LOC :D",2024,Rant: I regret every single moment being in DevOps
Deleted Account,2,Yea I mean I worked at a startup that was like this and it was nightmare thank god it’s my current case. Honestly now though I write the test to make sure it passes. If I sit there and try to refactor the code I’ll just be wasting more time. It’s points like these where I think things should be started over and built from scratch. Our stuff is working though and we haven’t had issues. I guess it just matters when u want to do more shit but reduce latency to the user that’s when it becomes and issue.,2024,Rant: I regret every single moment being in DevOps
Deleted Account,5,"Stuck doing exactly this rn. Looking to move in to platform and feel like I’m stuck. That’s why I’m certing up and doing projects. Writing CRUD apps using a MERN or any other shitty CRUD framework sucks. No room for growth at all. Crazy thing is 90% of coding jobs r this. It’s always either a shitty SaaS app or an internal tool to act as a medium between the users and an ERP, or just display info.

If anyone has any advice or suggestions on what I should I would love to provide context on the situation, my experience, and what I’m trying to do to get out of this rip tide. But yea this shit sucks rn.",2024,Rant: I regret every single moment being in DevOps
axtran,1,"I’m growing my development team to people who are building a whole blueprinting and deployment system for infrastructure management. The goal is to support multiple provider targets to supply a simple infrastructure templating and inventory management system, serving a total of 24,000 developers needs without asking them to YAML or HCL a damn thing. Kinda best of both worlds :)",2024,Rant: I regret every single moment being in DevOps
MardiFoufs,3,"CRUD is still more varied than just pipeline yaml but agreed. Glad I don't do that, otherwise software engineering would be hell for me",2024,Rant: I regret every single moment being in DevOps
RagingAnemone,1,"When you guys say CRUD apps, do you mean anything database oriented.  Or do you literally mean like table oriented add/update/delete screens and queries with very thin business logic?  I always imagine the later, but I don't know how common that is.  Or even useful.",2024,Rant: I regret every single moment being in DevOps
scataco,1,"The latter. It's common. It's cheaper than Task-based UIs, in the short term. After a while, one screen becomes ten screens and keeping everything consistent is a nightmare. The challenge becomes not breaking anything instead of writing code that actually solves a problem.",2024,Rant: I regret every single moment being in DevOps
Deleted Account,132,[deleted],2024,Rant: I regret every single moment being in DevOps
Scared_Diamond_4373,-48,Spring is not the only decent web framework that is being used for development.,2024,Rant: I regret every single moment being in DevOps
CerealBit,20,"Spring is a fucking black box. You throw annotations around like a madmen, because somebody decided to use good old Java for ""modern web development"".",2024,Rant: I regret every single moment being in DevOps
wuzzelputz,12,"On the one hand, aspect oriented programming is a logical successor to oop, which makes the base concept of spring state-of-the-art.  

On the other hand, the black box thing is 100% true, even LLMs have no clue about how to do things right in spring boot. Spring development is basically googling for a baeldung post and hoping that a fitting concept is mentioned there.  

Bonus confusion adds up from ultra verbose Java code, which is probably double the amount of characters needed compared to other recent languages (although a lot comes from typical java opp architecture decisions and annotations, not from the language itself)",2024,Rant: I regret every single moment being in DevOps
CerealBit,9,">On the one hand, aspect oriented programming is a logical successor to oop, which makes the base concept of spring state-of-the-art.

True. But it's 2024 and it should be clear by now that programming exclusively in OOP has a lot of flaws.

More modern languages like Go or Rust show how it should be done (they are not perfect either, but I prefer Go over Java for web-related programming in 9/10 projects).

On another note: fuck Spring. The amount of time it takes to debug something once you slightly go off the recommended Spring docs is a pain in the ass. I'm still looking for a reason why somebody would use Spring over other frameworks/languages nowadays.",2024,Rant: I regret every single moment being in DevOps
koreth,13,"> Spring is a fucking black box. You throw annotations around like a madmen

Or you read the documentation and some of the source code and learn how it works under the covers, at which point it's no longer a black box. There's no magic to it and it's all out in the open for anyone to read.

That said, the ""fumble around in the dark until one of your wild stabs happens to appear to work"" approach you describe seems way more common for some reason.",2024,Rant: I regret every single moment being in DevOps
m02ph3u5,3,"This. Why not just RTFM?
Java isn't as verbose as people like to put it. It's quite explicit and expressive at the same time. The more time I spend in other ecosystems the more I miss certain aspects.

Speaking of aspects, how is AOP a ""successor"" to OOP? It's great for cross-cutting concerns, not as a replacement for OOP ...

Fumbling around in the dark is exactly what's happening almost everywhere ...",2024,Rant: I regret every single moment being in DevOps
gmaxter,4,I know this thread veered off devops but if anyone wants a good read on Spring I would recommend this guy: https://www.marcobehler.com/guides/spring-framework,2024,Rant: I regret every single moment being in DevOps
tabmowtez,5,"I've never understood the bitterness with regards to things like Spring, Lombok etc. It's a framework you can choose to use, or not. If you want to write all the boilerplate code yourself and waste time in the process, go ahead. No-one is stopping you, if you are forced to use it, then there is a good reason why. If you don't know what that reason is, write a small to medium sized and mildly complex application utilising Spring and then do it without. You will probably change your tune...",2024,Rant: I regret every single moment being in DevOps
koreth,1,"As far as I can tell, as a dev who's been using Spring since the early days, it's a combination of three things.

The big one is that there is a lot of crappy code out there, and as a hugely popular framework in the enterprise world, that means there's a lot of crappy enterprise Spring code. People get exposed to it a couple times and their takeaway is that Spring (and Java) are the _reason_ for the crappiness.

Related to that, Spring has evolved over time like any other framework. Old crappy Spring code is less likely to be using modern idioms.

And third, a lot of people are unwilling to spend time learning how Spring works. It has tons of excellent documentation, both official and third-party, but from what I've seen over the years, probably 80-90% of devs never read the docs and instead just mimic or even copy-paste existing code without understanding why Spring is being used a certain way. And when their use case differs from the original one and that particular way of using Spring isn't appropriate, they blame Spring for being finicky.

Spring is, and always has been, fully open-source. Leaving aside the documentation, the core dependency-injection code can be fully read and understood in a matter of days by a competent Java dev (which I realize isn't always a given) and after that, a lot of the ""magic"" behavior stops feeling magical and starts feeling logical and predictable.",2024,Rant: I regret every single moment being in DevOps
Arch-NotTaken,62,"I swear I could have written the same exact post... just swap Dev and Ops, there I am!",2024,Rant: I regret every single moment being in DevOps
seanamos-1,27,"Yes, dev is definitely not some utopia. If you can program, that’s great, it’s a huge enabler. HOWEVER, most typical dev work is maintaining/extending horrendous code bases, fighting fires and shuffling priorities.

There are only a handful of opportunities to work on a shiny new greenfield project, half of which will get canned.",2024,Rant: I regret every single moment being in DevOps
Negative_Principle57,3,"Yeah, I really enjoy hobby coding, but doing dev full time would probably have me ranting like the OP for the reasons you mentioned. There are certainly aspects of the ops world that are less fulfilling, but I have always liked being able to see the big picture and how systems work, so I try to focus on that and other aspects of the job that are positive.",2024,Rant: I regret every single moment being in DevOps
tr_thrwy_588,59,grass is always greener,2024,Rant: I regret every single moment being in DevOps
ignivs,4,"I feel the same as OP, but at the same time I would expect the same level of frustration in the other side of the fence",2024,Rant: I regret every single moment being in DevOps
2drawnonward5,2,"Grass must have Doppler-Effect colors cuz the further they are, the greener they get. Work alongside devs and development starts to look like a job.",2024,Rant: I regret every single moment being in DevOps
m3adow1,49,"> Btw writing those stupid YAML is not coding.

Wait till you've seen my Turing-complete Ansible playbooks.^(^I'm ^only ^half-joking)",2024,Rant: I regret every single moment being in DevOps
kabrandon,18,"I’m a DevOps engineer, and I write code all the time. I’ll be writing code when I start working later today. There’s opportunities for writing code if you know where to find them. They tend to be in infrastructure monitoring, or managing deployments of whatever software my company distributes. One recent example is a kubernetes operator that deploys my company’s software, as it’s a somewhat complex microservice architecture offering.",2024,Rant: I regret every single moment being in DevOps
Calsem,3,"The problem is that most of the time automation opportunities are more efficiently resolved by architectural changes or configuring existing tooling rather than writing your own program. 

Another problem is that a lot of things you could automate happen so rarely they are barely worth automating. 

In theory there's lots of opportunities but in practice I have a hard time finding them. Do you face those challenges? If so, how do you navigate them?",2024,Rant: I regret every single moment being in DevOps
seanamos-1,17,"I come from a programming background and transitioned into a ""DevOps"" role, currently Architect of Platform Engineering at a medium sized fintech. 14 YOE commercial programming experience before transitioning over, 19 YOE total.

At *minimum*, 80% of the work I do is programming. We hire strong programmers into the team or people who can demonstrate decent programming ability + cloud/infra/networking capabilities.

You are the architect, you have the power to set the direction. Sick of the toil? So would every programmer worth their salt, so they would write code to get rid of it because it would drive them mad. Any process, any toil, anything laborious, anything error prone, program it away, make it safe, make it repeatable, make it pleasant. Write tooling and services that fill in gaps, every company doing anything non-trivial has a need for this.

EDIT: On-calls and releases making your life miserable? Push it back onto the devs, you are there to guide, assist and provide guard-rails, not baby everything in production that you didn't write/own, you have your own work to do. Take a page from the SRE handbook, set SLOs of what is expected from stability in deployments and post-release, push back on the dev teams when these are breached and force them to focus on reliability. Help them get there through guidance, better tooling, catching issues earlier through better automated testing. Get management buy-in.",2024,Rant: I regret every single moment being in DevOps
bilby2020,42,"Yes, writing YAML is not coding. This is precisely the reason I like DevOps. I don't f**ing care for code and more importantly, non-technical POs . I design and build technical things talking to technical people, no business BS.

I was a developer for my first 15 years. BTW, why is an architect on call and doing releases?",2024,Rant: I regret every single moment being in DevOps
grem1in,28,"It’s always surprising to me when people strongly separate “technical things” and “business BS”.

Where is the money coming from? Why are you even building those technical things? What for? Kubernetes for Kubernetes gods?",2024,Rant: I regret every single moment being in DevOps
bilby2020,21,"The money comes from business, but I am 2 steps removed. Of course, my goal is to improve business performance by providing a secure, stable, resilient, performant platform for the developers. I just don't care about the business use case the devs are building.

After 15 years as an enterprise dev I, I got burnt by explaining to POs what a technically bad idea their story is,  of doing compromises to the code to deliver feature under BS deadline. of begging for refactoring time, etc.",2024,Rant: I regret every single moment being in DevOps
nkr3,12,"right there with you man, on top of that your clients are all devs, miles better than any other client you can get, sometimes they even send you PRs doing your job for you",2024,Rant: I regret every single moment being in DevOps
gusaroo,6,"This is one of so many things I love about the ops side. Our customers are our co-workers and friends. And since they're devs, too, they never suspect you of sand-bagging. If they ask why something will take two months to do, you can explain it in technical language and they're like, ""Ah, got it, thanks!""",2024,Rant: I regret every single moment being in DevOps
grem1in,5,"I would argue that this is still a business need. You just have a different subset of customers.

So, instead of a PO asking for a green button instead of a blue one, you have a web dev asking for faster feedback loops on their changes, better UX for debugging stuff and what not. Which then would be translated into a green button.",2024,Rant: I regret every single moment being in DevOps
wuzzelputz,3,"In my experience there is always a gap between the last manager with a basic technical understanding, and the lowest manager with a lot of sensitivities or politics involved.  

Thing is, senior technical people mostly know the business needs very well. But since personal BS (even personal KPIs of managers) and politics are involved, some lose interest in the „business BS“.",2024,Rant: I regret every single moment being in DevOps
grem1in,3,"I agree regarding the “middle management game of thrones” thing.

Still, I had more satisfaction working for companies where management was clearly communicating the reason why we implementing something, compared to ones where we were doing things because a principal engineer just got back from some conference with cool ideas.",2024,Rant: I regret every single moment being in DevOps
BeneficialAd5534,13,"If you got the chops, try pushing for an IaC-engineering and more architecture orientied role.

Good automation is not just cobbling together ""shitty YAMLs"" but designing a robust system using pipelines and smart infrastructure. Good infrastructure code, good CI/CD orchestration shares a lot of the principles of good software design, e.g. stateless components, decoupled modules, usage of composition in abstraction over inheritance or chaining, testability of your system, etc... and most important: focusing engineering on delivering useful business value.

I found the SRE book by Google really enlightening in that regard.

None of this will matter, though, if your company doesn't grasp those conceptual differences. If in your org, a DevOps translates merely to a Sysadmin with a cloud-hosted CI-runner instead of Jenkins, then you have two options: work for change from within or move on. If you're opting for the former, check out ""Accelerate - The Science of Lean Software and DevOps"" for some evidence you can present to managerial staff in convincing them about the usefulness of working in a truly lean setup.",2024,Rant: I regret every single moment being in DevOps
Scared_Diamond_4373,2,Thanks! Will surely try to go through it.,2024,Rant: I regret every single moment being in DevOps
michalzxc,7,"I think either your particular workplace, or lack of passion stops you from going deep enough until it will get interesting

SRE on my end:
- we don't do ""production releases"", we are ""a cloud provider for other teams"", not our business what they release, as long tooling that allows them to release stuff works correctly 
- we go very deeply into Linux boxes, we made workarounds for  things like: docker storage getting corrupted, aws CNI sometimes not setting routing tables correctly, kubernetes out of the box is not wrapped into a invidual cgroup allowing pods without limit cause Kernel level OOM event, protection against fork bombs 
- we migrated dev environment away from the cloud to much cheaper self hosted Kubernetes VMs on top of self hosted Xen servers on top of bare metal servers 
- we are very interested in security, tracking events in cloud and kubernetes, or on each boxes (Cloudtrial + Falco/Sysdig)
- we would dream about making SELinux work with kubernetes hosts, but we would need hire like 2 people just for that
- we are passionate about being cloud agnostic
- we run our own custom made puppet server, that we use to manage all the VMs as a code",2024,Rant: I regret every single moment being in DevOps
No_Weakness_6058,1,How do you make sure you are cloud agnostic? Through using HashiCorp vault for example for secrets etc?,2024,Rant: I regret every single moment being in DevOps
michalzxc,1,"We are not ultra strict, that is not a hill to die on, but  we do what we realistically can, and yes we do use open source self hosted vault with ""banks vault"" operator

Firstly we prefer to have something self hosted, if for whatever reason we will not do it (too much watering and burden specific tool would introduce) then in a second step we are choosing a service with open standard (like in aws, we use postgres rds, because we can have postgres anywhere, we could self host it, we can get it from any cloud provider, but we don't use custom proprietary databases like aurora)

The big shortcut is kubernetes, if we deploy something to kubernetes, it doesn't matter where the cluster will run. We could start using a new cloud provider tomorrow, and as long we will sort kubernetes there, we can deploy all our stuff to it

One of our recent projects is to unify our aws and Xen kubernetes clusters, for VMs to use the same puppet code, despite where we deploy our clusters. The aws ones are eks, so we don't manage masters, but on xens we have masters, loadbalancers, metallb, internal bgp networking",2024,Rant: I regret every single moment being in DevOps
No_Weakness_6058,1,"Could you explain how kubernetes makes it cloud agnostic? I assume it's a managed kubernetes, but you just have a list of the helm charts and how to re-deploy it exactly like that again?",2024,Rant: I regret every single moment being in DevOps
michalzxc,2,"(We have both, the one on Xen servers are fully self hosted, on the managed ones we still manage our own workers VMs)

How kubernetes makes you cloud agnostic - kind of. You can't take your AWS terraform and deploy it to Google cloud, or to Alibaba cloud. But you can deploy all your charts without any changes to kubernetes in either environment. All you need is a cluster, then you run your helm deployment scripts/tools and you are fully set in new environment in a matter of minutes. You could buy servers in a data center on the other side of the world, the moment you will have a kubernetes cluster in place, you can deploy all your stuff to it",2024,Rant: I regret every single moment being in DevOps
No_Weakness_6058,2,"That's amazing, I haven't started using Helm charts yet. Currently deploying the manifests myself. But the same goes, I can spin up any Managed K8s and re-deploy these manifests.

Helm looks great, seems to be a valuable skill working with enterprise as well. ( I am a solo builder! )",2024,Rant: I regret every single moment being in DevOps
temitcha,8,"Are you working mostly for corporate? I felt like shit too working in them, and my life changed when I went to startup.",2024,Rant: I regret every single moment being in DevOps
serverhorror,5,Why would you think the grass is greener as a dev?,2024,Rant: I regret every single moment being in DevOps
Deleted Account,4,"Being someone totally 👍 Infra/ops, I’d love to just write stupid as YAML all day… don’t try to validate yourself by your job and you’ll not feel this way.

The industry is as shit as it always is, little to no resources, stupid product managers smoozing to get ahead and technical teams carrying the brunt of everything bc we have no time to kiss ass and play the game.",2024,Rant: I regret every single moment being in DevOps
PsionicOverlord,4,"The really hilarious thing is that the entire point of ""DevOps"" *was* to unify those two fields.

I make my career out of creating that unity - the truth is that having a separate ""ops"" team is incredibly inefficient, which is of course that DevOps culture was created to counter. 

But corporations get it wrong - they split these things out and then end up with extremely bad solutions.",2024,Rant: I regret every single moment being in DevOps
Historical-Tie-8017,7,"I feel that, but really lucky to be on DevOps culture side. Huge paycheque allows me to live how I want without overworking. I found joy in completing small useful tasks.",2024,Rant: I regret every single moment being in DevOps
Deleted Account,1,"What's a ""huge paycheque"" for you? Of course, if you don't mind answering to that.",2024,Rant: I regret every single moment being in DevOps
Historical-Tie-8017,3,That’s 5 times more than people in my area doing on average. It’s not a wealth in my understanding but really solid middle class income,2024,Rant: I regret every single moment being in DevOps
Suspicious_Bake1350,2,completely agreed with the brother on this one!,2024,Rant: I regret every single moment being in DevOps
kobumaister,3,"I understand that you are ranting, but there's plenty of coding if you are in the right position. I myself code libraries for the teams that use python. I'm in a similar position as you, transitioning to dev in my org as my boss thinks that I have potential. But, in my case, I like the architecture part of devops. Not the ops part, I'm really tired of alerts and things breaking.

If you are not tied with the golden chain, there are opportunities to transition to development.

I hope you get out of that state you're in right now.",2024,Rant: I regret every single moment being in DevOps
Ptipiak,3,"Hello, first I'm sorry you feel this way, it isnso emotionally draining to be stuck in a position where you hate what you're doing.
Actually I want to ask, I'm from a dev background, and I more or less want to move into devops, I'm more or less fed ups with putting on with historic code base or working with company who don't give much damn about code quality as long as the client is happy, even tho everything blowing up and nobodies (management) got any interest in stopping the machine to get the shit fixed.
From my view at least in Devops you get diversity, once you'll be doing a bit networking, sometime deployment, debug a VM which is constantly crashing, instead of the same garbage code base everyday.

Since you're now in a position where you unfortunately dislike what you're doing, could you elaborate on why you think devops is such a burden ?
From what I see, as a devops you get 10x the pressure, because you might be one of the few people who knows shit (seriously)

I feel like both you and me we're suffering from a ""greener grass"" effect",2024,Rant: I regret every single moment being in DevOps
Almenon,1,"OP hasn't elaborated that much so I'll elaborate further. 

cons of Devops:

* on-call. Depending on the job this could vary from no on-call at all to long periods of on-call nights and weekends. Software engineers can have this too, but it's more common with devops.
* A lot of yaml configuration. Instead of being able to use the debugger to go through step-by-step, you have to pour through documentation to find some fiddly little detail you missed. 
* Constant reuse and configuration of existing tools doesn't give you the pride of writing your own logic. Sometimes you don't want to connect the Lego pieces together, you want to make the pieces themselves.

pros:

* reusing existing tools allow you to achieve satisfying results much quicker than writing stuff from scratch
* A lot of diversity, like you mentioned
* It can feel more impactful than software engineering. You have a broader scope. You might be making changes that impact the entire company rather than just adding a single feature to a single page of the product. Although a good feature could be important to the company as well.",2024,Rant: I regret every single moment being in DevOps
Almenon,1,"oh and something else I should mention:

>  putting on with historic code base or working with company who don't give much damn about code quality as long as the client is happy, even tho everything blowing up and nobodies (management) got any interest in stopping the machine to get the shit fixed.

This can happen in DevOps too. Terraform code bases can degrade if nobody pays attention to it. Also a bad political culture will impact you negatively regardless of what position you are in.",2024,Rant: I regret every single moment being in DevOps
Scared_Diamond_4373,1,I would suggest to look for an Application architect position but hell NO to DevOps!,2024,Rant: I regret every single moment being in DevOps
Ptipiak,1,"Funny enough, that was my master degree title hahaha, to be fair I don't understand the difference between devops and application architect, maybe the AA has make more impactful choices concenring the application structure, while the DevOps is more an executive?",2024,Rant: I regret every single moment being in DevOps
ucannottell,3,I’ve been in the industry for over 20 yrs.   Just wait till you are my age and lose your job.  Devops is a very poor career choice.,2024,Rant: I regret every single moment being in DevOps
Scared_Diamond_4373,1,Then what u suggest me to do here going forward.,2024,Rant: I regret every single moment being in DevOps
ucannottell,4,I haven’t a clue.  I am in the process of reinventing myself too.  There is a major shortage of DevOps work because most roles are now outsourced outside of the states.  Anyone saying otherwise doesn’t know what they are talking about.,2024,Rant: I regret every single moment being in DevOps
Deleted Account,1,"How can it be difficult when having 20yeo ? If anything, you should be overqialified for most of the DevOps positions. I think the only risky situation is when you realize you have eg. 10 years in the same company and you could be a bit unaligned with new tech in that sector(or ""other"" solutions which your company is not using) for comfortably start having interviews for a new job.",2024,Rant: I regret every single moment being in DevOps
rustyrazorblade,3,"Sounds like you see yourself as a victim, which is unfortunately quite common. I used to be like this as well, resentful of the situation I was in and the work I was doing. 

All of your complaints are entirely within your power to fix. You can, and should, work on more interesting projects. Go somewhere else, do something else, make a change. Complaining to internet strangers isn’t going to help you though.",2024,Rant: I regret every single moment being in DevOps
lil_doobie,3,"I haven't seen anyone mention it yet, but give Pulumi a shot if you haven't. As a dev who did a lot of devops as well, it definitely gave me that feeling that I was still coding and saved my sanity. I share the sentiment though and have definitely felt like devops is mostly stitching applications together via yaml files lol",2024,Rant: I regret every single moment being in DevOps
Red_Wolf_2,6,"Eh... I find the real joy comes from when one of the various automations decides to break in a really creative way and you end up needing to dive deep to figure out what got changed in an unrelated system or in a cloud provider to cause this particular thing to break...

Automating things is the job, but discovering why the whole rube goldberg machine of scripts and YAML is breaking is the joy.",2024,Rant: I regret every single moment being in DevOps
m02ph3u5,1,"Only to find out that Azure had an outage but nono, all our statuses are green. Dude, it's right there in the logs? No, sorry, can't see any issues here. xD",2024,Rant: I regret every single moment being in DevOps
Red_Wolf_2,2,"I have many unpleasant things that I think of Microsoft and a handful of certain network access providers for exactly this reason!

At least when AWS breaks, enough other stuff on the internet also breaks that it keeps everyone distracted...",2024,Rant: I regret every single moment being in DevOps
m02ph3u5,1,"""Distracted"" hahaha, excellent! Laughed so hard I almost accidentally swiped away my pager duty red alert.",2024,Rant: I regret every single moment being in DevOps
Red_Wolf_2,1,"By swiped away I assume you mean while in the process of hurling it at the nearest wall?

Frustrating as major service provider outages are, when half the internet is varying degrees of broken from it, it makes it super easy to convince clients it isn't something we broke, and that we're in the same boat just waiting for service to be restored upstream so we can restore our own services.

Far better than tweaking some code and getting an utterly unexplainable null reference exception popping up!",2024,Rant: I regret every single moment being in DevOps
slonokot,2,"Relatable, can you do the shift, or are you in a golden cage? You can start learning while keeping you paycheck high. Learn dsa, go through leetcode or advent of code start jun position, taking it you are talented enough in 3 years you are senior.",2024,Rant: I regret every single moment being in DevOps
Dramatic-Stick1138,2,Operations is not for everyone.,2024,Rant: I regret every single moment being in DevOps
dexx4d,2,"I'm not a fan of it either, but I do like getting paid, having a home, buying food, etc.

Once the mortgage is paid off and our savings are in a good state, I'll be done.",2024,Rant: I regret every single moment being in DevOps
purpleidea,2,"I too think the YAML stuff is nonsense. I started a new automation tool where you actually write sane code in a safe DSL. I'm really passionate about it because I think it makes sense and I don't believe in the YAML architecture world. I'm biased of course, but feel free to look for yourself. You might get that passion back!

https://github.com/purpleidea/mgmt/",2024,Rant: I regret every single moment being in DevOps
Scared_Diamond_4373,1,That looks great👍,2024,Rant: I regret every single moment being in DevOps
bprofaneV,2,Try security and weep for your previous life,2024,Rant: I regret every single moment being in DevOps
DonnyDipshit,2,"I had the same happen to me. I was a tech arch, then gm, now i have quit it all, take less cash and go back to dev",2024,Rant: I regret every single moment being in DevOps
Flat_Drawer146,3,"bruh you don't understand what DevOps is. it is not even about coding. it's a practice, a culture, way of working for delivering IT products. DevOps does not care what technology organizations use. it's all about concepts. Automate as much as u can. Limit silos and bureaucracy. Fail fast etc.. Coding is just part of it. DevOps engineers usually came from Dev roles. They understand the concept of programming but not trying to be a master of any PL. They can learn to use a PL in just weeks. They don't get attached to any PL coz for them it's just a tool.",2024,Rant: I regret every single moment being in DevOps
UntrustedProcess,2,"Do you have a hobby outside of work?  Work is for money to pay for life, not life itself.",2024,Rant: I regret every single moment being in DevOps
AdrianTeri,1,"Despite wearing several hats it sadly seems you've never recognized the power(soft & hard) and scope you have.

 I've always argued here one should think/view themselves as a liaison in the company. But I'll extend it to include inter-company/customer relations as you're involved with constraints of the business, nuances of the industry & customers etc",2024,Rant: I regret every single moment being in DevOps
TheWaffle34,1,If you manage big infrastructures there’s plenty of coding that needs to be done (my team and I at the previous company used to manage 15k+ BM nodes),2024,Rant: I regret every single moment being in DevOps
JoesRealAccount,1,I hate it too. I don't even get paid megabucks or anything I just ended up here by accident and I'm pretty bad at it.,2024,Rant: I regret every single moment being in DevOps
Deleted Account,2,😂,2024,Rant: I regret every single moment being in DevOps
Deleted Account,2,"Sorry, it sounds both serious and funny.",2024,Rant: I regret every single moment being in DevOps
tomatediabolik,1,"And can't you go from devops, to devsecops, to cybersec ? This switch would not make you start from scratch I guess",2024,Rant: I regret every single moment being in DevOps
dangnamshuy,1,My god tinkering with yaml files and restart services is my passion. It's kinda crazy how one man's trash can be another's treasure,2024,Rant: I regret every single moment being in DevOps
DontStopNowBaby,1,Welcome to the club.,2024,Rant: I regret every single moment being in DevOps
Deleted Account,1,[deleted],2024,Rant: I regret every single moment being in DevOps
Scared_Diamond_4373,1,Without a second thought!,2024,Rant: I regret every single moment being in DevOps
Deleted Account,1,[deleted],2024,Rant: I regret every single moment being in DevOps
Deleted Account,1,"Devops is usually very cloud related, atleast where I live.",2024,Rant: I regret every single moment being in DevOps
AsherGC,1,You have enough knowledge and experience to do what you like.  It's not possible that you hated your job for 10 years and still worked. There are lots of frameworks that let you manage everything from code and yaml is definitely not that flexible. But it has its place.,2024,Rant: I regret every single moment being in DevOps
Jaz108,1,"Ohh Man, feel for you,
But I don't think like this, being responsible for smooth functioning of everything is what gives me pleasure.",2024,Rant: I regret every single moment being in DevOps
pabskamai,1,"I used to be a devils engineer and I miss it dearly. 
Op, it’s fine not to like your role, find your passion while making that fat cheque. 
Good luck.",2024,Rant: I regret every single moment being in DevOps
thomsterm,1,"people don't want to hear that part ""it's always better to start as a dev"" ......",2024,Rant: I regret every single moment being in DevOps
JamieFTW,1,https://youtu.be/ia8Q51ouA_s?si=494ypvJehpTxJPM0,2024,Rant: I regret every single moment being in DevOps
Scared_Diamond_4373,1,"Thanks everyone for your overwhelming responses. Feeling a lot better after going through all your suggestions, feedbacks, encouragements and comments. Love u all!",2024,Rant: I regret every single moment being in DevOps
newbietofx,1,I hope u r paid well. Devops = developer + operations. ,2024,Rant: I regret every single moment being in DevOps
broknbottle,1,"Laughs in yamllang, jsonlang and tomllang.",2024,Rant: I regret every single moment being in DevOps
Feeling_Owl1909,1,"I can appreciate you sharing your frustration. I’ve been in various tech factions for a few decades and honestly each have their own issues. In dev you constantly deal with pressure to deliver and if you don’t have good/streamlined deploy and release processes (ie what we commonly call Devops now) then it’s very hard to meet the deliverables.

In essence, Devops was supposed to be an ideology that was created to fix the gaps between dev and ops (now adding sec) but it’s hard to allocate resources for an ideology so corp tends to make a group out of it. Sadly. Your frustration is probably more on the current state of dysfunction in the IT org of the corporation rather than the role/dept itself.  Not an easy way to fix but one suggestion find a company that fits within your style (maybe full stack or a flattened org structure) and don’t couple yourself to one specific trait",2024,Rant: I regret every single moment being in DevOps
mailed,1,I'll take writing YAML for a big fat pay cheque over building data pipelines for dashboards nobody reads. Thanks. Haha,2024,Rant: I regret every single moment being in DevOps
provoko,1,"You should look into aws CDK and/or pulumi, even aws sdk in JS or python/boto would probably make you happier.


And don't get a job with on-call, not all devops are on call, that's usually just for SRE. ",2024,Rant: I regret every single moment being in DevOps
throwaway8u3sH0,1,"Two notes: 

1. Sometimes it's not the job. Sometimes it's untreated depression. Go see a therapist.

2. If you want to challenge yourself, go from DevOps to MLOps to AI/ML Engineer. Fair warning: the grass may only seem greener...",2024,Rant: I regret every single moment being in DevOps
ggPassion,1,Why AI/ML engineer though?,2024,Rant: I regret every single moment being in DevOps
throwaway8u3sH0,1,"It's a hot market and one of the more challenging careers, imo. One can also transition from DevOps to backend fairly easily, but I get the sense the dude is bored, so I picked a more challenging path. 

If you *really* want a challenge, try getting into quant for a big FinTech. You'll make $250k starting but it's hard af to get in.",2024,Rant: I regret every single moment being in DevOps
ggPassion,1,Is it a hot market if everyone wants to do it though?,2024,Rant: I regret every single moment being in DevOps
throwaway8u3sH0,1,">everyone wants to do it

Isn't that the definition of a hot market?",2024,Rant: I regret every single moment being in DevOps
ggPassion,1,You might be confusing hot market with over saturated market.,2024,Rant: I regret every single moment being in DevOps
GrayRoberts,1,"There are few things as satisfying for me as Puppet/Ansible/Terraform/CICD Pipelines automating toil out of value delivery.

Completely tearing down and rebuilding an entire environment on a code commit? Transcendent.

It feels like the joy of logistics over the joy of creation. When I did dev work I was less gratified to create products for customers than providing a deployment methodology that let us iterate on the product quickly.

It takes all types in the business. I hope you find your joy of creating. Me, I’ll stick to my joy of delivering.",2024,Rant: I regret every single moment being in DevOps
sobrietyincorporated,1,"This comes down usually to declarative vs imperative coding. Odds are you're doing declarative coding (terraform, ansible) instead of imperative (cdk, pulumi). That's the big advantage SWE has over DevOps. 
   
I miss being primarily front-end. But then I think about the billion js vaporware frameworks and css hackware libraries. Or the fact 90% of backend work is writing the same REST APIs.   
    
Lately I've been focusing on data science. If you can do spark AND know how to setup a data warehouse, it seems like you are a unicorn.",2024,Rant: I regret every single moment being in DevOps
uwkillemprod,1,"Yeah I notice **a lot** of people hyping up DevOps to the folks over at r/csMajors and r/cscareerquestions, and omitting the not so great parts you've highlighted",2024,Rant: I regret every single moment being in DevOps
PMzyox,1,My favorite thing about being a devops engineer is the double-standard. The job description and duties never match up and calling the job “scrum master’s bitch” isn’t as attractive.,2024,Rant: I regret every single moment being in DevOps
Seeruk,1,"The very fact that you have ""devops architect"" as a role in your company demonstrates that it is not actually doing anything like devops 

Probably some bastard spawn of SRE and ITIL it sounds like",2024,Rant: I regret every single moment being in DevOps
why_not_zoidberg_82,1,"The same corporate sh* is everywhere. Not many people have the luxury of doing pure coding. Devs usually need to deal with existing legacy sh*t code and bad design, fighting with scope and dependencies, bad managers jumping in your design and plans, still the same.",2024,Rant: I regret every single moment being in DevOps
SeisMasUno,1,"Im sorry to hear that brother, I’m in the exact opposite side of the spectrum. Hated coding to death, felt drained, miserable and every single day took a heavy toll on my mood, felt terrible tryin to push thru every inch. But as you said, YAML is not coding and I feel a lot better now, about my routine, my job, and my life in general.

It was a bold move trying to refocus my career and for sure took some sacrifice and long hours but couldn’t be happier about it, it was totally worth it. 

At the end of the day, this business is not worth it if you’re not passionate about what you do, sure it has its perks but they’ll cost you your soul and happiness. 

Hope you find your way.",2024,Rant: I regret every single moment being in DevOps
Deleted Account,1,"I would kill for a single startup that became unicorn so I no longer have to work at all.

Its stupid to dream about work when world is much more interesting than sitting next to a pc.

Unicorn pr cuguar mama to spoil me. But it will never happen.",2024,Rant: I regret every single moment being in DevOps
crash90,1,"The nice thing about DevOps is that there are easy roles where you get paid a nice amount of money to do not very much. There are also hard roles where you get paid insane money to do very hard work (often labeled SRE).

You are currently on the easy path. If you don't like it they're happy to interview you for the hard ones (Meta, Google, AWS, etc etc) and the pay literally starts climbing into the millions per year once you advance far enough.

Most jobs in big tech will involve writing code in compiled languages all day, very occasionally doing yaml and or messing with other config tools. If you choose this route I would suggest starting practice with leetcode hards until you feel comfortable solving some of them.

It is actually hard though. Which path is up to you.

Also, dev gets romaticized a lot but it's actually in a pretty brutal downturn right now. Many devs I know are laid off unable to find a job currently.",2024,Rant: I regret every single moment being in DevOps
goodbalance,1,"find a hobby. buy and old german car, for example. disassemble it and put it back together. that will sober you up :)",2024,Rant: I regret every single moment being in DevOps
hello2u3,1,"Coding is a commodity skill now completely doable from South America, India, or Asia. Between that and ai it’s a complete race to the bottom",2024,Rant: I regret every single moment being in DevOps
PartemConsilio,1,"As a devops engineer, there’s a lot I dislike but at the end of the day there’s a lot I love. But here’s the kicker - devops is more HIREABLE by far right now. I’m so grateful I’m in devops because my ass would probably be in the unemployment line right now.",2024,Rant: I regret every single moment being in DevOps
wildVikingTwins,1,"it is my first year of DevOps, this post is very encouraging..... thanks.",2024,Rant: I regret every single moment being in DevOps
Johnny_BigHacker,1,He took the DevOps pill over Dev... sigh,2024,Rant: I regret every single moment being in DevOps
agabardo,1,"Funny enough, I am a developer going to devops",2024,Rant: I regret every single moment being in DevOps
TopSwagCode,1,"Just do it. Change roles. Take control of your life. It's not impossible. It's all about attitude and willing to learn. 


You just have to be willing to take what you can get and be willing to take a lower wage job. Personally I have done a range of different roles. Quit my job to go back to school. Quit a job without having another job lined up, because it was giving me panic attacks. 


It's all about what risks your willing to take. The golden handcuffs are only there because you let them stay on you. Money isn't everything. I have worked several years 30 hours / week because I wanted ro be home while my son was small. Gone back to 37 hours work week. 


I am the main income in my house we always live life cheap, so we have options. We are not rich nor poor. We just live life casually. Spending more money on travel and experiencing the world. No fancy car or house. 


You only live once. Enjoy your self now while your ""young"". ",2024,Rant: I regret every single moment being in DevOps
geritwo,1,At least you get to write some YAML. I spend most of my time writing tickets or emails after I managed to find out which remote team is responsible for a resource that is supposedly in my project but as a “managed service” in a corporate environment I dint have any access to it not to mention its IAC. I can feel my brain rotting every day.,2024,Rant: I regret every single moment being in DevOps
blackrottenmuffin,1,Being a DevOps is great. It pays well.,2024,Rant: I regret every single moment being in DevOps
ivovk,1,I'm a dev and I don't like this tendency to do more and more infra work by devs. Would prefer not doing it / or to have more devops guys in the company who know what they do.,2024,Rant: I regret every single moment being in DevOps
cryptocritical9001,1,First world problems 🤣🤣🤣,2024,Rant: I regret every single moment being in DevOps
mystictroll,1,"""I code in domain specific languages, gents."" makes me feel better about writing YAML and JSON.",2024,Rant: I regret every single moment being in DevOps
Musicprotocol,1,"I worked out many years ago that I just hate having to work all the time... It's not the work, I enjoy the work I just hate HAVING to do it all the time.. 
So I switched to contracting 8 years ago and started working 6 months on 6 months off..  
Best thing I ever did my life became so amazing.  
The only issue is now with the current state of the job market and economy I've had to take a perm job for the first time in 8 years and now I absolutely hate it..    
But I'm working on a solution.",2024,Rant: I regret every single moment being in DevOps
spiralenator,1,"DevOps was a mistake. The entire thing. All of it. One big mistake. The tension between Dev and Ops was never meant to be resolved. It is the natural order of things that devs write bullshit code, and Ops answers ""no"" to every question. If you think I'm out of line, then explain internal developer platforms.",2024,Rant: I regret every single moment being in DevOps
SaintEyegor,1,"We have admins who are solely focused on devops and have lost their way in regards with system usability and stability. They wield their cookie cutters with great zeal but make it exceedingly difficult to do performance tuning and troubleshooting. Worst still, they’ve lost a lot of basic *nix skills and no longer know how to support a non-managed system.",2024,Rant: I regret every single moment being in DevOps
El_Demente,1,Nothing stopping from transitioning from devops to dev right?,2024,Rant: I regret every single moment being in DevOps
Fearless_Weather_206,1,Maybe do a side project of your own,2024,Rant: I regret every single moment being in DevOps
Dangerous-Bed4033,1,I’m a dev for 15+ years - feel like I’d be happier as a real estate agent or barman or anything but yeah fat pay cheques. Everything is boring / not challenging after time.,2024,Rant: I regret every single moment being in DevOps
rosetta67p,1,You are coding infrastructure as code. Feel better Now?,2024,Rant: I regret every single moment being in DevOps
matsutaketea,1,devs make the worst cloud architects. they don't actually know the details of networking and scaling but just kind of handwave those things for someone else to implement. I've hated every dev cloud architect I've met.,2024,Rant: I regret every single moment being in DevOps
Anxious-Pace-6837,1,"Cant you develop apps on your free time? Like, you have free time right?",2024,Rant: I regret every single moment being in DevOps
BloodJonXIII,1,"Maybe this will help or it will just be an average guy saying average things. I started off 7 years back and never changed companies (not willingly, didn’t have the financial condition to go for an MBA and then later needed stability to take care of my parents). I have moved through the same company from Middleware admin to DevOps to Big Data Engineer to Platform admin to Cloud Architect. Each one gave me enough challenge at the time to be happy while my reputation and clout at the firm gave me the option to lighten my load when I needed it. Lost both my parents, my dog, got cheated on, fought addiction and finally here I am today with a single thought that has helped me be at my happiest the longest.

What is success if it is not happiness? Why should anyone have the right to decide what happiness means for you? Does every aspect of your life need to be in a certain place for you to be happy or are something’s more important than others? Accept what can not be changed, change what you must, smile because this life it is yours.",2024,Rant: I regret every single moment being in DevOps
metalisticpain,1,"I hate the title, job function, team. 

So I renamed it cloud infrastructure. Told the Dev teams they do DevOps (you know the actual meaning). Now we focus on Cloud base infrastructure platform, security guardrails, infrastructure architecture, finops, networking etc.

It's still all yaml or hcl. But I'll not writing crappy pipelines etc. the teams need to fix their own toil, do their own maintenance.",2024,Rant: I regret every single moment being in DevOps
redactedbits,1,"The ops world is pretty addicted to toilsome activity. We'd rather shove shit in data lakes and write SQL queries to fuel reports rather than building systems that solve our challenges proactively. It's been that way and will probably will continue that way until:
1. Engineers on average are more familiar with application development. Look around in this subreddit and see how many folks use the term SRE but write near-zero application code.
2. Leaders who value the impact of long term, self-service solutions. This is the hardest part; your ops people with app dev experience should be putting the self-service aspect of ops into the hands of developers, but often the self-service nature of things is a poorly abstracted YAML that ops people control.

Whenever I find frustration about this topic I remind myself that this is the segment of the industry who threw such a fit about writing code that it replaced APIs with gitops.",2024,Rant: I regret every single moment being in DevOps
yaksoku_u56,1,"brother, you need to relax, some of us here don't even have a job, if you feel sad, try something new or change your career or even start a business... bottom line is, give your place to juniors.",2024,Rant: I regret every single moment being in DevOps
real-Indiana-Jones,1,How much are you getting paid? What technology stack are you guys using?,2024,Rant: I regret every single moment being in DevOps
duebina,1,"Agreed.  I recently got fed up and shifted my mindset to ""it's just a job"" and it's been liberating. 

I'm focusing on saving for retirement so I can live my life for me and not career clout.  I'm either going to break through the engineering ceiling and get into business sides of technology and infrastructure or retire.  Either way, the path is the same.",2024,Rant: I regret every single moment being in DevOps
ut0mt8,1,"It's perfectly possible to build things being devops / sre whatever you call it. but in an small company. that makes all the difference.
in my company I'm lead staff sre whatever and I build things. I create architecture and sometimes I code myself the project from a to z. It will never happen in a corp with more than let say 40 techs where things will be in silos and then X will complains that's It's perimeter. ##uck that.",2024,Rant: I regret every single moment being in DevOps
jesperordrup,1,Quit your job,2024,Rant: I regret every single moment being in DevOps
kaieon1,1,"I've been a software engineer for 6 years and the past year I've been doing more devops since beside me and the cto no one else wants to do it and its pretty fun writing terraform.
I'm actually thinking of pivoting to devops. Is it that monotonous?",2024,Rant: I regret every single moment being in DevOps
pblngrn,1,"There are some roles that are more Dev than Ops. If the team is open to sharing tasks, then you can also code and mix it with your daily tasks. A practical approach could develop solutions with Python, Go, Node.js, APIs... I think it can help if you want to make a quick transition to Dev.",2025,Rant: I regret every single moment being in DevOps
Tali_Lyrae,1,"I hate to be that guy, but if your writing yaml every day and not doing, you know, devops, you must be at a pretty small company. I'm Sr. and the only time I write yaml is to show my contractors how I want the config of a tool they are adding a feature to.

You might be an architect in name only because you are the only devops guy, or if you're not, I would say you might have the title out of seniority. As another commenter mentioned, architect on call is wild outside of massive, company wide issues.

I'm guessing you're mid level at best tbh",2024,Rant: I regret every single moment being in DevOps
AffableAlpaca,2,"I don’t think this view reflects reality in many places. Committing code and config is done at senior, principal and even higher levels depending on the org.",2024,Rant: I regret every single moment being in DevOps
Ariquitaun,0,So stop whinging move sideways to development. What's stopping you?,2024,Rant: I regret every single moment being in DevOps
hello2u3,0,Declarative programming is still programming.,2024,Rant: I regret every single moment being in DevOps
Boring-Test5522,0,"DevOps is a soul breaking job. That's why they pay so well. If you cannot imagine yourself spend hours and hours of digging up ton of production logs or read a fuck ton  of Docker / Linux manual, better to do something else.

DevOps is more or less System Admin than Software Engineer. Most of the time you spend to write Docket script and soul breaking YAML file. Your security, db sys and networking courses are more relevant than your Data Structure and Algo lol.",2024,Rant: I regret every single moment being in DevOps
sigmaris,129,This article sounds very much a product of the author's environment; if you've worked at too many startups where the CEO used 'DevOps' to mean 'dumping every technical responsibility including Ops and QA on the developers' I imagine you'd feel the same way. That's not the definition of 'DevOps' that's used by people who are actually doing good work under that banner.,2014,How 'DevOps' Is Killing The Developer
umilmi81,28,Well it hit the nail right on the head for the previous job I worked.  And they weren't a start up.  Just an incompetent company.,2014,How 'DevOps' Is Killing The Developer
willrandship,14,"So what you're saying is the title should be ""How incompetent companies are killing developers"" which Dilbert has been telling us for years.",2014,How 'DevOps' Is Killing The Developer
snoozer_cruiser,38,"Most of the article seems to be written about a ""full-stack"" developer, so I think the title is confusing the conversation.

I somewhat disagree with his conclusion though. When a company starts a new product, then they kind of are a startup: they need to ship something with as low of a cost as possible in order to test the market. It's not surprising that they would hire fewer engineers than they need. 

The next question is, should we blame the engineers that step up to the challenge? I'd rather champion them.",2014,How 'DevOps' Is Killing The Developer
s73v3r,2,"> The next question is, should we blame the engineers that step up to the challenge? I'd rather champion them.

Championing them means that more companies are going to come to expect this sort of behavior. ",2014,How 'DevOps' Is Killing The Developer
ebatlle,2,"I think the difference is that in some companies (such as the one the author mentions) it is not people stepping up, rather a basic job requirement.  From that perspective I agree with him, you are taking a already small resource pool and shrinking it further because you just want to have rock stars on your team.  Not that many of them exist, there are some really good guys who specialize.  Why discount them? 

Edit: the comment below makes a great point, this approach can be used to hide incompetent management.  They can always blame the developer for shit, and never have to actually manage.",2014,How 'DevOps' Is Killing The Developer
friedrice5005,5,"Yup. I'm DevOps at our site and that means I run the infrastructure that the developers use. I administer SVN, Wikis, Databases, the build servers, Jira, and the VM Environment. I also deploy the VMs they use to do their development and write scripts to automate it for rapid-deployment. I am not in any way a developer (in fact, I suck at writing code and have no desire to) but I feel I do a good job of managing their systems do they don't need to worry about it. Currently I support about 300 developers and I am pretty much a 1 man show. Only backup I have is an app admin who does all the internal stuff for Jira, Nexus, and Jenkins.",2014,How 'DevOps' Is Killing The Developer
lightofmoon,5,"In place of ""startup"" just say ""small company"".

All too often, the programmers, or worse *the programmer*, is expected to handle every technical task in the office.",2014,How 'DevOps' Is Killing The Developer
jknupp,2,"To be clear, the article is in no way based on my experience at my current employer. Rather, it's a frustration with what ""DevOps"" has come to mean and how it gave birth to the ""Full Stack developer"". To be honest, it was while strolling around the PyCon job fair and looking at the requirements for different jobs.",2014,How 'DevOps' Is Killing The Developer
xiongchiamiov,1,"There's no canonical document that defines DevOps, so there really is no definition. It means something different to every single person.",2014,How 'DevOps' Is Killing The Developer
gordonkristan,2,"While you're 100% right, you must remember that the people implementing these movements don't know or care what the term _really_ means. They just care what kind of bullshit they can justify using the name. DevOps is now a buzzword, so its true meaning has been lost to the same people that stole Agile from us.

So I guess the title of this article _should_ be: How Telling Your Stupid Manager About 'DevOps' Is Killing the Developer",2014,How 'DevOps' Is Killing The Developer
grued,226,"My take on what ""devops"" is seems to be different than OP. 

Devops, to me, is a role that focuses on automation in operations and creating tools to help in the maintenance of a service.

While there's still a place for the hardcore ops guys in optimization and fire fighting, a lot of that responsibility can be automated away, and exposed to the developer in a way that's straightforward and makes sense to a software engineer.

In addition, ""devops"" has the role of building out the platform in a way that, again, makes sense to a software engineer.

Take setting up a monitoring system:
An ops guy will install nagios, setup checks on the core server stats (cpu, du, network, etc) and add something to make sure an application is running, and setup something to page him when things are bad.  Every few mornings he'll go in and yell at the dev who made him wake up in the middle of the night to restart an app.

A DevOps guy will setup a system such that when someone creates or adds to a service, they can configure checks that alert off of the business metrics and core performance metrics of that service.  He'll then setup a system by which they can convert those checks into a configurable form of alert that gets back to the owner of that system.  The original developer can now consume metrics and manage alerts in a way they are familiar with.  They have more ownership of alerts and really fix problems instead of just rebooting.

Yes, this does change the Developer's responsibilities slightly.. they now care about the systems they are creating instead of the algorithms they are pumping out.   That, IMO, is a good thing.

As far as full stack engineers, I think that role has always existed.  Maybe the OP is just more in tune with the job market now?   A specialist (ops or dev) still have their place in companies that really need specialization.    Someone who wants to play with multiple levels of technology, which I think would be a large % of techie devs, will be happy to fill the full stack roles.",2014,How 'DevOps' Is Killing The Developer
ggtsu_00,40,"I have seen 3 ways the ""devops"" role has been misinterpreted:

* A software developer hired to do do release management and system administration with the idea that since they know how to code, they are expected to start automating the system. This pitfall with this is that when the systems are too high maintenance, they hardly have the time to properly design, built and test automation procedures as most of their time ends up being developed to live operational work. (probably the person writing the article fell into this trap).

* A system administrator hired and expected to learn how to use and build out automation tools designed for developers (ie chef, puppet etc). They are usually overwhelmed with things like dealing with version control and extensive scripting beyond simple shell or batch scripts.

* A software engineer hired specifically to work along side operations to automate the operational tasks and eventually replace the operational staff with a set of tools. The operational guys don't want to lose their job so they intentionally try and make things difficult and don't share much info with the newly hired ""devops"" guy.",2014,How 'DevOps' Is Killing The Developer
downneck,27,"i'm the second guy and, frankly, that's the current interpretation of devops i prefer. you take a systems engineer who can code a bit and have him or her automate the living hell out of everything while (and this is the important bit to making devops sustainable) letting the pure systems and dev engineers do their own thing. 

10 years ago i would happily pull apart a sun u2 and replace the eeprom when it shat itself. now? not my thing. i spend my days elbow deep in chef, cobbler, cloud APIs, monitoring APIs, jenkins, JIRA, bash, ruby, and python.

i've had to back off the actual typing a little so that i can spend time with our devs to learn how their optimal workflows should look and help design our systems to make their lives easier (ie. give them more time to code). we talk with QA, product, sales, and management to architect an environment where everyone's job is their main focus, not everyone else's job. we make deployments safe, sane, and most of all...hands-off. there are few things as wasteful as forcing your developers to take time off from coding to run some hare-brained capistrano script and deploy code. we design systems and workflows to link issue tracking, version control, build, QA, and deploy so that when the SoX/PCI/HIPAA/whatever auditor shows up, the CFO doesn't end up in jail or when some godawful bug like heartbleed shows up and all our customers are shitting their collective pants, we can prove that remediation was swift and comprehensive.

as long as the internet connects real, physical computers there will always be a place for pure systems administrators and guys in my role rely HEAVILY on sysadmins killing it day in and day out. i've moved on from that role, somewhat, into the realm of devops and i feel it's a vital role in any growing, agile tech organization that needs to bridge the gap between sysadmin and developer to get shit done.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,[deleted],2014,How 'DevOps' Is Killing The Developer
downneck,1,"if you want to become a developer, that seems to be a good track.

IMO, you need a solid grounding in how your underlying hardware functions in order to be good at the middle ground of devops...so, my advice would be to go pull cable for a bit somewhere as well.",2014,How 'DevOps' Is Killing The Developer
mr_duong567,14,"> * A system administrator hired and expected to learn how to use and build out automation tools designed for developers (ie chef, puppet etc). They are usually overwhelmed with things like dealing with version control and extensive scripting beyond simple shell or batch scripts.


Yup that's me, and I've been struggling to keep up with puppet/chef too. ",2014,How 'DevOps' Is Killing The Developer
aseipp,4,"Dude honestly I've been a paid programmer and worked on everything from compilers to kernel drivers.

I am still amazed at the batshit *insane* complexity and pain that is Chef/Puppet, and how it can in any way pass as usable. So I don't think you're alone in that struggle...",2014,How 'DevOps' Is Killing The Developer
durzagott,2,"You should give Ansible a try. It's everything that Puppet and Chef promised to be, but without the complexity. It's actually a joy to use.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,12,">A system administrator hired and expected to learn how to use and build out automation tools designed for developers (ie chef, puppet etc). They are usually overwhelmed with things like dealing with version control and extensive scripting beyond simple shell or batch scripts.

Huh? Systems automation has been bread and butter for sysadmins for a long time, (+20 years). They are built for ops people, often by (former) ops people. 

If you do any *nix type systems administration and can't pick up some basic perl/python/ruby you're not a systems administrator in my book.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,6,"> A software engineer hired specifically to work along side operations to automate the operational tasks and eventually replace the operational staff with a set of tools. The operational guys don't want to lose their job so they intentionally try and make things difficult and don't share much info with the newly hired ""devops"" guy.

So to home, so close.

",2014,How 'DevOps' Is Killing The Developer
mycall,2,Reverse engineering to the rescue.,2014,How 'DevOps' Is Killing The Developer
koffiezet,3,"'Devops' for me is a way of managing operations and system administration, not a 'role' - it is a practice (and a good one imho) of automating everything as much as possible, avoiding problems, making everything testable and accurately reproducible, and there's a track-record of every configuration change. System administrator is the role - the goal of the job is still the same, the way it's done has changed.

I was a developer who has been gradually pushed into a sysadmin role at a small development company - mainly because of my extensive experience with Linux (using it since 1996) - and since I do have some sense of infrastructure and how should be managed.

Most of my colleague-developers however - who are very good at their job - don't have a clue about system administration or infrastructure. I always got questions about infrastructure related things that would make me wonder on which planet they live, most developers really don't have a clue about 'operations' - and certainly about 'good practices'. Some for example question the usefulness of ssh keys, not even mentioning key-only ssh access on servers, others would create multiple Debian packages of the same software, pre-configured to be able to be installed and run on one system for one specific client. Luckily, I'm calling the shots about stuff like that now.

So what the author of the article says about a developer being able to do a decent sysadmin job? Forget it. 90% of the developers will manage to keep things running, but don't expect anything else from them. Manageability will be below zero, I know from experience. I inherited an infrastructure mess of a few hundred VM's in a 20-ppl company, all with the same passwords, multiple distributions, including ancient slackware 8 machines, that were all managed by 'developers'.

And in my opinion, compared to experienced sysadmins I know, I consider myself to be an amateur, discovering new tools and still learning every day.",2014,How 'DevOps' Is Killing The Developer
oldneckbeard,2,"Your #2 is the proper devops. They take developer-centric tools like puppet or chef, and automate everything they can from code commit to binary deployment. The end result is continuous delivery. There's nothing worse than being on a 10pm release on skype and everybody is dicking around because one guy drew the short straw to manually transfer the WAR file and restart tomcat. ",2014,How 'DevOps' Is Killing The Developer
EggShenVsLopan,2,"> A software engineer hired specifically to work along side operations to automate the operational tasks and eventually replace the operational staff with a set of tools.

Thankfully that's a fool's errand. Developing a program that can think like a human is the holy grail of AI. I don't see that happening any time soon so all they can do is automate the boring tasks away. If you automate tasks then operations can do more things and are happy for it (or at least less bored).",2014,How 'DevOps' Is Killing The Developer
Deleted Account,6,Depends on the ops environment. My ops team does a lot of page refreshes because we've never integrated an alarm tool and have no notion of aggregate reports. Someone coming in and giving them better tooling might actually put some of them at risk. ,2014,How 'DevOps' Is Killing The Developer
Decker108,2,"I think this is more like automating the obviously automatable stuff. With the tools available today, I wouldn't be able to justify having an employee setup from scratch more than one development/test/production server manually. ",2014,How 'DevOps' Is Killing The Developer
darkpaladin,37,"Personally I prefer to wear my ops hat sometimes.  I've worked at places with harsh dividing lines between ops and dev and it almost always leads to problems.  By all means focus on your specialty but that doesn't mean any developer should ever be running around with blinders.  Even if you don't know how to configure a load balancer, you should have a rudimentary knowledge of how your load balancer is configured and what it does.",2014,How 'DevOps' Is Killing The Developer
henk53,20,">  I've worked at places with harsh dividing lines between ops and dev and it almost always leads to problems

One particular part that is troublesome is when ops are being handed things that someone for some reasons thinks dev should not do because it's a server task, but when it's actually a development task.

For instance determining the version of JSF in a Java EE shop. This is just absolute nonsense. No ops guy has any idea of what JSF is other than that it's ""some library needed by Java"".

With such a setup developers have to beg ops to update the version of JSF, but such an update is not in the interest of ops. If power plays are in place they will just deny or stall the request indefinitely. Ops also can't judge why one version or one implementation would be better or worse than the other. In short, this task should simply not be given to them.

The way I see DevOps is that you have teams with people who are more specialized in ops, but also understand dev. They are part of the same team as dev and thus nobody has to beg anyone to do something they don't want to do. The team decides together if another version of something is needed. Maybe a team lead makes a final decision and then it just happens.",2014,How 'DevOps' Is Killing The Developer
oldneckbeard,2," > For instance determining the version of JSF in a Java EE shop.

Stuff like this is why I'm super excited about Docker. All the sys admins have to do is keep the docker host up, let me (dev or devops) control the jailed machine, since I know what to do with it anyway. That docker image is what you promote through your environments. It's also a solid rollback strategy. ",2014,How 'DevOps' Is Killing The Developer
henk53,1,"Indeed, it's an interesting tech.

I've often worked in setups where ops provided a virtual machine (e.g. via XEN) to dev/devops, which was then pretty much under the control of the latter. In way this how cloud hosters like OpenShift work as well.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,8,"It helps if people stop acting like devops is some separate role, because it's not. It's really about how you approach things as an organization.

You may well have people who specialize in crossing those traditional boundaries between development and ops, but they're there to facilitate and keep the ball rolling. It doesn't do you any good to hire someone as a ""devops"" but still try and maintain strong boundaries between the developers and operations people. Doing that is like hiring someone to be 'agile' and completely ignoring the fact that agile is about organizational process, not specific individual roles.

Unfortunately, it seems like a *lot* of people don't get that, even in this thread going by some of the replies to your post.",2014,How 'DevOps' Is Killing The Developer
free_at_last,1,"Yes. It's the same as testing to be honest.

Stop labelling it.",2014,How 'DevOps' Is Killing The Developer
ikariusrb,78,"Sounds like the OP is bitter because he wants to be a developer, but he's being asked to take on DevOps work.  That doesn't mean that DevOps is a ""broken"" role- only that it's not his cup of tea and his organization is pushing him to fulfill a role he doesn't appreciate.  

To me, DevOps is someone who understands the whole stack- the java code backing the REST web service, the database servers, the networking, switching, load balancing, and storage.  DevOps is enough of a developer to create ""glue"" to get all the tabs and slots connected, help the developers understand the other pieces their code needs to talk to, and help QA triaging problems.  People carrying all the disciplines to fulfill this role may be fairly scarce, but it basically comes down to the ""modern"" sysadmin equivalent-  and acknowledges that systems administration engages in development tasks.  ",2014,How 'DevOps' Is Killing The Developer
tamrix,29,"To me dev ops is people who work in IT operations and write software to assist their job. Like writing deployment scripts for load balancing or configuration management or back up scripts. They may deploy a rest Web service but they're not going to care about the code behind it.

What you're describing seams like the role of a lead developer or solutions architect. ",2014,How 'DevOps' Is Killing The Developer
wheezl,23,"Maybe I am getting old but every time I read a DevOps job description, it sounds exactly like what a good SysAdmin is supposed to do.  I think somehow the terms SysAdmin and NOC Monkey got confused and they needed a new title. ",2014,How 'DevOps' Is Killing The Developer
reaganveg,17,"DevOps = ""sysadmin, but you know, not one of those Windows people...""",2014,How 'DevOps' Is Killing The Developer
gthank,5,"No, it means Dev and Ops working together, as opposed to the situation in many shops where they are opposing teams fighting for the same budget dollars and who don't do anything to help each other because there's no consequence to them constantly undercutting each other.",2014,How 'DevOps' Is Killing The Developer
reaganveg,2,Talking about the context of a job description/resume here though.,2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"It is, but basically for some companies Operations departments, it has to be spelled out for them. Some think it's merely keeping the servers running and having good uptime and any application functionality is the dev's problem, and if you need to do deploy to test, submit a ticket.",2014,How 'DevOps' Is Killing The Developer
ikariusrb,2,"My apologies- my description was a bit unclear.  DevOps may look at the code implementing a REST backend, to make sure load balancing or testing is hitting the right stuff, or that documentation is correct.  I don't expect them to write it though.   Solutions architect is actually fairly close to DevOps, but for me, a Solutions Architect is the Sales Engineering or Professional Services equivalent of DevOps- someone who can spec out and line up the resources to deploy a complex stack solution, and understand how it all fits together.",2014,How 'DevOps' Is Killing The Developer
TheDude05,6,Completely agree. Said it better than I could,2014,How 'DevOps' Is Killing The Developer
mycall,3,You forgot one big thing DevOps should know.. domain knowledge in the problem at hand and how to think out problems correctly.,2014,How 'DevOps' Is Killing The Developer
oldneckbeard,1,"Or, worse, he's a developer who refuses to test his own software OR help out with deployments, and he's bitter that he's having to fight it. 

At this point, I don't even hire manual QA people anymore for web apps. I don't hire SDETs because that term has been polluted to mean the same thing as a manual QA. We call them ""automation engineers"" or something, because it's more reflective of their skills. It's a developer-quality person who just happens to be focusing on quality or deployment automation or whatever. Not every dev needs to be a feature developer, and feature developers aren't at the top of the food chain. ",2014,How 'DevOps' Is Killing The Developer
Deleted Account,0,"Sure, many can do this and some enjoy it. However, it doesn't change his core point that this is primarily done in non-startups as a way to make one person do the jobs of 2+ and cut costs on human resources. 

At the end of this road is usually a burned out developer who is greatly under appreciated. ",2014,How 'DevOps' Is Killing The Developer
ikariusrb,5,"You're missing my point.  The OP stated that Devops was a contrivance, only useful for companies that wanted people to wear many hats, and only makes sense in a startup. My response is ""no, devops is an important role in many of the solutions that are built today"".  The OPs assertion that the role has no place outside of startups is baloney.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,0,"He says it's *necessary* in a startup but not so elsewhere. There's nothing wrong with being a 'full-stack developer' but that's different than the expectation someone is responsible for writing the code, testing it, running the DB, administering the box, deploying it, monitoring it, etc all on their own (or with a skeleton crew) - aka the full 'DevOps'. I agree with his assertion that this is done for the company's benefit and burns out developers.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,2,"This, DevOps to me is improving the relationship or the closeness between the Dev team and the Operations team. It's the Operations team automating much of the routine tasks Developers need operations to do so that they can initiate it, like a simple deploy or configuration change, giving them access to logs for their application, so they can search etc either through a portal like Kibana or just access a NAS share with restricted access.

It's developers not having to have an available operations person every time they need to push a release to a test environment and having an operations person that knows what is going on with their application, may even sit in on some meetings to discuss upcoming changes and is following the release cycle.",2014,How 'DevOps' Is Killing The Developer
gospelwut,3,"Basically I view DevOps as mostly ops but dedicated to dev rather than say desktop deployments or server racking. I mean, the role has been around for decades under different monickers.

I think ""do all the roles"" is simply a symptom of companies not understanding the difference between cross-training and doing-everything-subpar. ",2014,How 'DevOps' Is Killing The Developer
Deleted Account,2,[removed],2014,How 'DevOps' Is Killing The Developer
Deleted Account,2,"That's not what devops is. Automation is obviously important, but the real issue is how many companies have created strong dividing lines between ops and developers. DevOps is about integrating them at an organizational level to create tighter feedback loops.

Automating sysadmin tasks doesn't do you much good if your devs just toss shit over the wall to ops.",2014,How 'DevOps' Is Killing The Developer
brownmatt,1,"This seems to be the definition that is taking hold, but I really wish we could find a new and better name for it. ",2014,How 'DevOps' Is Killing The Developer
mullanaphy,1,"Agrees and exactly what my company is looking for right now. Having great difficulties finding someone skilled in dealing with this stuff and not looking for a developer who's just going to half ass it. We're rapidly expanding in all dimensions and a solid devops is kind of mission critical at this point... Unfortunately all the legit ones here in NYC are hired and have 3+ offers already...

Honestly I can do minor automations and maybe do more if I focused my time towards those goals yet it won't be nearly as good as someone competent in it and enjoys what they do. Being a full stack developer with 3 (soon to be 5) other developers is helpful yet now that we're scaling we need someone dedicated to everything that entails scaling as well as automating our build processes in a smarter way, code management, security, and all that jazz.",2014,How 'DevOps' Is Killing The Developer
Vocith,1,"Right, having done a stint on an operations team the amount of bullshit they put up with is sometimes ludicrous.  Making sure that the system is designed and built to run smoothly and in a supportable way is important.

Too many systems I've worked on were almost impossible to support. They would silently fail all over the place, the inputs were undocumented, the way different systems interacted was effectively undocumented. 

The developers had made a shit sandwich and expected ops to eat it every month.",2014,How 'DevOps' Is Killing The Developer
WarWizard,1,"This is always how I saw it, a developer who's role was to automate processes or build tools in support of ""development operations"".",2014,How 'DevOps' Is Killing The Developer
whoisearth,0,"bingo.  I'm one of a few people at my company pushing this whole ""devops"" idea.  What I care about is if a system/software is used Enterprise Wide I want it automated to high hell to ensure that the amount of fat fingers that could go into wrecking a deployment from UAT to PROD are mitigated and that everything is standardized to the nth degree to ensure uniformity of how these systems are used.

I know first hand that if you ""give"" a system to the developers without no means of control that system will go to absolute shit.  I'm currently trying to bring an extremely component at our work out of this death spiral of mis-management.

Also, DevOPs I find is less about the software and more about the ideology.  Setting standards and governance around what is used and then enforcing it.

edit - 

> Yes, this does change the Developer's responsibilities slightly.. they now care about the systems they are creating instead of the algorithms they are pumping out. That, IMO, is a good thing.

IMHO this is where the business should be driving.  Yes, I understand developers are working far too hard as it is but there's so much efficiency to be gained by giving developers direct access to their isolated components of the system.  The issue then becomes my above point to standards, governance and enforcing those ideals.",2014,How 'DevOps' Is Killing The Developer
ArtDealer,-1,"upvote for defining devops in the same way i would define it.

I would also add that it not only helps in the maintenance of a service/solution, but it also helps with ide setup, code/repo process flow, and **dev tooling in general**.  a project with a robust devops plan might a) have the things you mentioned (plus, for example, a way for project members to kick off a build/deployment/etc. from their phone), and b) have a ramp-up time (for new team members) of **a couple of hours**.  Without: ramp-up might take a week, with painful setps like computer setup, ide install + all software req'd for the project, etc., etc.  **Devops isn't a project's solution, it's a project's process's solution**.",2014,How 'DevOps' Is Killing The Developer
fani,-1,"Although I agree mostly woth you, You can avoid devops completely by sending all alerts directly to the developer. 

Then problem solved to an extent",2014,How 'DevOps' Is Killing The Developer
Toukakoukan,53,"There seem to be many views of devops represented in this thread so I'll add mine (gleaned from The Phoenix Project).
Devops isn't dev doing ops, nor is it ops doing dev, and it's definitely not a third dept in the middle adding to the bureaucracy. It's a philosophy of close collaboration and short, positively reinforcing feedback loops between dev and ops typified by continuous delivery and config management.",2014,How 'DevOps' Is Killing The Developer
ajoberstar,8,Also a reader of The Phoenix Project and this reflects my understanding way more than the other comments. You get the people of different roles to work together instead of throwing up barriers that prevent them from understanding each other's problems.,2014,How 'DevOps' Is Killing The Developer
brownmatt,10,"This was the original meaning of the term a few years ago when it first became popularized, but it seems to have been bastardized into some sort of third job / an actual job title since then. ",2014,How 'DevOps' Is Killing The Developer
jldugger,1,"IMO, The Phoenix Project kinda glued devops to the end of the author's intended paean for ITIL.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,8,"Bingo. Treating devops as some magical extra role is backwards.

You can have someone who specializes in the tooling and processes that help support this stuff, and you can hire people to facilitate and advocate for it technically and culturally.

But ultimately it's about organizational culture and process. Unless the company is willing to commit to that, they're not doing devops. The organizational culture and philosophy is the whole *point*.",2014,How 'DevOps' Is Killing The Developer
innocent_bystander,5,So far this is the only accurate comment on what devops actually is that I've read while going through this entire thread.,2014,How 'DevOps' Is Killing The Developer
xiongchiamiov,1,"Aye. It's roughly like agile for ops folks - a new way of thinking about things, not a job title.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,201,"Dev manager @ Microsoft here, and a huge enthusiast of NoOps model (which is hereabouts known as DevOps).

I've actually learned this while at GOOG, not in startups, and I think GOOG was actually the company that championed the model at scale.

NoOps/DevOps means different approach to architecture and design. 

It means that software is written to embrace failure and survive, rather than rely on humans who are paid to not sleep at night.

It means defense-in depth style security, as opposed to building walls and organizations built around duty separation.

It means that devs are aware of production architecture and dependencies they are taking (don't know how to use a database? You shouldn't be putting it in your design). They know how much RAM and CPU cores are in their servers, and so they can target the right hardware, and not a mythical 2GB box.

In short, dev ops means that all problems are solved by software, and by engineers - who a software company KNOWS how to interview, hire, and grow, as opposed to ops, where I have no clue how to distinguish good ones from the bad ones.

When implemented this way (and for instance, GOOG does), IT WORKS. IT WORKS GREAT. And don't let a two-bit online pundit tell you otherwise.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,21,"This is correct.

It amazes me that people keep trying to treat DevOps as a specific individual role instead of an organizational culture / process. Saying you hired a DevOps guys is like saying you hired an Agile guy.

Sure, you can hire someone who will be an advocate and facilitator, but unless you commit to moving your organization to the model you described, it's not going to accomplish much.",2014,How 'DevOps' Is Killing The Developer
choseph,2,"for us, the role rotates.  it is basically the on-call dev for a week at a time to ensure support cycles and everyone supports what they built so they are improving the active system while learning what is essential in the vnext to attack the root of the issues or speed up time to resolution.",2014,How 'DevOps' Is Killing The Developer
breddy,91,"Dev manager @ Red Hat here, and I agree with this guy.",2014,How 'DevOps' Is Killing The Developer
ShadowmansShadow,41,"Ex-Microsoft, ex-Red Hat, now Rackspace DevOps and I agree with the two guys above here. ",2014,How 'DevOps' Is Killing The Developer
Underbyte,17,Looks like I need to message some people some resumés. /s,2014,How 'DevOps' Is Killing The Developer
sdhillon,2,"Ex-Microsoft, agree with all of the people here.",2014,How 'DevOps' Is Killing The Developer
piratemurray,2,"IBMer here agree with the comments above. This guy clearly misses the point of DevOps. Sadly so do a lot at IBM but that's changing. I hate his line that developers can do everything but a QA person can't and that's why they are at the top.... Or something similar, I'm paraphrasing. Such a poor attitude to take. 

Edit: A word. ",2014,How 'DevOps' Is Killing The Developer
Deleted Account,2,[deleted],2014,How 'DevOps' Is Killing The Developer
piratemurray,2,I don't disagree with you there. ,2014,How 'DevOps' Is Killing The Developer
Agent_03,3,"+1ing -- Dev @ Red Hat, and this is the model I aim for.  Let the software handle everything it can, and everything I build aims is aware of the context it will run in.  And when something goes wrong, I'll be online right alongside Ops to help out.",2014,How 'DevOps' Is Killing The Developer
Savet,15,You can't.  He's the enemy.,2014,How 'DevOps' Is Killing The Developer
prepend,9,"Really, it actually seems like Microsoft and RedHat are pretty much allies. ",2014,How 'DevOps' Is Killing The Developer
tamrix,7,Then who is google? ,2014,How 'DevOps' Is Killing The Developer
prepend,5,Google is IBM.,2014,How 'DevOps' Is Killing The Developer
sittingaround,4,Then who is IBM?,2014,How 'DevOps' Is Killing The Developer
Deleted Account,12,Microsoft,2014,How 'DevOps' Is Killing The Developer
bluehands,2,Intel.,2014,How 'DevOps' Is Killing The Developer
Zaemz,1,Xerox,2014,How 'DevOps' Is Killing The Developer
makis,-2,your mom,2014,How 'DevOps' Is Killing The Developer
pilas2000,0,s so fat,2014,How 'DevOps' Is Killing The Developer
umilmi81,1,"Red Hat is still a thing?
",2014,How 'DevOps' Is Killing The Developer
breddy,2,More than ever. Not sure why you think it's not?,2014,How 'DevOps' Is Killing The Developer
Chryton,0,Raleigh?,2014,How 'DevOps' Is Killing The Developer
breddy,1,Formerly; now remote in FL.,2014,How 'DevOps' Is Killing The Developer
Chryton,2,Damn! Greensboro here. I have a friend who is an ex-Red Hat employee. She loved it.,2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,Tower resident here!,2014,How 'DevOps' Is Killing The Developer
mandlar,1,Hello fellow North Carolinian! /wave from Winston.,2014,How 'DevOps' Is Killing The Developer
interbutt,12,"NoOps still requires people who are operations trained however. You're going to want an operations engineer/architect to design your systems in a way that is going to survive an outage. You're going to need someone to setup your network switches. And you'll still need people to move new hardware in and bad hardware out. If you're 100% in the public cloud you don't need the last two, but the first is always needed. What you are really trying to do is get rid of the first tier 24/7 techs, and on-call sysadmins that are typical in an ops organization. I think this is why it's not called NoOps anymore. The skills are still needed, we just needed them in a different way than traditional operations.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,5,"Actually, we have developers who set up switches - by software. Not operations engineers. You can't set up tens of thousands switches by hand. And developers are most certainly the people who design the software systems to survive outages.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,14,"If you're setting up switches, that's operations.  It doesn't matter if the custodian, a developer, Macho Man Randy Savage, or software is doing it.  Software driven ops is not NoOps.  You're confusing ""operations done correctly"" with ""noops"".",2014,How 'DevOps' Is Killing The Developer
spif,6,"I actually had this same argument with Adrian Cockcroft on Twitter a while back. It's a semantics thing. People were thinking DevOps meant that you have developers and traditional sysadmins on the same team. Obviously that's not what DevOps is but it had become the meaning a lot of people assumed. So the people who coined NoOps were trying to differentiate from that. Of course it sounds stupid when you think about the obvious connotation because it can't mean there are no operations tasks that occur in the process of having your software run. That's literally impossible. But that's not what they mean either. That's why /u/solyanik said ""which is hereabouts known as DevOps.""",2014,How 'DevOps' Is Killing The Developer
xiongchiamiov,1,See also: https://gist.github.com/jallspaw/2140086,2014,How 'DevOps' Is Killing The Developer
runvnc,9,"I agree with you but the last line was unfair and inaccurate.  The author if the article makes a valid point because in many business which aren't like Google or Microsoft which don't have resources, DevOps has been used as an excuse to overwork and expect too much from small teams who could use engineering help for ops but can't get it.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,93,[deleted],2014,How 'DevOps' Is Killing The Developer
Deleted Account,136,He works at Microsoft and his keyboard will explode if he types out Google,2014,How 'DevOps' Is Killing The Developer
SanityInAnarchy,56,Don't you mean MSFT?,2014,How 'DevOps' Is Killing The Developer
mweathr,18,You must work at GOOG.,2014,How 'DevOps' Is Killing The Developer
ggtsu_00,14,"He probably will also refer to Apple as ""fruit"".",2014,How 'DevOps' Is Killing The Developer
Deleted Account,0,APL,2014,How 'DevOps' Is Killing The Developer
nobody_from_nowhere,9,That's a language. AAPL,2014,How 'DevOps' Is Killing The Developer
steakknife,1,AAPL,2014,How 'DevOps' Is Killing The Developer
Deleted Account,34,[deleted],2014,How 'DevOps' Is Killing The Developer
Deleted Account,22,I'm beginning to think hipster is the most overloaded word used on the internet.,2014,How 'DevOps' Is Killing The Developer
TheChiefRedditor,1,I remember when it didn't used to be...I was using the word hipster on the internet way before it became so 'cool.',2014,How 'DevOps' Is Killing The Developer
dont_get_it,2,Did ya come up with that gag yourself?,2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,LOL,2014,How 'DevOps' Is Killing The Developer
choseph,0,only a hipster would think that.,2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"Glorius, lol. I wish I had money to give you gold.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,30,"It's not really 'hipsterism' for programmers to shorten things. It's like that old joke.

""Leave it to programmers to shorten 'the year 2000 issue' to 'y2k bug'. It's that kind of thinking that got us in trouble in the first place!""",2014,How 'DevOps' Is Killing The Developer
crunchydiodes,2,The hipster part is where people refer to companies as their stock tickers with the implication that they're interested in the value of their options.,2014,How 'DevOps' Is Killing The Developer
alex_w,1,Would be more traditional to just omit the vowels: ggl and mcrsft. Works better for some names than others...,2014,How 'DevOps' Is Killing The Developer
Madd0g,0,but you need to have shift pressed for four letters... hmm... that's more effort,2014,How 'DevOps' Is Killing The Developer
MB_Derpington,18,"It's not really for no reason, it's Google's stock ticker symbol.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,17,He didn't mention working for MSFT...,2014,How 'DevOps' Is Killing The Developer
Deleted Account,12,[deleted],2014,How 'DevOps' Is Killing The Developer
LockeWatts,3,Why do you care so much? People refer to Microsoft as MSFT as well. It's just a thing people who pay attention to the market do.,2014,How 'DevOps' Is Killing The Developer
smurfhater,18,I write MSFT and AMZN just to save the characters - habit from reading financial news in the morning I guess...,2014,How 'DevOps' Is Killing The Developer
Deleted Account,10,[deleted],2014,How 'DevOps' Is Killing The Developer
tamrix,4,I'm going to start calling google 'The GOOG'. ,2014,How 'DevOps' Is Killing The Developer
loup-vaillant,1,"Apparently, he uses exactly 4 capital letters to describe most big companies: I have seen MSFT, AMZN, and GOOG in this thread. Probably a corporate habit.",2014,How 'DevOps' Is Killing The Developer
nashef,3,"He only has non-voting shares, otherwise he'd write GOOGL.",2014,How 'DevOps' Is Killing The Developer
pilas2000,1,What a plebe.,2014,How 'DevOps' Is Killing The Developer
fullouterjoin,4,Motivate purely by money.,2014,How 'DevOps' Is Killing The Developer
Deleted Account,6,WHY DO YOU CAAAAAAAAAAAAAAARE,2014,How 'DevOps' Is Killing The Developer
JNighthawk,1,"All caps, no punctuation, but a good point...

I'm conflicted whether you deserve an upvote or downvote.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,4,I RESPECT YOUR HESITATIOOOONNNNNN,2014,How 'DevOps' Is Killing The Developer
tipu,3,"FWIW, GOOG is their ticker symbol thing",2014,How 'DevOps' Is Killing The Developer
johnnybgoode,2,You don't say???,2014,How 'DevOps' Is Killing The Developer
Deleted Account,0,[deleted],2014,How 'DevOps' Is Killing The Developer
Deleted Account,6,[deleted],2014,How 'DevOps' Is Killing The Developer
Sarah_Connor,8,I've been in silicon valley IT for 20 years - in many roles... I've seen this type of typing a lot.,2014,How 'DevOps' Is Killing The Developer
Sarah_Connor,7,"You've never seen anyone type ""msft"" or even ""m$ft"" in your years in the tech sector?

Same thing -- although, in ~2000 when that was common it was an insult to msft... now with goog or the goog (which can also refer to the actual google campus) - is just short hand for google.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,[deleted],2014,How 'DevOps' Is Killing The Developer
Deleted Account,-4,[deleted],2014,How 'DevOps' Is Killing The Developer
Deleted Account,6,[deleted],2014,How 'DevOps' Is Killing The Developer
Sarah_Connor,1,Move on... read the message - don't get hung up on one word...,2014,How 'DevOps' Is Killing The Developer
Deleted Account,-5,[deleted],2014,How 'DevOps' Is Killing The Developer
Sarah_Connor,8,"Its not ""Hipster""

using such statements in email and IRC has dated back to the mid 90s... its been in continuous use. You just havent had much exposure to it - and the fact that you're calling it ""ridiculous"" and ""hipster"" reveals some degree of being hung-up on it... 

I say move on, not because I am arguing against your ""point"" - but because I have given you as much history about the use of terms like msft and goog as I can and it is fairly pointless to berate it any further. You dont like the term... I get that...

You admitted you hadn't seen it used much.... the way that has been used has been almost 2 decades...",2014,How 'DevOps' Is Killing The Developer
Deleted Account,-3,[deleted],2014,How 'DevOps' Is Killing The Developer
Sarah_Connor,4,"haha - you're an ass.

I put ""point"" in quotes - because you didnt make any point. Other than your personal allergy to the term goog. You asked why someone would use it - a question, and I responded.

Maybe you'll find solace in more piercings. :)

Here is my best effort at a swedish greeting, for give my spelling - I am not in sweden and therefore your language doesn't affect my personal life:

Hal kjeften slynna ful hund und et min smegma!

",2014,How 'DevOps' Is Killing The Developer
Deleted Account,2,[deleted],2014,How 'DevOps' Is Killing The Developer
Sarah_Connor,3,"(when I was backpacking through SE asia for 6 months - I made a ton of swedish friends, still friends with them today... The above was what they taught me was ""A proper swedish greeting when you meet the mother of the girl you are dating"" -- I did not mean it with malice - it really is the only thing I know how to (sort-of phonetically) say in swedish.)

Cheers - if you're ever in SF, ping me and we can go have a beer. -- Bonus - my office is in the mission, and there are plenty of hipsters to scorn at, although I am not one.",2014,How 'DevOps' Is Killing The Developer
notmynothername,3,"Smegma is an english word too. Don't GOOG it if you are at work.
",2014,How 'DevOps' Is Killing The Developer
Deleted Account,2,[deleted],2014,How 'DevOps' Is Killing The Developer
cYzzie,-1,its their NASDAQ shortcode,2014,How 'DevOps' Is Killing The Developer
Deleted Account,-1,"I write MSFT interchangeably with Microsoft, too. Just a shorthand. Why not?",2014,How 'DevOps' Is Killing The Developer
lixx0115,21,"Dev manager, that is the problem. I work for Microsoft as DEV. NoOps model sucks. There is why, I can write more code than I can support (on call 24x7 one week out of three sucks). Right now I cannot take on more works because the I am out of bandwidth to support them. Also,  not all code in microsoft were well written and easily maintained. We have to maintain a lot of legacy system which were never design for NoOps but was forced to maintain under NoOps model. Yes, new system we write are easy to maintain but in any reasonably sized company you going to have lot of old system in place. 

P.S , I don't know any Dev in microsoft that loves NoOp. Dev Manager, who never get on support call at night, all seems love it. ",2014,How 'DevOps' Is Killing The Developer
Deleted Account,4,"> I can write more code than I can support

I see. Would you also write more code if you didn't have to test it? Just check it in - you'd be very efficient. Let someone else fix your bugs/build breaks.

>  Also, not all code in microsoft were well written and easily maintained.

And that's where DevOps shines. You write shit - YOU die maintaining it, rather than wasting company's money on hiring manual laborers to do it for you. Don't like it? Either fix it, or get out. Can't recommend Google or Amazon to you, it's the same there (Amazon is worse) - but try Apple. I've heard it's a fantastic place to work :-).

> I don't know any Dev in microsoft that loves NoOp. Dev Manager, who never get on support call at night, all seems love it. 

This just means you don't know many devs. I work on Autopilot, look it up. On our team, the rotation was until very recently was ONLY done by managers - dev managers, including myself, and dev leads. No one below Principal. Just recently we opened it to other senior devs and some SDE IIs - so many people wanted to join that we actually booted dev managers to free up some space. Still, I do about half of deployments myself.

You know why other devs wanted in? Doing oncall allows people understand deeply how software runs outside their immediate areas. I actually love doing oncall, I asked to keep myself on rotation, but they kicked me off anyway.
",2014,How 'DevOps' Is Killing The Developer
Deleted Account,18,"> You write shit - YOU die maintaining it

No, someone else writes shit, quits the company, and the dev manager assigns someone else to kill themselves maintaining the pile.  The dev manager says some bullshit about how good devops is (for him/her) while leaving at 5 everyday.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,4,Did you read the rest of what I wrote? In our team that dev manager is the first time to wake up at night when things go wrong. That's the whole reason we put the senior people on rotation - because they are the ones with the most pull to fix the crappy code.,2014,How 'DevOps' Is Killing The Developer
DrMantisTobboggan,3,"We're taking a similar approach in a much smaller company than MS (systems owned by a department of about 60 in a company of around 1000 employees). Dev managers, the head of our department and even the CIO and CTO occasionally have been rotating through being the first contact for alerts raised by systems in our part of the business. We've opened it up to anyone else who wants to do it now but having the people with most power to make changes go first has increased the priority of minimizing any pain points in maintaining our older systems.",2014,How 'DevOps' Is Killing The Developer
lixx0115,1,"yep, this is exactly how it goes. Lots of things look great from Management point of view  but sucks to be the Dev that get assigned to maintain other people stuff.",2014,How 'DevOps' Is Killing The Developer
turbov21,3,"> You write shit - YOU die maintaining it

So by your definition ""adding features,"" ""fixing bugs testing didn't uncover,"" and ""writing documentation"" falls outside the realm of maintenance. That's good to know, I'll just stop doing those things.",2014,How 'DevOps' Is Killing The Developer
lixx0115,2,"I never seen a dev manager on a real call at night. In fact, out of all the night time call I got, not a single dev manager got involved. Dev manager only get involved next morning.  The Dev manager are the third backup. Call go like this, dev gets called, if dev does not answer, dev lead gets called, if dev lead dose not answer, then and only then Dev manager get the call.
Also, I don't know where you work, but in the real world Dev maintain old code written by others. I don't know any place where if Dev leaves, all his code get taken out a production and replaced with new one. 
As you point of people love to be oncall, that is just stupid. Who want to be waking up at 3 am ?  Your Dev might lie to you about how they ""love"" to be on call to fish out a promotion... .",2014,How 'DevOps' Is Killing The Developer
Deleted Account,2,"> I never seen a dev manager on a real call at night.

You need to get out more. I've been taking calls, nights, weekends, whenever. So do other dev managers. And yes, as a PRIMARY.

And if you look at the support aliases, you will see managers and leads answering questions all night long.

>  I don't know where you work, but in the real world Dev maintain old code written by others.

Where I work all code gets refactored until it is supportable. I allocate time for that, because ***I*** don't like to get up at 3am.

> As you point of people love to be oncall, that is just stupid.

You'll find that it is less stupid than you think after spending 5 years at level 60.",2014,How 'DevOps' Is Killing The Developer
gruuby,1,So you mean that you still need people to wake up at night on regular basis.  SomeOp I guess.,2014,How 'DevOps' Is Killing The Developer
lixx0115,0,"OOOKey.. personal attack now.. OK, you win internet today, I am here to talk tech. ",2014,How 'DevOps' Is Killing The Developer
Gotebe,0,"I feel for you, but you seem to be mostly hurt by being on call for stuff you likely know squat about. What do you propose to do about it? Not support it at all?",2014,How 'DevOps' Is Killing The Developer
lixx0115,6,"Support it as it designed, with Operation team. Lots of people seems to be confusing DevOp (I think it is a good thing) with NoOp (don't think that is good at all). There is the thing, I make about 150 k per year as a dev, and I don't know much about network driver and disc RAID configuration. Use me as Operation (which I am no way qualify for) and take away my time as DEV (something I love and passion about)  make no sense to me. I would never pass a interview for Operation and no one should hire me as one, but in the NoOp world I get called most  the time for Disc failure and network issue which I am in no position to help. 
Last few call I got :
 Raid Controller failed
 DNS died ( you might heard this in the news)
 Network connection went crazy (this happens a lot)
 Firewall incorrectly block ports
 Rogue process took up 90% CPU
 Someone delete something they should not.
 Machine is rebooted for unknown reason 
 Password for service expired

 ",2014,How 'DevOps' Is Killing The Developer
Deleted Account,2,"You seem to misunderstand the very basics of cloud software development. Yes, RAID will die, services will restart, computers will fail. In a system with 1 million servers a machine will die every 7 minutes on average. Your software HAS to tolerate this without the need for manual intervention. The whole reason you get called for ridiculous stuff like that is because your code is written to rely on ops to manually correct problems. Well, you don't have this luxury any more. Fix the code, or see the product go the way any shitty codebases deserve to go.",2014,How 'DevOps' Is Killing The Developer
lixx0115,5,"Do you READ????
I don't only maintain my CODE!!!
and not everything is on the cloud! 15 years old service still need to be maintained. ",2014,How 'DevOps' Is Killing The Developer
Deleted Account,2,"How old is Gmail? Bing?

All these systems were not born in perfect, cloud ready shape. The project I am on right now started as a collection of perl scripts years 10 years ago.

Every project will have a share of poorly written code. The reason we put developers on maintaining it is because it forces them to rewrite it. If your management does not want to invest in reengineering, that's the problem of your team, and not of the NoOps framework.",2014,How 'DevOps' Is Killing The Developer
lixx0115,1,"Not every project has the business justification to be reengineered. A lot old system are in place to support legacy requirement that will be phased out someday. They need to be also need to be maintained as it is. Not every company has the money or resource to re-design and re-coded to fit in some new framwork. Yes, given the perfect condition NoOp will work. For most Dev out there, very rarely you get time or support or jusitification to do engineering work for the sake of engineering.  NoOp does not work for my Org. NoOp won't works for a lot of company out there.  If you want to give NoOp a try, you should ask yourself: 1. is your codebase designed to be NoOp? 2. Are you ready to spend time and resource to rewrite those codebase that are not ready? 
",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"Old systems that are used to support legacy requirements tend to not have a lot of devs associated with them anyway, especially if they need to be ""maintained as it is"". You, however, started with the declaration that you can write a lot more code instead of supporting your code in production. If you write a lot of code, it should be CORRECT code - scalable, fault tolerant, and not require human operators.

>  For most Dev out there, very rarely you get time or support or jusitification to do engineering work for the sake of engineering.

You are making sweeping generalizations. How many years have you worked at Microsoft? In how many teams? You're contesting things that even very junior engineers in Bing, for example, ""get"", so I am fairly sure you are not speaking from experience.

> NoOp does not work for my Org.

And what's your org? NoOps works just fine for Bing, Google, Amazon, and tons of other cloud companies. None of these companies had code bases ""designed"" for NoOps, but all of them decided that constant reengineering for scalability and fault tolerance makes financial sense.

For legacy IT projects - sure, NoOps might not make sense. Than again, many of them would run just fine under a NoDev model.",2014,How 'DevOps' Is Killing The Developer
lixx0115,1,"Ok, this is becoming more and more a person attack from your end. I don't wish to be trolled by some random manager type who does not get why waking up at 3 am for some 15 years old code I did not write is bad. Imply that I am junior (which I am not) and has no experience (I do) is just immature. Also, bing has Operation team. look it up under Service Engineer. Google also has operation team, I personally know couple people that does operation in Google. ",2014,How 'DevOps' Is Killing The Developer
Deleted Account,2,"You seem to know very little about how either Bing or Google operates. It's a shame, because you hold strong opinions about the area where you have essentially no experience.

I've worked in both places, and, unlike you, know how they work first hand. While Bing does have an operations team, they are not the people who actually operate the software, and I have never seen an operations person there actually make a change to the environment. Google SRE is also a completely different role. They have coding interviews for SRE jobs. Plus, only very large teams get SREs, and very few of them. And Google actually pays pretty big bonuses to software devs that go and work in SRE roles for a few months.",2014,How 'DevOps' Is Killing The Developer
lixx0115,1,"Ok, maybe we are not arguing about the same thing. To me Operation team is: DBA, Network expert, Hardware expert, security expert. Those people have the knowledge I don't have, and I believe we should work with them instead of pretend to know how to do their job.  Your operation seems to be tech support and ""software operator"".  I agree that we don't need someone else to  deploy and run dev's code.  However, I think we should not believe DEV = DBA or DEV = network expert or DEV = hardware expert.  I don't mind get call for the breaking of my code.  I DON'T want to be responsible for server and network health.  I am responsible for code defect. 
Also, new code I do design defensive coding , new service designed to work on AP do not break often due to fault domain and good design without a single point of failure. Old code however, does not. Old code are much more sensitive to short network issue and Disk failure ( all data must served out on a single machine). 
",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"Here's how it works in Bing (and GOOG, and AMZN).

We have a hardware team that owns hardware. They make sure that a defined in SLA %% of hardware boxes are up and running for every team at any given point in time. The customer teams need to understand that %% is not 100 explicitly, and make sure that their apps can survive a defined %% of their boxes to be down.

That team consists exclusively of developers. Their dev manager came from Office, the rest of the devs from other dev teams inside or outside Microsoft. In addition to being programmers, they acquired extra set of expertise in hardware - they know how to flush BIOS (programmatically!), determine that the disk is failing (programmatically!), and RMA the machines (programmatically!). 

They also are good at debugging hardware failures (by hand), and translating these failures for future (programmatic!) actions by the system. They participate in defining the hardware which vendors then build for us. When hardware tends to misbehave, these devs wake up and make sure that it behaves again.

We a have networking team that consists of devs who also understand the network. They are otherwise normal regular devs. Their dev manager came from Microsoft Research. They own the network architecture, configuring routers (programmatically!), monitoring the network health (programmatically!), RMA the dead hardware (programmatically!), etc.

They are also good at debugging network failures (by hand), and translating these failures for future (programmatic!) actions by the system. They select network hardware that we buy. When network misbehaves, these devs wake up and make sure that it behaves again.

We have a system team. I am the dev manager for that team. I used to work on operating systems (NT, Windows CE), and cloud apps (Gmail, Google Voice, Google Maps). We have a bunch of regular normal devs that came all over MSFT, and outside. Our software sits on top of network and hardware. When it misbehaves, we (senior members of the team, including, until 2 months ago, myself) wake up. We'd debug the problem. Most of the time we would isolate the problem to our own software, and fix it. Sometimes we would isolate it to hardware or network. If hardware or network is in fact below SLA (losing 1 server IS NOT), we would wake up devs on these two teams. If hardware or network is within SLA, but our s/w cannot tolerate loss of hardware or %% of network capacity, we would fix our software.

We have customers (Bing, Xbox). They are normal regular devs who write cloud apps. When their app misbehaves, they wake up. They typically isolate the problem to their own s/w, and fix it. Sometimes, it isolates to loss of hardware capacity, network capacity, or Autopilot system services. Then they wake up us (including myself, the dev mgrs. for network or hardware - whoever happens to be on call). The very first thing we look at if whether our service is in fact under SLA. Again, losing a few servers our of a hundred is not. Losing a switch is not. If we are not violating SLA, we'd berate them for waking us up, tell them to fix their own software, and go right back to sleep.

And so it goes.

Notice that in this model
1) everyone is debugging their own code, and
2) some DEV = network expert, some DEV = hardware expert, and we discourage (prohibit!) any database uses that might require a DBA.

HTH :-).",2014,How 'DevOps' Is Killing The Developer
elperroborrachotoo,3,"It's great to read your reply, but honestly: you are giving a sales talk, you are not adressing any of the bloggers concerns, and *two-bit online pundit* is the fast lane to the plonk list. 

----

It seems to me that the two of you are describing two extremes: Jeff Knupp describes the DevOps dev as the ideal ""can do it all, at the same time, broom between the asscheeks to clean the floors"" employees, you describe the DevOps dev as ""a coder who knows what a database is"". 

",2014,How 'DevOps' Is Killing The Developer
FarkWeasel,2,">In short, dev ops means that all problems are solved by software, and by engineers  

Isn't that the essence of distinguishing between problem management and incident management?

",2014,How 'DevOps' Is Killing The Developer
Deleted Account,3,I read this comment formatted as a powerpoint presentation.,2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"One small distinction here- you're conflating the work performed with the people doing it, and you're confusing engineering and operations.  Engineering is not just about creation, it's about getting things done.  
There are not ""ops"" people and ""dev"" people- those are both just bodies of work that need done.  If you've staffed correctly, most of your staff can do most of the work - with deeper knowledge in one side or the other.  The deeper knowledge is useful sometimes, but not every day.
This is a very common mistake I've seen around Microsoft- believing that because you've granted someone a title of ""developer"" and put them in charge of developing a systems management or systems automation task, they are not doing operations.  It is inherent in a ""service delivery"" model that ALL of your staff are doing operations work.  Their title or ability is irrelevant.  Doing operations well is synonymous with running a service well.  Everybody's on call, everybody understands the runstate of the product, and everybody solves their problems with code or other engineering processes.  The titles only really get divisive when people start to believe that doing ""ops"" puts them down the mythical totem pole in this article.  That ego component is extremely toxic and high risk in service delivery, and 20th century titles aren't helping.",2014,How 'DevOps' Is Killing The Developer
Hexodam,1,"Explains the fantastic direction Microsoft has taken lately. 

Powershell, puppet, chef, salt, redis and more. ",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"> Dev manager [...] as opposed to ops, where I have no clue

Yep. ""I know this stuff, it's important, I don't know that stuff so clearly it must be pointless"".

You're a dev manager, all right, and probably a damned good developer, too.",2014,How 'DevOps' Is Killing The Developer
spif,1,You are like an oasis of sanity in this thread. Thank you.,2014,How 'DevOps' Is Killing The Developer
sdevoid,1,">They know how much RAM and CPU cores are in their servers, and so they can target the right hardware, and not a mythical 2GB box.

Except for when they don't: [Quasar: Resource-Efficient and QoS-Aware Cluster Management](http://www.stanford.edu/~cdel/2014.asplos.quasar.pdf). I love seeing the graphs in [this presentation](https://www.usenix.org/cluster-management-google) where all GOOG employees love the number 32, except for when the application runs slow there, so how about 100? No...1000?",2014,How 'DevOps' Is Killing The Developer
spif,5,"Wait are you saying Google employees are fallible? Well shit then I guess DevOps is defunct, let's go back to doing everything manually guys. Thanks for setting us straight man.",2014,How 'DevOps' Is Killing The Developer
sdevoid,1,"Just highlighting another case where automation and machine learning perform better than human decision-making. 
> In short, dev ops means that all problems are solved by software, and by engineers

""So quite the opposite of saying ""DevOps is defunct"", actually.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,-10,[deleted],2014,How 'DevOps' Is Killing The Developer
smurfhater,16,"Are you kidding?  I don't think anyone has ever suggested we go from developer workstation straight into production.

DevOps is generally thought to be part of the broader ""Continuous delivery"" concept.  In practice that usually involves one or more ""staging"" or lab environments that are congruent to production.  That's where deployments and tests are automated, so you don't have to worry about an extra library in the path, or a different OS patch between environments.",2014,How 'DevOps' Is Killing The Developer
tubbo,8,bro do u even staging server,2014,How 'DevOps' Is Killing The Developer
Deleted Account,3,"> But, hey, let's also give them direct administrative access on production customer databases because ""that's what defense in-depth means,"" apparently, and it helps us to understand the software better. Seriously?

Seriously :-). For example, we have a system that allows us debugging remotely in production, with full Visual Studio experience.

You can do this securely. For instance, the privilege level of the dev can be elevated ""just in time"" for the session. Depending on the security level of the system, it can be done automatically, or after various levels of approvals (peer dev; manager; a set of dedicated access owners), the channel will open (only for VS remote debugging port), the debug session would happen, and the machine would be wiped and reimaged immediately afterwards.

And yes, defense in depth means that your system is hardened from the inside, rather than firewalled, because if this is not the case, when the break-in happens (when, not if), the disaster will only be worse.",2014,How 'DevOps' Is Killing The Developer
dnew,11,"Fun fact: the guys at the bottom of the totem pole are the ancestors: the most important people, and the ones supporting everyone else.  If you're at the bottom of the totem pole, you're the best one there.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,114,[deleted],2014,How 'DevOps' Is Killing The Developer
jack104,89,"I don't know how prevelant they are but I am one of these Jack Of All trades developers.  I work for a company of 75 people, 2 of whom are IT guys.  My boss handles most of the systems, networking and database issues, I get fed a project and I produce a workable solution.  At first I was good at this and I enjoyed the flexibility that it gave me; having control over everything.  But that didn't last long and I burnt out quickly.  When you're trying to successfully implement, test and deploy a 30K line solution that involved you configuring a server to run it, setting up test and production variants, making sure your SQL DB objects are correct, etc. etc. etc.  And then throw in there having a noisy workspace because there's no more offices for you and your phone ringing every 20 minutes with someone who has an issue requires you dropping everything and fixing it.  Yea, that's a recipe for a burn out.  ",2014,How 'DevOps' Is Killing The Developer
strattonbrazil,12,"I think it goes both ways.  

Bad situation I was in: I was on a team writing an API that would be used by all developers at studio.  The ""asset"" team was worried about us handling assets since they did practically nothing, so they wrote a really crappy API we had to go through.  Their crappy API was built on an Oracle database managed by the database team.  At one point I filed a ticket for a particular call being too slow.  They in turn filed a ticket for the database team.  From the database team's perspective the ticket said, ""100% CPU usage"" with very little info on what we were actually doing.  I quickly realized after a couple weeks that ticket would never be resolved.  It was a horrible topology and made everything slow.  The mantra there was everyone had to go through some other team and everything had to be approved by the owner.  

Good situation: At my current job every team almost acts like a service, but in a good way.  Devops in particular is an enabler.  They write tools for the cloud instances, but I set up my own instances.  They write tools for throwing up a redundant sql service with a DNS endpoint.  I use it.  I've been able to write huge swaths of tools without needing any kind of approval from devops.  They have just answered any questions I've had along the way.  Often when I had a concern they would point me to some existing tool (with documentation on the wiki) on how to overcome it.  My team owns the stack for everything we write unless we make other arrangements.  I've thrown up a web server and database on separate internal domains in a few minutes.  It's incredibly refreshing.  ",2014,How 'DevOps' Is Killing The Developer
Deleted Account,25,"I wonder if it's also destroying entry-level positions? A lot of people told me to get started in the testing area of software as a new programmer. However, those positions are pretty much evaporating. Why hire testers when you can just add it onto your current programmers! ",2014,How 'DevOps' Is Killing The Developer
mahacctissoawsum,23,"> Why hire testers when you can just add it onto your current programmers! 

They cost more, but you get more. It's a trade-off. Also, you might make a disgruntled programmer if you force him to do nothing but test.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,10,[deleted],2014,How 'DevOps' Is Killing The Developer
Deleted Account,9,[deleted],2014,How 'DevOps' Is Killing The Developer
umilmi81,13,"I'm a developer at a company with a dedicated QA team.  Based on the bugs we find in production I assume they only run 60% of the tests too, so you were doing fine...",2014,How 'DevOps' Is Killing The Developer
free_at_last,1,"Why? Unless it's you as a sole developer you work as a team trying to get a product shippable.

The team is responsible for having a fully tested, fully working, relatively bug-less product. If you can't be bothered to test, what hope does that give the product?",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"Just because I hate it doesn't mean I don't do it. The problem is you're often a team of one and testing your own programs is rarely effective.

Testing is just not a very rewarding experience for me, you're not looking for a way to make things work, which to me is the interesting part of programming. Creating something, making the parts fit together, etc.

Of course testing is a necessary thing, but you're still allowed to hate it. I think cleaning the toilet is necessary, but I still hate doing it.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,-11,[deleted],2014,How 'DevOps' Is Killing The Developer
ibsulon,11,"Let me guess... you've never picked up someone else's code before that had a good test suite.

Let me give you an example of when tests made a difference. I was working on a piece of the system that I only knew a little bit about, but had a good set of unit tests and a handful of integration tests against an in-memory database. I wrote a failing test, changed the code to make the test pass, and noticed that another test failed.

It turned out that the code was (inexplicably) used in another module. I'm pro code-reuse, but it was in the wrong area. So, I created a new class, added the appropriate unit tests, and updated the code in both areas to use the new class. The code was cleaner than before, and I knew that before I called it done, I had to manually test a second unrelated area just in case.

The value of the test is rarely at the time of writing the test. It is about making sure the code *stays* working.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,2,[deleted],2014,How 'DevOps' Is Killing The Developer
ibsulon,5,"On the other hand, what I see with projects lacking a good automated test base (test-driven or otherwise) is that people are afraid to touch parts of the code because they're afraid that it will break in unexpected ways. The comments are in various states of disrepair, and testing becomes a ""make change, exercise application for ten minutes to make sure you didn't break anything. Make next change, exercise application..."" 

And then QA finds three bugs with things you don't find are related until later. 

Tests don't mean that developer checking is obsolete; it also doesn't mean writing worthless tests to satisfy some manager. It means exercising the system in ways that can be systematically reproduced. ",2014,How 'DevOps' Is Killing The Developer
droogans,5,"Tests also serve as documentation. Your slick one liner, it turns out, ends up processing a much more bizarre set of inputs than you first thought.

So you break it out into a method, name it, and create tests that feed in all manner of input, demonstrating to others what they can expect going into this function, and it's output.",2014,How 'DevOps' Is Killing The Developer
s73v3r,1,"You described things that happen in shitty dev shops. And without unit tests, there would be a billion other things in the code base just waiting to cause an amazing meltdown as well. ",2014,How 'DevOps' Is Killing The Developer
Deleted Account,-9,[deleted],2014,How 'DevOps' Is Killing The Developer
Deleted Account,11,"Are you seriously taking this position, or posting trollbait? ",2014,How 'DevOps' Is Killing The Developer
ibsulon,5,"So don't write shitty tests.

Write good ones. 
",2014,How 'DevOps' Is Killing The Developer
sharpjs,7,"As one of those experts, yes, they have tremendous value. Thanks to TDD, I've had systems in production for years with zero defects over their entire lifetime. Automated testing also taught me better architectural habits.

But yeah, there are many, many people just going through the motions, just checking boxes.  They write bad tests that are worse than no tests, because they lull everyone else into a false sense of security.  Those tests also end up being fragile, making future changes more costly instead of less.

Automated testing is a discipline that, like many others in our industry, lies in that gray area between art and engineering.  There are great objective goals, but plenty of subjective ways to fail.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,[deleted],2014,How 'DevOps' Is Killing The Developer
Nooble,2,"Kent Beck: Test Driven Development.

Short, well written and covers the basics pretty nicely. Perhaps try Growing Object Oriented Software for a more thorough end-to-end approach.

Really there are no shortage of resources on TDD. There are talks, blog posts, books, example repositories, podcasts - you name it!

Best thing you can do is try it out. The Kent Beck book goes a long way to explaining why you're writing tests. A lot of beginners write tests that end up testing the wrong thing (or nothing at all). ",2014,How 'DevOps' Is Killing The Developer
droogans,1,"You may want to read up on the types of tests that QA will run manually, and work those into your tests.

For starters, negative tests are so commonly overlooked it's sad. They're really easy, too. Just manually test your app until you think to yourself ""it should not..."", and you're ready to start writing those as well.",2014,How 'DevOps' Is Killing The Developer
greg19735,3,"Working on a project for a client, a mock up is absolutely essential. As a web dev it's the difference between a nice workflow and completely frustration.

Does this page need a help button? The requirements don't list this button, but the rest have it. The approved mock up lets you work with a lot more confidence. Most importantly it's a kind of proof that you've met the requirements. None of the ""oh i thought it was implied"" BS.",2014,How 'DevOps' Is Killing The Developer
monkeycalculator,4,I think you're confusing a design mockup with a mock object. ,2014,How 'DevOps' Is Killing The Developer
BornInTheCCCP,7,"One costs more, but is able to automate the testing so will be replacing a handful of testers which make them cheaper.",2014,How 'DevOps' Is Killing The Developer
s73v3r,15,Automated testing is not a replacement for actual QA staff. ,2014,How 'DevOps' Is Killing The Developer
choseph,2,but it can reduce their headcount and let them focus on those things that are difficult to automate.,2014,How 'DevOps' Is Killing The Developer
BornInTheCCCP,-2,"See my response here:
https://pay.reddit.com/r/programming/comments/233to0/how_devops_is_killing_the_developer/cgtgdef",2014,How 'DevOps' Is Killing The Developer
s73v3r,1,Honestly? Was that response so long that you couldn't just put it here also?,2014,How 'DevOps' Is Killing The Developer
BornInTheCCCP,1,"Did not want to duplicate, and wanted to channel any responses to that thread.",2014,How 'DevOps' Is Killing The Developer
Dark_Crystal,6,"Automated testing is really good at producing software to pass the automated tests. Pair that up with some outsourcing and you get real shit software and nothing to show for your money. Automated testing is great for certain things, you want to run it on your CI builds, and/or nightly build, it should be run on any build first before further testing is done, run for anything to repetitive or time consuming (but have the results/data reviewed).",2014,How 'DevOps' Is Killing The Developer
bexamous,-1,"QA testing is a really good at producing software to pass the QA testing.

(edit) For anyone not getting it, the point is that it doesn't matter who or how testing is done.  The tests are what results in better software.  You can run good tests in automation and you can have QA waste their time with stupid tests.  In the end, from the set of good tests, some make sense to automate and others don't.  Everything you automate gets you results faster and cheaper as well as frees up QA's time to run other tests that cannot be, or are not yet, automated.",2014,How 'DevOps' Is Killing The Developer
BornInTheCCCP,-5,"See my response here:
https://pay.reddit.com/r/programming/comments/233to0/how_devops_is_killing_the_developer/cgtgdef",2014,How 'DevOps' Is Killing The Developer
wievid,2,"Automated testing isn't always the answer, though. This is one of the cases where the old adage applies nicely: cheap, fast, quality - pick two. ",2014,How 'DevOps' Is Killing The Developer
greg19735,2,"Can you really get cheap and quality though? More like, not expensive :P",2014,How 'DevOps' Is Killing The Developer
wievid,2,"I've got a few items being delivered from China that are very cheap and pretty good quality. Shipping takes four weeks, though.",2014,How 'DevOps' Is Killing The Developer
theavatare,1,"The problem that i see is that a lot of people don't really understand that there is a cost attached to every test suite.

A lot of items should be manually tested just because its cheaper.

I made a presentation on this but is in spanish :(",2014,How 'DevOps' Is Killing The Developer
BornInTheCCCP,-1,"You know that, I know that, but loads of people managing IT without IT knowledge see ""testing"" and ""automated testing"" think that it is the same thing.",2014,How 'DevOps' Is Killing The Developer
theavatare,5,"Testing is really not the same beast that it was 10 years ago if you are a programmer building a domain specific test framework its quite enjoyable.

",2014,How 'DevOps' Is Killing The Developer
BornInTheCCCP,16,"Automation is killing the entry-level positions. 5 years ago there were tons of jobs testing, which evaporated after more places improved automated testing. And that places that do not do automated testing do not hire testers.

Same with development, the bar is getting higher by the year. What is expected from ""Entry-Level"" positions is closer what was considered advanced positions due to the amount of knowledge required. So the only Entry in today's entry-level work is the pay. 
",2014,How 'DevOps' Is Killing The Developer
Deleted Account,29,[removed],2014,How 'DevOps' Is Killing The Developer
ITwitchToo,2,"I think it's also the fact that a lot of people get competent *before* their first position (either on their own or by education), so they don't necessarily *need* to start with ""junior"" or ""entry-level"" jobs. I mostly learned programming on my own and was hired directly into a senior developer position (where I also do ""DevOps"" and ""Ops"" stuff) after university.",2014,How 'DevOps' Is Killing The Developer
umilmi81,1,"> What is expected from ""Entry-Level"" positions is closer what was considered advanced positions due to the amount of knowledge required.

But you're more specialized.  15 years ago you would need to be an advanced developer to program for the web.  But that's because the web was new and you needed to be an experienced desktop developer to branch into the web.  Now you can be a novice web programmer who knows a lot more than a 20 year veteran who has never written a line of javascript in his life.

Now mobile is the new frontier.
",2014,How 'DevOps' Is Killing The Developer
chaosdude78,5,"We practice TDD at my current job but are planning to hire an additional QA person once we grow a bit bigger. TDD when done correctly helps developers solves problems better and prove their code works. However, dedicated QA people can help discover edge cases and make applications more stable in other environments. ",2014,How 'DevOps' Is Killing The Developer
mailto_devnull,1,"I can see that TDD would let developers prove their code works, but I think it might be a *little* hard to demonstrably prove that it helps developers solve problems better... ",2014,How 'DevOps' Is Killing The Developer
chaosdude78,3,"Testable code is code that was broken down into manageable chunks. Test driving helps a programmer take a birds-eye view of a problem and understand it before diving in. When writing tests it is important to understand use cases, input, output, and the new code's place in the scheme of the application. You can get these benefits in other ways as well, but TDD is a logical approach with many built-in benefits. ",2014,How 'DevOps' Is Killing The Developer
TheChiefRedditor,2,Sure go ahead and add system testing onto my plate...Well...what do you know about that...all the tests pass all the time! The code is perfect! Ship it!,2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"Haha yea. I mean, testing your code is something that should be done by every developer. But testing something for production is entirely different. ",2014,How 'DevOps' Is Killing The Developer
free_at_last,2,Your problem is thinking that QA should be your introduction to the IT world - it isn't. That's what is killing the testing roles at a junior level.,2014,How 'DevOps' Is Killing The Developer
greg19735,-1,"But now you should be able to QA software out of college. Maybe 20 years ago you'd need that experience, but most people now with a CS degree go in as an entry level dev. At least the ones I know..",2014,How 'DevOps' Is Killing The Developer
free_at_last,1,Not true in the slightest. QA is not some stepping stone and still requires experience.,2014,How 'DevOps' Is Killing The Developer
s73v3r,1,You didn't used to need a degree to QA software.,2014,How 'DevOps' Is Killing The Developer
greg19735,1,"Of course not. My main point was that most people don't come in with a CS degree and start on QA as a stepping stone. While QA experience is better than no QA experience, it's not really the same track. ",2014,How 'DevOps' Is Killing The Developer
Deleted Account,8,"And you can still only do one thing at a time.   You can have many hats, you cannot wear them simultaneously.   If you have 5 hats, for every problem you work on there are 4 problems not being worked on.",2014,How 'DevOps' Is Killing The Developer
jack104,1,But you can wear them in close sequence.  ,2014,How 'DevOps' Is Killing The Developer
thephotoman,12,No. You really can't.  Task switching eats time and productivity quality. ,2014,How 'DevOps' Is Killing The Developer
jack104,0,It absolutely does but those penalties are irrelevant to those of a non I.T. background.,2014,How 'DevOps' Is Killing The Developer
Deleted Account,6,Even hospital emergency waiting rooms full of patients and only 1 doctor?,2014,How 'DevOps' Is Killing The Developer
Deleted Account,4,No way!  Software problems are snowflakes and no other field could possibly have problems that are similar! /s,2014,How 'DevOps' Is Killing The Developer
learningram,1,Have the same issue. I can work on one thing at a time. Cannot instantly  switch between topics. Not sure if I am mentally lazy or something that is common.,2014,How 'DevOps' Is Killing The Developer
ants_a,1,"I think the hats metaphor is stretched thin here. Having wide expertise and experience means that you can adapt design in one area to make another area simpler. It's possible to do that with separate roles too, but all communication increases friction. It's better to know than to be able to talk to someone who knows.",2014,How 'DevOps' Is Killing The Developer
theavatare,7,"I'm a full stack developer and i love it. I'm one of those guys that gets really bored. Therefore the change worked pretty good for me.

I was at MS and kept doing lateral positions once i knew my domain.
",2014,How 'DevOps' Is Killing The Developer
Deleted Account,5,[deleted],2014,How 'DevOps' Is Killing The Developer
DjMonkeydo,5,"I agree this can be a benefit if you know what you are doing but the number of times I've had to unpick a mess of shit because a dev incorrectly assumed that they could handle the ops and sysadmin roles is unreal.

Big difference between making something work and doing it right.",2014,How 'DevOps' Is Killing The Developer
theavatare,1,That feels good for me is more like ohh i don't really want to code today. All right let me go open some ssl tunnels that we need or play with bamboo all day.,2014,How 'DevOps' Is Killing The Developer
jack104,2,"Good on ya man, I'm glad these positions work for people",2014,How 'DevOps' Is Killing The Developer
Deleted Account,6,"This.  I'm in an absolutely identical situation.   Multiple dev projects, process improvement projects for different functional groups, all while putting out 10-30 internal and external customer fires.   Plenty of burnout empathy to go around! ",2014,How 'DevOps' Is Killing The Developer
jack104,4,"Its capitalism man.  Why pay for two donkeys when you can get your one donkey to shoulder the load.  Then take  you have budget money for a new sales rep to make sales and to make your company KVIPs go up, the CEO and VPs validated and the investors happy......",2014,How 'DevOps' Is Killing The Developer
syn3rgyz,8,"I'm kind of on the same boat, the problem is I've been jack of all trades for the past 3 years since I've been out of college and I'm continuing to learn bit by bit of every thing instead of being a master of one.  I'm enjoying the flexibility but I'm so burnt out.  I'm trying to find a new job which focuses on development but everywhere says I don't have enough experience in development and that my expertise is too spread out and turns me down.",2014,How 'DevOps' Is Killing The Developer
jack104,9,"I feel ya brother.  Because I don't know what Agile is or I'm not completely competent with Git, I'm damaged goods.    
I just don't think they realize that guys like us have shouldered the weight of the world and still made it happen.  Imagine what we could do, how fast we could learn if we only had one portion of a system to focus on.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,[deleted],2014,How 'DevOps' Is Killing The Developer
droogans,1,"I like how you said the jack of all trades become masters. I like to think that my wide scope of knowledge makes learning new things an exercise in relating new knowledge to existing concepts, which just gets easier as I go. It starts slow, but I'm well equipped for new, difficult situations.",2014,How 'DevOps' Is Killing The Developer
Chryton,4,"This sounds like what I am stuck doing currently. I was hired as a developer, then got pushed to project management 60% of my time, then full project management, and now back to 90% development but still have to be running the legacy projects and be the company secretary. My boss talks about how at his old agency they would hire people in ""burnout"" positions as PMs/Coordinators yet fails to see he is doing the same thing to me...",2014,How 'DevOps' Is Killing The Developer
laprice,7,"It's not that he doesn't see what he's doing to you. He just doesn't care...

Most likely. ",2014,How 'DevOps' Is Killing The Developer
Chryton,2,"Oh, it is obvious to him to at least some extent and he tries to seem like he cares by saying ""I know you are working yourself to the nubs right now but...""",2014,How 'DevOps' Is Killing The Developer
pheliam,2,"That still doesn't help. I've been in that position before where the boss knows you have so much on your plate... like you're carrying a stack of plates around and trying to keep them from falling over.

But then he tosses another plate on top of the stack anyway and says this one needs priority. Then, while working on that a grumpy client calls him up asking about something that was due weeks ago and now that one is priority.

Or sometimes he would just forward me the email and expect me to liaise with a grumpy client, as a developer.",2014,How 'DevOps' Is Killing The Developer
Chryton,1,"I am almost always expected to liaise. Such a waste of time when I have to spend 2/9 hours a day juggling clients.

I like your analogy though I have always thought of it more as spinning plates on sticks. Eventually you aren't going to pay close enough attention to one and it will break, possibly breaking others in the process.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,Sounds like my job right now :D. ,2014,How 'DevOps' Is Killing The Developer
Dark_Crystal,7,"I also love the ""Any good developer can"" No, no they can't. Plenty of brilliant developers are absolutely terrible at one or more of the ""lower"" jobs. Not to mention that by simply human nature, a single ""DevOps"" is very prone to make mistakes, since there are no fresh eyes looking at what is going on. ",2014,How 'DevOps' Is Killing The Developer
Deleted Account,13,"I personally have had to do this. We transitioned from a Linux shop to a Windows one, and all of the sysadmin were upset about this. They refused to learn Windows. 

Then we used a particular NoSQL database because it suited our needs very well. None of the infrastructure people wanted to step up and be anything other than a MySQL DBA. Not to mention that before our team, there was no QA department. 

Wearing lots of hats sucks. I think eventually they laid off a bunch of the ""deployment engineers"", ""DBAs"" and ""sysadmin"" that didn't go along with the program. ",2014,How 'DevOps' Is Killing The Developer
Deleted Account,24,[deleted],2014,How 'DevOps' Is Killing The Developer
Deleted Account,3,"I'm not necessarily advocating for strict walled gardens, but I am advocating to let developers develop, and let admin administer. 

Developers do need to know not to write stupid SQL queries. But, should they really know the right way to index the databases, or what their physical structure should be? I'd say, ""probably not"". 

But, in my case, it was a huge instance of resistance to change. Ops is there to support the business, whatever that decision may be. If we need someone to run and support a NoSQL database, then that's what we need. Developers have tight deadlines for delivering code, and every time one has to be pulled away from that task, productivity slips. 

Also, this wasn't just an arbitrary change. Our clients requested this Windows-based approach, so we listened. Linux was being phased out entirely, so our staff needed to adapt. 

Now in the same token, there needs to be plenty of collaboration. Support staff needs to be involved sooner in the application life cycle so they know intimately how the app works. It shouldn't be just a ""code complete, throw binaries over wall"" scenario. ",2014,How 'DevOps' Is Killing The Developer
henk53,3,"> but I am advocating to let developers develop, and let admin administer.

Well agreed, but then admins shouldn't decide which version of say JBoss of WebSphere is installed on the base of that they have to learn how to administer it, while in reality there's nothing they understand about it and all they ever do is run a script to restart the damn thing, or maybe do some (bogus) configuration of things they think they understand but don't actually do.

I've seen places where admins/ops were hired to administer WebSphere and admins being good admins they were hiding all the configuration from the developers. So with did the developers do? The were shipping another application server inside the application that was deployed to WebSphere. So this entire WebSphere thing was reduced to just a dumb http connector and all real configuration was inside the embedded application server of which the admin knew nothing.

So these admins took great pride in having configured WebSphere and having configured its services (whatever that means), but the actual application running on the damn thing didn't use any of that configuration and didn't use any of those services.

Admin took also great pride in denying upgrade requests and boosting about not having upgraded the application server for years, therefor ensuring maximum stability.

In reality, upgrades of the ""real"" application server happened with pretty much every deploy of the application :O

You'd say that after some time some admin must have seen that none of the changes to the WebSphere config had ANY effect on the running of the application in question, but I don't think the dev team ever heard anything about it.

",2014,How 'DevOps' Is Killing The Developer
Deleted Account,2,"Yeah that just sounds like clueless admin, and it sounds like a security issue. That's a whole other issue, if you ask me. 

It's just my view that if you're going to have an Ops/Admin team, they should be there to support the solutions that the devs are supposed to deliver. Sitting there and saying, ""nuh-uh"" when we say we need a particular service or OS doesn't help anybody. 

In the case of WebSphere, it would be more my idea that developers would write apps that use it, but if there are performance or maintenance issues (either in dev, staging, or production), that's when you engage the Ops team to figure out how best to optimize the solution platform. ",2014,How 'DevOps' Is Killing The Developer
tending,9,"Phasing out Linux for Windows makes your customers sounds crazy in this day and age. Linux runs most phones, most embedded, most servers, and most super computers. Microsoft has been on a slow downward slide for years now.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,4,"You say that like it was my decision, or something. I just got hired because I had a particular set of skills. The customers we were working with had IT departmental requirements that everything run Windows 2k8 or higher, and it had to integrate into their domains. 

I just get paid to implement that. ",2014,How 'DevOps' Is Killing The Developer
SickZX6R,12,"From the context of this post, you (or anyone else in this thread) do not know nearly enough to give advice on the situation.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"I agree.  From my observations, most companies I see, especially new ones, steer away from windows.  The thing is most large systems come in two types.  Full linux, or mixed windows and linux.  If you want to go large with windows a good part of your stack(load balancers, NoSQL DBs, Caches, etc.) still depends on linux.  That gets expensive requires more admins.",2014,How 'DevOps' Is Killing The Developer
codergeek,-1,"Not really. We're moving in the same direction at $work. Six years ago we were mostly Linux/NetWare. Today we're mostly Windows, web servers included. Both platforms have their strengths and weaknesses. You use whatever works best for your particular situation, not what you think everyone else is using.

> Linux runs ... most servers

You know, I've seen this factoid repeated here and there but I've never actually seen a real source for it. Linux certainly dominates for public facing web services but there are just as many, if not more, servers tucked away inside private networks. Personally, my experience has been that Windows has a strong showing in most environments.",2014,How 'DevOps' Is Killing The Developer
RICHUNCLEPENNYBAGS,0,It depends.  The Linux workstation still isn't realistic for your average office worker and ASP.NET probably isn't going anywhere.,2014,How 'DevOps' Is Killing The Developer
Deleted Account,9,[deleted],2014,How 'DevOps' Is Killing The Developer
Deleted Account,5,">If you wanted to move to windows then you should have hired windows admins and transitioned the linux admins out. It's a completely different mindset.

Leadership didn't actually like to let people go, so they kept the admins on in good faith, thinking they bought into the vision of the company. The company was actually trying to be the ""good guy"" here and not have to force them into finding a new role. They told them well ahead of time what was coming down the pike, and they gave them the opportunity to jump ship in light of that. Nobody took the opportunity.

But, in the end, knowing Windows is a job skill just like any other. If they didn't want to cultivate that job skill, they should have been more forthcoming about that and started making the transition themselves. 

As for the database stuff, it was the exact some thing: It was a NoSQL XML database, and everything we were doing was storing XML metadata. We didn't have any out-and-out MySQL DBAs there, just ""server admin"" who might have leaned more towards the systems side or the database side. These guys were even given opportunity to take training on configuring and administering the new database, but nobody really took advantage. In the end, it made us developers have to be the SMEs on running it, because nobody else would. ",2014,How 'DevOps' Is Killing The Developer
coned88,2,"I agree that it's a job skill but to many linux admins they can't see the reason for learning it. I'm all for using the best tool for the job.  I guess I just don't see windows as the best tool for any job on a server if that makes sense.  There may be some specific apps that only run on windows but they very well could run on linux if programmed to do so.  I kind of see windows as this http://i.imgur.com/7NTzeGf.gif

I am all for learning but I do see windows dying in some years so for me learning it or being forced to do so is a pain.

What made you guys go to windows? Was it that program that everything is free if you use it?
",2014,How 'DevOps' Is Killing The Developer
Deleted Account,2,"I hate to say it, Windows isn't going to die. It's going to be around for a very, very, long time, more than likely. It's huge in the city that I work in. .NET actually makes it really easy to be productive and deliver apps to market very quickly. Not only that, but MSFT finally got their thumbs out of their collective arses and embraced things like REST and JavaScript. They're really cross-platform compatible in the web services world. They've done a lot in the past few years starting with Windows2k8 and on to really re-gain relevance in the server space. 

But, specifically what made that company move to Windows was a couple of things: They didn't have a great experience with the Linux devs they had. The original product was on a LAMP stack with Perl, and it was really hard to find talent for that. 

I don't think they really ever got beyond having to hand-tweak config files for different environments, and everything in those environments were so different, they didn't really automate deployments. But, not being able to find people to develop for it was really getting to them. 

So that was one part of it-- .NET developers are still hard to find, but easier to find than Perl guys around here. But, as we started to branch out to more and more clients with our new product (healthcare was our marketspace, but I can't go into detail about what the product was), most hospitals already had a strong Windows 2k3/2k8 infrastructure, and they wanted us to integrate with that. They wanted to use AD permissions to be able to administer our system, and they wanted the core app servers to be directly on their domains for management purposes. ",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"Problem is, as far as I'm concerned, .NET is practically the only thing windows has going for it server-side. Granted, it's a pretty compelling reason, but the tooling around unix platforms is getting increasingly hard to beat.

Active Directory is great for user administration (e.g. employee laptops, workstations, etc), but I don't feel it gives any particular advantages in the server side of things.

I'll grant I'm somewhat biased as I have far more experience with *nix than Windows, but still, there's a lot of stuff I can do with Linux that would be much more complicated or even impossible (in the case of Docker) on Windows.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"> Problem is, as far as I'm concerned, .NET is practically the only thing windows has going for it server-side. Granted, it's a pretty compelling reason, but the tooling around unix platforms is getting increasingly hard to beat.

It's *extremely* compelling, especially when you consider the rapid way services can be built, and the, quite frankly, *excellent* tools that they've built for the ecosystem. 

>Active Directory is great for user administration (e.g. employee laptops, workstations, etc), but I don't feel it gives any particular advantages in the server side of things.

It may not explicitly in the server side, but that client management is also huge. What real, all-encompassing solution does *nix have to match? I haven't seen any, really, not to the degree of integration that AD has, especially when you consider things like Microsoft Operations Manager. ",2014,How 'DevOps' Is Killing The Developer
IConrad,3,"> It's *extremely* compelling, especially when you consider the rapid way services can be built, and the, quite frankly, excellent tools that they've built for the ecosystem. 

It's not like they're significantly superior to, say, Ruby, Django, tomcat, etc.. -- all of which have quite robust tools/ecosystems.

>  What real, all-encompassing solution does \*nix have to match?

LDAP is LDAP is LDAP.  Hell, to certain standards there's even an implementation of AD on Linux -- Samba4 (thanks to the European court's ruling/judgment against MS's keeping the AD API closed).

Of course, the fact that you're asking this question demonstrates you don't ""get"" Linux.  You're familiar with the old adage, ""Do one thing; do it well"" ?",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"What I really want is for Microsoft to officially support .NET on other platforms. I wouldn't have any issues with them charging hefty license fees for it, licensing costs tend to be small compared with developer time.

I feel like a lot of the tooling and movement in the industry, particularly around devops concepts, is far easier to implement and use with unix and linux in particular. And newer stuff like Docker isn't even possible with Windows as far as I'm aware.

As for AD, as I said, I think it's great for user administration. But you can use it for that and still use linux for the server stuff, they aren't mutually exclusive. We use AD for internal tool accounts (via LDAP or plugins) and employee laptops/workstations, and exchange for email. Everything else though is Linux.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"I wish they'd do the same, honestly, but I feel like the reason why they only offer it on Windows is kind of as a ""perk"" of paying the licensing costs for the OS. I mean, you're not just paying for an OS, you're paying for a whole application platform. 

I would tend to agree with you on devops tooling. I think that what holds Windows back in that regard is the registry, basically. There are a lot of hoops you have to jump through, for instance, to get an actual Windows Service (like a daemon) registered and running, and configuring security to allow it can be a pain. Linux, on the other hand, seems like it has a lot more flexibility being able to run things over SSH with private keys, for instance. ",2014,How 'DevOps' Is Killing The Developer
coned88,-1,"The way I see it there will be a shift.  Look at college campuses in 2002 and you would see mostly windows. Then came the ipod, iphone, ipad, etc and now looking at student populations of most schools you will see a large majority using apple products.  These people will start having kids and they will get apple and so on.  Schools are now purchasing apple products and so on.  

I really do see windows as have already lost.  As for development  MS would really need to do something special to keep up.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,4,"But that's not in the enterprise, where the bulk of the money is made. 

...And that's what's so great about MSFT finally getting on the bandwagon with stuff like Single Page Applications, MVC, REST, JSON, all of those buzzwords: I could write an iPod/iPad/iWhatever app and have its backend be Windows with absolutely no hiccups. That's because to the client, it's just HTTP calls. 

I don't want to seem like I'm an MSFT fanboy or anything, but I have to give credit where credit is due. The only reason I stuck through when it sucked was because I was getting paid good money to do so. Now, I'm getting paid good money, AND the technology doesn't drive me to drink. ",2014,How 'DevOps' Is Killing The Developer
coned88,0,"It may not be in the enterpsie now while 40-60 year olds are in charge of the money.  Just wait 10 or so years when those college grads from 5-6 years ago who love their macs start having buying power in companies.  That's when things will change.  

The hoops people go through now where I work to get mac desktops is crazy.  people come up with all sorts of excuses.  ",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"Have you worked with the Windows platform lately? Again, not trying to advocate, but plenty of CS students are graduating with plenty of development experience on that platform. 

You may very well be right on it's adoption client-side, but infrastructure can still stay solidly with Windows and remain interoperable. ",2014,How 'DevOps' Is Killing The Developer
coned88,1,No not really.  I use windows 7 from time to time for our ticket system at work.  I have a CS degree and we were pretty much 100% FOSS at school. Even the lab computers were RHEL.  It's what made me really love linux.,2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"Then I *really* don't mean offense by this: you won't get it until you see it in action. Enterprises have put a lot of investment into their Windows infrastructure, and they're just not going to drop it any time soon. In fact, with some of the tools available to allow *nix machines and mobile devices to join on with AD, it's going to stay pervasive. 

I'm not saying Linux doesn't have advantages (I love it personally, and I still use it daily for both work and personal usage), but I just don't think Windows is ""going anywhere"" significant in the enterprise any time soon. ",2014,How 'DevOps' Is Killing The Developer
RICHUNCLEPENNYBAGS,1,"Apple isn't really interested in the enterprise market the way Microsoft is though.  They're interested in home users, and maybe some home users will lobby IT till they get what they want (like an iPhone instead of a Blackberry).

Anyway switches to a totally incompatible OS is a hard sell for your average company which probably has a whole lot of software that won't work with it.  Think about how many big orgs are now paying Microsoft huge amounts of money for XP support past EOL.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,2,"Apple *sucks* at enterprise though. Both Windows and Linux blow it out of the water on that count. Don't get me wrong, they make for excellent end-user devices and OSX is actually quite nice for development work, but I wouldn't dream of using it on servers.

Hell, the issues we have just using OSX build slaves is bad enough.",2014,How 'DevOps' Is Killing The Developer
coned88,0,idk people seem to like osx so much and be so loyal to it I wouldn't be surprised if companies forwent enterprise solutions for it.,2014,How 'DevOps' Is Killing The Developer
Deleted Account,2,"There's a huge difference between using OSX as an end-user (even a power-user developer) and using it as a server

As an analogy, just because someone likes driving a ferrari doesn't mean they think it would be a good vehicle for freighting cargo.",2014,How 'DevOps' Is Killing The Developer
RICHUNCLEPENNYBAGS,0,"Quick, what's the Apple answer to Active Directory?

OS X is still nowhere near close to half the market for home users and it's pretty much nonexistent in servers.",2014,How 'DevOps' Is Killing The Developer
RICHUNCLEPENNYBAGS,0,No offense but you obviously don't have any experience to inform your view; it's just blind vitriol.,2014,How 'DevOps' Is Killing The Developer
stmiller,10,"> We transitioned from a Linux shop to a Windows one, and all of the sysadmin were upset about this. They refused to learn Windows.

If I was a Linux admin at a company that did this, I would resign.

Imagine if this statement was reversed, to put it into perspective:

> We transitioned from a Windows shop to a Linux one, and all of the sysadmin were upset about this. They refused to learn Linux.

",2014,How 'DevOps' Is Killing The Developer
Deleted Account,10,"I'm not arguing the decision, here. 

But, the fact of the matter is that if you don't like the decisions made by a company, you should move on. Resignation's a perfectly OK option in my book-- you want to work with Linux, go to a Linux shop. 

But, sitting there and collecting a paycheck while not adapting to the new environment is dishonest. That's what these people did-- they were so against Windows that they were impediments to the whole process. That doesn't help anybody. ",2014,How 'DevOps' Is Killing The Developer
stmiller,4,"Making such a drastic change would anger pretty much anyone. I frankly understand their response.

What is described is almost like taking a team of Spanish teachers and saying, 'ok from now on we are switching to Russian. Start teaching Russian.'

In this case it sounds like this company does not understand technological differences between different platforms and different skill sets of IT staff who administer those different platforms.

",2014,How 'DevOps' Is Killing The Developer
Deleted Account,0,">Making such a drastic change would anger pretty much anyone. I frankly understand their response.

Actually, I don't, given the situation-- I mentioned it earlier: 

The business was trying to be really sensitive to the current workers they had. They realized that in our area infrastructure/admin folks still have issues getting placed in new jobs. As a dev I personally could literally have a job two weeks from today, but we're talking more along the lines of 1-2 months minimum for an admin to complete his or her job search. 

They basically said to them, ""we know you're all primarily used to working in Linux, but over the next 6-8 months we're going to start transitioning to Windows. We'd like to keep you guys around, so we're letting you know now so you can begin to plan accordingly.""

If the business had just said, ""Tough nuggets, it's Windows, now you have to deal"", I'd totally get it, but the company genuinely was trying to do right by these people. Some of them just didn't show any initiative to dive into the new environments and basically became dead weight. ",2014,How 'DevOps' Is Killing The Developer
IConrad,2,"> They realized that in our area infrastructure/admin folks still have issues getting placed in new jobs. 

For the record, your area is weird in this. For the last five-to-ten years infrastructure gigs -- at least for \*NIXers -- have been going fallow for lack of qualified personnel.  Not a week goes by that I for example don't get two serious offers. ... and I haven't had a public resume (let alone been seeking) for *years*.

> If the business had just said, ""Tough nuggets, it's Windows, now you have to deal"", I'd totally get it

six-to-eight months for transition. That *IS* what they did.",2014,How 'DevOps' Is Killing The Developer
ThatCrankyGuy,-2,"> If I was a Linux admin at a company that did this, I would resign.

You must be young with minimal business functional exposure. Bottom line is money. If switching to any software/platform/hardware/service saves the company in operational costs, the higher brass will no doubt opt to take that route.",2014,How 'DevOps' Is Killing The Developer
nexes300,4,"He didn't say anything about the company, just that he would resign. The company can do what it wants without him.

I'd resign to. Let someone else deal with it. There is a cost to the company in the ability to retain employees too, hopefully they considered that in your vision. Available pools of candidate employees and such.",2014,How 'DevOps' Is Killing The Developer
IConrad,2,"> You must be young with minimal business functional exposure. Bottom line is money. 

Bottom line for the worker is to be an effective worker -- that's *how* he gets his money from the employer. That means, in the tech world, developing a technical skillset. If your company wants to reject the personal investment you have put in to get there, and transition to a totally unlike platform, you have no business staying there.

You call him ""young with minimal business functional exposure"" and yet his is the more realistic response. Interesting.",2014,How 'DevOps' Is Killing The Developer
ThatCrankyGuy,0,"In my days, there was someone always lined up to take your job and very few jobs in total to begin with. You never questioned your boss' business decision, you gave him written analysis of the situation and he called the shots. Especially true for dwindling jobs like System Admins.

Of course those days were a while back and I'm not in the business of Sysadmin, for I am but a researcher. However I do see the way VPs treat the IT team and they put up with it.",2014,How 'DevOps' Is Killing The Developer
IConrad,2,"Not a week goes by that I don't get 2 or three serious offers from headhunters... and I haven't had a resume available to the public for three years. ""System admin"" jobs are far from dwindling -- there's been an explosion of demand.  Not sure where you're getting your information from, but it's not really in touch with the market.

> However I do see the way VPs treat the IT team and they put up with it.

Yeah, that's got less to do with their ability to find new positions and more to do with their sense of responsibility for the infrastructure.  You can't be hardwired to be willing to wake up at 2:43AM to fix a filesystem issue by 3:00AM without thinking that you 'own' (in terms of responsibility) things.  And when you have that kind of caretaker/guardian mindset, it becomes difficult to let go. So you put up with a lot of bullshit you otherwise shouldn't.",2014,How 'DevOps' Is Killing The Developer
bsoder,1,"We live in a time where the average tech employee finds a new job every three years and you honestly thought that most people who choose to work in a linux environment would stick around if it changed to windows?

Shit at this point I think we'd lose half our team if they took our retina macbooks from us and gave us windows laptops or if they got rid of the free beer.  Switching away from the platform almost the entire ops department has made their career...  At least in the companies I've worked for, it just wouldn't happen.  

I actually think it's the opposite of what you insinuated though.  I have never worked for a startup, always a medium sized companies around 1000-1500 employees.  These companies have been around and are able to hire people (and pay them well enough to keep them) in their 30's and 40's who have years of invested experience, not some kids right out of college willing to bend over and take whatever his employer is willing to give them.  The only way I see switching platforms to work without losing a ton of employees is if you work for a company who doesn't really have employees that have invested 10+ years in a platform they have mastered.",2014,How 'DevOps' Is Killing The Developer
s73v3r,2,"Good for them. I don't have to stick with that company, though. I don't work in Windows for the very reason that I don't like working in Windows. ",2014,How 'DevOps' Is Killing The Developer
qudat,2,"I guess I don't see how that's even possible.  To me, linux is the lowest cost route, unless it was impossible to find enough linux sysadmins, I don't see how Microsoft could ever be considered a ""low cost solution.""",2014,How 'DevOps' Is Killing The Developer
Deleted Account,3,"Licensing costs are nothing compared to the cost of developer time. If a platform costs half as much to license but even 15% more time to implement and maintain, you're probably losing money on it unless the licensing is astronomically high.

That said, I still think Linux (and more broadly *nix) is the way to go in many if not most cases.

What I really wish would happen is for Microsoft to officially support .NET on other platforms. I'd be totally fine with them charging a hefty licensing fee to use it on those other platforms (because again, licensing costs often pale in comparison to what developer time costs).",2014,How 'DevOps' Is Killing The Developer
ThatCrankyGuy,1,"There are other factors than just the platform cost. Linux itself is free, but for businesses there needs to be a number they can call at 3am in the morning and have an engineer be available on the other end; Support. That's why Redhat is so popular. Businesses can strike a deal with vendors like MS and Apple which gives them incentives on bundling various services together and in the long run actually reduce platform costs.

Furthermore, there are infrastructures like Active Directory which would be too tedious to unwrap and migrate to the fragmented solutions on Linux (ldap/radius whatever). Sometimes businesses run pilot programs where they migrate a unit to a new platform and see the practical costs of migrating to a new tech. They then have to migrate back when the pilot ends and the results aren't favorable.

There are also far more ""qualified"" people in MS tech than there are in *nix verse. 

There are also audits and other things you need to do to qualify for standards and insurances. Software that comes from random sources is not trusted. Each and every line must have a guarantor to back it up. This is why MS shared its source code with govt and other valuable customers.

So yea, software itself isn't the only cost in solution adoption. Businesses and IT are always at odds.",2014,How 'DevOps' Is Killing The Developer
s73v3r,0,"> but for businesses there needs to be a number they can call at 3am in the morning and have an engineer be available on the other end; Support

And are you saying that this support costs more than an equivalent Windows Server license and support contract?

>There are also audits and other things you need to do to qualify for standards and insurances. Software that comes from random sources is not trusted. Each and every line must have a guarantor to back it up. This is why MS shared its source code with govt and other valuable customers.

You're an idiot if you somehow think that *nix software isn't audited as well. And as far as ""sharing source with government"", it's far, far easier for them to get Linux source than it is MS source. ",2014,How 'DevOps' Is Killing The Developer
IConrad,2,"""They refused to learn Windows"".  Well no fucking duh.  The differences between Windows and Linux administration are enough that it would take years for someone to become fully competent in the new variety.  Seriously, whoever expected to be able to use the same personnel for systems administration after a total OS changeover should be taken out back and shot.  Wildly unrealistic.

I myself am a UNIX engineer.  I am barely more competent than your average end user on Windows.  It's taken me several years (a decade, close to) of 80+ hour weeks to get where I am.  Your company was expecting this sort of learning with probably no extra pay from people who already had well established career tracks and would have to abandon everything they'd learned and knew just because of some corporate decision?  I personally would have walked out the door the instant such a decision was made; it's clear such a company has no use for my professional skills and I don't feel like throwing out everything I know just to be a junior again for years just because of a corporate mandate.  Especially when employers, for me, are a dime a dozen.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"As I've explained elsewhere-- they were told that this change was coming down the road, and they were given the opportunity to prepare for it. I wouldn't have blamed anybody for jumping ship: 

I explained more clearly [here](http://www.reddit.com/r/programming/comments/233to0/how_devops_is_killing_the_developer/cgtx6zx) and [here](http://www.reddit.com/r/programming/comments/233to0/how_devops_is_killing_the_developer/cgtin0x) how the business wasn't trying to be the bad guy-- they didn't want to just change directions and then lay people off whose skillsets didn't match the changing environment. 

This is one time where I've actually been in a business situation and respected how management handled a situation, trying to retain people rather than just throwing people out. ",2014,How 'DevOps' Is Killing The Developer
IConrad,3,"> they didn't want to just change directions and then lay people off whose skillsets didn't match the changing environment. 

There's no other choice in this sort of a change.  Switching from \*NIX to Windows is *not* like switching from, say, .NET to Java. It takes *years* of constant, dedicated effort to make that sort of transition (in terms of administrative skillset). Was your company offering paid training?  Were they offering pay increases?  Were they offering supplemental resources?

No. They gave these guys 6-8 months -- **without reduced workload** -- to pick up Windows to the level they knew Linux. It *was* a giant ""go fuck yourself, we don't care about your concerns"".

I get that you don't see it -- but that's exactly what it was. 6-8 months isn't even enough time to transition a middling company from *NIX to Windows ... which by the way would in and of itself require significant increase in workload from the very self-same people who you're asking to learn the new setup.

I say it again; whoever at your company expected to use the same personnel for Windows as they had been using w/ Linux should be taken out back and shot.  Whoever thought that 6-8 months was sufficient time to transition should be taken out back, shot in the knees, beaten with a rubber hose, and hung by his ankles over a wasp's nest as a warning to others.  That's just grossly negligent.

I say it again: it's not that they *refused*. It's that they *couldn't*. (Not in the time given, with the workload demands made of them.)  If you respected how your management handled this, that just says you don't understand the scope of the magnitude of the change that was being asked to be made.

EDIT:  FYI, I was originally expecting to hear a short-term number for time for transition, but I expected that number to be 2-3 years.  Six to eight months?  That's just malicious.",2014,How 'DevOps' Is Killing The Developer
gruuby,1,Switching programming languages takes years of dedication too. It's not just a matter of learning the new syntax if that's what you imagined.,2014,How 'DevOps' Is Killing The Developer
IConrad,1,"> Switching programming languages takes years of dedication too.

You can learn enough to be competent in a new language after a weekend if that's your goal. I know because I've done just that. Once you have learned one language, learning a new language is mostly a matter of conceptual framework -- the underlying notions behind why and how it was created -- and syntax. The rest is knowing where to look for existing modules and whether you need to write a new one, and how to read/use the documentation. This is fairly true regardless of the language you use.

Having gone through this process more than once already, and having *also* gone through the process of learning not-dissimilar operating systems -- there's a reason why my /r/sysadmin flair is ""UNIX Engineer"" and not ""Linux Sysadmin"" -- and knowing *how* different Windows is from the ecosystem I already know ... switching languages is a couple of orders of magnitude easier than switching OSes.

It is *not* possible to learn enough about Windows, as a \*NIXer, to be competent as a sysadmin after a weekend. Even if dedicate every last *second* of that weekend to nothing but study/practice -- you literally cannot achieve it.",2014,How 'DevOps' Is Killing The Developer
gruuby,2,"Whatever, you'd suck balls at programming for years if you switched from C to something like erlang or even C++. Just getting the hang of all the tools and ecosystem you need takes months.",2014,How 'DevOps' Is Killing The Developer
IConrad,1,"Didn't say you'd be a ""rockstar"" -- just that you could in fact do the work. You'd be slow, yeah.

But you can't even get that far w/ Linux -> Windows admin conversion in a weekend.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"What type of administration are you doing, exactly, anyways? 

Maybe it's because I've consistently worked in both for a number of years, but in this environment, Linux was basically just running Apache, getting all of the correct modules set up, and getting the app running, along with administering MySQL. The Windows environment was pretty much the same thing: running IIS, getting the correct permissions configured, installing the app, and administering MarkLogic, which was our NoSQL instance. 

So, both, it was 

* Administer web service
* Install and configure application
* Administer database
* Monitor it all

I realize the tools and techniques are different, but we're not talking rocket science here. I don't mean to demean your profession or anything, either. Yes I realize there are security concerns, and you have to learn about those, but really in the end it's not like the 4 tasks I outlined above take years to pick up. ",2014,How 'DevOps' Is Killing The Developer
IConrad,0,I see.  You're just that ignorant. Not sure I care enough to enlighten you.,2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"Oh, okay... Fine, I suppose. But that doesn't help anybody understand what I (or anybody else) miss. ",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"Apparently I didn't do a good enough job of setting the scene, here. 

This environment was always a heterogeneous environment. These ops guys in particular had already been hired because they had experience with Windows, Linux, Solaris, and OS X. They were also supposed to have experience in LAMP stacks, as well as IIS. That's not that unusual in the area I work in. 

That's what I'm trying to convey here. It's not like we had a bunch of grizzled AIX guys going from zero to experts. The expectation was *always* that the workload was about 30/70 Windows/Linux, and with the change, the next 6-8 months were going to be moving 40/60, on to 50/50, then eventually 80/20 at the end of about 2 years. Additionally, our corporate IT infrastructure was *entirely* Windows (AD, Exchange, MOM, SQL Server to support some of those operations), and many of the guys helped on that end, too. 

This company was great because these guys never really had that huge of workload. They were always under-utilized. We had gotten the Linux product to a stable state where not much was needed, and there weren't many (if any) additional releases coming out, nor were we onboarding new clients to those platforms. 

So... I don't know if I can convince you, but the expectation was that they already were supposed to be doing Windows work, and while their Windows workload was going up, their Linux workload was to be going down. Additionally, the *initial* transition time of 6-8 months was just that-- initial. It wasn't just flipping a switch and suddenly they were 100% Windows guys. 

I hate to be like ""you weren't there, man"", but this is one situation where I really stand by my statement: This company was trying to do right by their customers and listen to what they wanted, but at the same time try to do right by their current employees by not so much having them change skill sets, but having them transition into using more of a skill set they'd already been expected to have. And it wasn't like they ever were pushing them out the door; they were just letting them know ahead of time what was coming down the road, and that if they didn't want to be a part of that, they could start preparing to move on. Instead, many didn't prepare to move on, they stuck around and were impediments to the process. So they took up headcount (keeping us from hiring more folks in), AND they really weren't that useful in the transition. ",2014,How 'DevOps' Is Killing The Developer
IConrad,1,"> Apparently I didn't do a good enough job of setting the scene, here. 

I should say not.  Especially since you said that you had ""Switched from a Linux shop to a Windows shop"".  

> These ops guys in particular had already been hired because they had experience with Windows, Linux, Solaris, and OS X. They were also supposed to have experience in LAMP stacks, as well as IIS. That's not that unusual in the area I work in. 

Did your admins -- I notice you call them ""ops"" and quite frankly that's a mark against your favor -- have compartmentalized workflows within their department?  Or did you even know whether that was the case?

> This company was great because these guys never really had that huge of workload. They were always under-utilized. We had gotten the Linux product to a stable state where not much was needed, and there weren't many (if any) additional releases coming out, nor were we onboarding new clients. 

Are you really that ignorant?  If so, I am just fucking floored. If not, why are you being this disingenuous?",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,">I should say not. Especially since you said that you had ""Switched from a Linux shop to a Windows shop"".

The product we primarily delivered through Linux. Sorry if I sound like I'm changing my story or something. That's not my intent. 

>Did your admins -- I notice you call them ""ops"" and quite frankly that's a mark against your favor -- have compartmentalized workflows within their department? Or did you even know whether that was the case?

Care to enlighten me on what I'm doing wrong in this? I mean no offense, certainly. They were technically both admin and ops, really-- they pretty much had complete dominion over... ""the servers"", at least the ones that we used to deliver service to the clients. They administered the boxes, and they also were responsible for managing installation and patches to the product running on the hardware, too. That, to me, says that they're both admin AND ops. Am I wrong? 

>Are you really that ignorant? If so, I am just fucking floored. If not, why are you being this disingenuous?

I think that's a bit out of line, friend. I interacted with these people daily and saw what their workload was. The under-utilization wasn't always because they'd ""automated themselves out of a job""-- that would have been awesome. There was one guy who did a hell of a job with things like Kickstart and locking things down. He was worth his weight in gold, but the other guys kind of rode on his coat tails. Most of these guys were basically Linux power-users who would have to consult a manpage as much as I would have to do anything in Apache. 

Bottom line: There wasn't a lot to do in this environment. The transition time provided *was* reasonable. They were provided resources to make the transition, and they should have just been augmenting skills they were already expected to have.  

How about explaining to me *why* you're floored, rather than being indignant? It's not like I'm trying to be a dick here. Explain to me what is unreasonable about the situation as I've described. It seems like I've omitted relevant details that could clear things up, or I do indeed have some misconceptions. ",2014,How 'DevOps' Is Killing The Developer
armornick,14,"Yeah, first time I heard of this. Of course, everyone in IT *should* know a bit about the other tasks, but everyone also has their specialization.

In response to the comments, though; the more you automate, the more problems you create because you can't foresee everything. We will **always** need dedicated database admins, etc.",2014,How 'DevOps' Is Killing The Developer
never-enough-hops,19,"> In response to the comments, though; the more you automate, the more problems you create because you can't foresee everything.

That's silly. As an industry we've made huge advancements in automation, especially when it comes to deployment. One click deploys and continuous deployment models are dependent on this sort of paradigm.

Does that mean you don't have to know about the inner workings? Or that you won't need a DBA? Of course not. But to say ""automation == more problems"" is an overly broad and frankly incorrect statement in a majority of cases.

E: Fix derpy sentence structure

",2014,How 'DevOps' Is Killing The Developer
Deleted Account,14,"Yeah, the ""I can just be a pure programmer"" thing is something we have as starry-eyed novices starting out... it's not something that lasts.

The general term I've heard is ""you must wear many hats"".
",2014,How 'DevOps' Is Killing The Developer
froppertob,4,"> We will always need dedicated database admins, etc.

That depends on the size of the project and team. Or are you saying in a 2-developer indie team, for instance -- where every dollar counts, there's no salary to waste, and multiple tasks are coming in at all time -- one person is doing nothing but database?
",2014,How 'DevOps' Is Killing The Developer
henk53,3,"> We will always need dedicated database admins, etc.

No, you need developers in your team who are highly skilled with database technology and related persistence technology.

If the dev team uses an ORM like e.g. Hibernate a dedicated database admin who knows everything about some DB but nothing about Java, Hibernate and the actual application is pretty useless.

",2014,How 'DevOps' Is Killing The Developer
MyOpus,5,"Actually, if you've been a developer for decades, then you most likely know what they are...

Back in the 80's and 90's, if you wanted to be a programmer, you had to setup the server, install the database, setup the user rights, then develop your code, then test it, then release it, rinse and repeat.

Most all programmers who started before 94'ish were full stack or devops kind of people.

It's just now coming back around.",2014,How 'DevOps' Is Killing The Developer
Shaper_pmp,3,"To be honest on the web this was *always* the case until the mid-late 2000s at least.

The idea that there are web-development roles that didn't require the ability to configure a server, set up and maintain a database, write back-end code and build a front-end is a very, very new invention. Specialisation only really took off in the last 5-10 years.",2014,How 'DevOps' Is Killing The Developer
MyOpus,1,"It's been around longer in very large companies... I almost took a job at Enron, and they were very much a silo'd company.

Was really weird to think I would not be working on all aspects of the system.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,10,[deleted],2014,How 'DevOps' Is Killing The Developer
TheRealHortnon,10,"I also called bullshit on that line. I started as a C and Java developer, and ended up as a sysadmin/DBA. I've lost count of the number of times a *great* developer (like legitimately good) wrote horrendously awful SQL that broke the database, or filled up TB's of NFS directories with runaway shell scripts.

I would never claim to be a great developer. My background helps me communicate with the developers, but that's where it ends. None of them would claim to be a capable DBA or sysadmin either.

A lot of fads out there right now are developer-centric, trying to eliminate these other roles, and I don't understand it",2014,How 'DevOps' Is Killing The Developer
Luminoth,1,"> I've lost count of the number of times a great developer (like legitimately good) wrote horrendously awful SQL that broke the database, or filled up TB's of NFS directories with runaway shell scripts.

But that's exactly the author's point. The developer isn't supposed to be doing those things because it's not their specialization. When you force them to do things they aren't focused on, you end up with shitty results like that. What puts them ""at the top"" is the fact that they ARE expected to do those things, but it's rarely, if ever expected to go the other direction.",2014,How 'DevOps' Is Killing The Developer
loaded_comment,1,"Just to mention, writing good SQL should be a good developers speciality, as the persistence model for the program they are writing is transacted with that way. 
The speed of those queries directly affect the speed of the interface. 

A good developer would know that a quick win in that regard could be to add a clustered index to a group of fields in the affected table for example.
",2014,How 'DevOps' Is Killing The Developer
Luminoth,2,"Well, we're going to have to agree to disagree then.",2014,How 'DevOps' Is Killing The Developer
speedisavirus,1,"> What puts them ""at the top"" is the fact that they ARE expected to do those things, but it's rarely, if ever expected to go the other direction.

Yeah, at most I've seen is maybe expecting those guys to write some small bash/perl scripts with the exception of one of our more senior SAs that has been working on some javascript charts to show our metrics (request counts, revenue, etc) but I think that is more of a side project. 

On the other hand as a dev its been expected even here at my current company where we have great SAs, Ops, and DBAs that I do things like configure new hardware added to the dev environment (hands off on prod though), work with setting up automation, write sql to update databases (dbas basically make sure its not retarded and execute it in prod...dev and qa dbs we own), and stuff. There aren't any clear cut boundaries for the dev it feels but it feels like there are from the other guys. ",2014,How 'DevOps' Is Killing The Developer
Deleted Account,13,"That's not the author's point at all. 

He didn't mean that developer is a harder job, pays better, is more important, or anything. He was saying that ""a good developer can make an OK database admin"", but that a DBA can't do the developer's job at all. 

In fact, the author even said that DBA, deployment manager, etc. are all *more* specialized than developer, which you seem to be agreeing with, not refuting. ",2014,How 'DevOps' Is Killing The Developer
downneck,3,"...which is utter bullshit.

i'm a systems administrator by trade and i can code in python, ruby, java, c/c++ just about as well as most programmers can administer systems.",2014,How 'DevOps' Is Killing The Developer
speedisavirus,1,"I'd have to see your code to be the judge of that but there is a difference from writing code that does something and engineering a system in code that is maintainable, performant, and fault tolerant. 

No more can you expect a dev to be a great sys admin/DBA/network engineer can you expect any of them to be great at dev on average. There are always outliers but on average this is the case. 

Depending on the background of your sys admin/DBA/network engineer they may not be able to dev at all but most software engineers at least have cursory knowledge of all of the sys admin/DBA/network engineer fields even if they would suck at doing those jobs. That of course assumes the dev has a CS degree and has done any full stack small shop work where there is no one to do it for you. 

I'm dev and recognize I would be at best an average to shitty DBA but I could stand in for it. I can write SQL, backup/restore, perform a database migration, use explain plans to somewhat improve queries, understand journals, and all that because I've had jobs where I've had to but I am not that good at most of it just like I wouldn't expect a DBA to walk in and even know what to do in my chair unless he has had to do it before. ",2014,How 'DevOps' Is Killing The Developer
downneck,1,"https://github.com/downneck/mothership  (note, i didn't write this whole thing myself. our entire ops team contributed in one way or another)

in my experience, most software engineers will catastrophically fuck your systems up. the better ones will just make them unmaintainable",2014,How 'DevOps' Is Killing The Developer
Deleted Account,6,"I've been a developer for 18 years and I'm a devops developer who works as ""full stack"" and I manage my servers personally including backup/dba, etc.. and I work in a publicly traded software company (my startup sold to them).

/facepalm",2014,How 'DevOps' Is Killing The Developer
GeorgeForemanGrillz,6,"Actually Agile works even for non-startup environments.  My company has been making a killing training traditional dev teams working at Wall Street companies.  They're much more efficient and less stressed than when they were doing the traditional waterfall/SDLC.  

Pairing is a great way to ensure cross specialization between your technology team.  Pair programming, pair administration, pair DBAdministration.... etc.  This also gives the people at ""the bottom of the totem pole"" a much greater sense of responsibility and importance within the team which makes them more valuable to you.  
",2014,How 'DevOps' Is Killing The Developer
pheliam,2,"> training [in Agile]

Agility was supposed to be (one of) the new wave(s) of development methodology, and it sounds like your company is doing right by it.

However, there are the misused job descriptors and PMs out there who call for ""Agile developers"" who think that Agile is just an adjective and know NOTHING behind it besides a cursory glance at a Google search. So to them, Agile is something of a permissible ""takesies backsies""/runaround for the developer, which is diametrically opposed to the ethos of the actual methodology.",2014,How 'DevOps' Is Killing The Developer
Choralone,8,"This seems to be written by someone with a very flawed perception of what devops is about.

Devops is about having a tighter feedback loop between operations and development (and qa, and the rest).

in the old days, developers wrote some code for a platform, and ops was expect to run it, and they were always butting heads.

If you integrate the two - where the entire platform is part and parcel of the product, and the two teams recognize each other, things tend to work much better.

I'd rather have my developers working with me to make sure the things we need to know are monitored and that everything works the way it should rather than, you know, having them point fingers at me when it breaks.

You make dev have a stake when things break, and you make ops have a stake in ensuring everything is run properly through QA, etc.

",2014,How 'DevOps' Is Killing The Developer
Deleted Account,20,"ITT: Every single person coming up with their own definition of DevOps, and then trashing the author of the article for not ""getting"" DevOps. ",2014,How 'DevOps' Is Killing The Developer
JoseJimeniz,12,"> Such a developer is capable of doing the job of developer, QA team member, operations analyst, sysadmin, and DBA.

That's exactly what i do. And i wouldn't want it any other way.

Have you seen those companies that lock the developer out of the database? Or where the developer cannot create the requirements as the application evolves?",2014,How 'DevOps' Is Killing The Developer
MpVpRb,23,"On almost every project I have done..it's been just me

I design it, code it, debug it, test it and maintain it

I keep trying to explain to the people who hire me that the developer is the worst possible tester, but they invariably fail to hire a tester",2014,How 'DevOps' Is Killing The Developer
mirhagk,13,"Developers are WAY too optimistic to be testers. I'm always positive that my code works perfectly, and a quick check to confirm my hypothesis is all I need.

What is worse is when they just give a Jr developer the testing role. Not only do they kill the developer, but they also got a really crappy tester. 

It's fundamentally a different way of thinking. As a developer you must take things for granted. You have to assume that something ""just works"" or else you'll never understand the big picture of the system.",2014,How 'DevOps' Is Killing The Developer
ewankenobi,15,"Developers should never test their own code. Subconsciously you don't want to prove what you've just built is broken. Plus if there were any edge cases you didn't think about while coding it, you're probably not going to think about them while testing it either.

I do think developers can be good testers, whether that's the best use of their time or not I don't know. I think I'm pretty thorough if I'm tasked with testing another devs code, though I also find it mind numbingly boring.

 My personal weakness when testing my own code, is to initially test something really thoroughly, then when I'm asked to make a last minute minor change, I only give it a cursory test and discover later it broke something I didn't notice.",2014,How 'DevOps' Is Killing The Developer
dpgtfc,3,"I agree, I can be a pretty good tester, but I'm a crap tester for my own codebase. Fresh eyes are best. ",2014,How 'DevOps' Is Killing The Developer
Deleted Account,2,"Yeah, you just have to look at OpenSSL for this. It takes a certain kind of person to really think hard about breaking something they've made. It's a bit like putting lots of thought into how to most effectively hurt your children.",2014,How 'DevOps' Is Killing The Developer
adelle,1,Saving this analogy for later.,2014,How 'DevOps' Is Killing The Developer
mirhagk,1,"As for testing another developers code, I think the problem is that I understand how the system is built, so I take assumptions about how it should work. At my work I know most of the code bases on an architectural level, so I'd take similar shortcuts with their code as with my own.",2014,How 'DevOps' Is Killing The Developer
free_at_last,1,"That's the point - your own code should be tested by someone else. It doesn't have to be someone in the ""tester"" role, it can be anybody. Anybody who understands what your user story/feature is meant to do and how to accomplish the happy path/a few unhappy paths.",2014,How 'DevOps' Is Killing The Developer
newmewuser,1,"Actually you wanted to write: ""Developers shouldn't be the only ones testing their code.""   
Even if you want to prove what you built is broken, probably you are going to apply either the same tests, or the same input, or the same approach, in the same environment, every time.",2014,How 'DevOps' Is Killing The Developer
umilmi81,2,"> Developers are WAY too optimistic to be testers.

They are also way too competent.  They know exactly how the application is supposed to work.  So they never click buttons out of order, or do anything unexpected.
",2014,How 'DevOps' Is Killing The Developer
vfxGer,2,"If you have the resources then definitely have someone else test your code but I do not think developers make bad testers. 
I have been doing a lot of test driven development and it has shown me how important it is for developers to know how to test code and to write code that is easily testable. 
I believe the ideal position is to rotate the testers position. 'You test my code week and I'll test your code next.'",2014,How 'DevOps' Is Killing The Developer
invisibo,1,"I deployed a big site revamp last week. Made it responsive in ie8 FFS! Sure enough, I've been getting angry phone calls that things don't look right in ie6 and ie7. 

I should note that I'm the only front end developer, back end developer, windows sysadmin, and Linux sysadmin in the company. Hire a tester? Why tf would they want to do that. ",2014,How 'DevOps' Is Killing The Developer
impecune,1,The [Firefox Selenium IDE plugin]( http://docs.seleniumhq.org/projects/ide/) might be of use to you.,2014,How 'DevOps' Is Killing The Developer
faassen,7,"While the criticism may be valid, it reads like this developer's world only consists of startups and giant corporations. You tend to need to be a bit of a jack of all trades if you're in a small to medium size business that does software development too, and there's plenty of those where I'm from.",2014,How 'DevOps' Is Killing The Developer
jwhardcastle,2,"I can't speak to his choice of terminology, but I can understand some of his frustration. I started as a developer, designer, photographer, video editor, writer, tester, project manager (yes, really) who did a bit of sysadmin out of necessity (small team, sysadmin had left for the consulting world only to be hired back at three times his salary one day a week so I filled in on days he wasn't there). Fast forward a few years and now I'm the IT director with a full time sysadmin (we hired him back!) but no real institutional support for replacing the old developer-me. So on top of developing (a vanishingly small part of my job these days) and sysadmin and all the other stuff (minus photography thankfully) I get to manage budgets and do performance reviews and attend weekly C-level meetings, etc. My organization and I both suffer for lack of a ""pure"" developer, but it is partly my fault for not making a better case for the FTE.  I guess what I'm saying is I sympathize with the portion of the article talking about the shrinking percentage of time devoted to developing when you ask devs to take on more roles. This is true in any organization for any position that is overloaded.

And the good news for me is that folks here are starting to recognize we need a FT dev once more, so maybe I'll get one this decade!  :D",2014,How 'DevOps' Is Killing The Developer
veni_vidi_reddit,38,"'DevOps' is useless term because it means whatever the hell you want it to mean. We should stop using it.

I have a startup, and for a long time we had to do the ""full stack developer"" thing because there was no other way. I often had to do it myself. It's a recipe for 1) burnout, 2) bad code, 3) bad infrastructure.  

We are getting dedicated infrastructure people, so that our developers focus on developing. Why? Because we are interested in becoming a *business* and  *not* remaining a startup forever. 

",2014,How 'DevOps' Is Killing The Developer
Deleted Account,11,"Well put.  I am developer whose domain speciality is large scale hosting and virtualization systems.  I know exactly how to build AWS.  I never asked to a be a devops guy, but for some reason I seem to have been knighted a high ranking one, and I still don’t know what it means and I am supposed to be an expert.

I also have had my own start-ups, and a career and connections that has allowed me to see way too many companies’ insides.  When you said this:

> We are getting dedicated infrastructure people, so that our developers focus on developing. Why? Because we are interested in becoming a business and not remaining a startup forever.

Yup, you know exactly what you are talking about.  Developers working on production infrastructure is dangerous.  I don’t care how smart they tell you they are, they don’t know as much as proper sys admins, and your system will likely end up a mess with no redundancy, scalability, back-ups, security, etc.  Plus the sheer number of man-hours, lack of focus, and context shifts keeps them away from product and customers.  Now, they will tell you they can do it, because shiny new things to play with, don’t believe them.  

What most people don’t know is you can get fully managed from good companies like Linode, Rackspace Cloud, Engine Yard, VM Farms, etc. for great prices instead of doing it themselves.  People think it is expensive, but once you consider they handle so much for you, it is really good business decision compared to high programmer man hours, or worse hiring, which with the fierce market for talent out there can take many months at least.  ",2014,How 'DevOps' Is Killing The Developer
xxpor,-1,">Yup, you know exactly what you are talking about. Developers working on production infrastructure is dangerous. I don’t care how smart they tell you they are, they don’t know as much as proper sys admins, and your system will likely end up a mess with no redundancy, scalability, back-ups, security, etc.

150% false.

This is how AWS runs every single day. Devs carry pagers. They operate on production all the time.

",2014,How 'DevOps' Is Killing The Developer
Sarah_Connor,8,"as a director of IT ops, with devops on my staff; let me tell you what I recently explained to an intern who in his interest, stated he felt he gravitated toward devops:

devops now just referes to IT... although with the difference that a devops eng has coding ability as opposed to a configuration grunt of days of IT past.

devops is responsible for deployment, monitor and management of all the infrastructure required to support the app and service of the business. developers will develop certain components of that service - but will never be responsible for the whole thing. Devops are on call to respond to alerts. If you're not on pager duty, you're likely not on the ""ops"" part of the team.

If you're going to have infra at scale, then you need to programatically manage that infra with a tight, small team. In our case, with thousands of instances running in the cloud, we are able to manage all that with three staff.

We work closely with the engineering teams in the design, development and deployment of their code. We write and manage launching of thousands of workers daily - scaling our servers with active users and load.

*THE GATING FACTOR BETWEEN DEVELOPMENT AND PRODUCTION*

We own the definition of dev, test, stage, canary and prod.

We need to be able to talk with them about what their code is and what they are trying to achieve and work with them on brainstorming the best and most efficient ways to do that.

If you're planning on being a business - then you better be sure to have the ability to understand eery single aspect of youre infrastructure and how its all woven together and dependant upon each sub component - this will allow you to design it in such a way that you can decouple each piece in a reasonable manner as you grow - and as you grow to scale have teams dedicated to supporting just that component.

Look at a place like twitter where they have a devops guy (an SRE) dedicated to a single team of devs and who understands what they are doing and what they need so he can support their deployments in a CI way and understand what the normal perf of that deployment should look like after deploy....

if you get hung up on the term devops rather than understanding the value of the process and where production should be walled off from developers - then you're spending too much energy emotionally charged on the wrong thing...",2014,How 'DevOps' Is Killing The Developer
brownmatt,5,"I think what you've described is the traditional definition of ""operations"". ",2014,How 'DevOps' Is Killing The Developer
Sarah_Connor,-2,"Actually what i said was that devops is just the new description for IT.

There are lots of ways to describe various parts, but at the end of the day IT needs to make sure shit doesnt fall over.",2014,How 'DevOps' Is Killing The Developer
speedisavirus,1,"> Look at a place like twitter where they have a devops guy (an SRE) dedicated to a single team of devs and who understands what they are doing

That's what we do where I work too except we have 2...should probably have 3 ops dedicated. Gotta have backups. Being ops is stressful. 
",2014,How 'DevOps' Is Killing The Developer
covertequation,70,"Gross. Reads like a developer who thinks QA and cleaning up servers is beneath him. 

Most pure developers I have had the misfortune of interacting with could not be a sysadmin ""in a pinch"" and have no clue how to deploy their ""masterpiece"" to a standard production environment, let alone think about how changes cross impact uptime. 

By no means am I saying every sysadmin can develop, but having ""pure developers"" leads to a whole ivory-tower methodology which isn't useful for the bottom line.",2014,How 'DevOps' Is Killing The Developer
dataloopio,27,"I've seen some horror stories when developers have tried to be ops.

* Virtual box vm's on AWS vm's running production
* A Nagios instance per server
* Watched a developer waste 1/2 a day because he bound his service to 127.0.0.1 and not 0.0.0.0
* Numerous instances of just 'not getting' basic ip networking
* Having to learn every single tool from scratch turns a developer into a junior.. I've watched £500 a day devs sit for 2 days learning how FPM works just to create .deb packages

I could go on all day. You need developers to create awesome products. You also need skilled ops guys to ensure madness doesn't creep into stuff. Some of those things I've listed above take months to undo once you've got users on a system.

My personal favourite setup is dev teams focused on creating and operating the service, then a skilled central ops team who just ensures that nothing stupid is being done and helps educate. A bit like how good security is instilled into teams.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,8,"I write code every day on Ubuntu. I have no clue how to make a .deb. I don't make 500$ a day, but I can totally see myself in that situation.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,4,"I've seen sys admins that didn't know what the linux disk check at boot looked like, so no need to throw stones at developers.  Everyone is a noob at sometime and needs to learn.",2014,How 'DevOps' Is Killing The Developer
smurfhater,7,"Additionally the ivory tower folks usually suck at empathy.  If you think they have disdain for the people testing, deploying and operating their code, what must they think of end users?",2014,How 'DevOps' Is Killing The Developer
xiongchiamiov,2,"At our company, devs, QA, and ops (me) are all on the same level - we're not paid differently, we don't have differences in power, we're just doing what we're good at. Everyone can fill in a little for the others' jobs, but we all recognize that they're better at what they do than we are.

The constant degradation of QA as a career forces many good QA people into development jobs (where they're at least mediocre). Of course you think QA people suck - you've forced the good ones out of it by not giving them any respect!",2014,How 'DevOps' Is Killing The Developer
free_at_last,1,"> Gross. Reads like a developer who thinks QA and cleaning up servers is beneath him.

Appears a lot of people in this thread think the same, unfortunately. It gives testing & QA roles a horrifically bad name, when it's seriously vital and everyone should be playing a part of it.",2014,How 'DevOps' Is Killing The Developer
Forbizzle,0,Having developers spend time on QA is a terrible allocation of resources.,2014,How 'DevOps' Is Killing The Developer
free_at_last,0,"Developers suck at testing their own code.

Just as testers, who code, suck at testing their own code.

Testing is the responsibility of everyone. As a team you are all responsible for OK'ing that release out of the door.",2014,How 'DevOps' Is Killing The Developer
xiongchiamiov,-1,Because they suck at it. One good QA person is better than five good developers trying to do QA.,2014,How 'DevOps' Is Killing The Developer
umilmi81,0,"> Reads like a developer who thinks QA and cleaning up servers is beneath him.

They are beneath him.  If you can pay someone $45k a year to clean servers, why are you paying someone $100k a year?  It's a waste of money.",2014,How 'DevOps' Is Killing The Developer
covertequation,-1,If he just did the other 2 it would save $90k. He's just petulant that he cant cherrypick and only do the parts of his job he likes.,2014,How 'DevOps' Is Killing The Developer
umilmi81,3,"You are assuming he'd be doing nothing instead of cleaning a server.  But instead of cleaning the server he'd be writing a new feature for the product.  He can't do both.  So the question is which should he work on?  The one that brings more money in or the one that brings less money in?
",2014,How 'DevOps' Is Killing The Developer
s73v3r,2,"No, it wouldn't, because the time it takes him to do those other two is time that he can't spend on his main task. If they're ok with deliverables taking significantly longer, then it's ok, but I don't think I've ever met a company that thinks like that. ",2014,How 'DevOps' Is Killing The Developer
thebuccaneersden,0,"Just out of curiosity, what exactly is the ivory-tower methodology? Never heard that term before.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,9,"What!!? Waterfall is broken!!?

Seriously, I was curious about those ""full-stack"" positions, I thought they were full tech stack (app to assembly), or full TCP/IP stack or something...

There's a bigger trend at work here: as we get better libraries, there's more library interfacing and less coding. Already, a lot of Java or Python coding is wiring libraries together, and finding/evaluating/integrating 3rd party libraries for needed functionality. There's quite a few ""mash-ups"" between web-services.

This is the ancient prophecy of `code reuse`, come true in our time.

Of course, there'll always be a need for some new code, it's just a different balance point, as we slowly build up all the libraries needed.

> Instruction tables will have to be made up by mathematicians with computing experience and perhaps a certain puzzle-solving ability. There need be no real danger of it ever becoming a drudge, for any processes that are quite mechanical may be turned over to the machine itself.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,24,"No, waterfall is fine. As long as you call it agile and scrum.
",2014,How 'DevOps' Is Killing The Developer
Deleted Account,2,"I've seen people call it 'scrumderfall' with a straight face.

I'm worried devops is going the same route, where the idea is valid and important, but most people completely miss the point because the term has been so badly misused by people who have no idea what they're talking about.

All these people treating devops like a specific role or position is showing that even in this thread, a lot of people are fundamentally missing the point.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"I'm going to steal that...

you know, the more things change the more they stay the same... management types who think they are clever will create hype and throw money at buzzwords... 

well, whats happening i think is sysadmins and operations teams are picking up these things as part of their tradecraft. many of them are not experienced developers but they are great with computers and just know how to make things work. if that skillset was all there was, who would make the great products? who would make the solutions that the devops people are using?",2014,How 'DevOps' Is Killing The Developer
Deleted Account,3,">well, whats happening i think is sysadmins and operations teams are picking up these things as part of their tradecraft. many of them are not experienced developers but they are great with computers and just know how to make things work. if that skillset was all there was, who would make the great products? who would make the solutions that the devops people are using?

I think that's a bit off too.

The real goal of devops, like agile, is organizational. It's about integrating development and operations efforts and creating tighter feedback loops.

If you're still siloing your developers and operations away from each other or you've got an us/them attitude between your devs and ops, then the company has fundamentally missed the point.

It's frustrating because agile and devops are both very real, important concepts, but the whole point is that they *require organizational change*, which is hard. People like to look for easy solutions, so they do the same thing they did before and pretend it's something different when it really isn't.",2014,How 'DevOps' Is Killing The Developer
mirhagk,7,"> This is the ancient prophecy of code reuse, come true in our time.

And it's so damn boring. This is why I dread doing mobile apps, or web applications. Everything is just plugging things together. It's not about whether you can program, it's about your experience with frameworks. And by experience I mean is this the 1st time you built it, or the 10th time you built the exact same application.

Maybe that's why I don't like working with startups. Nobody's got any new ideas in consumer applications",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"I think the interesting stuff is happening in libraries. Plus, with using libraries being so popular and easy these days, if you make one that's helpful, it can easily take off, giving fame/fortune/satisfaction.

If you've done it 10 times, you're probably aware of short-comings in the libraries, and therefore are in an excellent position to build a better library...

A library can be a copy of another library, just tweaked in implementation (faster) or interface (easier to use). But it can also be an entirely new approach to that kind of library (in implementation and/or API). Or, going a step further, it can solve a problem that has not been addressed at all, thus creating a new category of library. Or, it can be one part of a new approach to solving the problem - so everything else has to change, even though your library only addresses one part of it.

You can even make a startup based on a library - not an app at all (though certainly most of startups seem to be customer apps these days). ",2014,How 'DevOps' Is Killing The Developer
mirhagk,2,"Yeah I fiddle around with making libraries in my spare time, and services for developers to consume. I like building tools, love it actually, just hate designing stuff for average consumers.

If I found a startup that had a good idea for a library or dev tool, I'd join in in a heartbeat",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"I was thinking of you having a good idea for a library, and then starting the startup :-). Of course, you don't have to quit your job immediately, ""launch"" or even call it a startup. I'd guess with your experience, you'd have come up with several good ideas already.

Don't you get annoyed with libraries that do things in one way, when there's obviously a better way to do it?  A problem (annoyance) is an opportunity.  Maybe you're lucky enough to work with libraries that have pretty much nailed the problem already, and done it so well that it's boring to put it all together?

Alternatively, if putting the whole app together is boring, maybe you can automate it (or large parts of it - the most boring bits)? That could be a startup too.

Is it that you can't see how to make money from libraries/frameworks - since most are free open source these days? ",2014,How 'DevOps' Is Killing The Developer
mirhagk,2,"Most of the reason why is my interests for side projects are not focused at all on something that could profit.

For instance one thing I worked on for a bit was a markdown processor that could export to HTML, word, LaTeX, or others. While I think it's a neat thing, and I really want to finish it off soon, it's unlikely that anyone would pay money to use the library (although they'd pay money for a consumer facing application maybe)
",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"It think it's helpful to think in terms of ""value"" or ""usefulness"" rather than ""profit"", because money flows from usefulness. But there's a difficult barrier to pass to *actually* pay money for something, so it's unnecessarily discouraging to think in terms of profit. Also, a focus on profit can lead you away from usefulness - which is the where money really comes from.

Make something vaulable, and people will give you money for it.

The two issues in creating value are *unmet need*:

1. meets a need
2. that is not already met

### Need

Markdown export is a good idea. I actually looked for one of these myself, but the products were too big/complex for my needs. I could implement a super rudimentary one myself (`*italics*` to *italics*) with sed regex (though there's some complexity with multiline). There's actually a markdown interpreter in bash, a few hundred lines - though just to HTML I think. So... I ended up just using groff and the manpage format.

Further on markdown: I personally thought it would never take off in the mainstream, because wysiwyg is obviously so much better (I thought it would take off for programmers, who are used to working directly in HTML, LaTeX etc). So imagine my suurprise when it has massively taken off in the mainstream - e.g. in reddit, right here. Of course, the truth is, you can use reddit perfectly fine without ever touching markdown or even being aware of it, so the success of reddit doesn't really indicate the success of markdown.

More on markdown: I have heard of a couple of people writing books in markdown (on HN, I think). Of course, they are technical types.

As for the mainstream, WordPerfect used to use explicit markup (like markdown), and was utterly destroyed by Word's wysiwyg.

So, what is the need for a markdown (and for a markdown exporter)? I think it's technical people; and some mainstream people, who want to write books/articles - something involving a little markup, but not to much.

It might also be professionals writing technical manuals - or memos - within big corporations, journalists, academics (hence LaTeX). That is, not consumer but business/government (which has many arms: education,military, health care, civil engineering etc...). What's a need they have that isn't met? I don't know. But if you get something out there, you might find out... especially if you target their needs in other ways, but there's something missing then you may get an annoyed email ""why doesn't it do X!!?"" A problem is an opportunity.

### Unmet

I think the direct alternatives, of markdown exporters, is wide open.

You can test this by pretending you are wanting a markdown exporter, but don't have time to write one (as you have found, it takes some time to write one).

1. do you know of any already, off the top of your head?
2. google, using a few different terms.
3. ask people around you if they know of any.
4. post a question on SO, progit, HN.
  (you could also search github/SO, but the google (2) will pick them up)

How does your idea compare? Is there anything about the competitors that you really don't like, or can see an obviously better way to do it? (NB: I don't mean a better way to implement it, I mean better for you, as a user, to use it).

But there's another kind of competitor - alternatives approaches to what you're really trying to do. The really big alternative is Word. If someone was writing a book or article, why wouldn't they use Word?

Maybe because they are on linux, or a tablet. NOTE: tablet wordprocessors seems a woefully under-served market - the ones I've seen are terrible. (Even the android browser I'm using right now for writing this mini-""article"" is seriously buggy: especially, cut and paste is unreliable). Microsoft doesn't want Word for Android because it undermines their competing phone OS. This creates a competitive vacuum. People with only a tablet (or who use it more, because it's convenient) still want to use Word sometimes.

So, there's Google docs - that works on Android. But it's slow and (sorta) requires a network connection.

But the real thing you want is: people who *don't want* wysiwyg. Why would they not want it? Isn't wysiwyg better in every way A good place to start is why you yourself don't want it. Why do you want to use markdown? Why do you want to edit in one place, and view the result elsewhere? (like editing HTML directly, or using LaTeX)

### Conclusion

Why do all the above? To determine if what you want to do is *valuable*, in terms of some body, with some task in some situation. It might not be valuable, or the best thing in every way, in the abstract, but it doesn't need to be. It just needs to be vaulable *to someone*. Knowing who that is enables you to communicate its valuableness to that person, in a way that makes sense to them (using their terms, concept, and concerns). Very likely, *you* are one of those people, and so describing it in a way that would make sense to another you is not all that hard.

But unfortunately, the only way to actually know if it's valuable is to put it out there and see if anyone does think it's valuable! Hence, the ""minimum viable product"" so beloved of startups. Sounds like you already have one of them, if it's up on github - though is it actually usable yet? Is it easy or difficult to download/get started/install (for another you, *as a user*, not someone who wants to get their hands dirty - they just want it to *work*. As if they were on reddit, I guess). And most importantly, does it communicate why someone would want to use it?

But fortunately, none of this is a big deal. There's no risk (don't quit your job yet!). There's no deadline. There's no ego-loss/embarassment if it ""fails"" (do it as a gradual thing).

It's just a dispassionate experiment: I wonder, does anyone need this? It's nice to be right, if you think it *is* needed... and that can be a barrier (because it's unpleasant to be wrong, especially if you put a lot of work into it).

To finish up: I think markdown will become more important over time (but as a niche;  never take over fully from wysiwyg), since everyone uses it for social media. Especially on mobile devices - maybe partly because touch screens are a pain for precise highlighting? You do need a keyboard though. Certainly, mobile devices are taking over from PCs. (My present phone is actually more powerful than my present PC in some ways) The competition is wide open.
",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"PS: I realize all that's for an app. For a library, it's exactly the same, except you sell to someone who is making the app.

I'm guessing: a plug-in for a forum, so people can get a pdf of a nicely formatted comment (e.g. /r/science or a propriety closed forum). Or part of an internal corporate communications system - perhaps email (or might be implemented as a web ""forum"", just on an intranet). Great for drafting - their users can then transfer it to Word, or paste it into an existing document. Or, someone could distribute something on the internal forum, but a paper copy is needed for some reason... perhaps just to print out to look at, perhaps to satisfy corporate or governmental regulations, it has to be a pdf (with pdf security?)

So, you sell to the people who sell to the users. A library business model.

Note: it's hard to find these guys. What search terms would find them? But if you put up your library, with their needs met, then they google you.

Finally: I wouldn't worry too much about ""finishing"" it. Just make sure it usable and useful to *some* extent. How much markdown does it need to support to be useful? Even italics alone are useful! How many output formats do you need? HTML? latex Word pdf... Just *one* format is useful! Note that if people want more, they will tell you. This is advice from esr (for open source but same thing), all you need is:

1. promise of something really neat.
2. something that runs

You'll never actually ""finish"" it, there's always more you can think of (and it may be an excuse for not putting it out there...).

Not finishing is actually a good thing - when you have competitors who copy you, adding new features is a great way to stay ahead. But if you've already added them *all*... you're a sitting duck, and can only wait while you fate advances upon you.

",2014,How 'DevOps' Is Killing The Developer
mirhagk,2,"Supporting multiple formats with my architecture is a breeze, which is why I am going to support it. I'll probably just support LaTeX and html for now, and get it to a usable state with enough markdown. I believe it has all the basics now.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"Yeah, it's great to have a architecture like that. If you have time and energy to get both format done easily, then no problem. It's just that.... don't get stuck on finishing the second format, so it prevents you from releasing it.

Also... although HTML would be easy (and natural for markdown), there's already a million (?) libraries that do that. Well, reddit and SO at least, that's two... you might have more success where there is no competition - yours is then the *best*, no matter how bad, incomplete etc it is. It's better than nothing. And with users, you're on the way to getting guidance as to what's really needed - and of course motivation from having users. It's better to be a big fish in a little pond. That's what I mean by a Call, and seeing from the users' point of view.

I'd suggest pdf (but that may be harder). OTOH, templates may be differentiating enough that yours will stand out!

BTW: If you haven't read *The Cathedral and The Bazaar*, I highly recommend it (it's about 20 pages). A free pdf (ps?) on esr's site.",2014,How 'DevOps' Is Killing The Developer
mirhagk,2,"I'll check it out for sure.

I had the idea to output to LaTeX as a general catch-all since LaTeX itself can be exported to tons of different formats. But it wouldn't be convenient to automate the conversion LaTeX->PDF so I may look at doing PDF directly.

I also may just do word instead. It's a bit more difficult, but I know a big complaint I've had with sharepoint sites is that you can upload word documents, but you can't use simple Markdown. You either get no formatting, or a very heavyweight format. Having a tool to convert would mean you could drop markdown files into a skydrive folder, and have it automatically convert them to a word document that would then be uploaded to sharepoint.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"Yeah, Word would be differentiating as well - much more so than pdf! Heavily used; ill-supported by modern web tools. I think corporate in-house systems could have a use for this.  

What is the use-case? i.e. (1) why write markdown; 2) why then convert to Word? Why not write in Word in the first place?

Maybe: rough drafts; Word not avaliable; Word needed for official documents; Word needed to interface with internal info systems (they have a bunch of VB scripts).

But if you want to do a library, you don't have to worry about it. It's an app problem.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"Call for **markdown templates**. NB: I think you already have a Call (markdown->Word), that you should do first; this is a later/secondary one.

**Intrinsic**: markdown already looks like what it will be rendered as, e.g. `*emphasis*` -> *emphasis*, so it is intuitive and readable - much more so that html or other markup syntax. This makes it intuitive to work with.

**Extrinsic**: Most important: because of reddit (and I think other forums?), markdown has become know to the mainstream (or at least, a wide range of people) - it has a kind of installed base; it's become something of a standard. [This is similar to what happened with html: all programmers knew it. Therefore, when XML was introduced, it was already familiar and understood, a small step. Thus, XML became a standard).

The above makes markdown easier for *non-programmers* to use. Especially domain experts - the actual users.

But I think the next step isn't evaluating expressions (which is a programmer kind of thing), but: what tasks do users actually need to do in a template? And what would be intuitive for them?

I think very common would be looping e.g. tables with multiple rows, and conditionals, e.g. different forms for singular, plural (and perhaps none). Java has a bunch of classes for this in its text formatting package - this is used for internationalization. So, another ""switch"" could be which language is being used; and also for different documents or letters.

One way to intuitively represent these:

1. have a table be *implicitly* multiply-valued. You map its values from an array/list.
2. for conditionals, use a form like: `kilogram/s`, and implicitly map the first word before `/` to singular and the second extended version to plural.  If you have three, the first one is for zero (but you may need a whole phrase, not just one word, so more syntax is needed to delimite the phrase, not just a word boundary. *All* such syntax is unintuitive and unfamiliar to non-programmers.... whereas `kilogram/s` is already known)
3. have different files, with the filename indicating the language or type of document - users will need to find out what names they should use, but this seems reasonable, especially if the names are reasonable. e.g. `english.txt,` `french.txt`... (but even `EN.txt`, `FR.txt` is at least understandable).  It's even more intuitive for document type, e.g. `invoice.md`, `receipt.md`, `purchaseorder.md`. If you need to vary on both paramaters (or more), could use nested directories, with directory names being language, and filename being doc type. e.g. `french/invoice.md`

But all of that stuff is a little unituitive, so I'd start with just `$variable`. Once users are used to that, it's very easy for them to accept more advanced stuff - especially when they need it.

Technically, the big picture here is: classes (showing what can be repeated; what polymorhphic choices exist); format (the choices, lists and values in the template, as above); and mapping (where to get those values from in the classes, where to get the lists, choices).

Anyway, as I said, I wouldn't recommend doing this first, as it's a big can of worms, lots of work to do. I mainly wanted to communicate how I saw it *from a user point of view* - that markdown templates are a big win *for users*. A Call. They could revolutionize how templates are done.

But a Call isn't really about what actual users want (or even what they *would* want, if only they knew about it). It's about what *you* feel is valuable. What Calls *you*.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"PS2: here's a tiny dev who made a business out of a pdf library: http://bfo.com/purchasingfaq.jsp

They don't seem to say it now, but it was this just guy doing consulting, who starting selling licenses to his clients that he personally knew, so he called his company ""Big Faceless Organization"" as a joke. 

So, I had an idea: **markdown templates**. Most uses of BFO's library will have boilerplate and data filled it. Probably, people would start doing it with explicit java code, but then will introduce templates (so they can be updated/fixed/experimented with easily, quickly, without programming skill - by anyone in the corp, perhaps a domain expert...) that the java just fills in.

But while HTML templates are common (and ugly), a markdown template would be far easier and clearer to work with. [ easier still would be wysiwyg, massive overkill for this type of job). Though I'm not sure if markdown has the capabilities that would be needed for such tasks... that's something to look in to. You can do tables, but I find them pretty tricky and confusing in practice. Anyway, it would look something like:

    *Dear $cust*,

    **URGENT**

    Your account is in arrears by `$amount`.
    Please pay by $duedate or we will take your firstborn son.

    Have a nice day!",2014,How 'DevOps' Is Killing The Developer
mirhagk,2,"Actually ironically I had plans to support $ to insert variables, and possibly allow arbitrary expressions. Getting it to this state probably wouldn't take much more, so I'm going to try to finish this off now.

Thanks for the encouragement, I get sidetracked with new projects a lot, but if I ever had people actually using my library, I'd love to spend time on making it truly awesome.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"BTW: I had the chance to look through everyone's assignments for a uni comp sci class, and I was struck that they seemed to do it in one of three ways. I was sure that they'd copied. But then... I saw one that was *identical* to mine, down to the variable names! Now, I know I didn't copy, and I can't imagine how someone else could copy mine... I looked closer, and there were some very minor differences.
So I concluded that given our customs and conventions, there often are only a few ways to code something, and the rest is standard. E.g. `i` for a loop index.
`$` for variables is one of the few standard ways to do templates.

Good luck! Let me know when you release it.

After all my incredibly long comments, I'll leave you with one brief thought:

> *the key to getting users is to see it from their point of view*.",2014,How 'DevOps' Is Killing The Developer
camilos,5,"Working for big companies usually fixes this. Small little cheap companies expect everything from a developer. When I started realizing this, I left and now only work for multi million dollar corporations where roles are well defined. 

Sure their technology is not cutting edge but that's easily fixed by studying and learning the latest trends at home. 
",2014,How 'DevOps' Is Killing The Developer
mtbeedee,5,"I dont know... I have an interpretation of ""DevOps"" that means not having one person do all the roles. It is having tight feedback loops between the different roles. It is an agile application team that has all of the developers, testers, and operations people necessary to make the software work properly. The feedback from one team to itself is much better than between different teams or different organizations.  I don't generally think of it as a person as much as a strategy.",2014,How 'DevOps' Is Killing The Developer
EmperorOfCanada,5,"I had this exact same argument with a guy who was a fully certified DBA around 2001. He hated that we developers were deploying complete Oracle systems. Basically he saw that we weren't billing him out on our projects. The reasons were quite simple. Our projects were small. Oracle was dead easy to install. And basically he brought nothing to the table but confusion. We had one client who was getting their data from another source. They would get a weekly update in the form of a SQL file. The incoming schema wasn't that great but it was a big file but with indexes it was well fast enough. So he spends a weekend redoing the entire schema of the imported data and then sends a report to the client documenting the million ways his schema was better. 

Our solution was the epitome of elegance. We would run the new data into the server in one huge transaction and if there were no errors commit the transaction. We even checked to make sure the import was safe to import. With his system we would have had to build an import tool that would somehow convert the incoming data into his zillion table schema. 

We told the client that they didn't have to pay for his time as it was not authorized by me (the project manager) and that in order to implement his solution the project would be late and we would be charging for at least a week's time to implement a new complicated import tool. 

This was a DBA desperate to protect his job.

Now if we were running a bank's central database, then by all means they should have a team of specialist DBAs. 

But the simple reality is that at this point in time end to end development is pretty damn easy. I would be reluctant to hire a developer who didn't know how to implement every aspect of a system in at least a crude way. 

Ideally all your developers are end to end with various strengths in the different areas and thus take on problems in those areas. But if one of those super specialists is not available for whatever reason then I would fully expect other developers to step right in. 

I would say that as the company becomes larger that the spread of skills within any developer can become narrower.

But there is one area that developers often are 100% lacking and that is design. Also great designers are often lacking in development. So I would generally not expect much overlap between these two areas. 

But even business needs to be a common overlap. I have seen way too many programmers and IT people completely not understand the needs of the business. A great example is how many IT departments will stand fully in the way of the salesmen being able to sell. One company that I worked for limited the sales people to 10mb per email attachment, when most of the sales PDF were in the 10-20mb range. Needless to say the Head of IT had no limit to his attachment size. Keep in mind that this was a sales driven company. So I don't care if that guy had the most secure and reliable system in the world; he was actively damaging the company.

So I would say that anyone who doesn't have a broad range of skills should go back to academia and pretend like it is reality; because to the real world a single skilled developer is worse than useless regardless of how high a guru status they have achieved.
",2014,How 'DevOps' Is Killing The Developer
judgej2,3,"What you are describing is the difference between working together, and building walls around your mini empires.",2014,How 'DevOps' Is Killing The Developer
EmperorOfCanada,1,"But often the mini empires aren't built from ego but from some sort of performance metric. So you might have a DBA who gets crap if the slightest problem happens with the DB so he will never ever ever let anyone near his babies; not because he is an ass but because he wants to keep his job.

He might even get in trouble for developers messing up a machine set aside for developers.",2014,How 'DevOps' Is Killing The Developer
judgej2,1,That sounds like a sad place to work. It is too true that so many people have no control over the way the business organises and motivates its workforce. ,2014,How 'DevOps' Is Killing The Developer
EmperorOfCanada,1,Unless it is employee owned. Then the whole game changes.,2014,How 'DevOps' Is Killing The Developer
ShadowmansShadow,6,"DevOps is less of a ""position"" and more of a culture. You can still have ""devs"" and ""ops"" and ""qa"" but the culture of DevOps gets all these silos working together and engaged from start to finish. It's sharing the knowledge of how production is configured and deployed with those writing the software. It's letting devs drive the deploy and feeling the pain of downtime and validation.  It's making sure your dev, test, stage, and production environments are made in the same way and deployed in the same way. 

DevOps. Not a position, a culture. ",2014,How 'DevOps' Is Killing The Developer
zeekar,8,"Words, words, words!  Devops is not about one person doing both sides' jobs.  Most importantly, DevOps is not a job or a team; it's a philosophy.  You can't be a DevOp, any more than you can be an Agile.

DevOps means dev and ops talk to each other and work together directly, instead of having to go up and back down through management hierarchies, or only communicating through ticketing systems, etc.  It's about breaking down the ""wall of confusion"" between the dev side and the ops side, not merging them into a single mush.

If your company has a ""devops"" dept or advertises  a ""devops"" position, you're doing it wrong.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,5,[deleted],2014,How 'DevOps' Is Killing The Developer
impecune,3,"The shop you describe is not implementing agile, nor are they implementing devops.",2014,How 'DevOps' Is Killing The Developer
erulabs,1,">If your company has a ""devops"" dept or advertises a ""devops"" position, you're doing it wrong.

Unless your company offers DevOps as a service ;)",2014,How 'DevOps' Is Killing The Developer
arstin,10,"> Totem Pole...Developer is at the top, followed by sysadmin and DBA.

Ugh, the skills required to be a sysadmin or DBA are not a subset of the skills required to be a developer. 

> Good developers can be passable DBAs if need be.

Well, there you go. A good DBA or sysadmin is superfluous. If you have a rock-star programmer, you can phone in the rest and it will be fine. That's an odd stance to take in an article bashing start-up mentality.

It's too bad he can't escape from his own importance - his argument would be much stronger if he realized that not only is your developer unhappy putting time into sysadmin or DBA tasks, your developer is also likely doing a sub-par job at those tasks.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,[deleted],2014,How 'DevOps' Is Killing The Developer
arstin,1,"The ""Totem Pole"" was introduced in the 8th paragraph.",2014,How 'DevOps' Is Killing The Developer
umilmi81,0,"Am I missing something?  He's making the same point you are.  A programmer could be a competent DBA but shouldn't be routinely doing that role.
",2014,How 'DevOps' Is Killing The Developer
arstin,2,"No, he's claiming there is an ordering of competence, with developers over sysadmins and DBAs. That a developer can be a competent DBA, but not vice versa. That is false and conceited. I do agree with the conclusion that if you're company needs developers, sysadmins, DBAs, and QA, that you should hire specialists rather than a bunch of developers and expect them to handle the other tasks - but not just because it kills developers, it also means you're getting inferior databases, systems, and QA.

What is true, is that many software projects need a developer, but (at the beginning at least) don't need a DBA or sysadmin, but rather need a warm body to perform some light database and sysadmin tasks. A developer that can configure a web server is no more a sysadmin than a sysadmin that can throw some Perl together is a developer.",2014,How 'DevOps' Is Killing The Developer
umilmi81,0,"But it is true.  In order to be a skilled developer you need to be able to make database, tables, stored procedures, and know SQL.

But the inverse is not true.  Being a skilled DBA does not require knowledge about how to sort a generic list, send an AJAX response, or mark a DateTime object as nullable.
",2014,How 'DevOps' Is Killing The Developer
arstin,2,"> make database, tables, stored procedures, and know SQL.

I feel like I'm repeating myself. Having these skills does not make you a skilled DBA. As an aside, there are many demanding development positions out there filled by skilled developers that involve none of these.

> Being a skilled DBA does not require knowledge about how to sort a generic list, send an AJAX response, or mark a DateTime object as nullable.

Maybe you can see it from the other direction. If you were interviewing for a lead developer position, would you be impressed by someone that can send AJAX or sort a generic list? Of course not. You also may be surprised to learn that a skilled DBA probably can do all of these things or at least google and learn them as fast as you can do the same for a trivial database task.

",2014,How 'DevOps' Is Killing The Developer
abyssomega,1,"> But it is true. In order to be a skilled developer you need to be able to make database, tables, stored procedures, and know SQL.

I truly hope you don't think that's all you need in a DBA? A *competent* DBA needs to be able to 

* Installing and upgrading the database server and application tools
* Allocating system storage and planning future storage requirements for the database system
* Modifying the database structure, as necessary, from information given by application developers
* Enrolling users and maintaining system security
* Ensuring compliance with database vendor license agreement
* Controlling and monitoring user access to the database
* Monitoring and optimizing the performance of the database
* Planning for backup and recovery of database information
* Maintaining archived data
* Backing up and restoring databases
* Contacting database vendor for technical support
* Generating various reports by querying from database as per need.


[Source](http://en.wikipedia.org/wiki/Database_administrator#Duties)",2014,How 'DevOps' Is Killing The Developer
umilmi81,1,"If you read the whole discussion I never said programmers are expert DBAs.  I said programmers can perform the DBA role in a pinch.  The reverse is not true.  If the database is down and the DBA is out of communication you can call a programmer and he can most likely get things running again.

However if the application needs an emergency fix and the programmer is out of communication, it is very unlikely the DBA can modify the application to get it working.

Source, I am a programmer and after our DBA quit I did the job for 8 years until I got sick of being a part time programmer and part time DBA so I quit.


",2014,How 'DevOps' Is Killing The Developer
Tsarin,4,"> The increasing scope of responsibility of the ""developer"" (whether or not that term is even appropriate anymore is debatable)
  
  I think this term is even more appropriate. They are no longer a 'programmer' or 'coder', they responsible for the whole process.",2014,How 'DevOps' Is Killing The Developer
push_ecx_0x00,3,"I'm really hating this stupid SV trend of trying to hire overqualified/overzealous employees. It's starting to spread to the rest of the country. Employers increasingly want engineers who know 30 different web technologies, can develop a C compiler, have excellent design skills, and spend their weekends programming. It's becoming completely unreasonable how many different things they want us to be able to do.

It would be reasonable to expect someone to do most of that stuff if you were doing super complex work... but chances are, you're not.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,23,"What I got out of this was ""I shouldn't be oncall for my shit, I'm too busy introducing new bugs.""",2014,How 'DevOps' Is Killing The Developer
Deleted Account,3,"I've done this in my past job, but not by some weird company mandate, but because I had the skills necessary and the productivity to fit it into my schedule. 

I'd hate to be forced into it though, it's only fun when the role changes organically to fit needs, not because somebody read a book or a blog post.",2014,How 'DevOps' Is Killing The Developer
ppinette,3,">Such a developer is capable of doing the job of developer, QA team member, operations analyst, sysadmin, and DBA. Before you accuse me of hyperbole, go back and read that list again.

I wouldn't put QA team member in that list. And ""operations analyst"" could mean a lot of things. I'd say a full stack developer only needs to be an operations analyst with regards to the specific software stack he/she is developing for. A real operations analyst would deal with the organization-wide operations.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,Yeah but that's not whats happening in DevOps.,2014,How 'DevOps' Is Killing The Developer
nandemo,3,"> Where did these concepts come from? Start-ups, of course (and the Agile methodology). 

The first part is way off the mark. Many startups adopted the concept of devops, but it comes from the confluence of 2 things: the agile movement, and the rise of  the ""cloud"" (cheap IaaS, PaaS).

I don't have time to write a long comment, but one could make a case that devops are very, very useful in large companies, because it frees your developers from dependencies on the sysadmin team, the DBA team, the QA team, etc.",2014,How 'DevOps' Is Killing The Developer
impecune,1,"[Super relevant](http://tech.mangot.com/blog/2013/05/29/-im-not-a-devops-dot-dot-dot-are-you-an-agile/) link. Also, nothing will free any of those silos from dependencies in the others. As an ops monkey, I don't want to have to do database administration when someone else is getting paid to do it. I just want to agree with my DBAs on what our roles are and be able to cooperate effectively with them when necessary. Same with devs. I don't expect them to do NoOps Netflix style, but I do expect them to take advantage of the provisioning APIs I present to them based on a shared understanding of business needs, learn our TDD workflow so their shit runs on my shit with a minimum of fuss, etc. ",2014,How 'DevOps' Is Killing The Developer
burdalane,3,"I guess I'm a full-stack developer and DevOps, and I was one long before I ever heard the terms. I have a CS degree, and I wrote code in college, but along the way, I got sidetracked by impostor syndrome and took a ""safe"" job close by that required some programming and some system administration. I actually knew very little about system administration at the time. Over the years, I've become a generalist, and I consider myself full-stack because I have written code for the back end, done system administration, and written code for the web. I'm also on call to keep servers up and running, but I don't like doing that part at all. I dislike handling requests like creating a new user account, and it annoys me when someone refuses to learn their own environment. They would be a lot more efficient if they didn't have to ask me to run 'ls' for them. 

I don't like being relegated to hardware administration, OS installs and configuration, and user support, and I don't like being support and maintenance instead of being close to the product, but I'm not sure if I'd like spending all my time producing code, either. ",2014,How 'DevOps' Is Killing The Developer
TheChiefRedditor,3,"A full stack developer is one who is capable in all layers/tiers of developing web-based and/or distributed enterprise systems. It doesn't really have anything to do with whether or not they can do Ops, deployment management, QA/testing, or other non-developer roles. It's just a developer who can write code for the front end and the business tier and all the layers in between...or so I thought.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,3,"I love the analogy of a dentist, because it's just a joke. Since this is /r/programming I might get flamed but as a sysadmin that's complete bullshit. I can do dev work if I spend the time learning it. Developers don't need 3 years of Uni to learn how to be developers like Dentists do and a lot of developers with degrees write code I look at and want to throw in the bin and re-write (and sometimes do).

But that's completely besides the point. DevOps isn't about cross-functional roles. Read more [here](http://continuousdelivery.com/2012/10/theres-no-such-thing-as-a-devops-team/)",2014,How 'DevOps' Is Killing The Developer
crunchydiodes,3,"DevOps is the new agile, in that it is a good idea at heart, but is frequently used as a label for bad practices.

In the same way that bad managers used to use agile to mean ""no need to plan, guys, and you can just work late when the deadline is near!"", now bad managers use devops to mean ""hey developer, do all this non-development crap because we're not hiring specialists any more"".

The trick in my experience is to mainly ignore the labels, and react based on the substance of someone's idea for organization.  Sadly in many organisations there's a risk that you'll just get branded as ""anti-agile"" or ""anti-devops"", unless you're very careful to phrase your criticisms as ""I think what devops really means is..."" without fail.",2014,How 'DevOps' Is Killing The Developer
crunchydiodes,3,"The author's point about ""full stack"" developers is actually pretty good, this is a buzzword that hasn't had enough scrutiny.  It started out as a fairly well defined thing: basically meaning all four letters of LAMP.

I get a giggle out of snarky comments like ""I'm not calling you a full stack developer unless you know VHDL"", because they highlight that a lot of these new terms are actually borne of web development (used to be a separate category to software development until pretty much all new UIs became webapps).

""Full stack web developer"" makes perfect sense, in that you can set up a web site on a server, write HTML, CSS and Javascript.

""Full stack software developer"" is usually nonsense, because roles almost never need you to understand the machine all the way from the Translation Lookaside Buffer all the way up to Angular.js.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,[deleted],2014,How 'DevOps' Is Killing The Developer
crunchydiodes,1,"Just because a cow has four legs and a horse has four legs doesn't make a horse a cow.

(just trying to fit in)",2014,How 'DevOps' Is Killing The Developer
dev_ire,5,"""I don't understand any of these terms so here is why I misinterpret what a combo of these roles entails""",2014,How 'DevOps' Is Killing The Developer
remy_porter,8,"I'm pushing DevOps in my organization because I'm sick and tired of trying to interface with infrastructure teams myself. I just want to write some goddamn code and have a high degree of confidence that it'll work when it's deployed. Infrastructure just wants to run their hardware without anything breaking, and they don't care if my job is easy. DevOps can sit in the middle and make both sides equally unhappy.",2014,How 'DevOps' Is Killing The Developer
veni_vidi_reddit,13,"There's a reason for this. ""DevOps"" (for lack of a better term) should not be about doing your own thing, but about communication. The ops team is there for a reason. True, sometimes they need to learn new tricks, but their *job definition* is to make sure things run.

> Infrastructure just wants to run their hardware without anything breaking, and they don't care if my job is easy

So they should make their jobs harder to make your job easier? If your code breaks something at 4am, is it you that will have to wake up to fix it - or them? I think you're missing an important point of ""DevOps"": communication between dev and ops.

> I just want to write some goddamn code and have a high degree of confidence that it'll work when it's deployed

I'm sorry but that's not good enough. Which version of software libraries do you personally use in development? stable or development branch? ;)",2014,How 'DevOps' Is Killing The Developer
smurfhater,4,"> So they should make their jobs harder to make your job easier? If your code breaks something at 4am, is it you that will have to wake up to fix it - or them? I think you're missing an important point of ""DevOps"": communication between dev and ops.

I used to believe that, then one day my director decided we're going into ""the cloud"".  Now there's not really a ""them"" to cooperate with.  Do you think AWS or MS Azure will help tune my web service that I deployed?

I really think deploying to offsite VMs is a huge motivation for all this.",2014,How 'DevOps' Is Killing The Developer
judgej2,1,Does moving the provider of the hardware service to another location mean you lose your local systems support to the same organisation? It does not have to be that way.,2014,How 'DevOps' Is Killing The Developer
smurfhater,1,"Not necessarily.   I think this just adds some strategic importance on making the software more agnostic about the execution environment.   

E.g. don't assume filesystem or network details.   Sounds obvious but I've seen bugs come ti the surface only after deploying to a 3rd party ""cloud"".",2014,How 'DevOps' Is Killing The Developer
judgej2,1,"I gave a talk about filesystem abstraction at my local PHP user group back in February. A local filesystem is certainly something we have all taken for granted for a long time, but we really can't afford to do that these days. 

Edit: some details about the talk and slides, just out of interest: http://academe.co.uk/2014/02/phpne-talk-filesystem-abstraction/",2014,How 'DevOps' Is Killing The Developer
henk53,5,"> If your code breaks something at 4am, is it you that will have to wake up to fix it - or them?

This statement is often abused for a lot of things unfortunately.

There are LOTS of things that can break in code. The very core algorithms and software structure that is totally under the control of devs are much more sensitive to break things. One small but nasty bug can bring the entire application down. The team's experience, and a healthy amount of automated tests and QA seek to minimize these risks.

But then ops come in and think that by denying a request to update JSF for a Java EE shop, they can somehow guarantee a better uptime of the application? Since upgrade is risk, and all developers are morons that don't understand the risks of upgrades?

And then of course comes the treat; ""We don't want to upgrade your damn JSF lib, but if we do and something breaks at that magical 4 AM you have to be woken up and fix it!""

But how is this different from any other code change that's made to the application? You know, these code changes that happen daily? If they break something and QA doesn't catch it, will ops be able to fix anything then?

Of course not! Ops has no idea about why a particular service wasn't injected into a particular bean that has request scope but should have had view scope. Such things have to be fixed by dev anyway.

So the 4 am threat is pretty useless. If dev says a new version of JSF is needed, then a new version of JSF is needed. Period. In the first place the task to (ultimately) decide over the version of JSF should not have been given to ops in the first place, but if it unfortunately has been they should not make treats about it.

Again, this would be akin to making treats about deploying a new version of the application that dev has developed and that has been tested.


",2014,How 'DevOps' Is Killing The Developer
veni_vidi_reddit,0,"Hard to disagree with you, since you're describing the other extreme :)

There is a difference between between being 3 JSF versions behind because ops wants to continue reading Reddit all day, and pushing a patch every time dev wants to see if something works.

To be fair, I am probably skewed towards ops because nature my business requires maximizing uptime vs pushing new features :)",2014,How 'DevOps' Is Killing The Developer
henk53,2,">Hard to disagree with you, since you're describing the other extreme :)

:P

>pushing a patch every time dev wants to see if something works.

But I don't think this is what a responsible dev team asks for. I mean, a good dev team also doesn't just deploy some experimental code to production to see if something works, do they?

The idea is that dev tests their code together with all dependencies locally first, then on a dev staging server, then a branch is made, the whole thing (code + dependencies) is set up on a beta/QA server and finally when there's sufficient confidence that everything works is it deployed to production.

What we have is basically a pipeline where the product that we develop and comes out of it is seen as a combination of the JVM + AS + EAR (application archive). Depending on what has changed during a sprint what we deploy to production is either a ""full deploy"" (all above mentioned element) or a ""medium deploy"" (JVM + EAR or AS + EAR) or finally a ""small deploy"" (just the EAR).

Part of this is that we build the AS from source. If we only need a patch update of JSF (say Mojarra 2.1.26 instead of Mojarra 2.1.25) we build the entire AS again and the result is an artifact with an incremental version (e.g. GlassFish-3.1.2-our_company-3 for our third build of GlassFish 3.1.2).

Perhaps needless to say a new build of the AS goes through the same automated test suite that's being used if only the application code was changed.

With this setup there are no negotiations and begging sessions needed with an ops team. The output of a sprint is what's deployed and that's it ;)",2014,How 'DevOps' Is Killing The Developer
remy_porter,1,"> So they should make their jobs harder to make your job easier?

No. Someone who cares about both sides should be involved in the process- I don't care, and will *never* care about infrastructure. Operations will never care about my code. There needs to be a cross-functional group that cares about both. Just don't put me on that group.",2014,How 'DevOps' Is Killing The Developer
veni_vidi_reddit,1,"> I don't care, and will never care about infrastructure

What sort of development do you do? I found that in my area (SaaS) it is impossible to be a good developer without knowing a bit or two about infrastructure...",2014,How 'DevOps' Is Killing The Developer
remy_porter,1,"Depressingly, I sometimes know more than the infrastructure team. I'm overstating my case, but I'm going to build a package that contains all of its dependencies. It's going to define its endpoints.

It should _just work_. And then I get pushback, because the deployment process is too automatic. Or because we've never used CORS before. Or because ops thinks my intranet-based web service is too chatty, or they don't like the size of the messages that it passes around (despite these decisions being driven by the business needs). And yes, infrastructure has put several roadblocks in place against manual deployments.

I guess the reality is that I just feel like the infrastructure team spends more time as an obstacle than a facilitator, and since they're not customer facing, they don't care about that (well, they are customer facing, but to different customers).",2014,How 'DevOps' Is Killing The Developer
dataloopio,3,"Speaking from experience, creating another team hardly ever works. Someone at the top needs to bite the bullet and merge dev and ops together. This is painful but necessary.",2014,How 'DevOps' Is Killing The Developer
remy_porter,2,"They need to be managed together, for sure, but both dev and infrastructure are specialized enough that having someone that can sit between them is great. I don't know, and don't *want* to know the details of the server topology that my code runs on. ",2014,How 'DevOps' Is Killing The Developer
judgej2,2,"Yes, top-level buy-in is the start.",2014,How 'DevOps' Is Killing The Developer
judgej2,1,"> I just want to write some goddamn code

So you are actually less interested in devops and would like to stick to dev, if you could. But you want a more cooperative ops team.",2014,How 'DevOps' Is Killing The Developer
remy_porter,1,"I want the results of a more cooperative ops team- I want someone who understand development and packaging well *enough* that they can intelligently discuss the requirements with infrastructure, and somebody who understands infrastructure well enough that they can spot ways that infrastructure should inform my design.

I want an actual cross functional team that interfaces with both developers and operations, and I don't want to be *on* that team.",2014,How 'DevOps' Is Killing The Developer
judgej2,1,"Those are great objectives. I am not convinced there needs to be that middle team to bridge the gap though. The gap should, and can, be closed instead. And that may be what actually makes ""devops"" a fallacy, nothing more than pulling down the walls between the two disciplines.",2014,How 'DevOps' Is Killing The Developer
remy_porter,1,"Right, but I'm arguing that the disciplines are specialized enough that those walls are going to be there. It'd be nice to make a cross-functional organization, but in a sufficiently large organization, that just isn't going to fly. A smaller, cross-functional team is going to be more successful.

Moving the two teams under the same management branch is a good start, but isn't going to solve the problem (I mean, technically, my organization puts all IT under the same management tree- it doesn't help, because infrastructure has enough work to do supporting packaged applications that they can't really support our custom stuff).",2014,How 'DevOps' Is Killing The Developer
rockon1215,9,"As someone who's interested in programming, sysadmining (is there a better way to describe that?) and DBA, I'd rather be in a DevOps role than a ""developer only"" role.

Also, who the hell wants to only do DBA? I'd kill myself if that was my only job",2014,How 'DevOps' Is Killing The Developer
Deleted Account,14,"> Also, who the hell wants to only do DBA? I'd kill myself if that was my only job

Being an Oracle DBA is a great gig, if you're in the industry only for good salary. All DBAs I know want to just collect their (big) paycheck and go home. Nothing wrong about it.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,20,"Yeah, people do what they enjoy.

I get a similar question ""How can you stand to just sit at a desk and stare at code all day?"" .. and my thought is ""How could I stand anything ELSE?""",2014,How 'DevOps' Is Killing The Developer
Deleted Account,8,"Thanks for this comment. I caught myself thinking ""How can a person be in HR? I would go crazy."" earlier today. You put it in perspective.",2014,How 'DevOps' Is Killing The Developer
sonicthehedgedog,4,Word.,2014,How 'DevOps' Is Killing The Developer
prepend,2,"I guess. I remember back in the 90s/early 2000s when there were lots of DBAs. Most orgs I know of have really reduced their number of bodies. The last company I worked for went from 6 full-time DBAs to 2. Largely because of automation and devops. The DBAs only did serious stuff and the automation did all the deployments and maintenance.

The problem with DBAs vs. Developers is that automation eliminated DBA jobs and just shifts developer jobs to doing something else. It's pretty rare to find a DBA who can shift from writing PL/SQL to stuff outside the database.",2014,How 'DevOps' Is Killing The Developer
mreniac,1,"My biggest argument with DBA folk is their day-is-done mentality at 5pm. If a DB is down, your'e not done. 

It's shameful that I go about implementing all sorts of monitoring, metrics, graphs, all these things I spend my time sorting out, only to have a DBA gripe the next morning that a 'a database was down and your monitoring hassled me all night'. YEP! Production database is down; your'e getting hassled! Get to work! Now I have to figure out how to bounce the app because that admin won't wake up either.

Slowly I'm learning to ack the notifications and go back to sleep if it's not actually my problem.",2014,How 'DevOps' Is Killing The Developer
dfdashh,3,"You can do rather heavy programming entirely within many databases. My title is ""DBA,"" but really I'm programming in Oracle PL/SQL and designing data structures that best fit my business's needs.",2014,How 'DevOps' Is Killing The Developer
rockon1215,5,"I wasn't trying to insult DBA's. Just the thought of only doing that one specialized subfield within ""programming"" just scares me personally. I like doing different things within the field",2014,How 'DevOps' Is Killing The Developer
fuzzynyanko,4,"The corporate world, unfortunately, isn't good for this. Startups are, though. ",2014,How 'DevOps' Is Killing The Developer
backlash_jack,1,"I just went from devops to dev-with-no-ops and it rules, but I've already done 15 years of various sysadmin/webmaster/tools dev jobs.  i love not having a pager, i love that every fire isn't my problem or something i need to be aware of, and when something breaks i can get someone else to fix it for me or i can just do it myself if i feel like it.  really, devops is fun because you do a bunch of stuff and it's a really important to the company, but it's only fun for so long, it can be a major drag, especially if it's a high pressure environment.

i couldn't handle being a DBA either, but you know, every specialty draws a personality, which is why the sysadmins always know where to get good weed.",2014,How 'DevOps' Is Killing The Developer
impecune,1,"I think you mean alcohol. All the sysadmins I know geek out on beer/scotch/bourbon/etc., while the devs just know where the party's at. 

In my experience it's the DBAs who know where the good weed is and they're not sharing because they're always too blitzed to understand anything anyone else is saying.",2014,How 'DevOps' Is Killing The Developer
Dax420,1,"""System adminstration"" is probably the term you wanted.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"Talented pure DBAs are almost exclusively really weird people who are really, really (really) well compensated.",2014,How 'DevOps' Is Killing The Developer
trimbo,3,"> can you imagine interviewing a chef and asking him what portion of the day he actually devotes to cooking?

Can you imagine interviewing a chef and not expecting them to be able to do everything within a kitchen?",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"And of course, a head chef may well not do all that much actual cooking. Also, ""cooking"" isn't really a single activity, much like ""shipping software"" isn't a single activity.",2014,How 'DevOps' Is Killing The Developer
abyssomega,1,"> Can you imagine interviewing a chef and not expecting them to be able to do everything within a kitchen?

False equivalency. To be a chef, it's **expected** that you've actually been a head cook, a line cook, a dish washer, a Sous, and in some places, even a waiter. Before you're a developer, do they make you do QA, DBA, desktop support, installation, A+ certs??
",2014,How 'DevOps' Is Killing The Developer
Deleted Account,2,"I feel like this is a general trend in all cutting edge positions. Engineers in many companies often become more and more ""full stack"" as everything they touch magically becomes their responsibility.

Design a piece of equipment, tell people how to make it, test it, and then help market it. That's a pretty normal workflow for a design engineer in most mid-size manufacturing companies. At one point, all they did was design it. But something went wrong with making it, and the engineers knew the best way to fix the problem as they have the most experience. Then the chain of responsibility just kept going on and on... ",2014,How 'DevOps' Is Killing The Developer
Madd0g,2,"It's funny, it's the exact sale method I've been using in interviews - ""hire me because I can do it all"". I don't want to specialize, so shoot me. No, don't shoot me, that's the opposite of the point I was trying to make.

I like learning new stuff and experiencing new technologies, I can't imagine knowing only one side of the stack (like only back end or only front end). I don't understand how people who are specialized in only one part of the stack get work done, if they need to wait for other people all the time.

So yes, I hope to have a DBA around someday, or maybe someone who can restart and monitor the applications I build. But there are dozens of things I want from my workplace, these are not at the top. 

Interesting take on the direction of efforts, makes a lot of sense and I never thought about it that way. But giving me tasks that aren't pure development tasks usually means they'll be done faster and without errors. I like being the go-to guy. Sorry.",2014,How 'DevOps' Is Killing The Developer
bannerad,2,"I don't at all agree with this guy.  At any minute I expect him to tell me to get off his lawn.

""Full Stack"" is where its at in this day of micro-services and continuous deployment.",2014,How 'DevOps' Is Killing The Developer
westurner,2,"To take a step back, the article seems to present a dichotomy of roles between 'developer' and 'operations' (e.g. 'web application developer' and 'systems administrator').

The job, as I understand it, is **information systems engineer**. As an information systems engineer, the job objective is to produce a system which supports information flows between a number of appropriate clients, while minimizing error.

The job, whether it is 'more on the developer side' or 'more on the operations side' is to support this objective; as a valued component of a team that is (maybe should) always operating with relatively constrained resources.

I don't know how the article could suggest that operational process control and change control are at all preventing developers from coding.

""I can't get anything done because I've suddenly realized how much work it is to realistically run my own PaaS on an IaaS with my standby 'install.sh'"" is not a valid argument.

It makes perfect sense to minimize error. Developers should be concerned with scale. Systems should be concerned with which applications they are putting in the cloud.

I routinely argue for holism in science fields to counteract specialization entropy. The fields intersect; that is where inefficient communication and handoffs happen.",2014,How 'DevOps' Is Killing The Developer
watersign,2,-_- its articles like these that make me want to become a plumber or mechanic.,2014,How 'DevOps' Is Killing The Developer
leftofzen,2,"The use of the term 'DevOps' is completely misleading in this article.

At my work, we have development teams who do programming/testing, and application teams who do deployments, set up hardware and so on. Our clients talk to the apps teams when they have problems. If it is a feature request our clients talk directly to the devs. This system shields the devs from pain of system maintenance and the like, and gives the clients a dedicated support team.

This is by far the best system I've worked in; its clean, efficient and lets us devs write code instead of doing 'ops' work.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,2,"The author claims that large corporations love DevOps because it means they can hire less support engineers. However he also points out that developers have less time to develop. This means that you'll have to hire more developers to get the same amount of development done. So which is it?

I think the author has oversimplified what is required to run a software business. It's helpful to have developers do some amount of QA and ops because they know their software better than anyone else. The trick is having developers properly train support engineers, so they can get back to developing. ",2014,How 'DevOps' Is Killing The Developer
land_stander,2,"My company is in the process of doing this exact thing. Developers are now expected to do QA, as well as train the now abolished QA resources who are suddenly developers. We are also expected to find time to try to automate testing and deployments in between sprint work. And we are losing people, yet our commitments don't change. With all this we are still expected to get more and more features done. And they are wondering why our performance in prod is so terrible! Add performance overhauls to the to do list. 

This is my first job out of school and I am getting a ton of great experience, don't get me wrong I appreciate where I am. But I think it's ridiculous what they are doing to us. If nothing else in glad I'm not the only one is happening to. Solidarity. 

Thanks for the article OP. ",2014,How 'DevOps' Is Killing The Developer
free_at_last,1,"Well what's wrong with developers doing QA?

It shouldn't be down to the QA team.

Everybody should be doing everything - you are all responsible for this product. You are all responsible for getting it tested, bugs fixed and released. As in, if you find a bug in production, it isn't someone's fault, it's the teams fault.

If a bunch of automated tests get skipped, it isn't that developers fault. It isn't the testers fault. It's everyone's fault.

If a release is drained of a few features because of various issues meaning the user stories weren't delivered, it isn't the developers fault. It's everyones fault.",2014,How 'DevOps' Is Killing The Developer
land_stander,0,"I won't get into an argument about what QA means and who should do it. I test and debug my own code, who else would? The problem is that when I was hired, there were dedicated QA to really dig in and tear apart code. To test how new features impact the system as a whole, to think of test scenarios I can't. Now they abolish that role and simple increase all the developers responsibilities without increasing the size of the team or reducing release scope.

As far as automation goes, developers have always written automated unit tests. No problem, it's necessary and I think unit tests are kinda cool. When I say they want us to automate testing I mean writing selenium ui tests from the ground up. And come up with automated deployment systems. Both of these are fine, and necessary. But this is on a product years in development that has none of this and they aren't giving us official time to work on it in the sprint. They want us to just find the time. That is the problem.

I want my product to succeed and I work hard to make sure that happens. We are even somehow finding the time to do all this stuff I talked about above. The problem is that it is exhausting, for all of us. Does it count as failure if the business has unrealistic expectations of us? We are a team, but every team member shouldn't be expected to fill every role. The quarterback has to run the ball sometimes, but that isn't his main responsibility or even what he is really trained to do. (maybe not the most well worded metaphor, I'm not a sports guy :) 

I love my job and I love software development. Maybe I'm young and naive, but this doesn't seem like the right way to make software. ",2014,How 'DevOps' Is Killing The Developer
free_at_last,0,"That's the point - everybody should be responsible for QA. You should be manually eye-balling your code as well as everyone elses. You don't need to hire a ""tester"" to do that. After all, that's all a tester does right? You then have automated tests to prove you haven't introduced a regression.

Similarly with automation tests - it's code. You absolutely do not need to hire a ""tester"" who can code. It's code. Whether it's API, UI, Unit or Integration tests. It's all code to test your own code. That's why developers are expected to do it. You can code, so what stops you (apart from time) writing *more* code to prove your application works now and will continue to work in the future?

Realistically speaking, testers are just there to break the code - but you can easily argue that when your PO should be testing it too. In which case, it's not just you that tests, it is also your peers AND your PO

""Testers"" are not required.",2014,How 'DevOps' Is Killing The Developer
abyssomega,0,">>That's the point - everybody should be responsible for QA. You should be manually eye-balling your code as well as everyone elses. You don't need to hire a ""tester"" to do that. After all, that's all a tester does right? You then have automated tests to prove you haven't introduced a regression.

Hmm. Not only are you wrong, but you're *dangerously* wrong. It's the same reason why professional basketball teams have head coaches, assistant coaches, trainers and players. Any competent basketball player could call plays and figure out situations based on experience, strategize and game plan. **But**, you're taking away valuable time s/he could be using to further their specific craft, instead of being a generalist. 

In software, QA is there to make sure that not only does the software **not** break and work properly, but to make sure that the business requirements are also being adhered to, and to further give evidence of how far long the development process actually is.",2014,How 'DevOps' Is Killing The Developer
free_at_last,0,"> but to make sure that the business requirements are also being adhered to

PO's job -> you should be demoing your stuff to them and they should be verifying it

> and to further give evidence of how far long the development process actually is.

Any piece of project management software and decent task breakdown can do this

> QA is there to make sure that not only does the software not break and work properly

It's why we have automated tests, to do the job in a far quicker manner.

Your points no longer relevant in 2014.

Take pride in your team's work for god sake! Don't shove the work onto your testers to do.

So who's at fault for a bug in production? If testers are the only ones actually looking at your application, in your world, it can only be theirs, right? Right?

**WRONG**",2014,How 'DevOps' Is Killing The Developer
Gotebe,2,"Balancing the ""Jack of all trades, master of none"" is the key thing here.

It depends very much on the business itself. When it's something new and small, it likely does not have the $$$ to pay specialists for various roles, and it likely does not have the need for a full-time specialist for each role either. When it's well established, things change: you don't want people effectively learning the other roles off Google and doing it ""on the go"".

It's all about common sense and honesty between different roles, management included.",2014,How 'DevOps' Is Killing The Developer
Philluminati,2,"I work for a large company moving to this system. Instead of dev manager, test manager we're ditching them and dividing the system in responcibles each sitting under a head of tech for delivery in a specific area. To support this we're moving to SOA so lots of small services providing restful or message queue interfaces to upstream / other teams. We're also moving from puppet managed by devops to unicorn managed by urr me.

The impact? Everything is slowing down to a halt for us. Some teams are off writing new services and letting our shared monolithic code base rot. It's becoming more fragile as there isn't the man power to overhaul the framework and move it since people have walked away from the code base without deleting their areas of functionality (because that's low priority for them). If they just deleted all their now-redundant unit tests that could save us a nice 30 minutes.

I'm oodles of time rewriting the rpm spec and init scripts to simulatanously cope with being in both the classic system and the new wizzy do it ourselves model so I can ensure at any one point we can keep the release process available.

In the meantime our project is starting to run late. We used to average 35 points per iteration but we're seeing that drop off and the truth is, with so much additonal stuff, without the time to adjust to the role and write the supporting logic.. I'm averaging 2 hours a day of code max, which just isn't enough. ",2014,How 'DevOps' Is Killing The Developer
smurfhater,2,"I recently intereviewed to be a manager of a DevOps team in a different division of my current company.  (I didn't get the job).   One of the directors interviewing me asked how I planned on motivating ""ops"" guys who were accumstomed to instant gratification, so they would transition into more proactive developer roles.

That question really stuck with me.  Not because of the management aspect, but the personality differences between your typical developer and your typical operations/sysAdmin.

Often times a developer does what he feels is best because that's what he believes - sometimes to a fault.

A systems admin is used to fighting fires, answering phone calls and emails from important people, and generally living in the moment, often seeking the approval of others.

For whatever reason I always presumed ""DevOps"" meant sys admins acting as devs, not the opposite direction.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,8,"> For whatever reason I always presumed ""DevOps"" meant sys admins acting as devs, not the opposite direction.

I'd say that should be part of it. I'm the admin who will get fed up with seeing errors barfing all over his logs, dig up the source code, open a bug with the relevant error and section of code, and possibly a fix. 

But, my primary role is being an admin, not a developer. I know some C, Java, PHP, Python, Perl, etc. because it makes me a better admin.

DevOps isn't a role. It's a way of having the dev and ops sides of the house interact with each other better. Essentially, trying to remove that ""us vs them"" bullshit. ",2014,How 'DevOps' Is Killing The Developer
Deleted Account,2,"Right. Well, I probably qualify as a full stack developer, since on a given day I will add a table to one of our SQL Server databases, restart an IIS server, push out a new service, write some C# code, modify a python script and do some testing to make sure it all works.

OP tries to make it sound like this is ""new"" or some kind of a fad. Ehm, this is how most programming is actually done. Sure, bigger corporations may segregate operations and development, but if you're running a small team (not necessarily a startup, mind you!), this is the most efficient way to Get Shit Done^TM",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,">bigger corporations may segregate operations and development,

Which is often a terrible idea, even in larger companies. That's actually one of the major points behind the DevOps movement.

",2014,How 'DevOps' Is Killing The Developer
andrewfenn,2,"> Jack of all trades master of none

Nope sorry, that's not true. YOU might be a master of none, I however am not you. You're only doing a disservice to your fellow programmers when you say this as people get undervalued.",2014,How 'DevOps' Is Killing The Developer
GoingIntoOverdrive,2,"I found this article to be a bit weak. It's more of a tiny little opinion blog post rather than anything substantial. The author obviously has some issues with the way (in his experience) these terms have been used and applied and is venting about it. It didn't seem to hold all that much weight as there was no data to back up what he was saying.

Also, I have experienced first hand that developers are actually not capable of handling these jobs that are supposedly ""below"" them on the totem pole. Many developers never actually learn the skills required to be a DBA or provide application support proper. Their abilities in these arenas are the same as any other technically inclined person with some experience. That is to say, they're 'bottom of the barrel' options for most of these things because they don't understand infrastructure requirements, customer interaction or long-term side effects of certain decisions.

Frankly, I thought the article wasn't all that interesting. I was hoping for so much more based on the title because I do agree with the promise of the premise he set out. DevOps is something that can be powerful but should be strategically considered rather than just set as a base requirement because ""that's how we do things now"".

EDIT: In the business I work in we have a 40 man application support team comprised of four lines. The first two are investigate / identify / find immediate solutions teams. The latter two have additional duties for verifying and testing bugs, feeding back to dev and documenting new issues as well as providing alpha bug testing alongside our QA team. This way, customers get a voice through the application support team and devs get to work from a product management perspective.",2014,How 'DevOps' Is Killing The Developer
we_cant_stop_here,1,"I would actually argue the other way as well:

Sysadmins are increasingly being called on to do automation, which requires a working knowledge of a proper language (usually not bash), along with pseudocode of something like puppet. Used to be that all you needed was some bash, maybe a bit of perl and python - not much of that anymore as the 'devops' is being pushed around. The sysadmin is now expected to be a programmer as well, in addition to his/her regular job of being a kernel tuning expert, virtualization expert, DB expert, hardware expert, and networking expert.

As a sysadmin, I feel a bit sorry for developers who now discover that they have to learn how to do all those things. Sysadmins on the other hand always had to keep many balls up in the air already - just have to add one more for those so called 'devops' roles...

Oh, and I say 'devops' because like some others I view the term as a proper feedback loop between dev and ops, rather than a specific job title.",2014,How 'DevOps' Is Killing The Developer
SanityInAnarchy,2,"Can't help but disagree. Let's start with this shitty analogy:

> ...My dad is a dentist running his own practice. He employs a secretary, hygienist, and dental assistant. Under some sort of ""DentOps"" movement, my dad would be making appointments and cleaning people's teeth while trying to find time to drill cavities, perform root canals, etc. My dad can do all of the other jobs in his office, because he has all the specialized knowledge required to do so.

> But no one, not even all of his employees combined, can do his job.

The difference is, his dentistry skills don't actually make the secretary obsolete. He can't replace his secretary by taking a dental drill to his appointment book once a week. If he could, would it really be worthwhile to employ a full-time secretary to do all those appointments manually?

Or to put it in more concrete terms: If his secretary could be replaced by [something like this](http://www.acuityscheduling.com/), why would he want to deliberately do things the less efficient way?

If you think DevOps just means your developers also ssh into servers and restart Apache, you're Doing It Wrong. DevOps means your developers *automate sysadmins out of a job.* Which means, incidentally, that any developers who work on the sysadmin stuff are still programming, still need to be able to pass FizzBuzz, and so on.",2014,How 'DevOps' Is Killing The Developer
impecune,2,You're mixing up devops and noops.,2014,How 'DevOps' Is Killing The Developer
judgej2,2,"> DevOps means your developers automate sysadmins out of a job

In my experience, Ops automate themselves into a simpler, more responsive, and more reliable job. You don't make ops disappear because their job could ""easily be replaced by robots"". You work together more closely, to make *everyone's* job easier.",2014,How 'DevOps' Is Killing The Developer
SanityInAnarchy,1,"And if that's the case, I'd call those ops ""developers"" and want them to pass FizzBuzz. I'm not necessarily against specialization here.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"Interviewed at a place that had 30 of these types of developers and no sys admins.  Each of them had root access.  I shutter to think what fucks ups happened there.  Sys admins are worth their weight in gold, no matter what some developers think.",2014,How 'DevOps' Is Killing The Developer
SanityInAnarchy,2,Read my last paragraph. This place was Doing It Wrong.,2014,How 'DevOps' Is Killing The Developer
rockum,1,"I've never heard the term ""DevOps"" but what he described is what we were doing 25+ years ago.  I much preferred it as opposed to being just a coder now.",2014,How 'DevOps' Is Killing The Developer
_jackrogue,1,This sounds similar to backlash against an industry where jobs are being reduced due to automation.,2014,How 'DevOps' Is Killing The Developer
bigfig,1,Waterfall was *not* considered good practice [even back in the day](http://youtu.be/NP9AIUT9nos?t=9m23s).,2014,How 'DevOps' Is Killing The Developer
defpearlpilot,1,"I've been a full stack developer for about 11 years.  I can't imagine being in an environment where I'm not.  I suppose it suits my personality.  But I find it to be quite practical as well.

If you are developing with any ""agility"" you will lapse in documentation.  Typically developers teams are larger than support and QA teams and there is no way they will be able to keep up.  If you have developers that are writing bad code, there is no penalty for it otherwise.  Having developers doing support helps them learn the code base as well.  It's a also a very good way to encourage writing more tests so that frequently breaking code is protected.

If you don't have developers doing releases, they don't know the pain that can come about.  We can't do production releases but all of our other environments are deployed identically.  

I was never one to shy away from learning as many things as possible.  I think it's been a definite advantage in my career.  

",2014,How 'DevOps' Is Killing The Developer
makis,1,"I was raised as full-stack developer in the nineties when the term 'start-up' wasn't abused.   
I like being a dev-op, much more than being just a dev or a op.",2014,How 'DevOps' Is Killing The Developer
biffsocko,1,"At one point every SA was a developer - Prior to software packages (rpm/deb/pkg type packages) circa 1995, we'd have to install software by compiling, mucking with Makefiles, recoding parts of the source (because the code may have been developed on AIX, but now we're porting it to Solaris - for example).  Additionally, SA's were responsible for developing automation tasks that would run through cron, or building monitoring and inventory tools.  

I think of the DevOps gig as basically just an old-school sysadmin job.",2014,How 'DevOps' Is Killing The Developer
free_at_last,1,DevOps doesn't need to be labelled as another role - it isn't.,2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,">Somewhere along the way, however, we tricked ourselves into thinking that because, at any one time, a start-up developer had to take on different roles he or she should actually be all those things at once.

Its actually the other way around. People are naturally generalists and only when industry takes itself too seriously do you get specialists. ",2014,How 'DevOps' Is Killing The Developer
thebuccaneersden,1,"I don't agree with Jeff Knupp and what I take the most issue with is his mindset/attitude. As a tech person, I am always curious about technologies. I run my own personal servers and, while I'm a developer, I don't like being boxed in. I love getting involved in many things and I know what my limitations are and where a proper sys ops person is valuable.

Code does not exist in isolation to the systems they get deployed to... So I don't understand why my involvement and curiosity should end there.

The tools we have now allow teams to be empowered so that the devs and the admins are able to manage their deployments and architecture and have reduced friction by having more transparency over the whole process.

This article just comes across as an article written by someone who doesn't really see his work as a craft, but rather a 9-5 job.",2014,How 'DevOps' Is Killing The Developer
vagif,2,">has given rise to a chimera-like job candidate...of doing the job of developer, QA team member, operations analyst, sysadmin, and DBA. 

Where the hell this guy been hiding last 30 years? Who told him it is a recent development?

I've been doing all of those practically my entire career (> 20 years)

It is a natural state of capitalism, saving on a salaries by forcing employees take upon several roles.
",2014,How 'DevOps' Is Killing The Developer
skillet-thief,5,"> It is a natural state of capitalism, saving on a salaries by forcing employees take upon several roles.

Ironically, capitalism has often been all about increasing specialization.",2014,How 'DevOps' Is Killing The Developer
vagif,3,"You are wrong. Capitalism is all about decreasing costs. If specialization helps with that then it will be utilized. Otherwise no.  
IT is one of the areas where automation is very hard to achieve and a lot of tasks are still manual. In such environment, specialization leads to increasing the number of high salaried jobs without bringing down costs much. Hence moving in the opposite direction. Having less people do more tasks.
",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,Are you serious? The tech industry is not very automated? I would argue that software development is one of the most automated practices in existence. When was the last time you wrote assembly?,2014,How 'DevOps' Is Killing The Developer
vagif,1,"What are you talking about? Writing java is no more automated job than writing assembler. Both are manual jobs.

Add to it a lot of manual work at every step (not only developer). QA is manual job, DBA is manual job, server administration, maintenance backups, restores etc , all this are manual jobs.

Way to completely miss the point. Just because we programmers automate someone else's job, does not mean ours is automated.
",2014,How 'DevOps' Is Killing The Developer
Deleted Account,-1,"I'm missing the point?

> Writing java is no more automated job than writing assembler.

The whole point of Java is that it automates just about everything for you: memory management, text and graphics display, file access, communicating over a network.  The JVM is *automated* in that it takes care of all of the bitch work for you, and you just focus on business logic.  For example, the JVM *automatically* garbage collects.  AUTOMATICALLY.  You dullard.

Being a good developer means automating your own work when you find yourself repeating anything.  That's why compilers were written.  If you find yourself typing in the same console commands over and over again for a certain task, you write a shell script for it.  That's what I mean by our jobs being AUTOMATED - you can write code to AUTOMATE processes for you, and whatever you're doing, you're taking advantage of AUTOMATION that others have set up for you.  Like in Eclipse, you can refactor code, renaming a class method and all of its references throughout your project...

...

...

**AUTOMATICALLY**",2014,How 'DevOps' Is Killing The Developer
NoOneLikesFruitcake,0,">Developers must also take responsibility for the quality of the testing and release environments.

Yes... yes they should.  That got me from the start of the article and it was kind of a bad taste all the way through.  Definitely thought provoking at least.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,[deleted],2014,How 'DevOps' Is Killing The Developer
impecune,1,"You're not even talking about devops, fella. Sounds like a shitty experience, but not one informed by devops in any way. Folks rage against Agile and ITIL too, but what they're really railing against is their shitty implementation of those things, root cause being ITIL, Agile, Lean, etc. require a shift in the org, an understanding of the problem set, and an understanding of the thing being implemented. Devops isn't different - if management doesn't know what it is, chances are the thing you experience as devops will be a massive shitpile.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,[deleted],2014,How 'DevOps' Is Killing The Developer
notinanutshell,0,"No.

There are plenty of functional, sane implementations of devops, agile, and lean (etc?) which successfully implement ideal scenarios. In fact, a big part of what defines those methodologies is their basis in real-world data and real-world implementation. It would be more akin to the government of the United States rebranding as Mao-inspired Communist without changing anything else except how the government employees and elected officials talked about the things they did. Daily activities still 100% the same, rights and responsibilities of citizens 100% the same, democratic election process with electoral college circus still the same, federation of government, actual ideals-in-practice still the same.

No matter how many times they insisted that they were Mao-inspired Communists living the Mao-inspired Communist dream, there would still be fairly little Mao-inspired Communist activity going on and a whole lot of Democratic Federated Republic action, quite a lot of Capitalism, a healthy serving of Oligarchy, turtles, etc.

tldr; no matter how much lipstick you put on that silo, it is still not a pig.",2014,How 'DevOps' Is Killing The Developer
imfineny,-3,"You can be a master of all trades.  You take on different kinds of development roles in your career, you read up on different technologies, stay in the loop.  build new things, investigate old things.  Learn from your peers.  Its called experience. ",2014,How 'DevOps' Is Killing The Developer
kenfar,10,"You're throwing the term ""master"" around pretty loosely.

Right now quite a few areas of IT are changing very quickly.  

Your 6 month stint on one of them ten years ago didn't leave you a master.  It left you a journeyman.   Now you're an obsolete journeyman.",2014,How 'DevOps' Is Killing The Developer
imfineny,2,"The term is used by the OP, I am just referring to it.  There are a lot of things that happen in tech that you learn when you are young that are still valid years later.  Those skills if you have charted your career well, picking difficult assignments, learning when you can leave you with a great deal of knowledge and perspective.  To me that is being a master.",2014,How 'DevOps' Is Killing The Developer
smurfhater,1,"I agree.  You don't need to be the best in the world, but the best on the team.  

e.g. I'm not linux ""expert"", but I know a hell of a lot more than more peers who largely come from a MS stack background.  I resolve most of the team's issues, and on a rare occassion I get asked something that's beyond my ability - I know precisely when to ask for outside help.

Truth is, there are maybe 3-5 times a year I can't solve a problem myself.  That's hardly a motivation to hire a Linux kernel engineer full time, as the OP is implying.",2014,How 'DevOps' Is Killing The Developer
imfineny,1,"I do devops for a living.  It's not what he's saying.  He says developers should stay in their little box and not learn things like how to manage a database.  I just had a disaster that completely took out a clients infrastructure because he didn't know what you and couldn't do with NFS and basically turned the app farm into an nfs ddos system.  We still haven't fully recovered.  Technology shouldn't be treated like a black box, that just leads to disasters.",2014,How 'DevOps' Is Killing The Developer
skulgnome,-3,But it isn't.,2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,Excellent contribution to the discussion. ,2014,How 'DevOps' Is Killing The Developer
skulgnome,1,"Thank you, and likewise.",2014,How 'DevOps' Is Killing The Developer
ibleedforthis,0,"I don't think the author knows how DevOps really works.  It's more about making an operations guy more developer than replacing the developer with a jack of all trades.  All the devops places I know of still have a dedicated development team.

DevOps is devoted to the development of operational tools that ease infrastructure concerns.  They're responsible for figuring out how to spinup 18 instances of your code.  You're still responsible for the code.

The DBA is still responsible for making sure indexes are properly used, query planning and SQL functions written, their sorts of jobs.  They might determine the parameters needed for the config files.  The DevOps person would have the config files puppetized so they can turn up 18 DB servers at a time, maybe all standalone, maybe clustered depending on needs.

The important thing to take away from DevOps is that a UNIX machine is not a unique snowflake.  You shouldn't be naming your boxes funny names because that attaches love to them.  Modern systems are made to be created and destroyed in minutes or even seconds.  The goal is to spin them up, run a single process, then recycle them if they're not needed anymore.  Of course this all means they should be virtual machines.

The reason ""dev"" is in the job title isn't because you're a developer, but because puppet and the like are complex tools that currently need a developer.

",2014,How 'DevOps' Is Killing The Developer
acdha,3,I think you're being unfairly critical – I'm pretty sure the author understands DevOps in theory but was motivated to write by all of the places where it's an excuse to skimp on hiring and have developers editing config in production.,2014,How 'DevOps' Is Killing The Developer
oldneckbeard,0,"That is a whole article full of ignorance. Let's pick a few things: 

1. DevOps is a different role than QA and Dev. Its purpose is to facilitate both of those groups, and to remove the barrier that IT/Ops has traditionally thrown up. It's got a different skill set, with different goals. 
2. If you claim to be a developer, and don't know SQL or the basics of testing, I'm not going to hire you. You can fight it all you want, but that's the current industry, and there is no shortage of people who have those skills. 
3. Full-stack developers are not that uncommon. I am one. I could function in ANY of those jobs you listed. I'll code up some angular directives in the morning, then move into the java REST layer for the afternoon. The question isn't why -- it's why NOT? This is the first sign of falling behind the times. You should have some passing knowledge of making a webapp if you claim to be a webapp developer. If you want to stick with server-side-only, that's fine, but your job hunt will be longer. 
4. ""If there's a particularly nasty issue that seems to require deep database knowledge, you don't have the liberty of saying ""that's not my specialty,"" and handing it off to a DBA team to investigate.""  -- You're right. As a developer, you NEVER have that right or ability. You need to google around. You need to try some stuff. You need to look at docs. If you throw your hands up every time you run into an issue, you're not going to last long. Yes, sometimes it's out of your area of expertise, but that's no excuse. Everything is out of your expertise until it's not. 
5. ""Developer is at the top, followed by sysadmin and DBA. QA teams, ""operations"" people, release coordinators and the like are at the bottom of the totem pole."" -- Here we go. You're doing it, I've seen it a thousand times. It's the ""I'm a programmer, so I'm super special and super smart and everybody else is below me."" It's no surprise you put Developer at the top of the totem pole. You're not that important, and you're not that singular in importance. Developers can't do a good QA job if your company is segmenting those roles. Most QA and Dev don't have root privileges. This isn't a totem pole. 

This guy is going to burn out, or be left behind. He's clearly anemic to taking on new roles and responsibilities, and he has a dramatically ego-centric view of himself. ",2014,How 'DevOps' Is Killing The Developer
PasswordIsntHAMSTER,-6,"I'm not going to read your blog if poorly done advertisements are all I see when I land on an article on mobile.

Using Bootstrap's warning and alert highlighting to show recommended reading is terrible design.",2014,How 'DevOps' Is Killing The Developer
Atario,-5,Agile is cancer,2014,How 'DevOps' Is Killing The Developer
Deleted Account,-1,[deleted],2014,How 'DevOps' Is Killing The Developer
free_at_last,1,Why does that matter? What's the issue if he is?,2014,How 'DevOps' Is Killing The Developer
yawaramin,-2,"> Good developers can be passable DBAs if need be. They make decent testers, ""deployment engineers"", and whatever other ridiculous term you'd like to use. Their job requires them to know much of the domain of ""lower"" roles. There's one big problem with this, and hopefully by now you see it:

Yeah, it's not true.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,2,Really? I wouldn't hire a developer that wasn't capable of deploying and testing his or her own code. ,2014,How 'DevOps' Is Killing The Developer
yawaramin,1,Deploying on their own computers or to a single Heroku instance is one thing. Deploying on Web scale is another thing. I wouldn't want to work for an established company that forced developers to do double-or-triple duty. (Obviously in a startup environment the situation is different.),2014,How 'DevOps' Is Killing The Developer
phuckHipsters,1,"I worked in a shop where everything was democratized and DBA, QA, Development, and Release Management were all put on the same level instead of a hierarchy as if we were all fungible.  The result was a DBA team vetoing releases the day before they were set to go and the Release and QA teams dictating our deadlines rather than development telling them when the work would be done and when they could expect to be needed.

The end result was that the products were rushed crap and no one had any accountability.  Everyone wanted a say in how development went but no one wanted any of the accountability for when things went bad.

The reality is I, and most of my developer colleagues, can replace any one person on our DBA, QA, or Release Team.  I may not be the world's best DBA, QA, or Release person.  But I'm way better in each of those roles than any of them would be in my role as a senior developer.",2014,How 'DevOps' Is Killing The Developer
Deleted Account,-2,[deleted],2014,How 'DevOps' Is Killing The Developer
Deleted Account,1,"Why did you take the time to type out this comment? It's neither informative nor interesting. 

You could say, why did I type out this comment? Because I'm annoyed that I spent half a second reading yours. ",2014,How 'DevOps' Is Killing The Developer
razoreater19,137,"That is why a lot of people in this field go for b2b. That being said, if you are in a fulltime position that is interfering with your notion of work-life balance, it's time to move on.",2024,EU is the worst place to be DevOps
iTzturrtlex,20,What’s b2b?,2024,EU is the worst place to be DevOps
razoreater19,73,Contracting to deliver services through a limited liability company instead of being a full time employee,2024,EU is the worst place to be DevOps
Deleted Account,32,I absolutely hated being a contractor. I went back to corporate and am LOVING it.,2024,EU is the worst place to be DevOps
seanamos-1,30,"I’m also not a big fan of contracting. It can be fun for a while, exposure to many different kinds of (dysfunctional) companies and environments.

But, you will spend most of your time as an “extra hand” at the tail end of a failing project, doing work nobody else wants to do, and not seeing a project through its extended lifecycle (the scale up phase). It’s mostly salvage and bumrush out the door work.",2024,EU is the worst place to be DevOps
razoreater19,8,"Took a new gig that can be perfectly described as this.
Welcome to the jungle",2024,EU is the worst place to be DevOps
iamamisicmaker473737,1,"i like Microsoft onboarding contracts, you know what to expect, thousands of engineers have already done it and theres generally always a took or solution KB somewhere, microsoft will start hire contracting you direct eventually too",2024,EU is the worst place to be DevOps
a4st,8,"Interesting. I am a DevOps freelancer since 9 years and I love to be a freelancer. I can focus on my job and skip the ""All Hands"" meetings. It's great. :-)",2024,EU is the worst place to be DevOps
foffen,2,"iIcouldn't do it, as an employee i have a stake in the work environment and my company invests in me, i have tried contracting but i cannot sit idly by when shit around me isn't working.

Also, i don't get thrown out because the stock exchange has a sneeze.",2024,EU is the worst place to be DevOps
Deleted Account,1,It’s possible to work with a stake in the job even as a contractor. I do. I have employee mentality as far as it goes (I’m not invited to all meetings and I don’t get to go on the kickoff). Still I enjoy my “freedom” more than I miss the rest.,2024,EU is the worst place to be DevOps
mjohnson90,3,"Such a difference experience here for me in the UK, been contracting for 7-8 years, generally work in delivery teams for upto 2 years at a time doing big projects, never been the solo mercenary type - absolutely love it",2024,EU is the worst place to be DevOps
Deleted Account,1,I have similar experience. I can never go back. My job is sometimes lonely but I can’t imagine any corporate job I would want to have.,2024,EU is the worst place to be DevOps
rockuu,19,"Not necessarily a LLC, which is often more difficult to setup and has complicated tax laws. In many countries you can simply be self-employed, which is is a popular form for small businesses.",2024,EU is the worst place to be DevOps
razoreater19,19,In my part of the world an LLC has an overall higher per year net return than a self-employed operation. And you're able to outsource accounting for less than 80 Euros per month instead of DIY,2024,EU is the worst place to be DevOps
Shogobg,8,"You can outsource accounting even if you’re self-employed, just some people prefer to do it themselves.",2024,EU is the worst place to be DevOps
adrianjayson13,1,This is just being a freelancer with extra steps right? Or a freelancer with additional tax work.,2024,EU is the worst place to be DevOps
Ariquitaun,1,That's the way I work in the UK. What country are you based in and where are your clients? We'll be moving back to Spain or France (undecided yet) in a year or so and I loathe the idea of ever working for someone else.,2024,EU is the worst place to be DevOps
ErichVan,19,Business-to-business instead of employment. You aren't protected by employment laws but in a lot of countries you have lower taxation in that case you might also balance between few companies. It's more complicated topic wouldn't recommend doing it before checking your tax laws and consulting with lawyers(so you don't get massive penalty in case you fuck up and etc since as mentioned before employment laws don't apply to you) but in Poland for example it's massive difference in taxation so a lot of people go for it in mid and senior positions.,2024,EU is the worst place to be DevOps
AlternativeAward,7,Impossible in germany,2024,EU is the worst place to be DevOps
chefkoch_,15,Sure it's possible to be a freelancer in Germany.,2024,EU is the worst place to be DevOps
razoreater19,-3,"You're not marketing yourself well enough then. If it's possible to get 40-60€/h contracts from Romania, it ought to be also in DE",2024,EU is the worst place to be DevOps
prezydent,18,"It is about the law. In Germany there is something like Scheinselbständigkeit (False self-employment).
You cannot be hired for only one employer for the long term. Otherwise he will get problems",2024,EU is the worst place to be DevOps
JiEToy,14,"That works differently. Just like in the Netherlands, there are a couple of criteria you need to meet for the scheinselbstandigkeit. For instance, if the company that hires you can decide when you work and how you do it, then yes, there can be a case of fake contracting.

However, if you’re properly self employed, you’ll have a contract with the company that has some clauses for what they expect from you as end result, but if you have a vacation day and still achieve that end result, they can’t do anything. They can also not tell you which tools you can and cannot use etc.

Fake contracting is more about the delivery guys who need to work when the company asks them too, need to wear the company’s outfit, need to use the company’s software etc.",2024,EU is the worst place to be DevOps
Deleted Account,4,"Yeah it’s pretty unlikely, more so if you go via an agency eg hays. Market rate for senior devops in Germany is 100/hr min",2024,EU is the worst place to be DevOps
ILikeToHaveCookies,8,"honestly, that never has been a big problem for me or any of my friends.. was freelancing in germany for \~3 years",2024,EU is the worst place to be DevOps
uosiek,1,Germany have master degree in razzle-dazzling other nations. If you need to work b2b you will find the way.,2024,EU is the worst place to be DevOps
editsoul,66,"Is this a rant or are you expecting a solution to a problem? Grass is greener on the other side. what's important is you choose the problems you are okay to deal with?  
Keeping up with new tech should ideally happen duing work hours and you dont need to keep up with everything. once you have strong fundamentals, learning new tech shouldn't be a daunting task.",2024,EU is the worst place to be DevOps
moracabanas,-1,"I just know docker at peak. I use it every day since covid19. I managed several docker swarm clusters. I know it is somehow deprecated years ago but I am not capable of learning kubernetes.
It is so full of features, and deployments are so difficult to understand, memorize, resource intensive... It is so underwhelming I am hating it now. It is not enjoyable.

Edit: Just to point it out, I am not considering the hard work to learn k8s and take the responsibility of clustering our workload in that for 20k/y
It is just not worth for me. I am not considering site reliability engineering enjoyable or rewarding anymore this way at this low rates.",2024,EU is the worst place to be DevOps
melewe,7,Soo swarm will be irrelevant in a few years. Good luck without knowing relevant tech in a few years.,2024,EU is the worst place to be DevOps
moracabanas,3,"I am not saying kubernetes is irrelevant, in fact Docker Swarm is. I am hating learning k8s due to its complexity and lack of joy.
I am now shifting my career to be a better software engineer in machine learning backend and frontend because investing in DevOps is not worth the effort. Docker is good, kubernetes is boring. 
Thats the end of my DevOps roadmap there.",2024,EU is the worst place to be DevOps
ub3rh4x0rz,1,"Swarm is already irrelevant and has been for years. It has been a barely-maintenance-mode project since before covid 19. It is completely inadequate for situations where you genuinely need multiple nodes, and a leaky abstraction in the use cases where it's serviceable.

Either write your own highly specific orchestrator or learn k8s.",2024,EU is the worst place to be DevOps
editsoul,2,Yes learning is almost never fun until you use it at work. Try to find a real use case for what you're doing. Good luck,2024,EU is the worst place to be DevOps
NearHyperinflation,186,"You are invited to live in any third world country if you want, senior devops engineer I'm earning about 1600usd a month on my currency(it's pretty good pay for companies here) I'm in the 0.1% of the country in terms of salary but still I cannot dream of buying something like a house/apartment, I can buy videogames though",2024,EU is the worst place to be DevOps
StalinNoPants,55,"found the argento, muchaaaaaaachoooooooos",2024,EU is the worst place to be DevOps
Doubtless6,13,Argento user name check,2024,EU is the worst place to be DevOps
flaC367,2,haha we are so poor and cliché like a bokita jrs fan,2024,EU is the worst place to be DevOps
D4rkr4in,30,living in a third world country means good luck getting an MRI at all. Too high risk in terms of healthcare,2024,EU is the worst place to be DevOps
Deleted Account,41,[deleted],2024,EU is the worst place to be DevOps
SDplinker,9,which country?,2024,EU is the worst place to be DevOps
Itchy-File-8205,32,"Not really 

First of all, ""third world"" is meaningless and derogatory. Nobody gives a shit about whether a country participated in the cold war.

Secondly, most care is completely adequate. If you need something complicated done, then go to a western medical facility (such as someplace who cares to expats). Even poor countries have good doctors my dude.",2024,EU is the worst place to be DevOps
Deleted Account,5,"For many from those countries - US became the 3rd world country. And Im not even joking. France, UK and Germany soon joining that club.

If the life of average citizen decreases so much - that country should be degraded on the scale. Big corps and wallstreet dont make a 1st world country.",2024,EU is the worst place to be DevOps
CertainDeath777,12,"have you ever been outside a hotel complex outside of europe and the other ""western"" states?  
rural russia is a shithole, afrika countries with less paved roads, then your average german small village, and political systems are questionable at best.  
latin america has multiple challenges, like extreme crime rate and corruption. apart from 4-5 asian states, most of them have severe issues as well.

you obviously dont know how good europe is. mostly walkable cities, decent payments, decent social security, on top of politically pretty stable systems etc etc.",2024,EU is the worst place to be DevOps
Deleted Account,-5,[deleted],2024,EU is the worst place to be DevOps
CertainDeath777,4,"the stuff you tell me now is basically 1:1 the stuff that german conspiracy esothericists with latent german neonationalsocialistist mindset would tell in the group before i as admin get rid of them to protect the people of colour, that do not deserve to hear your based opionion",2024,EU is the worst place to be DevOps
Deleted Account,-1,"Maybe just maybe if ppl from completely different continent with different upbringing come to the same conclusions simply following deductions based on available information.

Maybe its not just a conspiracy hmmm and silencing them is against freedom of speech that our grandparents died for ?

Are you saying all my grandparents faught for and believed in is extremism and should be silanced trumping „basic human rights” ? Maybe we should start silencing ppl like you to protect our heritage and basic human rights ?",2024,EU is the worst place to be DevOps
CertainDeath777,1,have you watched too much russia today?,2024,EU is the worst place to be DevOps
LuciferianInk,1,I think you're overthinking this.,2024,EU is the worst place to be DevOps
Notmyotheraccount_10,2,"Whilst some of the poorer countries have excellent doctors, it's only the exception, so no need to get wound up about it. 

Devolped, developing, third, π, they are just words.",2024,EU is the worst place to be DevOps
broknbottle,0,Don’t try and church it up dirt boy,2024,EU is the worst place to be DevOps
ukralibre,1,its already a term I am afraid,2024,EU is the worst place to be DevOps
Frying3632,3,"Lmao how fucking ignorant
Go leave your moms basement and explore the world",2024,EU is the worst place to be DevOps
donjulioanejo,4,"Not really.  If you have money or insurance, many parts of the third world will usually have great healthcare.  Latin America, Eastern Europe, large parts of Asia like Thailand, or China?  You'll have amazing healthcare.",2024,EU is the worst place to be DevOps
Deleted Account,5,Not true at all. I get better health care in Argentina than in the Netherlands.. born and raised in one and lived on the other for 8 years. The Dutch health system is absolutely ridiculous,2024,EU is the worst place to be DevOps
GordoMondiola,0,">I get better health care in Argentina

Have you ever been at a public hospital in Argentina?",2024,EU is the worst place to be DevOps
kbick675,1,"My sister-in-law says the same thing about the Dutch health system. She's from Japan and lived in the UK for 15ish years before Brexit made it advantageous for her husband's company to send them to Amsterdam. 

My wife and I seriously considered moving there as well, but things didn't work out that way and we moved to Japan. Part of why we didn't really pursue moving to the Netherlands was the not so good health system. We really like it there, but we've not had to deal with that part of life there. Japan's system isn't perfect either, but its pretty affordable and we've never had an issue getting an appointment, even same day. The quality of the care can be hit and miss, and you really benefit from having some knowledge of what you think something may be, but I've got no major complaints so far (only been here a year).   

As far as work is concerned, I've been lucky to get a relatively well paying job compared to most in the tech pool of workers here, though by no means near the top.",2024,EU is the worst place to be DevOps
dogfish182,1,I have 0 complaints about the Dutch health care system. It seems to rank fairly highly in terms of world lists as well. What’s wrong with it in your view? Dutch bedside manner is a bit….. but for the rest I’ve had nothing but accurate and good care,2024,EU is the worst place to be DevOps
investigamer,1,"Honestly I assume most of these comments are just based on one-off experiences, when it comes to healthcare in 1st world countries most are very very good. Even in the US it is great, its just unbelievably expensive and can bankrupt you. NL, UK, Germany, France, these all rank near the top of the list in every major study that is done, in the raw unbiased macro metrics that matter, yet you can find a dozen horror stories for each one that will supply you a narrative if you're inclined to believe otherwise.",2024,EU is the worst place to be DevOps
dogfish182,1,"Yeah I agree. Dutch system also suffers hard from ‘expat whine syndrome’ everyone assumes they would be amazing at travelling, but most people just pitch up to a country and talk about how things are better back home. Expats are the worst for this.",2024,EU is the worst place to be DevOps
langus7,0,Guy is talking about Argentina: it's not that bad here. We're third world only in the original sense of the term (not allied to the US nor the USSR).,2024,EU is the worst place to be DevOps
seanamos-1,1,"South Africa, $525 for health insurance of a family of 5. Wait time is less than 24 hours for an MRI at private hospitals, faster in an emergency.

However, if you have no health insurance, the wait time at public hospitals can be as long as a year, or two! The public health sector has completely collapsed here (corruption at an unprecedented scale).

That said, the government is pushing for an NHI type scheme, banning private health insurance, effectively forcing everyone into dysfunctional the public hospitals. Scary times.",2024,EU is the worst place to be DevOps
GBcrazy,1,No lol.,2024,EU is the worst place to be DevOps
rejvrejv,1,"a full body MRI is like $400 in serbia

[^(random private clinic)](https://citymedik.rs/cenovnik/)",2024,EU is the worst place to be DevOps
GeorgeKaplanIsReal,1,"Eh idk about that I spent three months without insurance in Malaysia and everything was so fcking cheap. Seeing a doctor, getting an MRI, medication, etc. versus how much it costs in the US (even with decent insurance).",2024,EU is the worst place to be DevOps
D4rkr4in,1,"I'm so glad one person brought up Malaysia

Malaysia is not a third world country and has a lot of healthcare tourists so it's definitely fine for healthcare.",2024,EU is the worst place to be DevOps
sydcanem,1,You'd be surprised how much better hospital care in third world countries is if you can afford it or have insurance.,2024,EU is the worst place to be DevOps
MasterJett,1,Holy shit your monthly salary is my sons monthly daycare,2024,EU is the worst place to be DevOps
cs_legend_93,-2,"They will own nothing, and be happy - George Soros",2024,EU is the worst place to be DevOps
ContritionAttrition,2,"It wasn't George Soros it was Ida Auken, a Danish MP who asked the WEF to stop publicising her thought experiment urban future ideas essay after receiving death threats. https://medium.com/world-economic-forum/welcome-to-2030-i-own-nothing-have-no-privacy-and-life-has-never-been-better-ee2eed62f710",2024,EU is the worst place to be DevOps
danskal,1,"I’m not saying he’s a good guy, though he actually might be. But if you think he’s doing that, I think someone’s telling you porky pies.",2024,EU is the worst place to be DevOps
cs_legend_93,1,"Bro it doesn't matter if he said it or not. Look around you. The percentage of people owning things in the west is dropping. People can't buy homes. Remember our parents who used to have 1 house plus a vacation house? Now we can't even afford 1. 

America (and the west) is dying. Don't listen to my words, look at the inflation rate and economic conditions of today.

I'm an anarcho capitalist so I'm not against George Soros. I just say it because the west is in an economic shitter. 

Even if you earn alot, you spend alot because the cost of living is astronomical.",2024,EU is the worst place to be DevOps
techy098,1,"Yup, If we read through the comments we realize being worker without money is the main problem.

If you are a multi millionaire then every place seems good. Private doctor will see you in few weeks if you paid cash(asking price).",2024,EU is the worst place to be DevOps
CoolZillionaire,1,"Support teams during the day with their K8S issues, play Helldivers 2 in the background!",2024,EU is the worst place to be DevOps
Grespino,1,">1600 usd

So only like 200 usd less than Italy.",2024,EU is the worst place to be DevOps
Deleted Account,250,[deleted],2024,EU is the worst place to be DevOps
Rollingprobablecause,91,"Yeah, wait times for new visits, ancillary, specialty services in the US is like 6 months. The only way you can get seen fast is if you go somewhere in a tiny city but then you're risking lower levels of care too.

US healthcare is awful.",2024,EU is the worst place to be DevOps
AnnyuiN,36,"entertain deliver literate forgetful cable cows employ sip silky seemly

 *This post was mass deleted and anonymized with [Redact](https://redact.dev/home)*",2024,EU is the worst place to be DevOps
dn512215,24,Same here. The last MRI I had was scheduled for 3 days after a doctors visit. In a very large city in Texas - don’t know if that makes a difference.,2024,EU is the worst place to be DevOps
Deleted Account,1,[deleted],2024,EU is the worst place to be DevOps
dn512215,0,"Yeah a MRI is $12K and up around here out of pocket. In my case, the doctor’s office submitted and got the insurance approval in 24 hours.",2024,EU is the worst place to be DevOps
Deleted Account,2,[deleted],2024,EU is the worst place to be DevOps
dn512215,1,"Wow, really?!?  I have a high deductible plan (10K) because even if you pay out the deductible, it ends up being cheaper over all than the 1K deductible plan. So it was 10K out of pocket, then I had no more expenses for the year. Regular visits and such are free though.

Edit: so in my case, I paid $10K out of pocket, and the insurance paid out a little more than $2,000 for the MRI.",2024,EU is the worst place to be DevOps
Deleted Account,1,[deleted],2024,EU is the worst place to be DevOps
dn512215,1,"Oh, that makes sense.

They thought I had lymphoma (it is actually much more complicated: some autoimmune variant called rggi6 or similar - I can’t remember at the moment, and it is unknown anyway:  they haven’t settled on anything yet) so they scan me from head through torso every 6 months looking for issues. I haven’t had any symptoms in 5 years since they removed all the lymph nodes in my neck, so I’m starting to suspect their intentions, or competence.",2024,EU is the worst place to be DevOps
aeroespacio,1,"That’s some insane costs. I’d have to pull out my explanation of benefits for the two MRIs I had to get exact figures, but I vaguely remember insurance bringing down the cost significantly. One of my MRIs happened after I had already hit my deductible ($1500) but the one I had to pay out of pocket for was about $650 after insurance discounts. 

I have no clue what an MRI needs to entail for that out of pocket being $10k for you!",2024,EU is the worst place to be DevOps
foffen,1,US seems to to MRI for everything i hardly know anyone that had one. The questions is how long time you have to wait to fix whatever the MRI finds?,2024,EU is the worst place to be DevOps
dn512215,2,"Probably another reason our insurance premiums are so high on average, lol. In my case, I was in surgery within 3 weeks. But they thought I had lymphoma, and needed to know quickly if they had to start treatment.",2024,EU is the worst place to be DevOps
Rollingprobablecause,3,"Lucky you. I am in a metro with 5 mil. people, and my CT scan of my sinus was a three month wait. I see a cardio once a year since I am 40 for just proactive testing and if I ever reschedule the visit, his availability can be anywhere from 1-6 months on the reschedule YMMV of course.",2024,EU is the worst place to be DevOps
AnnyuiN,3,"desert quiet thumb childlike aback tender door tan rock school

 *This post was mass deleted and anonymized with [Redact](https://redact.dev/home)*",2024,EU is the worst place to be DevOps
Deleted Account,1,I have always gotten the next day. Surgery is usually about a week.,2024,EU is the worst place to be DevOps
aliendepict,1,"Same, they are just a week out around me or at least that was the case in December.",2024,EU is the worst place to be DevOps
macDaddy449,1,"Same. I’m in NYC and I have not had to wait months for scheduled appointments. I think my longest wait in the past was like 5 or 6 weeks or something, and I do think I found it mildly annoying at the time but it wasn’t like a situation that required any sort of immediate attention or anything.",2024,EU is the worst place to be DevOps
Deleted Account,17,[deleted],2024,EU is the worst place to be DevOps
Deleted Account,3,[deleted],2024,EU is the worst place to be DevOps
Deleted Account,2,[deleted],2024,EU is the worst place to be DevOps
foffen,1,"Funny, soon done 30 years in the tech industry from Windows NT sysadm and now cloud ops/SRE with some other tech stuff in between in EU and i know of 2 people that actually moved to US for work, one did it purely for love...",2024,EU is the worst place to be DevOps
_angh_,1,"Ireland diagnostic care is really poor, if not one of the worst in EU. I simply fly to Germany or Poland to get a quick, cheap scans and if needed I follow with consultant in Dublin. My guess is Ireland and UK always had this concept of healthcare broken, and Ireland was split between european and US approach, in the end getting worst parts of them both...

still, pretty chill place to be living in.",2024,EU is the worst place to be DevOps
ghostsquad4,6,"US healthcare is actually good, it's just expensive as hell.",2024,EU is the worst place to be DevOps
worldofzero,-12,Wait till you see the wait times for things like gender care. It takes literal years to access some trans healthcare just because of how understaffed and overworked the teams that do it are.,2024,EU is the worst place to be DevOps
Pack_Your_Trash,10,It's a lower priority than a lot of things healthcare deals with. The same can be said for a lot of things like mental health. We are unfortunately under-served and people with cancer and spinal injuries come first.,2024,EU is the worst place to be DevOps
worldofzero,-10,"Doctors providing cancer and spinal treatments usually aren't providing gender affirming care also? Idk why it's a comparison when the specialties don't really overlap.

Its like saying it's hard to access DevOps and someone saying we'll yeah the FrontEnd engineers have better things to do. Like, that statement doesn't make sense. They're different specialties.",2024,EU is the worst place to be DevOps
gex80,6,"I think their point is, it's lower on the priority list so there are less doctors who specialize in it. Mental health professionals don't make bank outside of certain practices. People want to get paid.",2024,EU is the worst place to be DevOps
Rollingprobablecause,2,"not sure why you're being downvoted - even in California where it's not a problem at all, the subject matter experts are too few. I don't think it's because of unwillingness, more just it's an emerging science here.

The US is incredibly understaffed (thanks for for profit systems!)",2024,EU is the worst place to be DevOps
worldofzero,-5,"At least for trans healthcare it has less to do with it being new and instead is just gatekept at every part if the process. There's a shortage of trained doctors but a lot of that is because a huge amount of time and money is spent on procedural things.

In the UK the wait time exceeds a decade just to get a consult. Not even providing care. This is something literally *any* primary care doctor could do. Instead you have to wait years.

In the US it's similar. Companies and insurance place massive barriers around care. Literally nobody, even companies like Google with a reputation for being less bad, don't do this well. It's a process that fundamentally is incompatible with capitalism and that creates a lot of issues. It's also something cis people never need to engage with so they often can ignore it and as the majority they dictate huge parts of how society runs.

My point was mostly that US healthcare is very bad and a really good example is trans healthcare which company leaders routinely fail to provide access to and the medical community is unable to serve effectively.",2024,EU is the worst place to be DevOps
Johnny_BigHacker,1,No wait to practice meditation/acceptance,2024,EU is the worst place to be DevOps
worldofzero,1,I have no idea what kind of healthcare that would be?,2024,EU is the worst place to be DevOps
gex80,1,Where in the US are you? I live a 20 drive outside of NYC in NJ and it's easy to get an appointment within 30 days in both states unless you want a specific doctor who is popular or you're in a unique situation.,2024,EU is the worst place to be DevOps
Deleted Account,1,"That's common in some of the better metros. There's areas in the US you can get a specialist within a few weeks, other areas where the wait times are a minimum 6 months to a year. Depends entirely where you live. Nevada is an example where wait times are very long for specialized care, LA is fast in comparison. Anything autoimmune related has very few experts, so those wait times can be brutal. Recommendation is to fly to get timely care for those types of issues.",2024,EU is the worst place to be DevOps
AutomaticSLC,1,"FYI it depends on the healthcare system and most big cities have several different providers. I got a lot of ~6 month out appointments until I realized I could pick up the phone and call different providers, at which point I was getting into regular appointments within 1-2 weeks and specialty stuff in about month.",2024,EU is the worst place to be DevOps
bigpappahd77,1,What State are you in that you have to wait that long? I am in FL and we get treated or exams Inside a week or two max. My experience though. Once it was discovered that I had clogged arteries in my heart I had surgery Three days later during Christmas break. I was head in about a month and was back to work in the office after that month. worked from home two weeks after Surgery. Not by force but by choice.,2024,EU is the worst place to be DevOps
Sinnedangel8027,1,"I don't know about that last bit about a tiny city and lower levels of care. The 2 bigger cities (1 million+) I lived in, I received worse care than the smaller one (100k) that I'm in now. Wait times are far better, less than 1 month at worst. 

Sure, it's anecdotal, but friends living in smaller cities experience much of the same. So, I'll take that over the craziness of higher tax rates for ""free"" healthcare. The upfront cost for healthcare in the US is more, accounting for premiums it can get pretty nasty, especially if it's not through an employer. But I'd still take the US over europe any day.",2024,EU is the worst place to be DevOps
Rollingprobablecause,0,I invite you to go to the rural south then. When I lived in Louisiana it was truly truly bad.,2024,EU is the worst place to be DevOps
Sinnedangel8027,1,"That was my sister's experience in Gonzales and Baton Rouge. Further north in kansas City and Minneapolis, I had pretty shitty care as far as wait time and just doctors being rushed to see patients.

Where as smaller cities, it's been fairly decent. 1 month to establish primary care, 2 weeks for therapy and psychiatrist. A week or so for a ct scan. Etc. Hell, they were able to successfully diagnose an issue I had been dealing with for a few years that other doctors just hand waved as a non-issue. So, maybe my friends and I are just lucky",2024,EU is the worst place to be DevOps
Rollingprobablecause,1,"I lived in Baton Rouge, Lafayette and my wife was from Ruston. Nearly 90% of the care was bad.",2024,EU is the worst place to be DevOps
Sinnedangel8027,1,Damn that sucks. I swear the hospital my sister gave birth in damn near killed her during her c-section. Just absolute incompetence.,2024,EU is the worst place to be DevOps
CanvasFanatic,1,"I have literally never waited 6 months for a doctor’s appointment in the US. I don’t know anyone who has. The worst I’ve seen is maybe a month or two for non-urgent referrals to get established with new specialists.

Appointments with primary care providers are usually same-day.",2024,EU is the worst place to be DevOps
sdeptnoob1,1,"You can call around? I'm in Seattle its been 2 weeks to 3 weeks for my specialty and imaging stuff. Feels like shit even waiting that long but it's not 6 months out like being described.

What's shit is when the insurance doesn't like the place you chose and you have to reschedule....",2024,EU is the worst place to be DevOps
mwobey,20,"offer six market workable ghost obtainable correct apparatus sleep vase

 *This post was mass deleted and anonymized with [Redact](https://redact.dev/home)*",2024,EU is the worst place to be DevOps
uptimefordays,19,"US healthcare seems super variable, I never have issues getting appointments or seeing specialists but live in a major city on the East Coast with lots of doctors. For essential services like healthcare, a less variable user experience is probably better.",2024,EU is the worst place to be DevOps
Deleted Account,1,"I think the point is that in the US a lot of people directly want to see a specialist, in Europe it is much more common to first go to your general practitioner who are usually a bit defensive in someone directly sending through. This might sound a bit odd for people who are not used to that (read this many times in the Netherlands sub), but it actually makes the system kind of working. However also our health system has many problems, there are shortages everywhere and especially at lower level jobs.",2024,EU is the worst place to be DevOps
uptimefordays,1,"In the US, we usually start with our general practitioner/primary care physician then get referrals if we need a specialist. In my experience that’s usually pretty quick, but mileage probably varies.",2024,EU is the worst place to be DevOps
skelleton_exo,8,"Its 10 hours a day max. Though it has to average around 40 in the last 6 Month.

Also yes some specialist visits can take ages, but it also depends a bit on where in Germany you are.

We also get a lot more vacation, and other workers rights.

Sure it would be nice to pay fewer taxes, but they are ultimately fine, because somebody has to finance public infrastructure and services.

The only point I would agree with is, that IT wages are much lower in Germany than they are in the us. And wages across all industries have not been keeping up with inflation.

But from what I have seen both of those last points are true across all the EU.",2024,EU is the worst place to be DevOps
Guilty_Serve,5,">I am in the US in one of the states with better healthcare than average, and just scheduled a follow-up appointment with my spine doctor. The appointment is 2 months from now.

A buddy of mine has a spine injury in Canada. It'll be about two years to see the specialist. For a family member it took 4 years to get surgery for a fusion.",2024,EU is the worst place to be DevOps
SilverAwoo,4,"Same, I'm in the hole like $2000 for a basic ER visit, and the soonest they could schedule a follow-up appointment (scheduling from early February) was June. And I don't even know if that doctor is going to be ""in network"" with my insurance. The wait times in the EU certainly are atrocious, but that's really not an argument against universal healthcare, considering you can wait 4-5 months for care here in the US, and still go into crippling debt.",2024,EU is the worst place to be DevOps
Significant_Chef_945,3,"Must be where you live.  In my area, I can get a Dr appt in just a few days.  For urgent issues, I can go to the Urgent Care (5 within 3 miles of my house) or the ER.  Follow-ups with my primary care doctor can be done in a week or so.

Again, this is location dependent.",2024,EU is the worst place to be DevOps
estart2,2,"attempt pie silky dam birds afterthought saw society cough mighty

 *This post was mass deleted and anonymized with [Redact](https://redact.dev)*",2024,EU is the worst place to be DevOps
L0rdB_,2,I can schedule and mri for tomorrow if I want. Wait times are just fine here,2024,EU is the worst place to be DevOps
Itchy-File-8205,2,"I'd say wait times are pretty damn good in the USA. Yeah I've been given long wait times before, but then I just call another place that has availability. 

In a public system everyone is in the same line. In a private system there are many different lines, some full some empty",2024,EU is the worst place to be DevOps
macDaddy449,1,This. Sometimes I really wonder if it never occurs to people to just try somewhere else if the current place is moving too slow. It’s not compulsory that we wait for one specific doctor’s availability.,2024,EU is the worst place to be DevOps
Background-Rub-3017,1,"2 weeks for me, houston texas.",2024,EU is the worst place to be DevOps
dr-yd,1,"No, just the average work week over a quarter has to be up to 48h, with up to 60h per week being legal.",2024,EU is the worst place to be DevOps
arguskay,1,"Reason is probably that some people in europe get paid very well for being on-call and when something happens it counts as a full workday (very expensive for non-critical questions).

Mostly possible due to Union contracts.",2024,EU is the worst place to be DevOps
Vivalo,1,Ironically the wait times in India for an MRI is a couple of days. I know my colleague’s mum just got one.,2024,EU is the worst place to be DevOps
Nowaker,1,">my spine doctor. The appointment is 2 months from now.

How about comparing apple to apple? OP in Germany waits 3-4 months for an MRI. In Poland, where I'm from, the wait would be even longer. But I'm in Texas now, and there was a 7 day wait for my child's MRI this February. (but we oped for  14 days out due to vacation plans colliding) 

>my spine doctor

Your spine doctor is 2 months. How about *any* spine doctor? It requires some calling around, but it's possible to get a speedy appointment with enough effort. Anyway, specialists in Europe can require a year of wait, lol.",2024,EU is the worst place to be DevOps
Deleted Account,0,[deleted],2024,EU is the worst place to be DevOps
Nowaker,1,I'm not telling you what you should do. I'm criticizing you for not comparing apples to apples.,2024,EU is the worst place to be DevOps
Dismal_Storage,1,It sucks they take the right to work from workers like that.,2024,EU is the worst place to be DevOps
chat_openai_com,1,"I'm in Minnesota. Zero wait time for MRI - I can get one within a day or two.  But I'm very lucky to have good insurance. I also have unlimited vacation time. Woo hoo! 

I still think Germany is doing it right. Healthcare is a human right.  Getting an education shouldn't bankrupt people. Parental leave, vacation time, etc. 

Based on secondhand information and some googling, I think the 2 month claim for an MRI is bullshit. Call around, do some due diligence, you can get an MRI sooner than 2 months.",2024,EU is the worst place to be DevOps
AemonQE,1,"In Germany, Austria and Switzerland you can easily get a next day MRI if you pay for it.
1k for Full Body in AT. Not that bad.",2024,EU is the worst place to be DevOps
oo0st,1,Eu and Uk state health care isn’t much better,2024,EU is the worst place to be DevOps
Deleted Account,1,That definitely sounds better then the UK. You'll be waiting a year for a new appointment if not more. It's crazy.,2024,EU is the worst place to be DevOps
Ok-Bit8368,1,"I'm in the US. I just moved to a new town, and had to wait a FULL YEAR to be a new patient with a primary care physician.",2024,EU is the worst place to be DevOps
foffen,1,"If your do more then 150hrs overtime per year in Sweden your company will be fined. And no unless i have an on-call contract and reimbursement you cannot contact me for work, with some leniency if there is an absolut, and isolated, emergency.",2024,EU is the worst place to be DevOps
DifficultyDouble860,1,"Calling engineers after hours verboten?   Jeez, what do folks do about maintaining 24-hour businesses like websites or server crashes??!?",2024,EU is the worst place to be DevOps
8roll,39,"What do you mean ""closer to India""? My indian-consultant colleagues get 1000 euro (adjusted to your currency) more.",2024,EU is the worst place to be DevOps
No_Butterfly_1888,78,OP has no idea how low are tech salaries in India.,2024,EU is the worst place to be DevOps
ZacPaup,11,Exactly,2024,EU is the worst place to be DevOps
gablopico,9,"Indian here, that's not entirely true. Average salary in tech is low but there are many techies making more than 150k usd per year.",2024,EU is the worst place to be DevOps
No_Butterfly_1888,8,Do they work for Indian companies or European/NAmerican companies?,2024,EU is the worst place to be DevOps
gablopico,12,Silicon valley companies with tech offices in Bangalore. Some Indian companies with large VC funding also pay crazy money for the right talent.,2024,EU is the worst place to be DevOps
mirbatdon,16,It doesn't make sense to me that a silicon valley company would pay someone in India 150k,2024,EU is the worst place to be DevOps
tamale,4,They do for the good talent. Source: helped hire for such a company and we hired all over the world,2024,EU is the worst place to be DevOps
selemenesmilesuponme,9,"Trust them, they are Indian, so everything they said related to India must be the absolute truth.",2024,EU is the worst place to be DevOps
minhaj_a,2,Check levels.fyi salaries for India. Top tier companies do pay that much.,2024,EU is the worst place to be DevOps
broknbottle,1,"Do you know how much it costs for housing in Mumbai? It ain’t cheap, like middle ish class US home costs for an apartment in Mumbai.

https://www.quora.com/How-much-does-a-decent-2-bedroom-house-in-Mumbai-India-cost-on-average-in-U-S-dollars",2024,EU is the worst place to be DevOps
DukeInBlack,1,"1/3 cheaper of some of the US talent we pay in the FPGA field, if it helps.",2024,EU is the worst place to be DevOps
Deleted Account,1,It would be just for some FAANG companies or some growing startups,2024,EU is the worst place to be DevOps
Deleted Account,1,"These are the top 0.001 tier people, it is not only in India, everywhere in the world.",2024,EU is the worst place to be DevOps
reddit-some,1,"Not exactly .. Indian salary is quite high.. norm  to make gross €1500-2400 ( INR 135K -200K) PM for mid -senior positions.
I am Indian and living and earning in euros with one of top pay salary in West Europe and it’s not very far or lucrative seeing Indian salary.  Sometimes I do think why I am here in Europe. Indian has very affordable way of life…",2024,EU is the worst place to be DevOps
daguito81,3,"I'm really confused by your message. You're saying thay 2400 euros is top salary in West Europe?  Because that's definitely not high, even for entry level. And I'm talking Spain, which is on the low end of EU salaries",2024,EU is the worst place to be DevOps
yoanon,1,"It depends heavily on the company. There is a tier of companies going for similar level of talent, where the salaries are on par or slightly higher than Spain, Estonia, Hungary, and Portugal. 

For example Flipkart, Amazon, Google, Uber, Swiggy, GoJek etc. Then there are companies which you described like TCS, Wipro and a lot of other ones (would say, majority of them your statement would be accurate). 


Source: I was part of the salary benchmarking committee at my previous job. And we were looking to open another engineering office where we could hire a lot more people quickly. The countries I listed above were part of the benchmarking exercise to understand the costs. India was one of them. We decided not to go with India because the salaries we would have to shell out to compete with the companies going for the same talent were slightly higher than Barcelona, Spain. But the primary reason was, the talent we were after is so sought after that the retention rate was significantly lower in India compared to any of the European countries we were considering. Where it was 1.5-2 years as average term in India Vs 3-5 years in the listed countries.",2024,EU is the worst place to be DevOps
rockuu,38,Work remotely with a US company while living in EU. Best of both worlds. Though the hours might not be for everyone.,2024,EU is the worst place to be DevOps
SolarPoweredKeyboard,13,"Some companies are follow-the-sun operations, though, so one might luck out!",2024,EU is the worst place to be DevOps
donjulioanejo,9,I honestly love having a work schedule like 4 PM to midnight.  Best shift I ever worked when I worked at a cafe.,2024,EU is the worst place to be DevOps
juliob45,13,Sucks when you can’t go out for dinner with friends on Fridays,2024,EU is the worst place to be DevOps
Versakii,17,You guys have friends???,2024,EU is the worst place to be DevOps
Deleted Account,1,">You guys have friends???

Not to brag, but yes, and see both of them sometimes!",2024,EU is the worst place to be DevOps
alluran,3,"4pm-7:30pm then 12am-3:30am

I get an Australian summer day, then dinner with friends and family, and work a full time job with UK pay 👍",2024,EU is the worst place to be DevOps
reddit-some,2,Name few such companies ?,2024,EU is the worst place to be DevOps
halfpound,1,"There's a ton. I've worked three in my ten year career. Unless you're at a start up, no one is doing 24 hr pager duty shifts",2024,EU is the worst place to be DevOps
reddit-some,1,Would appreciate if you can DM me few such companies .I am applying since sometime but no luck .,2024,EU is the worst place to be DevOps
krs0n,1,Where is the best place to find such companies? 🤔,2024,EU is the worst place to be DevOps
Critical_Primary2834,1,"Late afternoon/evening meetings sucks. 
Work life balance is horrible as US folks don't care. Working culture is also pretty bad",2024,EU is the worst place to be DevOps
Deleted Account,15,"Move to Poland lol xD IT salary while not amazing comparing entire world, is like in 10% highest earners in Poland. You want mri or even minor surgery? You can pay for private one, I can afford it as SRE who has barely 1 year experience. General consensus is that as long as it’s not life threatening or a large surgery you do shit through private healthcare. The other stuff will get done asap anyway. 
So it’s not Europe, it’s just Germany being Germany  🤷‍♀️",2024,EU is the worst place to be DevOps
Deleted Account,2,[deleted],2024,EU is the worst place to be DevOps
Deleted Account,6,"Funny thing is there’s 3 different options to be taxed on B2B but it’s nowhere near 44%. The general rules include a progressive tax of 12% to PLN 120,000 and 32% above this amount, with an additional 9% health contribution. The linear tax is 19% and the health contribution is 4.9%. A lump sum is a tax on revenues, without the possibility of deducting costs, with differentiated tax rates from 2% to 17%, and a fixed health contribution depending on the amount of revenue. Obviously no one chooses progressive tax, they just pay around 150€ for  accountant to choose best option",2024,EU is the worst place to be DevOps
Dubinko,1,"The last question, aren't employers hesitant to sign you up on B2B? I've heard not all of them are okay with this",2024,EU is the worst place to be DevOps
Deleted Account,3,"Depends on branch the company is from, but many try to push you on b2b even if you earn less than 10k PLN (which totally doesn’t calculate for you then). Many job postings give you choice between regular job contract and B2B",2024,EU is the worst place to be DevOps
evemorgen,2,"it's actually beneficial to both sides if done right, they don't have to handle your social security, healthcare etc, and you get lower tax rates. They simply pay an invoice as for any other service. But you give up a lot of worker rights that comes with permanent contract like the notice period, sick leave, paid time off and many more",2024,EU is the worst place to be DevOps
Deleted Account,1,And a possibility to be fired on the spot,2024,EU is the worst place to be DevOps
evemorgen,1,"I'm currently contracting with a Swiss company paying 12% lump sum tax + social security and health totalling to around 18-20% tax rate overall. If you go over 250k (PLN = \~€55k) a year you're obliged to pay 23% VAT tax on top of that which many passes onto employer (they can write it off) but if played right, it's about half of what you would've paid on a permanent contract",2024,EU is the worst place to be DevOps
FlyingFalafelMonster,124,"Part of being a DevOps is understanding your salary slip.

There is no such thing as 44% tax in Germany. The income tax varies from 0 (the first 9744 euro) to 42% (

# 274.613 euro and over). And if you earn 300k, you do not pay 42% tax, you only pay 42% on what is above 274613. 

  
Now, there are other deductions from your salary that are not taxes: health insurance, uneployment insurance, retirement fund. 

If you figure the whole math behind your salary slip and do a reasearch what you actually get for this money, you might come to another conclusions.",2024,EU is the worst place to be DevOps
Drazul_,24,"He is probably counting all discounts from the salary, so including the krankenkasse and probably the church deductions",2024,EU is the worst place to be DevOps
Rakn,27,That is not entirely correct. The 42% you are talking about are actually 45%. The 42% tax bracket starts way lower.,2024,EU is the worst place to be DevOps
horus-heresy,-21,I don’t think you understand how progressive tax rate works,2024,EU is the worst place to be DevOps
Green_Source3135,37,"No he’s right, 45% tax bracket is from 277k onwards but there’s 42% tax bracket on income between 60k to 277k",2024,EU is the worst place to be DevOps
seanamos-1,3,It’s worse than OP indicates when you add in all the other taxes + double taxes + stealth taxes.,2024,EU is the worst place to be DevOps
Deleted Account,1,"Also if you pay in the higher tax scales, you usually don't have to worry that you don't make enough money.",2024,EU is the worst place to be DevOps
Snapstromegon,12,"I'm a DevOps Engineer in Germany (automotive sector). I made my bachelors last year and according to multiple salary calculators I'm making within 5% up or down what the average DevOps Engineer in the US is making.

Also I think I have an okay work life balance and my employer is paying me to develop myself (e.g. when I do AWS certificates). Overall I think I have it way better here than I would've in the US, just because I feel safer here and don't have to worry that something like getting injured could leave me financially ruined, because the wee woo wagon brought me too the wrong hospital.

Is everything great here? Heck no. Do I think it's still better than in the US? Yes.

If your situation right now isn't great, I'm honestly sorry for you and I hope that you get better oportunities, but the general statement from the title and post is something I just can't agree with.

  
Edit: Ohh and totally forgot: Employee protection is great here. My company just let a lot of people go globally. In germany it was like a voluntary leave program where you get a good bonus for leaving after your notice time (between 3 and 7 months). In the US it was a meeting in the morning and a ""by the way, you're out, leave now and goodbye"".",2024,EU is the worst place to be DevOps
foffen,2,I'm in Sweden but your points are valid for here as well. US labour laws and social security sounds horrible every time i hear anything about it.,2024,EU is the worst place to be DevOps
noah_f,133,"At least in europe, we don't get charged 40k plus just to attend university, guaranteed 20 plus days off per year, 

Yeah, it kinda sucks when a guy with 1 year of experience is earning over 100k in the US, but then again, healthcare, college debt, and federal tax plus sales tax on goods,",2024,EU is the worst place to be DevOps
VenomOne,105,"OP just went down the path of the common fallacy of comparing salaries at face value without taking cost of living into account.

Does it feel wrong, that a Junior DevOps Person in the Bay Area makes twice your salary? Yes. Does he have a higher standard of living? Probably not. I just came back from a couple of months in the Bay Area, where you are considered a low-income household if your yearly pay is below 300k and a basic coffee is 7 bucks. There is a reason, that Google, Facebook and Oracle decided to build their own campus ecosystems with supermarkets and gyms exlusively for their employees. It's cheaper than paying up.

Not sure if this is a case of mismanaged expectations or just OP needing to vent, but it's not accurate either way. 90k sounds like the average salary range around here and keeping your stack up to date really just is a requirement in this field.",2024,EU is the worst place to be DevOps
LemonPartyRequiem,11,">OP just went down the path of the common fallacy of comparing salaries at face value without taking cost of living into account.

Canada's cost of living is much higher than in the US so it's a fair comparison.

Right now in Canada anything below 90k in a decent city means you'll need roommates.",2024,EU is the worst place to be DevOps
Kaelin,7,Below 90k in the Bay Area means the exact same thing if not worse (living in cages is a thing).,2024,EU is the worst place to be DevOps
donjulioanejo,7,"The difference being, it's fairly easy to earn 90k in the Bay Area, especially in tech.

In Canada, you'll be in top 10% of income earners nationwide.",2024,EU is the worst place to be DevOps
VenomOne,5,"You miss the point. 90k here is above average pay across the entire population and around average pay for the specific field and fine compared against cost of living.

Not sure where Canada is coming from in your answer, but if 90k is average pay and not up to the cost of living, you have issues with the cost of living, not the pay range. Paraphrasing my initial comment: OP seems to complain about the absolute pay figure rather than the ratio between pay and cost of living, so he is assuming fixed cost of living. You seem to just have made the same mistake, but reversed. Salary range is not fixed, so varying living cost can only be compared to equal pay, which 90k is not, see my example of the Bay Area. 

I've heard, that your housing situation up there is messed up and salary range should certainly be made to compensate accordingly, but thats an entirely different discussion about economics and politics.",2024,EU is the worst place to be DevOps
gex80,3,You aren't saying anything that doesn't and hasn't been happening for well over a decade in the US. Any major metro is like that. A 1 bedroom in NYC can run you almost 4k for a tiny space.,2024,EU is the worst place to be DevOps
cottonycloud,10,"300k combined yearly salary is not low-income. The vast majority of people I know do not make half of that and they are getting by. 

Coffee prices are definitely stupid, though.",2024,EU is the worst place to be DevOps
VenomOne,14,"I stand corrected in my numbers. Santa Clara County lists 145k-180k as low-income for a one-person household and 190k-234k as low-income for a standard family (whatever that means). My original point still stands though, as thats 100-150k above what the german salary range is, more than doubleing it.",2024,EU is the worst place to be DevOps
cottonycloud,3,"According to [HUD](https://www.huduser.gov/portal/datasets/home-datasets/files/HOME_IncomeLmts_State_CA_2023.pdf), it’s 96,000 for a single person and 181,000 for an 8-person household. The median is 181k. 

Yeah, definitely a nitpick. You are right though —Cost of living adjustments need to be made before comparing salaries between different areas.",2024,EU is the worst place to be DevOps
macDaddy449,1,"First of all, your comment connotes all sorts of negative implications but I’d just like to point out that, “Low-Income” in this context doesn’t mean poor or struggling. It just means they’re earning less than 80% of the median in their area (most people nearby are earning quite a bit more money than you). In other words, a high “low-income” figure just means that most people in that area have very high incomes in general. But anyway, a “standard family” is a family of 4 per Santa Clara county definition (assumed to be 2 adults with 2 children). Given that 40% of the county is foreign-born and the typical household consists only of 2.89 people (likely more couples + one child and a few childless couples), family costs are likely lower than whatever they’re reporting for the “standard family” they have in mind. This is per the [Census Bureau](https://www.census.gov/quickfacts/fact/table/santaclaracountycalifornia,CA/PST045223). Also, your comment implies generalizations about cost of living in America based on one of the highest-income counties in the entire country (median family income of >$180k for that “standard family” last year). Of course their standard for what counts as “low income” is gonna be much higher than the rest of the country. Plus, the tech companies are not providing those campus perks to avoid “paying up,” as you claimed. They’re the entire reason that incomes are sky high in Santa Clara county, and largely responsible for the county stating that income below $96k is low for a single person. 

And on that point: I’m not sure where you found those lofty numbers, but I certainly couldn’t find them when I searched. Instead I found this from the [San Francisco Chronicle](https://www.sfchronicle.com/bayarea/article/low-income-median-levels-18164328.php#):

>“Santa Clara County’s median income for a four-person household is $181,300. A four-person household there making $137,100 or less is considered low income.

>For a single person in Santa Clara County, the low-income maximum is $96,000.”

Nowhere could I find any source that published numbers approaching the numbers you’re pushing here as “low-income” for Santa Clara county. Per the [document](https://www.hcd.ca.gov/sites/default/files/docs/grants-and-funding/income-limits-2023.pdf) cited by the article, a family of 8 would be considered “low-income” if their income was less than $181k in Santa Clara county, which is still less than the lower limit you’re reporting for a household that’s half the size. And that’s on a scale of “Acutely low Income,” “Extremely Low Income,” “Very Low Income,” “Median Income,” and “Moderate Income.” There’s literally no reason to lie or grotesquely exaggerate the situation to make the point you’re trying to make. Please don’t push misinformation just to make a point online.",2024,EU is the worst place to be DevOps
horus-heresy,9,No devops with 1 year of experience earns that much in us,2024,EU is the worst place to be DevOps
Blagaflaga,11,"A lot of people may have only been “DevOps” by title for one year but have years of experience in related roles, thus they get paid 100k+ or else they would’ve taken a pay cut to become a DevOps Engineer",2024,EU is the worst place to be DevOps
donjulioanejo,1,"Dude I'm not even in the US, but a typical new grad salary for a SysDev I at Amazon is about $160k CAD (120k USD) after stock and bonus.

Now, this is generally an outlier, and a more typical new grad salary in Canada is about 80k, but still.  You're very much exaggerating that no-one earns that.",2024,EU is the worst place to be DevOps
horus-heresy,3,And everyone gets to go work at Amazon? And no new grad base salary is not 120k at Amazon or aws.,2024,EU is the worst place to be DevOps
DigBig3448,5,"In Europe ( at least in Germany) we don’t pay over 40% income tax because stuff almost free education but because of dumb social laws. We pay a lot for pension insurance to get shit of a pension later.
Although we will get a shit as pensioners additionally 25% of our taxes are spent for the pensions of current pensioners because the insurance is not enough. Government uses the taxes to pay rich people cars ( also known as Dienstwagenprivileg).
Meanwhile investments in education, digitalisation and any aspect of infrastructure is a shame.",2024,EU is the worst place to be DevOps
TheSauce___,1,"That's a fair take. I'm from the US make 6 figures, but I'm also 5 figures in debt from student loans. 

Though idk about DevOps specifically. It might be the case that wherever OP is at the circumstances are uniquely bad.",2024,EU is the worst place to be DevOps
Deleted Account,-40,[deleted],2024,EU is the worst place to be DevOps
SirYoloSwagister,15,"Tuition for undergrad for the upcoming year is $10,770 for in state and $32,940 for out of state per [this](https://finaid.gatech.edu/costs/undergraduate-costs). That's per semester. Total cost is that value times 8 for a 4 year degree.

Even taking the $7K value, that cost is most likely per semester, and would cost $56K total. That doesn't include other costs such as room and board and food.",2024,EU is the worst place to be DevOps
Deleted Account,-28,[deleted],2024,EU is the worst place to be DevOps
mistled_LP,18,">I was talking about Masters degree

No one else was, or ever is, when talking about the cost of attending University.",2024,EU is the worst place to be DevOps
FUSe,10,"lol. That’s a gimmick online only program. They take 75% of applicants. 

You can apply too: https://omscs.gatech.edu/admission-criteria

It is available to international students.",2024,EU is the worst place to be DevOps
Electrical_Media_367,1,"I've never met anyone who paid for a masters degree in the US.  The undergrad tuition is so high because the masters and doctoral students get massive scholarships.  Most masters students I know not only get tuition covered by the university, but also a fellowship stipend.

But undergrad, most people either pay $100K+ out of pocket, or take out loans that they're repaying for decades.",2024,EU is the worst place to be DevOps
dewlapdawg,3,"Just looked it up and tuition rate for Georgia tech for Georgia residents is $11k/year and for non-georgia residents it's $32k/year at a minimum. So a bachelor's program will cost you $44k+. You either have to have a rich parent to afford it or be poor enough financial aid will cover it. Otherwise it's student loans. 
Also GC takes 2-3 years but since COVID I believe it takes closer to a year but definitely not in few months. 

You have a good job so I am sure you'll do better in US but for those unfortunate with an ok job and health conditions, unemployment here means almost a death sentence. 

Take away is if you come from a rich family or have a really good job you'll do way better here in US. Otherwise for those of us that came from a poor/humble upbringing UK sounds like a paradise. The grass is always greener on the other side.",2024,EU is the worst place to be DevOps
fcctiger12,1,"Not quite true. Most Georgia high school students qualify for the HOPE scholarship, which covers the vast majority of tuition at Tech, UGA and other public instate universities. There’s also the Zell Milner Scholarship, which covers all of tuition and is fairly easy to achieve for your basic hardworking high school student: https://gbpi.org/wp-content/uploads/2021/07/2021-HOPE-fact-sheet.pdf

For out-of-state students — it is indeed a total racket and is quite shameful.",2024,EU is the worst place to be DevOps
raiksaa,-1,"You’re calling it out and so few people see it it’s insane. I’m seeing this and trying to explain to everyone, but it’s like they are completely zoned out and have accepted their lives.",2024,EU is the worst place to be DevOps
Delicious_Finding686,1,"I feel like that’s probably dependent on where you’re at and what school you go to but of course I’m completely ignorant to the area.

Where in Europe could I get the equivalent of a bachelor’s degree in computer science for notably cheaper?",2024,EU is the worst place to be DevOps
pooogles,1,"> At least in europe, we don't get charged 40k plus just to attend university

We do in the UK.",2024,EU is the worst place to be DevOps
Grespino,1,">we don’t get charged 40k plus just to attend university 

Why do I have a £60,000 student loan …",2024,EU is the worst place to be DevOps
Otherwise_Meal_4264,19,"Come to Bulgaria - IT salaries are top and doctors are usually 1 to 5 days away from you. I am not joking, it is an IT paradise.",2024,EU is the worst place to be DevOps
HolyCowEveryNameIsTa,6,How's life in Bulgaria outside of IT and doctors? Also how would the language gap be if someone was only fluent in English?,2024,EU is the worst place to be DevOps
Otherwise_Meal_4264,6,"In the IT industry English is the main work language, so you would be perfectly fine with it. In my current and last companies, it is the official language of communication. Life is quite good in the country, it is a safe place. We have great nature with both sea and mountains ina few hours by car from the capital. There are a lot of nice restaurants and bars with very affordable prices.",2024,EU is the worst place to be DevOps
livebeta,2,"> We have great nature with both sea and mountains ina few hours by car from the capital. There are a lot of nice 

Oooo European California",2024,EU is the worst place to be DevOps
Otherwise_Meal_4264,12,"No, we don't have so much crime and homeless people.",2024,EU is the worst place to be DevOps
livebeta,7,"Ouch, imma go to the emergency room for some burn treatment",2024,EU is the worst place to be DevOps
SeeTheUntruth_Ad7178,2,It’s very bad. Don’t listen to these lies. Only rich people (corrupt) live well there. It’s the fasted dying nation at least in Europe.,2024,EU is the worst place to be DevOps
donjulioanejo,1,"Partner's mom lives there now.  Sofia is a post-soviet hell hole, and the country is pretty pro-Russia.  Food culture is basically nonexistent, so you can forget about going for Indian one day, sushi the next, and happy hour at an Irish pub on Friday.

On the other hand, cost of living is super cheap, nature is beautiful, lots of really interesting history, and the people are quite friendly.",2024,EU is the worst place to be DevOps
Otherwise_Meal_4264,3,"What is the problem with going to all these restaurants in Sofia according to you? Yes you can do it and it would be cheaper than in most of the other European capitals.

And what should ""hell hole"" mean in this context?

You get affordable healthcare, education and public transport. Great holiday options, incl. Greece in 3 hours by car.

Oh, and I forgot - women are gorgeous.",2024,EU is the worst place to be DevOps
donjulioanejo,3,"I honestly get it, Bulgaria is your home, and my post can come across as insulting.  I'm mostly relaying second-hand information, since I've never been myself and can't judge.

it's coming from an extensively-traveled upper-middle class lady in her 50s, so YMMV.  What's important to her may not be what's important to a single 25 year old, or a 40 year old with a family.  She also misses her home in Kiev, so a lot of her perception is coloured by that.

According to her:

* Food variety kind of sucks
* Most restaurants are lower quality than many other countries
* Very little ethnic/authentic food, most of the selection is local to Balkan and Central/Eastern European food.  Not much for things like Indian, Malaysian, Japanese, Mexican, etc, and whatever exists is not very authentic

For another example, I'm generally not a fan of Canadian food options (Europe has way better food quality and selection), and she generally agrees with me on this.  She rates Canada significantly above Bulgaria, and I'm not even in a major city.

> You get affordable healthcare, education and public transport.

* Ugly commie-block buildings in pretty much the entire city (and this coming from someone from Ukraine)
* Not much interesting architecture
* Parks, etc, near Sofia itself simply don't compare to ex-USSR and to richer EU countries
* Country itself isn't very digitized (i.e. you can pay with Apple Pay in most places in either Ukraine or Western Europe, while in Bulgaria most places expect cash).

Honestly though her biggest complaint was just a lack of good places to walk her giant dog, and that most people don't train their dogs properly, so they just kind of.. run around unsupervised and tend to be somewhat aggressive.

> Great holiday options, incl. Greece in 3 hours by car.

This is very much true.  I've seen some amazing pictures from Varna/Black Sea, ski resorts, mountains, etc.",2024,EU is the worst place to be DevOps
Otherwise_Meal_4264,6,"It is an interesting point of view. Thank you for sharing. The country is not multicultural, that is a sure thing.
It has a lot of problems, this is no secret either.",2024,EU is the worst place to be DevOps
foffen,1,"All former soviet union countries have been depraved of cultural and intellectual development and enrichment for so long that it will take time to restore it. On the other hand there is alot of underground art and culture growing and the young generation today may be the first that is able to make some real change, right now society is still trying to adjust to western economics.",2024,EU is the worst place to be DevOps
SnooMuffins1343,1,"it seems funny that “Bulgaria having Mexican food” is an expectation. I wouldn’t expect these countries to have a particularly diverse food offering, so it doesn’t even register as a negative to me.",2024,EU is the worst place to be DevOps
PhillLacio,1,!RemindMe 24 hours,2024,EU is the worst place to be DevOps
RemindMeBot,1,"I will be messaging you in 1 day on [**2024-03-02 20:41:12 UTC**](http://www.wolframalpha.com/input/?i=2024-03-02%2020:41:12%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://www.reddit.com/r/devops/comments/1b3znny/eu_is_the_worst_place_to_be_devops/kswlqwo/?context=3)

[**CLICK THIS LINK**](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Fdevops%2Fcomments%2F1b3znny%2Feu_is_the_worst_place_to_be_devops%2Fkswlqwo%2F%5D%0A%0ARemindMe%21%202024-03-02%2020%3A41%3A12%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%201b3znny)

*****

|[^(Info)](https://www.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://www.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://www.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)|
|-|-|-|-|",2024,EU is the worst place to be DevOps
SeeTheUntruth_Ad7178,1,"Did you forget to mention that those doctors will give you 5 different diagnoses and usually all wrong? Or that unless you know someone in a hospital, you’ll die waiting for a doctor to operate on you? Don’t forget to mention the ridiculous corruption and the unbelievable laws in Bulgaria where you can kill someone on the road and just get sentenced to house arrest. Lastly, this salary you’re talking about you only get if you live in the capital, which is the only place one will get paid well.",2024,EU is the worst place to be DevOps
Otherwise_Meal_4264,0,"The same doctors are working all over Europe - Bulgarians, Serbs, Romanians. European healthcare systems have huge problems and the Bulgarian is  not the worst. I have lived in Germany for 2 years and I have seen nightmares there. A friend of mine died at 29 years in Munich after having an incorrect diagnose for months. My mother was waiting for months to undergo a very serious examination in Germany and ended up coming back to Bulgaria and had it done in 3 days. In Denmark, you would wait for months to even get subscribed for a GP. 

And if the regular healthcare system is not enough for you, there is additional health insurance benefits for everyone in IT here which provides premuim service.

Of course, things are not black and white, we have problems, but actually all the other European countries do, while the IT salaries are the best in EU, when having in mind the cost of living. For example, I managed to pay my mortgage in 10 years for a brand new building which is located just 10 minutes away from the city centre and this is not easily achievable in other EU capitals.

On the salary - IT is the only career which allows you to have a Sofia salary while living in another town and a lot of my colleagues do.

Furthermore, income and property taxes are among the lowest in EU.

+ Gorgeous women
+ No cancel culture
+ No gender wars",2024,EU is the worst place to be DevOps
white_hat_cat,2,Can I ask what's the pay for DevOps ?,2024,EU is the worst place to be DevOps
Otherwise_Meal_4264,1,For senior positions it varies from EUR 3500 to EUR 7000 NET (goes into your bank account aftex tax) per month.,2024,EU is the worst place to be DevOps
foffen,1,"You probably paid it off in 10 years because it wasn't very high in the first place since the construction workers didn't have a very good salary, or any insurance or any of that stuff that makes housing and construction more expensive in western EU.",2024,EU is the worst place to be DevOps
_angh_,42,"nah, I'm fine, no issues with health system, payment is good enough, and surely I enjoy my 6 weeks holidays while my friends in US keep saying - I got 5 days but I have no time to use it. And yes, not having to worry if the hospital im going in is in my network, or if it is in my network hoping the doc is not borrowed from another, what a fresh concept;)

44% tax is above certain threshold, not whole salary. I think you just got a wrong job then. Maybe look for other company on the market? 

good watch: [https://www.youtube.com/watch?v=DWJja2U7oCw](https://www.youtube.com/watch?v=DWJja2U7oCw)",2024,EU is the worst place to be DevOps
blizznwins,9,Not having a pre-selected tip of 25% every time you pay for something is also quite nice,2024,EU is the worst place to be DevOps
investorhalp,42,"Mri 3-4 months? Thats quite efficient 

Come to canada, we have 1 year waitlists for basic procedure, 2 years to see a pain doctor, 2 years for colonoscopies, people rather take assisted death


And tax is maybe a couple
Of point less, but salary is half :)

Grass is always greener!",2024,EU is the worst place to be DevOps
MetaPlutonian,7,"I live in Canada I think 2 years waiting is extreme. It only took me few months to see pain doctor, and only 6 months for colonoscopy. The wait times in Canada are dependent on which province/city you are in.",2024,EU is the worst place to be DevOps
investorhalp,6,"Different here in AB

So it kinda works like this
- dr i am in pain “take this, it will be fine”, come see Me in a 2 months, then they do that for 4/5 complaints. After that, they consider ir chronic, and they refer, all
In all process takes 2 years. 1 complaining, 1 waiting.

This happened two times with two doctors for different concerns. And is common among the people I know",2024,EU is the worst place to be DevOps
donjulioanejo,3,I raise you 12 years trying to get my knee fixed.,2024,EU is the worst place to be DevOps
WeAllThrowBricks,1,Then 2 years for surgery.. if you need one (assuming you live past that),2024,EU is the worst place to be DevOps
reddit-some,1,Only* 6 months? Are you kidding me. You are paying taxes so you must be allowed to visit doctor within 30 days ….,2024,EU is the worst place to be DevOps
RumRogerz,2,Where in Canada are you man? Damn I had way way lower waits for seeing specialists and getting procedures in Ontario.,2024,EU is the worst place to be DevOps
investorhalp,1,"Alberta

Same experience in ontario, everthing was smooth af, but that was 5y ago

Here it’s brutal",2024,EU is the worst place to be DevOps
RumRogerz,1,Ah. One of my best buds left AB because of that. The government there just keeps cutting healthcare services like crazy from what he told me. Absolute shit show.,2024,EU is the worst place to be DevOps
chat_openai_com,4,Bull fucking shit,2024,EU is the worst place to be DevOps
dave-the-scientist,-1,"No idea what you're talking about with 1 year wait for ""basic procedures"". Elective knee replacements? Yeah those are terrible. 1-2 year wait easy. Appendix removal? That night. Complex arthroscopic stent insertion in 3 cardiac vessels? 2 day wait. Multi-system medical mystery? About a week to see cardiologist, 2 weeks for nephrology, a month for urology. 6 month wait for that surgery though. X-ray + consultation with radiologist to find rare ankle fracture? 1 night wait, with surgery consult 2 days later (best part there was zero wait at the urgent care).

Meanwhile, I've had friends in the US have to take their 5 vacation days to stay home, because they couldn't afford to see a doc to find out if they broke their arm. Fired right after of course, because they could no longer complete their duties. What with the broken arm and all. No thanks.",2024,EU is the worst place to be DevOps
Electrical_Media_367,1,"who is getting ""elective knee replacements"" in your fantasyland?  No one has ""elective"" major surgery.  Maybe you mean ""non-life-threatening"" ?  As in, you wait 2 years, unable to walk, in excruciating pain, to get knee surgery.

And devops engineers working for software companies are not part of the population in the US that has to worry about any of that crap.   I've got a family of 6, with complex c-section births and one kid with a developmental pediatrician and a pile of specialists, and I've never paid more than $50 for a doctor's bill.  All my kids births cost $0, with private hospital rooms and 5 day says.  I have unlimited vacation time, and typically take 5 weeks a year.  No one tracks my sick time at all.   New parents at my company get 6 months of full pay parental leave (both mothers and fathers.) I've never heard of someone in our job who has gotten fired for missing work due to illness.

The problem with the US system is if you're in the bottom 70%.  That's where you get nickel and dimed on vacation time and are stuck with huge medical bills for necessary crap.  Anyone paid hourly is probably permanently in collections on unpaid medical debt, and is working 60 hours a week for a roof over their heads.

But DevOps engineers and software developers are top 10% - we have health insurance and patient, grateful bosses, and massive paychecks.",2024,EU is the worst place to be DevOps
dave-the-scientist,1,"So you don't know what ""elective"" means eh? In the medical context, which isn't exactly Fantasyland, it means that the person is still able to walk, though they are in pain. It becomes non-elective when they can no longer walk, and those surgeries happen with very little waiting. You know how the general population uses the word ""alpha"" to mean something different than how developers use it? Or how the word ""chaotic"" has specific meaning when talking about a complex system? Yeah, ""elective"" is one of those words. Now you know!

Those do sound like good benefits! Not sure why you're telling me though. I guess if you wanted to compare, sounds like I've got slightly better health insurance (close enough it's moot), double the parental leave (mother or father), similar for the rest, and a way smaller pay cheque (though I'm in research, so that's to be expected). And yep, my buddy in the US was an hourly worker at the time. Man, they get shit on.",2024,EU is the worst place to be DevOps
viper233,13,"Trade offs everywhere. US you get paid more, less social security for you and others. Of all the $200k+ DevOps roles in the US there are still a lot of folks getting paid just over $100k. There is no mandatory annual leave in the US, most places only give 2 weeks... a fkin joke. Schools _might_ be better in the EU, there are good schools in the US but across the board it so unfair, look into charter schools.


If you're in the US your kids learn stay and shelter drills. If that's not the most fked up thing ever.. then the US might be a good option for you. Immigration is a slog, work culture can be terrible, a lot of snowflakes, English is a terrible language and American's do it their way, just like Australia, New Zealand, South Africa and Canada.

Edit: your/you're",2024,EU is the worst place to be DevOps
donjulioanejo,3,"> American's do it their way, just like Australia, New Zealand, South Africa and Canada.

Canada does US English with UK spelling.",2024,EU is the worst place to be DevOps
viper233,1,"Oh yeah... I grew up in Australia, lived in Canada for almost a decade and the last 5 years in the US (don't ask how, it's not my fault). No one knows what a fortnight is, just bi-weekly :-| They can't spell my neighbours favourite colour correctly :P",2024,EU is the worst place to be DevOps
foffen,2,"I'm sceptical about the schools, considering EU countries have few bans on what books can be used and kids don't have to worry about getting shot.",2024,EU is the worst place to be DevOps
YouShallNotStaff,1,"Outsourcing really picking up, too. Id be nervous moving to america right now for SWE/devops",2024,EU is the worst place to be DevOps
j4bbi,6,"Wtf are you talking about?! We have a progressive tax system in Germany.

If you get 100k a year, you pay 25k tax

For social security you pay 16k.",2024,EU is the worst place to be DevOps
SilentDanni,7,"OP is tripping and/or possibly putting too much pressure on themselves. I don't know any senior devops studying daily to stay relevant. Most of my friends in the field have kids, travel or have hobbies outside IT stuff. I for one have a very healthy life outside work and never had any difficulties finding a new place to work at. I even had time to go back to school and get my masters degree(for free) while working full time. I'd say that the Pareto principle applies perfectly when it comes to Devops.",2024,EU is the worst place to be DevOps
Grespino,1,Fuck off id actually pay less tax in Germany that I would in the UK? Wtf that’s genuinely a surprise.,2024,EU is the worst place to be DevOps
sigbhu,4,i pay 40% tax in the US...and have no healthcare,2024,EU is the worst place to be DevOps
djamp42,21,"It's not like you are getting an MRI right away in the USA either, unless you are actively dying. It's probably at least 1-2 months out easy.",2024,EU is the worst place to be DevOps
esixar,15,I got an MRI scheduled the next week as a new patient here in Florida. But anecdotes are anecdotes,2024,EU is the worst place to be DevOps
bedel99,1,"I have had multiple MRI’s on the same day in Europe, in Germany/UK.",2024,EU is the worst place to be DevOps
chat_openai_com,1,Wrong. Same week in Minnesota.,2024,EU is the worst place to be DevOps
Deleted Account,28,[deleted],2024,EU is the worst place to be DevOps
raiksaa,15,"Never go with bank jobs, they are horrendous.",2024,EU is the worst place to be DevOps
FUSe,35,"My wife moved one of her workers from Germany to USA (Atlanta area). 

The person was given a raise from 80k to 120k to move here. Atlanta is not a high cost of living city. 

The person from Germany was happy for the raise and is now after 9 months crying that they do not make enough to do anything. They can’t travel like they used to in Germany and don’t have enough time off.

America may be higher salary but you don’t necessarily get a better life. Also we have gun violence here",2024,EU is the worst place to be DevOps
_ajog,10,"Thanks for sharing your insights! It's true that a higher salary doesn't always equate to a better quality of life, especially when considering factors like cost of living and work-life balance. It's important to weigh all aspects when making such big decisions.",2024,EU is the worst place to be DevOps
Gardium90,1,"I don't know how many people get a reality check when all they focused on was $$$ on their paycheck.

Taxes is just one aspect, it also matters what you need to cover out of pocket based on personal situations and prices for services and commutes plus more. 

Sure, if one is young and healthy, no kids, don't want to settle with a house etc. it can be beneficial to be in a HCoL city in the US making 250-300k+ USD. Spending a bit on a fun life, but still saving quite a bit for a future life.

On the other hand, someone who wants to settle, have kids or has kids, needs medical services (basically at one point, everyone needs something, even if just a sprain or a twisted ankle), buy property, who needs WLB and stability with their work, I'm in no doubt that EU is the better option. This doesn't even consider the gun violence and homeless/drug situation raging the US currently...

Now also consider, that 1k USD in disposable income (money left after all regular bills paid) is likely to get far more value in EU than US for local services. Sure, globalization and major brands consumer goods will be a different matter, but this accounts for maybe 5-10% of total usage of disposable income, tops 20%. The rest will be restaurants, leisure/enjoyment, cinema, spa/body treatments and more that will mainly consist of local services provided by local labor and conditions.

With a high quality of life and eating out healthy (not fast food with few exceptions, but actual restaurant cooked food with healthy ingredients and salad) at least 5-6 meals a week (yes, about 1 meal a day on average), going to saunas/spas, having 2 cars, owning 2 flats with mortgage, yearly unlimited transit pass, drinking great original pilsner beers at pubs multiple times per week, affording travel by plane and hotel once every 2 months on planned budgets and more.

Total monthly budget to cover all this for two people? 2,500 EUR. Then I add in 1,500 to savings/investments, and it is covered by my 4k net salary. Taxes are around 22% after deductions, and my gross is 5k.

My wife pays her part according to her proportional income compared to mine, so that's 500 of the budget. I have 500 ""fuck it whatever"" money each month outside of savings, generally my beer and ""fun times with buddies"" money...

And when we get kids, the discretionary budget for food and clothing, utilities and maybe some babysitting/ services, it will maybe increase by 500 EUR a month. Then I'll be a dad, so no need for ""fuck it whatever"" money anymore. Child birth and medical expenses will be fully covered...

How much would I need to make in the US to match this lifestyle 🙂? Sorry for the long text, but to provide context. I really don't see how the US could make my situation any better, and neither does my wife",2024,EU is the worst place to be DevOps
Frying3632,2,Damn,2024,EU is the worst place to be DevOps
pachirulis,16,"Banks are shit, change business and will be better. PD: I have worked for 2 banks in the past",2024,EU is the worst place to be DevOps
SolarPoweredKeyboard,3,"I work for an insurance company and it's the highest paying job I've had by far, and people are regularly jumping between other insurance companies and banks. It feels like there's where the cash is unless you find a big international player operating in your country.",2024,EU is the worst place to be DevOps
Deleted Account,1,[deleted],2024,EU is the worst place to be DevOps
pachirulis,1,"Is not only with me, they are the lowest paying industry, they are the slowest operating industry, usually tech is really outdated, also lots of silos and pseudo agile and could keep naming problems for days",2024,EU is the worst place to be DevOps
mozilla666fox,15,"Oh, so because the companies you apply to offer you shit, you think the entire European system is shit? Having lived and worked in the US, I can guarantee you that the 90k you get here takes you a lot further than it ever will in the US.


I took a 50k/yr paycut to come here and I haven't thought about money or taxes in years. Money in savings, money in investment, and money for spending without ever thinking if I'm going to last until the end of the month. I work a 9-5, but half that time is dedicated to meetings, coffee time, and lunches. If someone put a gun in my mouth and told me I had to go back to the US, I'd pull the trigger myself lol",2024,EU is the worst place to be DevOps
OMGItsCheezWTF,6,"I think I disagree with your initial assessment of work life balance or quality of life.

I've primarily worked in the UK, but also worked in the Netherlands, Germany and Cyprus. Not once have I ever been expected to work beyond my 9-5 monday to friday.

One UK employer had a voluntary on-call rota of 1 week on, 3 weeks off. 7pm-7am  monday to friday and all weekend. But callouts were less than 1 per week (I'd get called out maybe once every two times I was on rota) and for volunteering you got a 20k boost to your salary. So competition to be on the on-call team was high.

My salary in the UK is roughly £123k GBP (155k usd), including bonus and stocks, i got my full bonus this year without any issue.

I have private medical and dental cover, although private medical care here still goes via the NHS for primary care, it's essentially the extras that go via the private cover.

That puts me well beyond 99% of UK employees in terms of salary, and my quality of life reflects that, I own my own house in a nice area, and my wife and I can afford to live with luxuries, hobbies, holidays etc. Compared to the vast majority of the UK this puts me in a position of priviledge.

I also get 33 days off per year, 2 months sick pay, 8% pension matching on my 6% contribution (tax free) - last year I ended up taking most of a month off on holiday and my wife and I travelled.

There's also the small perks, work pays for my spotify, youtube premium, amazon prime video, that sort of thing.

I've worked primarily in the tech sector, but moved to fintech a couple of years ago. I have US colleagues as I work for an international company and their work life balance is insanely skewed by comparison. I'm sure their salaries are higher, especially the ones working in LA, but I wouldn't trade places with them.",2024,EU is the worst place to be DevOps
vitalysh,2,"same, working as cloud engineer/sre/devops in tech, Finland. ~15 years of experience. Worked both for local and US based companies, all of them are international. I'm really-really well paid, and my peers are well paid as well. We did some back of the napkin numbers with my wife and it doesn't make sence to move to US at all (we have 2 kids).

This article is really accurate though, you have to work for the companies that compete on the worldwide level both for customers and talent. 

https://blog.pragmaticengineer.com/software-engineering-salaries-in-the-netherlands-and-europe/",2024,EU is the worst place to be DevOps
wuzzelputz,5,"as others told already: banks are shit, and bank software often is shit. on the other hand you didn‘t talk about vacation and work hours. If it‘s 30+ days and 36h, no overtime (probably due to weak SLA in your project): it‘s a great salary.  

Edit: I don’t know N26, but there are quite a lot of companies in germany that try to screw over and squeeze the life out of inexperienced people. I mean, basic capitalism, sure, but have you been to a german family owned mid sized company with 3 managers per dev? These kind of companies pay as low as possible and since there are many, the scheme somehow works.",2024,EU is the worst place to be DevOps
Rollingprobablecause,13,">Senior DevOps - they want you to code consistently in Go for operators and etc.

That's software dev lol, I'd ask them ""so wheres the devops position""",2024,EU is the worst place to be DevOps
EarthquakeBass,2,It’s in the _Dev_ in DevOps,2024,EU is the worst place to be DevOps
Deleted Account,2,If you can’t code a k8s operator you’re definitely not devops.,2024,EU is the worst place to be DevOps
Deleted Account,3,"There is a title for called „Kubernetes adminiatrator” or „Kubernetes operator”. 

Issue is for retard recruiters everything is DevOps.",2024,EU is the worst place to be DevOps
tamale,1,"What

Devops/SRE/Platform Eng are exactly the kind of positions where you might be coding a k8s operator. 

Where have you been for 5 years?",2024,EU is the worst place to be DevOps
lovemyonahole,2,Banks are underpaying everywhere.,2024,EU is the worst place to be DevOps
AtomicPeng,-7,"Wow, the horror. Literal slave drivers, how will you survive? Not even slaves in Qatar have it this bad. :(",2024,EU is the worst place to be DevOps
Drazul_,1,If you have that experience you should avoid jobs offering less than 100k. There are a good amount of them now (I started to see those salaries on regular offers since 2022),2024,EU is the worst place to be DevOps
Lurkernomoreisay,1,"In the US, such a job would only earn you a combined 10 days of time off a year, to be split between PTO and Sick Days.  

We earn slightly more in the US , but don't have any means to spend it on ourselves.

10 days vacation a year.  I use 5 days to get the week between christmas and new years off -- leaving me with 5 days to spread over the rest of the year for sick-days and PTO.   We get 6 paid holidays a year: New Years, July 4, Labor Day, Thanksgiving, Day After THanksgivng, Christmas.

Health Coverage costs: I pay $500/month for insurance, which doesn't kick in until I spend at least $2000 in deductible in services.  At that point, it covers 60% of approved costs.    I'll spend between $15,000 and $25,000 a year to cover basic checkup, 3 urologist appoitnments, 3 sets of blood work, and general health (first colonoscopy was last Dec, cost was $3000 after insurance paid it's amount.

I rent a 600 sqft (55sqm) apartment, that's about a 1 hour commute from work.  The cost is $2600/mo.   It would be prohibitively expensive to live closer to the office.

An espresso latte, 200mL, costs $5.   Fruits and vegetables are expensive.  Apples, at the cheap grocery are $2.99/lb (EUR 6.10/kg).  I usually use one of the groceries in the town I live in, so they cost more.   A 12 pack of eggs here cost $5, though recently have been upwards of $7.   The bare essentials of food add up very quickly.

Company just announced cost-reduction layoffs. As they do every year.   You get zero notice, and you're fired.  So, once a year, there's the stress of suddenly losing your job for no reason, and with to benefit other than ""You must be out by end of day, you will be paid an additional 2 weeks for notice period."" -- Having zero job security, and can be let go for no reason at any point sucks.

Service costs are expensive.  A basic cell-phone, with 1GB data, costs $75/mo.   Internet 50mb down/5mb up is $90/mo.  Electricity bill doubled, again -- last month was $380.  Two years ago, it was only $150.   The state approved another rate hike, so prices go up again in April.",2024,EU is the worst place to be DevOps
donjulioanejo,1,"> In the US, such a job would only earn you a combined 10 days of time off a year, to be split between PTO and Sick Days.

Not really.  Most tech companies that aren't Amazon will give you 3-5 weeks, or some form of unlimited (which usually means 4-5 weeks).

Is it as good as some companies in the EU giving you 6-8 weeks?  No.  But it's not like you only have 10 PTO days in total for the entire year.

I'm currently working for a US company with ""unlimited"" vacation, and in practice, that translates to around 5 weeks per year until people start asking questions.",2024,EU is the worst place to be DevOps
Lurkernomoreisay,1,"I'm in SF Bay -- and, that hasn't been the experience of many colleagues.  Excluding those employees by the big FAANG companies.  

Working at the Moffett Research Park,  the average seemed to be 10 to 15 days for first 5 years; with a bump to 18 or 20 days at year 5.    

After moving to SF proper for more fancy jobs -- seemed to be similar 10 to 12 days to start, 15 to 20 after 5 years.   

Current company has offices worldwide, and we generate a lot of interest from people who want to work in the industry;  most people here do stay 15+ years, longer for the non US sites.   But vacation sucks for people stationed in JP, US and CA.   I'm always envious of our coworkers in UK/DE/ES/PT/FI/SE.   

I'm now in my late 40s, and still have shit for PTO :|  I make a killing, but rarely get the chance to do anything with that money.  If nothing else, I'm able to retire on what I've saved and live sensibly (outside of California), should I just want to stop the treadmill.",2024,EU is the worst place to be DevOps
EarthquakeBass,1,"Can’t comment on the company or pay, but the skills — that’s literally what DevOps is bro. There’s a lot more monkeys out there who can click buttons in the AWS console than people who can do that stuff.",2024,EU is the worst place to be DevOps
scionae,4,"I'm working as one in Italy, it fucking sucks here too man.",2024,EU is the worst place to be DevOps
tiny_tim57,4,"The whole of the EU? I think you are confused because you work for a terrible company and assume it's the same across an entire continent.

There are plenty of higher paid jobs where you are not treated like a slave. I suggest looking for a new position.",2024,EU is the worst place to be DevOps
dogfish182,4,What a crock NL is great. Your post has a hardcore whinge tone and I’m not believing any of it. I know Germans that write code and make bank. Disinformation pfffft,2024,EU is the worst place to be DevOps
Deleted Account,7,"really annoys me when people compare themselves to slaves.

life is hard everywhere. open up a news website from time to time. healthcare everywhere is crumbling. taxes are high, cost of living is skyrocketing. but to compare yourself to a slave is just ignorant",2024,EU is the worst place to be DevOps
Full_Cash6140,0,"The state claims ownership of every person and uses that claim to justify stealing a huge portion of everyone's productivity, which is called taxation. Ownership of another person is slavery by definition.",2024,EU is the worst place to be DevOps
Deleted Account,1,"what?!! you have the freedom to not pay taxes if you dont want to. you have the freedom to vote for changing said taxes. no one will come and take you teeth out, whip you, rape you and sell you to another person while you're chained.",2024,EU is the worst place to be DevOps
Full_Cash6140,1,"They will throw you in a cage if you don't pay taxes. And if you resist they will kill you. Stfu.

I don't have any freedom and voting doesn't mean anything. Nothing ever changes for the better. Government only grows because voters are idiots. Democracy is the stupidest idea ever, especially when the worst ideas imaginable are always the most popular because everyone around you is a moron.",2024,EU is the worst place to be DevOps
Deleted Account,1,i feel sorry that this is your version of reality,2024,EU is the worst place to be DevOps
Full_Cash6140,1,"I feel sorry that I'm surrounded by people like you that have to engage in mental gymnastics to systematically deny reality so that you can feel more comfortable being part of the herd. Nothing I said is incorrect. And the idea that a society could in theory vote for a more just world (assuming the elections were legitimate, which of course they aren't), even though we all know that never happens, is nothing but an indictment against the whole voting apparatus which allowed such injustice in the first place.

 Voting doesn't work, obviously. It is not going to fix the current world. It created the current world. And when 99% of people want you to be a slave, you're going to be a slave. Whether that is immoral is irrelevant to the vote. People don't care about morals. I can't vote my way out of that. You're still stuck in a world crafted for your 13 year old mind in 8th grade civics. This idea that it's all okay because of some majoritarian bullshit is just pure evil. I never consented to this. It is forced on me.",2024,EU is the worst place to be DevOps
HTDutchy_NL,11,"First: R&D hours ARE work hours.  
Second: Touch some grass.  
Third: Maybe learn a bit about economics (tax brackets are a thing and not all forms of income are equal).

I work flexible hours, often able to keep a couple afternoons or even a day off in the middle of the week.  
Plenty of vacation days, enough money to live comfortably and enjoy life.  
Healthcare wise we can't get better! My wife can get the best specialists, multiple treatments a year and expensive medication for a stupidly affordable insurance all while not worrying about income or losing her job during periods she can't work.

In all, I think this is a you problem.",2024,EU is the worst place to be DevOps
Deleted Account,-4,[deleted],2024,EU is the worst place to be DevOps
HTDutchy_NL,4,"Yes I pay taxes. My little game of life even comes with the LLC expansion which has a whole extra set of special little rules and more awareness of how much of the money that comes in goes to the government.    
I'm pretty sure that on some amounts of money I'm paying tax in 4 different ways before using it to buy something which I need to pay sales tax on.    
And you know what? IT'S FINE. The hell is wrong with paying taxes if at the end of it all my biggest concern this evening is some internet stranger having a different opinion.

If you think there's some better place to live and work, go find that place! Personally I just think there's nothing wrong here beside people needing to learn how to set boundaries. Which seems to be a general world wide IT worker problem.",2024,EU is the worst place to be DevOps
is-there-more,1,Do you have an eenmanszaak?,2024,EU is the worst place to be DevOps
Tricky_Exit3867,1,Een LLC is volgens mij een BV in NL. Kan interessant worden als je goed kan factureren per uur richting de 100 euro.,2024,EU is the worst place to be DevOps
Tricky_Exit3867,1,Thanks for your post fellow dutchman. I couldn’t agree more.,2024,EU is the worst place to be DevOps
Deleted Account,3,[removed],2024,EU is the worst place to be DevOps
Wooden_Possible1369,2,Can't you just go on a state plan? I was unemployed for a bit after college and I just went on a MassHealth plan and the state covered everything,2024,EU is the worst place to be DevOps
bendem,3,"I mean, the pay is average, but I'm working 36h/w with overtime off, I keep updated on the job (I'd say about 30%) because it's my job to be up to date with tech. My colleagues are decent but work is work and after 5pm it's family time, so don't expect anyone to pull an all nighter even if it's urgent.

Salaries are public and it's very easy to know what your colleagues earn.

I had a kinesiologist appointment today and it cost me 5€ after getting a free consultation from my gp.

I'm not giving any of that up thank you and fuck everything that's broken in the US.",2024,EU is the worst place to be DevOps
neowiz92,3,"Not my experience at all. I have one of the most chill DevOps environment ever. I think is the organization culture and the systems architecture? 

We have oncall but our systems are so stable we rarely firefight or get paged. I agree that salaries compared to USA are nowhere near, but I’m a top earner in Germany and it comes with a lot of benefits and job security that cannot be matched there.",2024,EU is the worst place to be DevOps
The_Masturbatrix,3,You won't ever go bankrupt from a medical bill. Your college is paid for. You have much better labor protections. I'd trade my high salary for those.,2024,EU is the worst place to be DevOps
HolyCowEveryNameIsTa,3,I can't even find a primary doctor with the best insurance in the my state. I've been on multiple waiting lists since October of last year. I have to go to the ER if I need anything. Welcome to America. It's fucking great here.,2024,EU is the worst place to be DevOps
Dubinko,0,What state is that? wtf..,2024,EU is the worst place to be DevOps
HolyCowEveryNameIsTa,2,"Michigan. I live in a less populated area, but it's not rural by any means(Combined metropolitan area is 377,474). If I still lived in the Detroit area, I might have a better time of it, but who knows. There has been a doctor and nursing shortage that continues to get worse.",2024,EU is the worst place to be DevOps
djlittt,3,"in germany youre not paying of lets say all your salary that 43% but only those euros that are above a threshold. the euros below have a lower tax rate. so its abit complicated: in general you can calculate more like 30%

to illustrate:
ure an individual and u earn 80k a year. 
the first 10k are free without taxation. 
next 10k u pay x%. 
next 10k u pay y%. 
etc etc

the sum of those taxed euros ends being that your overall average tax rate is more like 30% all incl


you also have lots of ways to reduce that more…

https://en.m.wikipedia.org/wiki/Taxation_in_Germany",2024,EU is the worst place to be DevOps
RatherNerdy,3,"The health care ""wait"" complaint is silly. Here in the US, your doctor can indicate you need an MRI, and the insurance company you buy into, can deny it. A wait time on a non-emergency procedure is the norm, even in the US.",2024,EU is the worst place to be DevOps
squirrel_tincture,3,"I see several comments talking about England in this thread and I want to vent for a minute. I’m American, but I’ve been living in London for a little over ten years. I have a chronic health condition, so without exaggeration I feel confident saying I know both healthcare systems reasonably well. 

Complaints about long wait times within the NHS drive me a bit mad. I won’t put the NHS on a pedestal and claim it’s perfect by any stretch, but unless you’re making _very_ good money at a company with _excellent_ health benefits, the NHS is so much better than the United States in nearly every way that matters. 

Unfortunately, my decade in London has coincided with a decade of Tory rule, and I’ve watched them intentionally and brutally gut the NHS through funding cuts and freezes in an unspoken but brazen attempt to encourage if not outright force the privatisation of healthcare in the UK. Billions of dollars that should be going to protect the health and wellbeing of UK residents are just gone, and it’s negatively affected the system at every level. It was so much better when I first arrived here: now it feels like every doctor is stretched to their limits and facilities are perpetually overwhelmed. 

As much as the Tories will doublespeak otherwise, this isn’t a failure on the part of NHS staff, nor is it indicative of an innate flaw in socialised healthcare systems. It’s a hostile, malicious policy intended to open the door to an alternative system where private companies can turn a profit from people’s suffering. 

The NHS doesn’t need a major overhaul. It needs the resources it’s been denied for more than ten years. This can be fixed at the ballot box.",2024,EU is the worst place to be DevOps
GNUMoogle,3,"Skill issue. There aren't many good devops engineers to begin with. Some of them I've worked with (I am one):

* don't know how to do basic shit in Linux
* write code like they just picked it up, without any guardrails or strict modes, without functions, without any readability... you complain that devops in EU have Indian pay, but the code they write is exactly the quality that we get out of Indian outsourcing. How can they expect to be paid better than the cannon fodder from India if they work the same?
* don't have the slightest clue what's a regular expression
* don't know more than 1 build system
* they need to be babysit by Senior and Expert devops because they can't figure out that if the customer asked them to give them a SUSE package, they just need to spin a SUSE Docker image and run a little changed up OpenSUSE recipe there - they cannot comprehend that similarities between systems can be used to an advantage if they can't be arsed to read the manual - oh yeah, they can't be arsed to read the freaking manual because they don't have time because they underestimated and underscored every task during their agile sprint, because they wanted to look good in front of management with an impressive list of things they promised they'll deliver

To put it blunt - if you don't run Linux as your main OS, and you don't program on the side to keep growing, and if you're just a tourist in the computer industry - you're not gonna make it.

Edit: oh and if you wanna settle everything over a Teams call instead of writing what is the fucking problem then I am going to complain to management that you're wasting our time with meetings without an agenda. This is an actual offence you can get reprimanded for, where I work.

Simple as.",2024,EU is the worst place to be DevOps
k3v1n,3,Canada is much worse due to cost of living and housing prices. In Canada you get USA work hours and lack of time off with near EU salaries.,2024,EU is the worst place to be DevOps
No_Butterfly_1888,4,"I have to disagree. I worked for companies in US, Germany, England, Portugal, Brazil, Poland and France and the European companies what the ones that gave the better work-life balance. 


About taxes, hire a good account, a Very good one.",2024,EU is the worst place to be DevOps
mrfalk3n,2,"Freelance senior DevOps gets easily 500eur/day almost everywhere in Europe - remotely as well.

You won't get rich, but won't die poor either;) 

As an employee wages/toxicity/work life balance might obviously vary A LOT.",2024,EU is the worst place to be DevOps
guel135,2,"I can get one MRI in less than 2 weeks if it's not urgent in Germany. I dislocated my shoulder and got operated in less than a few weeks (it's not an urgent operation ) in one of the 15 best hospitals in the world where they operate many Olímpics.
I'm quite happy with my 6 weeks off and my flexible schedule to bring my child to the kindergarten.",2024,EU is the worst place to be DevOps
Deleted Account,2,[deleted],2024,EU is the worst place to be DevOps
Knastt,1,"Hi, may I send you a DM? I've got some questions about NL.",2024,EU is the worst place to be DevOps
MrScotchyScotch,2,Would you like to take a vacation? Don't work in the US.,2024,EU is the worst place to be DevOps
theyellowbrother,2,44% Tax?  Averagge tax rate in CA (California) for me is average tax rate is 40.4% and marginal tax rate is 48.7%.,2024,EU is the worst place to be DevOps
Legal_Technology1330,2,"And you are not just a DevOps, but also a support, but not regular, it's like customer support for Devs when they forget their password, system admin, architect, etc... of course you have to do your primary tasks in parallel",2024,EU is the worst place to be DevOps
1whatabeautifulday,2,Waitlist is better than not being able to afford any healthcare.,2024,EU is the worst place to be DevOps
spiralenator,2,I’m in the US and I’ve waited over a year for a surgery. I have “very good insurance” and it still cost me $7000. My monthly premiums are over $1000 for my family. I fail to see how this is better than *waves vaguely *,2024,EU is the worst place to be DevOps
koffiezet,2,"As a Belgian: only 44% in the highest tax-bracket?

That said, I'm working as a freelancer, and my gross revenue isn't too far off what my US colleagues make, but yeah I pay more taxes. I can't complain about healthcare or waiting lists here though, and work/life balance is pretty good since most clients don't want to pay for my (expensive) overtime.",2024,EU is the worst place to be DevOps
lostmymainagain123,2,Lmao sounds like Australia,2024,EU is the worst place to be DevOps
ohmer123,2,"Only read ""EU is..."".

Things varies greatly among EU member states. Name a country and we can discuss or this is just as general as stating ""earth is the worst place to be a DevOps"". And I basically DevOps via Starlink so I have a fucking clue what it is from to DevOps from the moon.",2024,EU is the worst place to be DevOps
TheDirtyDutcher,2,"South Africa is pretty good then, I work for a UK based company so from their perspective I’m super cheap, but from SA income perspective I’m in the top % of earners.

I take home after taxes around R65k, and to put that into perspective, I’m renting a 3bedroom house with garage in a security estate and it costs me R16.5k per month.",2024,EU is the worst place to be DevOps
xagarth,2,"German public healthcare is pretty good compared to us. Moreover, you can opt out (yes, you can!) and go private, which is superb in terms of quality and availability and often... cheaper. Yes. Better, faster, easier, AND cheaper.
In the most expensive region of Germany,  bavaria,  where porsche and bmw come from, you can live in the capital city Munich in a senior software engineer salary and singlehandedly support a family of 4 - No problem. You will live comfortably, visit museums and restaurants,  travel, and have savings. 
You can visit Milan for the weekend - there's a train, or Venice if you want - it's very close.
There's plenty of mountains, lakes, and sea(s) not so far away.
If you move to Berlin, your salary will drop around 15%, but the cost of living will drop 30% if not more (mostly rent). Still, supporting family of 4 from single income - No problem at all!
This is something you won't be able to do in NYC, LA, SF, maybe in Austin. Maybe.
I'm talking about an average devops salary, not your 500k+ dir package.",2024,EU is the worst place to be DevOps
lesstalkmorescience,2,"This isn't about devops, these are EU social issues, and the EU is a big place. Also, where are things better? Because if you're thinking USA you're in for a very rude awakening. The EU is far from perfect, but I'd much rather go with slow, steady and heavily taxed than whatever it is they're freebasing on the other side of the Atlantic.

If you want to complain about anything, how about how boring and soulless European tech is? There's a lot of work, very little of it meaningful or interesting.",2024,EU is the worst place to be DevOps
mwlazlo885,2,hello from poland..,2024,EU is the worst place to be DevOps
Deleted Account,2,"You know why, because DevOps is a meme field now. Go update your terraform files.",2024,EU is the worst place to be DevOps
Dubinko,1,may I ask why its meme field? Is it looked down for some reason ? :),2024,EU is the worst place to be DevOps
pldelisle,3,"LOL. 3-4 months? Come in Quebec (Canada), it's going to be 3-4 YEARS. 

I'm going to visit Munich. Seems a nice city. Adele is playing there, gonna see her :)",2024,EU is the worst place to be DevOps
Deleted Account,3,Start contracting my bro,2024,EU is the worst place to be DevOps
Any-Connection-1813,1,How to get into contracting and get consistent contracts after current one is done?,2024,EU is the worst place to be DevOps
Deleted Account,0,What the fuck I'm not your dad,2024,EU is the worst place to be DevOps
coffee_is_all_i_need,4,"Don't blame Germany for your false expectations. All in all, Germany is a good country. As a devops you will have a good income to live a good life. Just a few points: Health care is good (currently there may be long waiting times, but this is true in many other countries). You have many rights and freedoms. It's safe. You have 30 days off (paid!). It's easy to travel to other countries. You have a lot of employer rights, like you can't be fired easily. You will have a good work-life balance (35-40 hours a week). You will get free education for your kids. You will not make 250k or 300k USD. But I don't think it's that much in HCOL areas in the USA.

There are some things that aren't good in Germany too. But guess what, there is no such thing as ""the best country"" to live in. There might be a better country for you than Germany. But really, as I said before, you can have a good life in Germany.",2024,EU is the worst place to be DevOps
BaoBaoBen,2,What is all this talk of free health insurance in Germany? Have you guys ever looked at your payslip? Its between 15-18% (depending on which government owned insurance you take) of your salary that is deducted before paying out to you for health care...,2024,EU is the worst place to be DevOps
Lurkernomoreisay,5,"it's a flat 20%.  

In the US, it just hurts a lot more --- $400/mo for the insurance contract.  $2000 deductible, so insurance doesn't start paying out until you incur $2k.   Then after that, the plan our employer offers, covers 60% of approved costs.  An ER visit after breaking my arm, came out to $8000 owed after insurance paid their share.    Regular urologist visit and prescription costs $1200 each time, which I require every 5 months.

I'd rather it be a flat 20%.  For the years when I had shit employer coverage ($500/mo, $8000 deductible, 50% coverage), I just didn't go to the doctor at all.  Ended up with ribs that didn't heal correctly after being broken;  not seeing doctor for broken ankle.  Not seeing doctor after an animal bite (possum).   Hoping that a regular vomiting and violent rib/torso pain would go away -- until I had insurance that would cover it.   At the time, it was ""a preexisting condition"" and insurance wouldn't cover treating it at all.  At least the law changed around 12 years ago, making denying ""preexisting conditions"" illegal.

Not seeing a doctor for 10 \~ 15 years, because of not making enough money to make use of medical insurance, followed by earning enough to do so -- I'd rather the flat 20% approach, even now when making 200k+.  Take that 40k and let me not worry about the costs of every little item, every little visit.  It would have been nice to see a doctor when I was unemployed, or working retail, or in the first 8 years of my career, when making $65k is not enough to actually see a doctor.",2024,EU is the worst place to be DevOps
BaoBaoBen,1,"That's all good for you but 20% ain't free, so people should stop talking about free health care and misleading others who are in for a bad surprise when free turns out to mean 20% or your income.",2024,EU is the worst place to be DevOps
K1net3k,2,"That sounds like BS rant to me. My tax rate in the US is like 40%. My German counterparts are not allowed to work outside of specified hours because it's illegal. Germany has other benefits which American can only dream about. 

Maybe go back to India if you enjoy it so much? LOL.",2024,EU is the worst place to be DevOps
_chksum,6,"Tech workers globally are being transitioned into a new slave class. As an American, I will say, I would take your German tax rate and health insurance any day.

Our tax rate is 33% but I could not tell you where that money goes because I honestly don’t know. I pay for literally everything. Government only covers your expenses if you’re a heroin addict or in the country illegally.

I have health insurance but can’t get an MRI because it’s not covered under my plan and an MRI is roughly 7,000 dollars (two months rent) without insurance.

What my insurance does cover, usually involves a wait time of 3-6 months. And when you finally get healthcare, they never find a problem, but will push you to take antidepressants.

Americans get higher pay, but groceries and rent consume about half of my pay. If I buy a 5 dollar cup of coffee, I will be treated like a criminal if I don’t tip an additional 5.

Maybe “the grass is greener on the other side” - but I would move to Germany in a heartbeat if I could.",2024,EU is the worst place to be DevOps
nickelickelmouse,8,“Slave class”? Are you fucking kidding me?,2024,EU is the worst place to be DevOps
Kritnc,16,"> Tech workers globally are being transitioned into a new slave class.

> Government only covers your expenses if you’re a heroin addict or in the country illegally.

 > I buy a 5 dollar cup of coffee, I will be treated like a criminal if I don’t tip an additional 5.

You just love to make shit up huh. You are paying $3,500 a month for rent and talking about being part of a slave class",2024,EU is the worst place to be DevOps
Deleted Account,-10,[removed],2024,EU is the worst place to be DevOps
Kritnc,6,"> If you can’t see how that situation is infuriating, then I’d suggest you do humanity a favor and off yourself ASAP.

You seem incredibly out of touch with reality",2024,EU is the worst place to be DevOps
_chksum,-1,[https://imgur.com/a/b2OKmle](https://imgur.com/a/b2OKmle),2024,EU is the worst place to be DevOps
Guts_blade,3,I couldn’t ever imagine tipping for coffee. In the uk I get annoyed when I have to pay a 12.5% service charge at restaurants when the service was poor,2024,EU is the worst place to be DevOps
Drauren,1,"The person you reply to is being a spoiled brat. 

You don't tip more than like a dollar on a 5 dollar coffee. Go into the real world and act like OP and say you're a slave while you pay 3500$ for rent for a swanky apartment.",2024,EU is the worst place to be DevOps
SolarPoweredKeyboard,5,">You don't tip more than like a dollar on a 5 dollar coffee.

I hate pricing in the U.S.

You list prices without tax and it's also expected that you tip everywhere. Just tell me what I owe, already!",2024,EU is the worst place to be DevOps
Drauren,2,"I don't disagree with you. I didn't build the sandbox, I just play in it.",2024,EU is the worst place to be DevOps
nn123654,3,"While tipping culture in the US is kind of out of control, you will at most be expected to tip like $1 or $2 on a $5 coffee. Standard tip percentages are usually between 15% and 20% often rounded up to the nearest dollar for low dollar amount transactions.

For something like a coffee shop tipping is still usually optional unless it's a full service restaurant where you have a waiter bringing you stuff to your table.",2024,EU is the worst place to be DevOps
slightly-less-fat,1,Didn’t the government cover your unemployment 🤔,2024,EU is the worst place to be DevOps
chandrakanth527,1,"one of the reasons i moved out from Germany to India. So many people were rubbing free health care on my face, saying i am making a mistake. I wanted to get checked to see if i have any alergies and they gave me an appointment for 1 year later. 1 god damn year later. People with public insurance are treated as shit. I think germany is not the country if you earning high salary.",2024,EU is the worst place to be DevOps
NotDogsInTrenchcoat,2,"You've got that right. EU does have free healthcare, but as it turns out, free healthcare isn't actually free. You guys are sadly underpaid.",2024,EU is the worst place to be DevOps
batman_carlos,2,Not only devops. Everyone is poor in EU.,2024,EU is the worst place to be DevOps
CountyExotic,1,Don’t know why everyone is acting like the US is such an awful place to work… you get paid so much more. It outweighs the negatives…,2024,EU is the worst place to be DevOps
dave-the-scientist,2,"You get paid more, but your taxes don't pay for services that the rest of ours do. So it's pay out of pocket for hc, or pay in taxes for hc. Only difference is, your hc costs 3-4x more because your private health insurance companies need to make billions in profits, plus a single-payer model allows governments to negotiate much better prices under universal hc.

But sure, enjoy that larger number on your pay cheque that you can't actually use.",2024,EU is the worst place to be DevOps
CountyExotic,1,but healthcare costs way less than the extra money you get paid. Amazon pays almost 2x USA vs Europe.,2024,EU is the worst place to be DevOps
dave-the-scientist,2,"US health care averages 3-4x what Canadians or EU pay. My point is, just comparing the salary number misses a whole hell of a lot of money.",2024,EU is the worst place to be DevOps
whenhellfreezes,1,"If you, your spouse, and all kids are currently healthy sure. Healthcare costs aren't just the premiums.",2024,EU is the worst place to be DevOps
PharmaSCM_FIRE,1,"I wouldn't want to use health insurance in the first place, private or public. It is sometimes luck but it's also why I go the gym regularly, do some yoga, and eat at a reasonable caloric level so that calories out > in. Minimize the chances of a health event.",2024,EU is the worst place to be DevOps
dave-the-scientist,1,"Definitely all good things to do. But a bit of bad luck will wipe all of that out. You can't control if some random viral cold ends up giving you diabetes, or paralyzes your legs (yep, both are rare but real outcomes). Or if some dumb fuck hits you with their car (happened to my brother). 

I wish you the best man, I hope your luck holds.",2024,EU is the worst place to be DevOps
PharmaSCM_FIRE,1,Same.,2024,EU is the worst place to be DevOps
Full_Cash6140,1,"I wish I could opt out of all government ""services"" and not suffer all this theft. That would be a literal dream. Unfortunately we are surrounded by retards like you so that will never happen",2024,EU is the worst place to be DevOps
dave-the-scientist,1,"Hahaha you libertarians slay me. You're all just so fucking naive and entitled. You want all the benefits of living in a society, but throw a tantrum when you have to pay for them. Lol theft... You like using internet? That shit was developed, and implemented by public money. You drive? Roads, obv. Go move into the woods and live off grid, or shut the fuck up and realize you have to give back in a society. Selfish prick.",2024,EU is the worst place to be DevOps
Full_Cash6140,1,What I really want is for scum like you to die,2024,EU is the worst place to be DevOps
dave-the-scientist,1,"Oh I'm sure it gets you off saying that to people smarter than you. But the only reason I can't round up my 20 cousins, shoot you in the face and take your house, is because of society. Be thankful little man.",2024,EU is the worst place to be DevOps
Full_Cash6140,1,Would absolutely love to see you try beta bitch. I know you think you're king shit because you put scientist in your name but in reality your just a sad retarded evil little pussy who would never even think of trying to do something yourself in the real world. That's why you need Daddy government to do it all for you.,2024,EU is the worst place to be DevOps
dave-the-scientist,1,"Hahaha man you libertarians are easy to rile up. Look at him go! Next you'll tell me you're not actually mad, right?

All of the systems surrounding you are so much more interconnected and complicated than you think. Maybe some day you'll see that. Weirder things have happened I guess.",2024,EU is the worst place to be DevOps
Full_Cash6140,1,"BuT wHo WoUlD bUiLd ThE rOaDs.

iM sO sMaRt Im A ScIeNtIsT!!!!!!!!!!",2024,EU is the worst place to be DevOps
Full_Cash6140,1,What I really want is for scum like you to be deleted,2024,EU is the worst place to be DevOps
LakeEnd,0,Money isnt everything,2024,EU is the worst place to be DevOps
amartincolby,3,"Further, the real measure is disposable income. I know that US tech workers earn more, but the disposable incomes are much more comparable.",2024,EU is the worst place to be DevOps
chochaos7,1,Why not work in Luxembourg?,2024,EU is the worst place to be DevOps
Deleted Account,-7,[deleted],2024,EU is the worst place to be DevOps
Temik,2,Can confirm - made bank in Switzerland as a corporate sysadmin at a big corporation. If you want money - that’s the place to go. Cost of living is not that high when you look at how cheap the rent is.,2024,EU is the worst place to be DevOps
chochaos7,1,Ok then. Good luck,2024,EU is the worst place to be DevOps
Dual2Core,1,"You are lucky to get MRI in 3-4 months in Germany, in Poland you literally die (waitlist 1-2 years) before getting the MRI. Just had to mention this, free health insurance, pff....",2024,EU is the worst place to be DevOps
foadsf,1,"It is not just Germany and it is not limited to devops jobs. If you are an expert migrant anywhere in western Europe, you are basically a slave. You exist just to be exploited so the politicians can bribe their voters with social plans.",2024,EU is the worst place to be DevOps
ZacPaup,1,"Indian in Germany. Working as DevOps in Germany for past 1.5 years (total 6 years as DevOps). Switched 2 companies during probation, even though they offered full-time, since I wasn’t happy. Eventually got a great job with great salary, good work environment and team, do not need to keep up with the ever changing devops landscape, and on a 6 month parental leave right now.

No Azure, no AWS, no GCP. Just Kubernetes and Hetzner

So yeah, it works.


And if you don’t like the wait times and think it is important, go to emergency. Works like a charm",2024,EU is the worst place to be DevOps
ZacPaup,1,"https://www.reddit.com/r/devops/s/vQpseYvf3W

If you’re interested in knowing how I got my job",2024,EU is the worst place to be DevOps
srgonroll,1,"True that, that tax percentage is crazy!",2024,EU is the worst place to be DevOps
delsystem32exe,0,i get my meds from india mail order sites. I use chatGPT and my own research to diagnose what I have and then order the prescription meds overseas without a prescription. the prices are pretty cheap.,2024,EU is the worst place to be DevOps
swift-sentinel,0,"US, NYC.  The market sucks and the corporations have been awful.  I am considering my options.  The current deal sucks.  I pass.",2024,EU is the worst place to be DevOps
trevorstr,0,"United States income tax rates are insane, not quite 44% but when you combine all the different taxes together, it's probably higher than 50%.",2024,EU is the worst place to be DevOps
whatevtrev24,0,"Sure, maybe if you live in California, and even then it's definitely a stretch to say 50%.",2024,EU is the worst place to be DevOps
marcololol,0,"Germany’s economic policies that prioritize export growth lead directly to a compromise with labor unions to keep wages low. Yes, the government’s policy kept internal wages low so that exports would be a priority. Right now Germany’s export economy is struggling to continue growing and wages are now too low. I think you guys should be lobbying with your labor unions for higher wages and an orientation toward services AND export",2024,EU is the worst place to be DevOps
sebastianrevan,0,"that is true, I legit got more money working from colombia any day of the week, the EU offers are laughable, factor in a much cheaper cost of living...",2024,EU is the worst place to be DevOps
PigletBaseball,0,"sleep wrong mighty worm offend quarrelsome rob price selective scale

 *This post was mass deleted and anonymized with [Redact](https://redact.dev/home)*",2024,EU is the worst place to be DevOps
Itchy-File-8205,-6,"Universal healthcare was always a scam. If you want good care when you need it EVERY TIME then you still need private insurance, and then you're essentially paying for insurance twice over.

Don't get me wrong, it does help a lot of people who otherwise wouldn't get care, but if you're not lower class, it's ass. 

Oh, and the govt can only keep it running because we've been on a massive multi-decade bull run with relatively low inflation and no major wars. Change just one of those factors and the public will find out just how quickly massive public spending goes to shit in times of trouble.",2024,EU is the worst place to be DevOps
Nowaker,-6,">Do you want 44% Tax? Welcome to Germany.. Wait.. but we have free health insurance right? Sure.. MRI waitlist 3-4 months.

And try to explain it to all these leftists in the US that universal healthcare doesn't work.

Greetings,
~someone from Europe who lives in Texas",2024,EU is the worst place to be DevOps
SirCheckmatesalot,1,Well but what alternatives do you have if you live in germany?,2024,EU is the worst place to be DevOps
HgnX,1,"Try the Netherlands as a citizen. You get taxed to death. As an expat, it’s heaven. Best to get some citizenship in any other country and return as an expat lol",2024,EU is the worst place to be DevOps
djk29a_,1,"Funny, my tax burden as someone making a decent bit is not far from 44% anyway for far, far worse guarantees from my society.",2024,EU is the worst place to be DevOps
ovirt001,1,Could move elsewhere. There are a lot of comments about wait times in the US but I suspect these people live in areas with very limited pools of doctors. In a metro area of about 3 million people I can get an appointment within a month.,2024,EU is the worst place to be DevOps
cocacola999,1,I'm currently in the 60% tax trap in my country... 44% sounds good to me ATM,2024,EU is the worst place to be DevOps
xcphd,1,would you mind elaborate a bit?,2024,EU is the worst place to be DevOps
cocacola999,2,"Not a tax expert but the high level is, my country has a ""tax free"" bracket for income. However over a threshold you start to lose this, meaning you have additional tax on top of the standard rate. You also lose other benefits that have value, e.g childcare allowances",2024,EU is the worst place to be DevOps
hoesthethiccc,1,Bro which country 😢,2024,EU is the worst place to be DevOps
cocacola999,2,UK,2024,EU is the worst place to be DevOps
CryptoNarco,1,try Argentina lol,2024,EU is the worst place to be DevOps
qdbigyellow,1,"dear neighbour, 44% is not high in my country.  Another funny thing, the companies still think the IT salary in EU is too high..",2024,EU is the worst place to be DevOps
Deleted Account,1,"From my perspective, it isn't much better in the US. It just depends on where you're at in the food chain...how much valuable knowledge you have. Just remember that everything has value in some form or another. I'm leaving my current job and i knew it didn't pay the best but yes, they treat dev's like a corporate death march there as well. I finally said f\*ck it and decided to leave, but i look at it as i didn't give up i was forced to find a new path. I found a job that increases my pay by $30k a year and hopefully is easier or more appropriate for my passions. In hindsight there is NOTHING that i could have done different at the time based on what i knew. I left and took the knowledge with me and handed them back all their bullshit.",2024,EU is the worst place to be DevOps
lormayna,1,Think how much you pay for education in EU and how much you pay in Europe.,2024,EU is the worst place to be DevOps
Big-Profit-1612,1,Come to the USA. :),2024,EU is the worst place to be DevOps
Cunfuu,1,"I was just chilling re watching the dune's first movie... I saw this and cracked out.

edit: I also have role in a German Company. and man my eyes bleed sometimes.",2024,EU is the worst place to be DevOps
jkpetrov,1,Move to US. Simple trick to multiply your salary.,2024,EU is the worst place to be DevOps
StevoB25,1,"Well that’s disheartening to hear, I want to move to EU from Aus and work in devops T_T",2024,EU is the worst place to be DevOps
n00lp00dle,1,i dread to think what the wait list is like for an mri on the nhs. its 18-24 months for lots of things here. either you pay out of pocket for private or go without,2024,EU is the worst place to be DevOps
CptSupermrkt,1,"*laughs in Japan DevOps* ... Guarantee it's worse here, in every way.",2024,EU is the worst place to be DevOps
rrrmmmrrrmmm,1,">EU DevOps engineers are f\*##n Slaves.

Well, all labor workers kinda are. It's whole point of being employed, really.

Hence, so far I agreed.

But afterwards some things don't quite add up.

>Do you want 44% Tax? Welcome to Germany..

It's probably 42% in your case, isn't it? Except if you earn above 277'826 Euro but it sounds pretty much like you aren't. Also the costs of living usually aren't as high like at places in the US where you actually get jobs in IT. And apart from health insurance, you also getting a bunch of other social insurances.

For instance if you're getting laid off (which is harder to do in Germany than in the US — but that's a different topic) you also have an unemployment insurance included. Then you are still getting 60% (or 67% if you have kids) of your last salary paid by the goverment. And there are also Pflegeversicherung or Unfallversicherung that can help you if sh\*t is on fire.

Furthermore there are also a bunch of other implicit perks like not having to fear that your kids die due to a school shooter, or not even having regular shootings in your place at all, or not having chlorinated chicken meat, or not having [flammable drinking water](https://www.propublica.org/article/scientific-study-links-flammable-drinking-water-to-fracking).

>MRI waitlist 3-4 months

hmm… that might rather be _something regional_ or not? But even then it sounds weird because I assume that you're living in Berlin ([since you had an interview at N26](https://www.reddit.com/r/devops/comments/1b3znny/comment/ksvp4s3/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button)) and [it looks like it's possible to get MRI appointments relatively quick in Berlin](https://www.doctolib.de/mrt-magnetresonanztomographie/berlin). Sure, some places are 'popular' and you will have to wait — but others just aren't.

And if your scroll a bit then you see some places in Berlin with free appointments next day. You can just take the S-Bahn to another one and you should be fine. No?

Or is the 4-month-place somehow special and does MRI differently than the others?

>Work life balance? F#uck work life balance when you keeping up with every new tech just to stay relevant on the market

hmm… this might rather be something that's _strongly dependent from your employer_. Because I usually had the chance to grow at my work place.

Did you speak with your employer about the possibility of education within your work-time?

Anyway, you didn't write much, but some things appear at least a bit 'strange' to me.

Maybe I misunderstood something though.",2024,EU is the worst place to be DevOps
Daddy_Senpaii,1,"Kinda sounds like the US, but at least you have healthcare a good schools.",2024,EU is the worst place to be DevOps
AtTheParty,1,I’m not in devops but most of our team is in Poland. Wonder if that’s why,2024,EU is the worst place to be DevOps
RelevantTrouble,1,"Central Europe here, 13% tax rate, 6 figures take home. Not the only one in my social circle either. American customers tho.",2024,EU is the worst place to be DevOps
hadenbozee,1,"Well in London all went downhill, shit salaries, rent out of control, forget about buying house and the cost of living is just ridiculous. Everything is just pay pay pay. Healthcare on its knees. UK is overall finished.",2024,EU is the worst place to be DevOps
Tehowner,1,">MRI waitlist 3-4 months.

Took me 6 months to get in for an initial GI appointment and I was shitting blood the entire time, so you'll get no mercy from this American :\*)",2024,EU is the worst place to be DevOps
cs_legend_93,1,/r/expats welcomes you,2024,EU is the worst place to be DevOps
HauptJ,1,"Yeah, just about every place will have its suck in one way or another. In DFW, we have different suck. Also, this field is not known for work life balance so buck up buttercup.",2024,EU is the worst place to be DevOps
deniercounter,1,Which country is DFW?,2024,EU is the worst place to be DevOps
HauptJ,1,"Airport code for Dallas Fort Worth TX, USA.",2024,EU is the worst place to be DevOps
IREEX,1,maybe you're competing with imported talent (I.e Indian talent has been imported rather than work outsourced to India),2024,EU is the worst place to be DevOps
Swimming-Ad2319,1,"Why are there such long waits to do mri scans, is it really that difficult to do mri scans! We could get AI TO analyse scans going forward",2024,EU is the worst place to be DevOps
MaruMint,1,I also have 3-4 months wait times in the US btw,2024,EU is the worst place to be DevOps
massus,1,"In France the healthcare system is still pretty good but it is slowly degrading and I feel that the wait time is increasing (heard from a couple of doctors working in public hospitals).
I won’t compare this to India though.",2024,EU is the worst place to be DevOps
Manibalajiiii,1,"Bruh , so it went to salary and tax to who gets to see the doctor earliest. I think the government in these major countries should give doctors the highest benefits of all the jobs in the country to get  multiple doctors migrate. I am sure about what already is being provided, but just my thoughts.",2024,EU is the worst place to be DevOps
Minimum-Ad-2683,1,Try Africa bruv,2024,EU is the worst place to be DevOps
mezmerizee137,1,"Poland still specialist IT paradise, confirmed. 😀",2024,EU is the worst place to be DevOps
Ptipiak,1,"What about freelance? Last DevOps (as employe) I saw was literally bearing the weight of multiple teams on his shoulder, the guy was so necessary that he could tell anyone to piss off if he deemed so.

Surely there's a need for DevOps no ?",2024,EU is the worst place to be DevOps
andrewfenn,1,Honestly I feel like this is everywhere. Even in Thailand the pay is shit unless you're working for the biggest companies which means a lot of competition. Problem is that a lot of companies just don't know how to make a sustainable business,2024,EU is the worst place to be DevOps
oo0st,1,Yes,2024,EU is the worst place to be DevOps
oo0st,2,"US, Swiss, Eastern Europe. Everywhere else swe == bus driver",2024,EU is the worst place to be DevOps
UnSolved_Headache42,1,"That’s on you being stuck in Germany. Sure EU is no US in terms of salary (Except Denmark taking the lead it seems) for tech, but working IT in Germany took the shortest straw.",2024,EU is the worst place to be DevOps
_azulinho_,1,"wait, you can get a doctor's appointment?

&#x200B;

@ UK",2024,EU is the worst place to be DevOps
Deleted Account,1,"Honestly, everywhere has its pros and cons. Feel free to come to America for better pay and work life balance, but hey, your kids might get gunned down at their pre school. Wanna go to India for better cost of living? Awesome! Make sure to save up for the lung diseases you’ll get from the pollution. Better to be happy with what you have rather than what you don’t. Something I’m still learning to this day. Life SUCKS.",2024,EU is the worst place to be DevOps
vodevil01,1,"Only 44% taxe men I'm french 44% is like heaven, we are basically slave of the government. And you no what they are speaking of more taxes 😅",2024,EU is the worst place to be DevOps
cyesk8er,1,"Wait lists suck, but on the other hand you can have a good salary in the states with insurance,  but not get approval to get an mri from your insurance company.",2024,EU is the worst place to be DevOps
lightwhite,1,"You gotta row with the oars you got. In life, at work, in virtual presence… it is what it is. Make the best of it and if you keep time over, use it for yourself. Go read a book, play your favorite game, have a hike, spend more time with family. You will have a very unhappy life trying to pursue things you can’t get, and will keep being frustrated with the things that don’t go your way. What makes devops folk special in that regard, they are good at adapting and improvising and overcoming- just like the marines. That way, you can keep going forward and if fortune may favor you, you’ll land somewhere where you are happy with a well balanced work-life ratio.

Don’t fetter about who gets what. Make sure your time is exchanged for the best rate at where you fill your belly. All will be good if you keep staying positive.

Just be a little stoic, that’s it.",2024,EU is the worst place to be DevOps
mrexojo,1,"Spain, currently for 60k you pay about 23k (38%) of taxes by sections: 
7,527 euros (19%)	1,890 euros (24%)	13,530 euros (45%)",2024,EU is the worst place to be DevOps
mikeywin,1,"If it makes you feel any better, you’re probably not getting an MRI in less than three months if you were in the U.S. As a U.S. citizen in a small city, I can confidently tell you I’m not getting an on demand MRI unless it’s for an actual emergency.

The pay though, yeah that does blow. But, even basic healthcare is really expensive over here. Id be willing to bet $1 that after you factor in spending on healthcare, salaries are a bit more even.",2024,EU is the worst place to be DevOps
insan1k,1,Are you in the vehicle industry?,2024,EU is the worst place to be DevOps
xaocon,1,Seems like most of IT is this way. I don’t really get it but I guess there just isn’t much competition for the best. Healthcare is much better in the EU though.,2024,EU is the worst place to be DevOps
Deleted Account,1,"44% hey ... in Germany ... um ... your income is not low to be paying that much tax dude, even on just a small part of your income",2024,EU is the worst place to be DevOps
mr_mgs11,1,"You can also get fired at anytime for anything with zero notice in the US and employers are not required by law to give you jack shit. A single night in the hospital for a tonsil issue was $1200 with insurance. If you’re poor they will let you die of cancer if you cant afford treatments. Poor friend of mine has had an untreated hernia for over two years because it isn’t medically necessary to fix it yet. Looks like he is mid giving birth. He works in pest control so elective surgery would be a years pay for him. Also, our retirement system only pays enough for you to be homeless. Salaries are high but have to put a lot into retirement.",2024,EU is the worst place to be DevOps
DrSheldon_Lee_Cooper,1,And EU its a dungeon in this case? And salary is 300$?,2024,EU is the worst place to be DevOps
foffen,1,"Feels a bit wrong putting EU in the one bag. I work out of Sweden and i love it, wouldn't change it for the US even if my salary tripled.    


* Job security, i have 3 months notice and one year unemployment with 80% unemployment benefit
* Retirement and pension benefits paid by my employer
* We have a strong and fair union for employees with great insurances at work etc
* Free schooling incl university for my children
* Goverment student loans making them actually payable
* Free Universal healthcare for me and my family, no matter if i have a job or not
* 5 weeks paid vacation
* no sick day limits
* I get paid for staying at home and taking care of my kids when they are sick
* More tolerant and liberal society with greater freedom

These are some of the perks of working here, sure i could make more money in the US but it's because you are operating without a safety net and as long as you can make all this happen on your own you'd be fine, but get in to a little accident and you are on gofundme to pay the bills...",2024,EU is the worst place to be DevOps
JackLum1nous,2,">but get in to a little accident and you are on gofundme to pay the bills...

That's the freaking dagger o' truth right there.....sad af.",2024,EU is the worst place to be DevOps
Full_Cash6140,1,"So stop making excuses for all this government weighing you down. Most Europeans I've talked to are very smug about how great they think their government is and how backwards America is. They're morons. There should have been revolutions and heads on spikes a long time ago, in both Europe and America. I can't believe people still act like any of this is okay",2024,EU is the worst place to be DevOps
Xinny89,1,"I feel like when most people talk about Free Healthcare in the EU vs the US, they aren’t taking into account the major differences in Salary because of it.

Average Programmer Salary in Germany is around $65,000 while US is doubled that. Sorry EU but I’ll take my shitty healthcare over that shitty salary.",2024,EU is the worst place to be DevOps
Dubinko,1,"At this point I think we ""EU"" deserve this treatment and salary. Just look at the amount of people from Europe defending our companies and government. 

And for all the folks in US saying that they'd exchange their compensation for the job safety of EU, what makes you think you we are safe here? on average it is 2 months notice and you are gone. If you are easily employable you don't care about those 2 months and if you are not you are f##ed regardless as its gonna take more than 2 months to land another job.",2024,EU is the worst place to be DevOps
Deleted Account,1,"When I last checked, Germany was one of the few countries that pays devops engineers more than the US.


* [Source](https://web3.career/web3-salaries/devops-engineer)


Maybe you're just underpaid at your current job.",2024,EU is the worst place to be DevOps
SevaraB,1068,"That's not Agile, that's mismanagement being glossed over with a bunch of buzzwords.

Last I checked, Agile wasn't just an excuse for reckless pushes to prod or a complete lack of accountability.

Run.",2019,Just joined an agile DevOps like shop and I am lost.
RegularChemical,339,"Lol I was about to say, that's not Agile, that's a Afuckingmess

I think the real question is what his time is worth there. He might be paid well enough there that he could try to spend some time trying to correct things. Otherwise, yea, bounce.",2019,Just joined an agile DevOps like shop and I am lost.
phatbrasil,132,"> Afuckingmess

I like that, my favourite methodology still has to be [eXtreme Go-Horse](https://gist.github.com/banaslee/4147370)",2019,Just joined an agile DevOps like shop and I am lost.
aga080,14,tbh that kinda sounds like fun...for something not serious/work related that is.,2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,11,[deleted],2019,Just joined an agile DevOps like shop and I am lost.
c4ctus,2,"Are you the guy I trained a few years ago who went to lunch on his first day and never came back?

If so, our shop really isn't *that* dysfunctional. Pretty fuckin bad, but not that bad.",2019,Just joined an agile DevOps like shop and I am lost.
azephrahel,7,I've just found my new favorite methodology.,2019,Just joined an agile DevOps like shop and I am lost.
tmontney,6,XGH sounds like many cloud platforms.,2019,Just joined an agile DevOps like shop and I am lost.
Hellse,6,Sounds like short-mid term job security to me! /s,2019,Just joined an agile DevOps like shop and I am lost.
nannal,2,"Gotta pad out that resume some how, want to know how it's possible to work at google, apple, facebook, FSB, Moodys & fort knox all in a single season? 

That's how.",2019,Just joined an agile DevOps like shop and I am lost.
ipaqmaster,3,"> Afuckingmess

Haha! thank you",2019,Just joined an agile DevOps like shop and I am lost.
colenski999,154,"In consulting, Agile is used as an excuse by the client for reckless pushes into production

Source: Am consultant.",2019,Just joined an agile DevOps like shop and I am lost.
niomosy,73,It's also an excuse by developers to bypass security controls and get admin privileges to push into production without things like code reviews.,2019,Just joined an agile DevOps like shop and I am lost.
DrStalker,36,"Or an excuse for just half-assing it in general.

""Task didn't say the gallery page needed to load in under 2 minutes, add that to a future sprint""",2019,Just joined an agile DevOps like shop and I am lost.
niomosy,21,"Future sprint.  Yeah.  I wish that worked.

""But we need it now!""  We end up with so many management-approved sprint-busters.  Maybe it's why we're trying to re-implement agile.  Our last attempt at it was not all that great.",2019,Just joined an agile DevOps like shop and I am lost.
-IoI-,15,"This is where interpersonal skills and expectation/scope management are supposed to step in ideally, but I know it doesn't work that way.",2019,Just joined an agile DevOps like shop and I am lost.
niomosy,12,"I think the problem is that too many companies go in for the half-hearted implementations.  They want all the benefits while not fully implementing it, then wondering why it doesn't work for them.",2019,Just joined an agile DevOps like shop and I am lost.
Hellse,9,"An issue with this, at least in smaller orgs I can speak to from experience, is owners that take to micro-managing for certain clients, going around process with their ""I sign the paychecks"" weight and firing up clandestine projects nobody else knows about. It's hard to tell them to submit a ticket when one of their preferred clients starts breathing down their neck - not that I blame them for it either, but it's good to have an intermediary manager that fights for the front line.",2019,Just joined an agile DevOps like shop and I am lost.
wgc123,4,"Take control of your work: establish criteria for accepting a story as ready to implement.  insist on grooming the backlog to this criteria, then, the hard part, don’t commit to completing a story in a sprint unless it’s ready",2019,Just joined an agile DevOps like shop and I am lost.
niomosy,4,We do.  Until people escalate high enough to get my management to agree to just do it.,2019,Just joined an agile DevOps like shop and I am lost.
Hellse,20,"""Just give the user local administrator rights"" -shitty software vendors everywhere",2019,Just joined an agile DevOps like shop and I am lost.
niomosy,16,"Dealing with this in the container world right now.  ""Just give RunAsAny access so the container  can run as root.""

Or maybe you could fix your apps permissions?",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,12,[deleted],2019,Just joined an agile DevOps like shop and I am lost.
pdp10,1,"> a whole bunch of unstable windows servers in a client’s Datacenter

Wait, twenty years ago someone was running Windows Server in a datacenter (not local server) capacity, and enough of it to call ""a whole bunch""? That's how you end up [towing your ship back to port](https://en.wikipedia.org/wiki/USS_Yorktown_\(CG-48\)#Smart_ship_testbed).",2019,Just joined an agile DevOps like shop and I am lost.
riking27,1,"Chuck it in a VM, run under gVisor, etc: https://gvisor.dev/docs/user_guide/quick_start/kubernetes/#using-containerd",2019,Just joined an agile DevOps like shop and I am lost.
fourpuns,39,"Probably my favorite quote ever from my companies director of IT was “there is no time to test”

Now this was regarding a specific project to replace all workstations and unsurprisingly there were numerous issues with the image/device provided to staff as a lot of software was not tested by users who actually use it :p. 

I think it took us so long to award the purchase to someone that we had a couple days from our demo device arriving to when we had to provide HP our image so they could preload before shipping to offices ;)

I gave the feedback delaying two weeks and having our our of warranty devices a bit longer wouldn’t be an issue but due to business cycle the management outside of IT was unwilling to add that time :)",2019,Just joined an agile DevOps like shop and I am lost.
alzee76,42,"> Probably my favorite quote ever from my companies director of IT was “there is no time to test”

I always retorted with ""there is even less time to fix the mistakes not testing will cause.""",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,38,[deleted],2019,Just joined an agile DevOps like shop and I am lost.
BeerJunky,7,Isn’t that always the way?,2019,Just joined an agile DevOps like shop and I am lost.
EagleAIM86,19,This is the way.,2019,Just joined an agile DevOps like shop and I am lost.
MasonJarBong,2,Especially since the admins are on salary.,2019,Just joined an agile DevOps like shop and I am lost.
Delta-9-,1,"Thanks, stealing this.",2019,Just joined an agile DevOps like shop and I am lost.
cowmonaut,7,"I always say ""We can budget X time now and manage the process, or spend Y time later and delay other activities.""
  

The implication they aren't managing or budgeting seems to do more for me.",2019,Just joined an agile DevOps like shop and I am lost.
snowsnoot,3,"Testing does not prove the absence of bugs, it only proves the presence of them - Dijkstra",2019,Just joined an agile DevOps like shop and I am lost.
404_GravitasNotFound,4,"And I bet that the demo device stayed stored in some office while no one with tech know how was informed or allowed to get to it... for like 6 months.

We had a subscription for a service for over a year, we were paying for it, and no one told the techs. But we needed to be instructed into it in less than a month and be able to troubleshoot it from one day to the other.",2019,Just joined an agile DevOps like shop and I am lost.
Tymanthius,3,There are New In Box such devices at my work that are 5+ years old.,2019,Just joined an agile DevOps like shop and I am lost.
SevaraB,1,"Can confirm. 

Source: Am consultant, too.",2019,Just joined an agile DevOps like shop and I am lost.
second_time_again,1,"In the client space, Agile is used as an excuse by consultants for changing requirements because they never took the time to  understand the business. 


Source: Work with too many consultants.",2019,Just joined an agile DevOps like shop and I am lost.
lysergic_tryptamino,1,My company’s excuse for this is that we can’t afford a QA team hence we just deploy in prod and clench our assholes.,2019,Just joined an agile DevOps like shop and I am lost.
fourpuns,202,Sounds like an ITIL shop utilizing Agile practices to synergistically achieve customer satisfaction in rapid time frames by promoting cloud infrastructure through change management processes.,2019,Just joined an agile DevOps like shop and I am lost.
Pb_ft,24,Why must you ~~hurt us~~ optimize the paradigm ~~this way~~ along these arbitrary disruption vectors?,2019,Just joined an agile DevOps like shop and I am lost.
fourpuns,14,"We will need to undergo a reorg to determine why we needed a paradigm shift to align with the arbitrary vectors. 

Let’s create two new management positions, freeze salaries for all non management to get back within budget since we just created a promotion channel, and have the existing admins take on more work as we will be cutting two of those positions to make space for the management- which again is a promotion opportunity with a pay hike so we do need to freeze salaries to make money for that pay increase.",2019,Just joined an agile DevOps like shop and I am lost.
27Rench27,1,Oh and don’t forget we’re going to hire externally to fill those two new roles. We want to bring in fresh ideas and introduce creative preventative high-impact futures for the whole company.,2019,Just joined an agile DevOps like shop and I am lost.
Left_of_Center2011,57,Stahp you gave me a nosebleed...*death by buzzwords intensifies*,2019,Just joined an agile DevOps like shop and I am lost.
fourpuns,56,"Achieve automation through integration of machine learning and advanced heuristics to achieve a positive paradigm shift.

This must mean something!",2019,Just joined an agile DevOps like shop and I am lost.
Left_of_Center2011,37,"Now the left side of my face is drooping, it smells like burnt hair and I forgot how to speak.",2019,Just joined an agile DevOps like shop and I am lost.
Irkutsk2745,4,Do you smell iron?,2019,Just joined an agile DevOps like shop and I am lost.
alcockell,2,And no longer PERRL?,2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,1,[deleted],2019,Just joined an agile DevOps like shop and I am lost.
alcockell,2,I was referrring to Pupils Equal ROund and Reacting to Light..,2019,Just joined an agile DevOps like shop and I am lost.
ErikTheEngineer,16,"> This must mean something!

Not until you add in more blockchain. Oh, and some cloud-native AI.",2019,Just joined an agile DevOps like shop and I am lost.
dexterous1802,2,"> more blockchain

Oooh... you just took it too far!",2019,Just joined an agile DevOps like shop and I am lost.
Dingbat1967,7,"I think you dropped your blockchain somewhere.  I mean, you can insert blockchains anywhere right?",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,1,I feel like we went to the same conference recently...,2019,Just joined an agile DevOps like shop and I am lost.
Churonna,2,Can you show me on the org chart where the bad man shifted your paradigm?,2019,Just joined an agile DevOps like shop and I am lost.
Left_of_Center2011,1,This is my favorite out of them all lol,2019,Just joined an agile DevOps like shop and I am lost.
Thurl_Ravenscroft_MD,15,But can you manage it with a single pane of glass?,2019,Just joined an agile DevOps like shop and I am lost.
MasonJarBong,7,Thanks for the flashback.  Kill me now.,2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,1,"Not before they kill me first, damn it!",2019,Just joined an agile DevOps like shop and I am lost.
SenTedStevens,14,The question is: is this shop hyperconverged and seamlessly integrated while effortlessly managed through a single pane of glass?,2019,Just joined an agile DevOps like shop and I am lost.
nannal,2,"Naturally, otherwise rapid driven one touch implementation and green blue auto deploy wouldn't be fucking possible, would it?",2019,Just joined an agile DevOps like shop and I am lost.
illusum,8,You're just a straight shooter with upper management written all over you.,2019,Just joined an agile DevOps like shop and I am lost.
FrankGrimesApartment,3,"Hmm, yeeeah...im just not sure about that right now.",2019,Just joined an agile DevOps like shop and I am lost.
Kaligraphic,8,"That sounds suspiciously like “we gave the developers the root AWS login because ops was wasting time planning their changes. Also, why is our AWS bill so high?”",2019,Just joined an agile DevOps like shop and I am lost.
anynonus,2,This sounds great. Let me quote that.,2019,Just joined an agile DevOps like shop and I am lost.
Svoboda1,2,Enjoy your Monday morning this could have been an email meetings too I see.,2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,2,[removed],2019,Just joined an agile DevOps like shop and I am lost.
fourpuns,1,"I wouldn’t be surprised if this does happen eventually despite my career planning meetings generally bring me saying I’m not interested in management when discussing leadership potential. 

I like clicking buttons...",2019,Just joined an agile DevOps like shop and I am lost.
bgarlock,2,"Ha!  Nailed most of the buzzwords.  Just need a single pane of glass, and it's good!",2019,Just joined an agile DevOps like shop and I am lost.
AntiProtagonest,1,Replying so I can find this later.,2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,1,Time for [the corporate BS generator](https://www.atrixnet.com/bs-generator.html),2019,Just joined an agile DevOps like shop and I am lost.
ikilledtupac,1,Sounds robust!,2019,Just joined an agile DevOps like shop and I am lost.
Maro1947,1,This man gets it ;),2019,Just joined an agile DevOps like shop and I am lost.
swisstony24,1,This guy is management material.,2019,Just joined an agile DevOps like shop and I am lost.
Pliqui,1,Well spoken sir. Now you have been promoted to Senior Chief Vice President of Processes and BuzzWords... %300 salary increase,2019,Just joined an agile DevOps like shop and I am lost.
Dr_Midnight,35,"> That's not Agile, that's mismanagement being glossed over with a bunch of buzzwords.

From the United States Department of Defense: [Detecting Agile Bullshit](https://media.defense.gov/2018/Oct/09/2002049591/-1/-1/0/DIB_DETECTING_AGILE_BS_2018.10.05.PDF)",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,3,That's amazing!  Saving this for later!,2019,Just joined an agile DevOps like shop and I am lost.
LordEli,1,"My dream job is to be the guy that makes all of these DOD, NSA , CIA, <XXX>, powerpoints.

Also, DABS. lel.",2019,Just joined an agile DevOps like shop and I am lost.
CrunchyChewie,24,"Yea whatever software development methodology they claim to be using is irrelevant. 

This is a terribly managed dumpster fire, full stop.

It sucks, but you should probably be looking. Potential employers will understand if you're upfront about why you're leaving so quickly.",2019,Just joined an agile DevOps like shop and I am lost.
ctechdude13,8,Second this. Get the hell out of there. Terrible mismanagement all around.,2019,Just joined an agile DevOps like shop and I am lost.
systemdad,7,"Full agreement. Get out.

This isn't an agile shop. This is a poorly run shop who says they're doing agile. If they didn't call it agile, they'd call their dysfunctional style of operations something else.",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,6,"> Last I checked, Agile wasn't just an excuse for reckless pushes to prod or a complete lack of accountability.

*citation needed*

/s",2019,Just joined an agile DevOps like shop and I am lost.
TheJessicator,2,"— u/SevaraB, Reddit, December 2, 2019",2019,Just joined an agile DevOps like shop and I am lost.
ultimatebob,4,"You say that they use agile, right? Sounds like it's time to add a ""As a Jr. Admin, I want some documentation so I know what the hell I'm doing"" story on the scrum board for the next sprint. 

It should make for an interesting conversation, anyway.

If you're feeling cocky, maybe a ""As a user, I want additional testing to insure that the new features actually work"" story as well.",2019,Just joined an agile DevOps like shop and I am lost.
GaryDWilliams_,4,Sounds like agile to me. How many places get it right?,2019,Just joined an agile DevOps like shop and I am lost.
wgc123,-1,"I hope you’re being a bit tongue in cheek here.  While I agree no one does agile right, I also though very few places do it this poorly.   


oh, I just thought of something, too often you get these agile evangelists who don’t have any idea what agile is but insist people follow them anyway.  Someone must be pushing agile.  Find them.  Maybe you can file them up by describing the way they do things in terms of Waterfall, or some other process they claim to hate.  Maybe they’ll do some of the work for you",2019,Just joined an agile DevOps like shop and I am lost.
GaryDWilliams_,3,Agile is like devops. Every manager thinks that they are a panacea of improvement while totally missing the point about what they actually are.,2019,Just joined an agile DevOps like shop and I am lost.
DenseSentence,1,">Last I checked, Agile wasn't just an excuse for reckless pushes to prod or a complete lack of accountability.

Done right it's exactly the opposite - it should provide strong governance and accountability as with any sound methodology.  The main benefit I see, and there are lots of others, is the ability to respond rapidly to change - external/business or realisation that you've run down a blind alley before being completely committed.",2019,Just joined an agile DevOps like shop and I am lost.
fragerrard,1,"People forget and/or do not know that DISCIPLINE is the key here. Agile is flexible, yes, but there are guidelines from if you deviate, you end up in a shithole so, so deep, Falcon rocket will  not pull  you out of.",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,1,This. I was like uhhhh this is not agile whatsoever lol.,2019,Just joined an agile DevOps like shop and I am lost.
Angdrambor,59,"beneficial worthless fly full airport air desert marvelous angle wrong

 *This post was mass deleted and anonymized with [Redact](https://redact.dev)*",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,24,I am a big fan of comments like this that point to fixing the core issues rather than running away. As someone currently in the tail end of countering similar CYA culture it's nice to see I may not be crazy after all.,2019,Just joined an agile DevOps like shop and I am lost.
LoemyrPod,3,"Good for you man, that's awesome.  Don't ever lose that.",2019,Just joined an agile DevOps like shop and I am lost.
LoemyrPod,1,"The scrum master should fix it, or should the manager handle it?  I know titles are not descriptive of a job responsibilities but in my world and understanding, an older ""manager"" would take care of the day to day basic things like a chair, getting paid, and licenses.",2019,Just joined an agile DevOps like shop and I am lost.
Angdrambor,5,"detail aware sand marvelous compare depend attraction historical run toy

 *This post was mass deleted and anonymized with [Redact](https://redact.dev)*",2019,Just joined an agile DevOps like shop and I am lost.
LoemyrPod,1,And I just realized [The Office did it](https://www.youtube.com/watch?v=Q38O7fg9ogI),2019,Just joined an agile DevOps like shop and I am lost.
LoemyrPod,1,"FUCK.  I really like my manger.  What can I say, he's a good guy.",2019,Just joined an agile DevOps like shop and I am lost.
trekologer,1,"It sounds like the OP has a golden opportunity to improve their organization's process and build resume-friendly skills such as ""technology transformation using best practices"".

The tools that the organization probably already has can do much of the nitty-gritty work. For instance, simply putting the Jira ticket number into a code commit comment will automatically relate the code commit to the ticket (once Jira and the source code system are so configured). This can be sold to management as being needed for auditing purposes. 

On the code quality and testing side, commit hooks can be configured on the source code system to enforce code style, a continuous integration build system can run unit tests and generate coverage reports, etc. This can be sold to management as being needed to improve quality and reduce downtime due to code bugs.",2019,Just joined an agile DevOps like shop and I am lost.
tankerkiller125real,207,"I would personally keep searching elsewhere, just based on the fact that their out of licenses for something that they probably use everyday all the time sounds like a company itching for failure.",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,51,"Yeah I'm kind of curious about how large this ""larger"" shop really is.  I work for a large corporation that uses Slack, and I can't imagine something so basic being a problem.  I mean sure, trying to get a license for any non-standard piece of software is going to be a bureaucratic nightmare that you'll probably never see the end of, but the company not even keeping up to date on the stuff that underpins their entire process?  That's just crazy.",2019,Just joined an agile DevOps like shop and I am lost.
Xuval,13,"To be honest, to me that sounds like a canary in the coal mine situation indicating that the company is about to go bust. 

Management seems to have jumped ship yet, no new funds for trivial stuff are released, and all that's left is a bunch of DevOPs guys that haven't smelled what's cooking yet.",2019,Just joined an agile DevOps like shop and I am lost.
sigger_,13,">DevOps guys
>”no one here can code, including me”

These arent DevOps guys tbh, they’re helpdesk dudes who got tricked into thinking that sticky notes on a whiteboard means they’re building something.",2019,Just joined an agile DevOps like shop and I am lost.
fakehalo,1,"DevOps, from my standpoint, means development while maintaining the infastructure you're using.  Plenty of people doing that successfully, and pays accordingly.

This just sounds like people who can't do that job.",2019,Just joined an agile DevOps like shop and I am lost.
PaulSandwich,1,"Tune in next time for: ""Our paychecks were late... is that normal?""",2019,Just joined an agile DevOps like shop and I am lost.
cichlidassassin,17,or slack instance just like...adds licenses automagically,2019,Just joined an agile DevOps like shop and I am lost.
nirach,9,"To be fair, I joined a large (As in, one of the largest in this country, and no the country isn't six people and a goat) company and didn't get a mobile phone related delivery for six-seven weeks (And when I did, the phone had been stolen out of the box..).

I didn't get licenses for software for some time, often having to ask someone for the license..

Eh, just saying. Large doesn't mean efficient.",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,146,[deleted],2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,53,[deleted],2019,Just joined an agile DevOps like shop and I am lost.
caffeine-junkie,26,"Thats the exact way I view them, all C2H means is no more than a fixed term contract. Any hiring after the fact is a separate event and any decision to take the contract should not be based upon that.",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,23,[deleted],2019,Just joined an agile DevOps like shop and I am lost.
Ryuujinx,13,"I took a C2H at a Fortune 500 place recently and was shocked when an offer to convert was extended within a month. I signed on expecting it to just be a 6 month contract and was casually looking on the side, but I guess it does happen sometimes.",2019,Just joined an agile DevOps like shop and I am lost.
egamma,13,"Sometimes C2H thinking is:

1. We don't know if this guy is any good
2. It's easier to get rid of contractors than employees
3. Let's try him as a contractor and if he works out, we'll hire him.",2019,Just joined an agile DevOps like shop and I am lost.
cosmicsans,3,"What I find funny, though, is that a lot of C2H jobs end up being them treating you like a FTE with no benefits and lower pay.

Like, Sure, I'll go C2H but you need to contract with me personally at my contract rate of $150/hr and I make my own hours and AM A LEGIT 1099 contractor and then afterwards we can talk about whether or not you hire me on full-time afterwards, but you're not dangling a FTE job over my head while paying me less and giving me little-to-no benefits.",2019,Just joined an agile DevOps like shop and I am lost.
egamma,1,"Oh, I agree, they need to be paid like a contractor.",2019,Just joined an agile DevOps like shop and I am lost.
illusum,12,It's easier to dump a contractor than a FTE.,2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,1,"Depends on the company, but yeah as a general rule C2H means they probably aren't going to hire you.  Only exception I've seen is my current company, but they stopped doing C2H years ago and just went to direct hire because of it.  If a company ends up hiring the majority of their C2H staff, it's a waste of money for them to pay inflated contract rates for the first 6 months.",2019,Just joined an agile DevOps like shop and I am lost.
ComfortableProperty9,1,"I've been burned twice on C2H and at this point the only way I'd take a contract is if it was my only option.  I worked with a recruiter in the past who I keep in touch with.  The other day he tells me about this AMAZING opportunity he has with a local city.  It would require me to take 15K a year pay cut, lost my insurance and PTO but it's a 6 month contract and ""if you impress them, they will hire you"".

He couldn't understand why I wasn't interested in leaving my FT position for a contract that was this amazing.",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,5,[deleted],2019,Just joined an agile DevOps like shop and I am lost.
Robonglious,3,"That sounds like a job I almost took. Claimed C2H within 6 months but didn't trust that so didn't take it.

Man... I never thought I would say it but this post makes my dysfunctional environment sound pretty reasonable.",2019,Just joined an agile DevOps like shop and I am lost.
azjunglist05,63,"How can you be an Agile DevOps shop but perform no testing? The fundamentals of the DevOps philosophy is to have automated testing suites that are thoroughly performed before reaching Production. Like others have said - it feels like someone is using a lot of buzz words, but really has no idea what DevOps actually is...  


RUN!!!",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,24,"Actually, the agile manifesto says ""Responding to change over following a plan"", and ""Individuals and interactions over processes and tools"".

So, it really does sound like it's agile.",2019,Just joined an agile DevOps like shop and I am lost.
azjunglist05,16,I'm not saying it's not Agile - I'm disagreeing that it's a DevOps organization...,2019,Just joined an agile DevOps like shop and I am lost.
mikemol,11,"Right; tests are good, but don't correlate to success as strongly as rapid delivery. (Meaning: you deliver more business value if you can fix errors quickly than if you focus on detecting and preventing failure in advance.)

It's a little counterintuitive, but you can use that to justify paring down what tests you run when. Or even what tests you keep; perhaps some tests not only increase cycle time, but are reflective of over-specification.",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,6,If you rapidly deliver broken products what you get is losing customer confidence in your product.,2019,Just joined an agile DevOps like shop and I am lost.
mikemol,5,"So, there's any number of techniques to mitigate the problem:

- Early-access / beta / experimental features; if people have the ability to opt-in to features that aren't fully settled.
- Canary deployments that handle a subset of requests for load testing. Canary deployments can be closely monitored for misbehavior or increased failure rates, so changes can be reverted quickly.
- Change scope limiting, to limit the impact of a bum change. This dovetails with opt-in and other forms of feature-flagging.
- Feature flagging, a form of change scope limiting. Code can be ensured to be structurally compatible, even when operationally inert. This helps prevent code drift, which reduces unanticipated integration headaches when trying to finalize and release.

But, really, the thing I said about things which correlate with success weren't pulled out of my rear end. [There have been studies](https://itrevolution.com/book/accelerate/). (Book is fantastic, and the source data is available.)",2019,Just joined an agile DevOps like shop and I am lost.
cichlidassassin,2,"Is this not common, does not everyone know that perfection is the enemy of good.",2019,Just joined an agile DevOps like shop and I am lost.
egamma,0,"...except when it comes to your company and bank depositing your paycheck in your account, on time, for the correct amount of money.

(You were probably being sarcastic, but hard to tell without a /s)",2019,Just joined an agile DevOps like shop and I am lost.
cichlidassassin,3,"I mean I wasn't but we sometimes forget that certain things can be good enough, and something needs to be perfect and it's up to us to make the right decisions when it comes to that",2019,Just joined an agile DevOps like shop and I am lost.
egamma,1,"No! This is the Internet! There's only extreme black and white! Only extreme left and extreme right! And if you're not on my extreme then you're evil and wrong!

(ranting at the Internet, not you. Sorry.)",2019,Just joined an agile DevOps like shop and I am lost.
dperry1973,74,"This sounds like a shitshow. Lean/agile means test coverage. On code and infrastructure. You can’t have an idempotent environment without assuring your environments are consistent and repeatable. Agile means Toyota Process which prescribes fixing problems collaboratively without throwing each under the bus. If there’s hostility and distrust in the ranks; agile/scrum won’t work. This company needs a Scrum/agile Master as a consultant because their implementation of Agile is so broken. 

That team isn’t agile and has no clue. Get out before you’re all wet.",2019,Just joined an agile DevOps like shop and I am lost.
Confy,1,">idempotent 

Thanks for the new word :)",2019,Just joined an agile DevOps like shop and I am lost.
dperry1973,1,Don’t thank me. Thank this Jedi Knight who taught me REAL DeVOps https://thinkinginsoftware.blogspot.com/,2019,Just joined an agile DevOps like shop and I am lost.
m0le,67,"> I am really disappointed cause I thought a larger company would have mire of their crap together.

Ah ha ha ha. Ha ha ha. HA HA HAA!",2019,Just joined an agile DevOps like shop and I am lost.
Dingbat1967,19,"Oh my sides.  The pain....

hahahahahhahh hahahahahah hhahahaha",2019,Just joined an agile DevOps like shop and I am lost.
nginx_ngnix,50,"I think you get to DevOps from one of two paths.

1.) Sysadmins who want to automate best practices and make it easier for developers to test and push their code

2.) Developers who are sick of being told ""no"" and just want to code without having to worry about *any* implementation details.

I think DevOps looks *very different* depending upon who is driving it.

I say stick it out, learn what you can, because this type of style isn't going away.

> They want the whole environment is going to be infrastructure as code by the end of the second quarter next year but it seems like no one on my team knows how to code. Myself included. 

Honestly, I think the most valuable thing you bring is perspective.

I have a long history of being able to debug Developer's code that they are stuck on.

Not because I am smarter (I'm not), or because I am a better coder than them (I'm not), it is because I understand systems in a holistic way, and they look at it from a very different perspective.

I see problems they can't, and vice versa.

Learn, suggest, improve.",2019,Just joined an agile DevOps like shop and I am lost.
ErikTheEngineer,25,"> 2.) Developers who are sick of being told ""no"" and just want to code without having to worry about any implementation details.

This is my world. Public cloud and 800 infrastructure-abstraction tools that are all slightly different, and I get called in all the time to help developers out of an infrastructure jam when they build something they no longer understand and/or their tools can't black-box away for them. Architecture's for dinosaurs, GitHub is my documentation, etc. etc....

I'm triggered. :-)",2019,Just joined an agile DevOps like shop and I am lost.
nginx_ngnix,34,">  I get called in all the time to help developers out of an infrastructure jam when they build something they no longer understand

One of the very first lectures I had in college, programming 101, the professor said something that stuck with me:

""Everyone in this room is capable of building something they don't understand"".",2019,Just joined an agile DevOps like shop and I am lost.
jeshii,6,This comment should be way higher.,2019,Just joined an agile DevOps like shop and I am lost.
niomosy,14,Stories like this remind me that in some ways I'm pleased with my security and audit teams not wanting devs to have any kind of admin privileges.,2019,Just joined an agile DevOps like shop and I am lost.
BruhWhySoSerious,4,"Those are not mutually exclusive concepts though imo. You can empower Dev teams by using iaac and scripting, allowing them to make modification and build infra, and review the PR's and commits from an SA point of view. Honestly with most teams if you give them a remotely easy to understand start, they will pretty responsibly make minor changes.",2019,Just joined an agile DevOps like shop and I am lost.
niomosy,0,"In theory we can.

In reality, we leave that to Operations and DevOps teams and let developers stick to coding.",2019,Just joined an agile DevOps like shop and I am lost.
Juan_Golt,18,"What devops should be:

Building systems with an operational mindset. Not just how you build the car, but how you optimize the factory. Mostly about detecting and minimizing the opportunity for error. We can move faster as a group with better coordination between upstream and downstream. Rather than just whatever sliding down the assembly line for the operations people at the end to fix.

What 'devops' usually is:

A melee of developers pressed into ersatz operations roles. Resulting in a ton of black box undocumented 'automation'  and lots of finger pointing because no one really knows what's happening operationally. Lots of evangelism about containers though.

Good devops is about organizational strategy. Bad devops is about technology.",2019,Just joined an agile DevOps like shop and I am lost.
Dry_Soda,18,Microsoft Windows 10 team? Is that you?,2019,Just joined an agile DevOps like shop and I am lost.
lenswipe,16,">There is almost no testing they do everything in production and seem to have CYA blame the other guy culture.

That's not devops. That's a fucking garbage fire. I worked in a place like that. Get out. For your own mental health. Get the fuck out.

I know ""just quit"" is a popular response on this sub, but really - I worked in a place like that for 3 years and holy fuck I was cranky, on-edge and angry even when I wasn't at work on weekends and evenings. I feel much better for having left and moved 3000 miles away (sometimes it doesn't feel like enough) to another place where we do unit testing, people own their mistakes and there's no blame culture. We just learn from fuck-ups and move on with the project. Nobody cares _who_ broke production, we just look at what went wrong, fix it and chalk it up to experience.",2019,Just joined an agile DevOps like shop and I am lost.
justpassingby2day,13,"Lemmie guess, [salesforce.com](https://salesforce.com)?!  (i know an insider ;)",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,3,[deleted],2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,2,Distant cousin of salesarse.com,2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,Nope .,2019,Just joined an agile DevOps like shop and I am lost.
wsfed,10,"Ideally everything is set up before you arrive in a new role but we all know this is usually not the reality. That said, 2 weeks is too long to get access to their job management tool (JIRA). 

Their shit is definitely not together, you will get burned out chasing other people. Keep looking.",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,4,[deleted],2019,Just joined an agile DevOps like shop and I am lost.
wsfed,3,Jesus...,2019,Just joined an agile DevOps like shop and I am lost.
TheLightingGuy,30,Is this a place in Boulder that used to be called something but then got acquired by a company that also got acquired by a company with a funny name?,2019,Just joined an agile DevOps like shop and I am lost.
blaughw,16,"Oddly specific. 

I can't tell if I'm being sarcastic or not.",2019,Just joined an agile DevOps like shop and I am lost.
Aiognim,5,I think they are referring to Fitbit.,2019,Just joined an agile DevOps like shop and I am lost.
Vivalo,3,Solid fire?,2019,Just joined an agile DevOps like shop and I am lost.
mikmeh,2,[https://i.imgur.com/v1PVP2a.jpg](https://i.imgur.com/v1PVP2a.jpg),2019,Just joined an agile DevOps like shop and I am lost.
flecom,3,https://www.youtube.com/watch?v=akUP7uRDhdw,2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,4,[deleted],2019,Just joined an agile DevOps like shop and I am lost.
BorisBaekkenflaekker,1,"I just realised that's where CA Technologies is from, I share your sentiment.",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,No New Jersey.,2019,Just joined an agile DevOps like shop and I am lost.
ErikTheEngineer,24,"Lots of places are doing DevOps by executive fiat. This sounds like one of them. Honestly, it sounds like the developers were given the green light to just go around those pesky infrastructure people and release release release.

I'm not against the ideas that DevOps brings to the table. It's never ideal to just have the developers dump a ball of poop on your doorstep and tell you to deploy it. It's good to have your developers and your ops people on speaking terms. It's good to do small changes so you don't have to unwind a whole mess to roll back. But, I do know this:

* Large organizations are married to their management consultants, who have been gong around selling the Digital Transformation Starter Kit with different fonts and logos for years. ""Push button, get DevOps."" This is **totally** different from FAANG culture where half the world's Ph.D's are employed churning out new stuff every 2 days.
* There seems to be an absolute fetish for ""release anything that compiles, fix in production"" at some places. This is probably what you're running into. Someone read The Phoenix Project and the The DevOps Handbook and that's the lesson that came out...the production line never stops.
* IMO, DevOps is like ITIL. If you adopt it without adjusting it to fit your reality, it just becomes another mess. If you take what works it's incredibly useful. Even the small changes we've made that aren't anything like ""real"" DevOps have improved things measurably. But, our ~~weird~~ unique environment means we can't just do everything  a startup supporting a phone app can.
* One thing that has always been in the back of my mind is this...DevOps kind of requires everyone to be at the top of their game, 24/7 especially in small shops. What happens when people want a break? Crappy managers will just point to the copious amount of monitoring telemetry and guilt people into working more to keep the cadence running. This works great when you have people who don't have a life outside of work, but doesn't translate over to real life.

Problem is, now that there's a catchy buzzword and movement behind it, people who dare to question anything about DevOps are treated like heretics. I'd say give it time, but it looks like everything is going to end up abstracted away in containers anyway so there will be even more pressure to release immediately without testing. (Hint, real DevOps incorporates comprehensive testing and developers are forced to write their own tests. Microsoft fired their QA department and significantly improved code quality in Windows.)",2019,Just joined an agile DevOps like shop and I am lost.
TheNewBBS,9,"At least at my medium-sized shop, ""DevOps"" has basically meant giving developers more access to infrastructure pieces and getting out of their way. We infrastructure people fight back, but one department was given highly elevated rights in one environment to act as kind of a pilot around 2011.

Long story short, they were and remain the biggest pain for everyone. They put in more high-priority tickets than all the other departments combined, are bad at coordinating work with infrastructure, developed poorly thought-out workarounds to get around their poorly thought-out original designs, and generally did exactly what a cynic would expect someone with no real infrastructure experience to do. All while puffing out their chests and talking about how great they were.

There was a non-official admission that the pilot was a failure after 6-7 years, and we're still in the process of going through their environments to fix all the audit findings and awful design choices. But they still see themselves as above other devs/app admins even though their most recent large project is a complete dumpster fire. The lack of self-awareness is baffling.",2019,Just joined an agile DevOps like shop and I am lost.
Misocainea,8,"Since MS kicked out QA there has been a noticeable drop in code quality. Devs writing tests is great, but they are never going to be up to the standard of a solid QA Dept. Especially since devs seem to like to massage their tests to try and cram a release through.",2019,Just joined an agile DevOps like shop and I am lost.
wgc123,2,"They might try the opposite approach of QA who all automate ....

&#x200B;

one thing that’s great about this thread is it really makes me appreciate my current employer.",2019,Just joined an agile DevOps like shop and I am lost.
Misocainea,2,That's how it's done in our organization and seems to be effective at keeping the devs honest.,2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,Can you tell me what you mean ? What is keeping the decks honest.,2019,Just joined an agile DevOps like shop and I am lost.
Misocainea,1,It means that the developers have oversight and are thus unable to sneak things into production without going through proper testing.,2019,Just joined an agile DevOps like shop and I am lost.
ase1590,3,"How do you even conclude that from the Phoenix Project? The whore book was talking about how releasing untested stuff was a dumpster fire, and wasn't until dev side streamlined their process into bite sized chunks with better tooling that the ops team was able to vet it faster and release smaller changes faster.

You have no miss the whole point of the book.",2019,Just joined an agile DevOps like shop and I am lost.
wonkifier,9,"Sounds like where I work a bit =)

Except I was told to get Agile and do DevOps... with no real idea what that meant. Fortunately my management had no idea either, so I just said I was and continued about my day.  We got some training on Kanban...  but that was it.

Then I'd go learn a bit about one corner of how CICD worked, implemented what I could of that without throwing things too out of whack, do another bit, bite off another chunk, etc. For extra fun, it's also an entirely new codebase in a platform I wasn't familiar with, so, yay?

And after awhile I think I'm about there. The dev environment is reproducible. I don't have automated testing yet and all documentation is still manual, but I've got source control, a CICD pipeline that triggers from that and deploys automatically to a freshly built test environment. After some manual testing there, I click a thing in the CICD system which will then ""promote"" to a freshly built ""green"" staging environment in production for a bit, then one last click to flip ""green"" and ""blue"".

A little bit more and I think I'll start being able to follow along DevOps talks",2019,Just joined an agile DevOps like shop and I am lost.
wavvo,15,"Devops with no one who can code? You are working for a disorganised, run of the mill mid 2000's IT department.",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,"There are people who can code they are just the Developers, they guys with the title infrastructure engineers are expected to code as well and none of them can . There is no training , cross training or otherwise.",2019,Just joined an agile DevOps like shop and I am lost.
HappierShibe,12,"> they seem to be married to the idea of moving forward no matter what.   
  
RUN!  
  
>There is almost no testing they do everything in production  
  
*RUN!*  
  
>seem to have CYA blame the other guy culture. 
  
***RUN!***  
  
Seriously, unless they've hired you specifically to clean up the mess and given you authority to start laying down the law GTFO.  I was terrified half a paragraph into your post.  
  
That's not agile, that's we-have-no-idea-what-we-are-doing-so-we-slapped-some-buzzwords-on-it-and-called-it-agile.",2019,Just joined an agile DevOps like shop and I am lost.
dante866,6,"Source: Scrum Master, Certified.

That's the opposite of Scrum. Every sprint should be a complete software dev cycle in a package. You can get by doing some larger integration testing at the end, but I'd advise finding something more sane...this strikes me as a problem ISO a scapegoat.",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,22,[deleted],2019,Just joined an agile DevOps like shop and I am lost.
wgc123,3,"Amen to that.  Since our ops guys got all buzz-wordy, you can’t get a simple config change without writing a story, getting it triaged and scheduled for a future sprint. They took over all control and access to infrastructure yet deny there could be interrupt driven work.

&#x200B;

as the CI guy in the dev group, it really irritates me when they try to dictate things we grew out of years ago, or Try to dictate approaches  popular decades ago.  In general, they’re r/IAmVerySmart",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,I agree completely with everything you said unfortunately it isn’t going anywhere.,2019,Just joined an agile DevOps like shop and I am lost.
techypunk,1,">Unpopular opinion coming up.  
>
>
>Agile has no place in an IT department and it's creating shitty IT departments, 

A-fucking-men

I worked for a larger company this year for 1 week before I quit (C2H). The one week I was there I had 6 scrum team meetings, a daily 1 hour ""gameplan""  team meeting, still had no access to anything but email, and there was literally no documentation. My ""SCRUM MASTER"" was a 24 year old, straight out of college, who didn't know how to open up task manager.

I swear I basically stared at my phone for 4 hours, and had 3 hours of meetings a day.  There was a 1 hour paid lunch, and food was free...I actually quit due to my wife's health, but I would have been miserable there. 

If I ever see Agile on an application I'm running.",2019,Just joined an agile DevOps like shop and I am lost.
MisterPhamtastic,5,"Gonna mirror an earlier comment, this isn't Agile it's Afuckingmess",2019,Just joined an agile DevOps like shop and I am lost.
wgc123,2,"“New and Improved AFuckingMess, now with added buzzwords of something management read about”",2019,Just joined an agile DevOps like shop and I am lost.
ComfortableProperty9,4,"I've been an infrastructure guy my whole life and once got into a job that was much more in the Devops realm because my team had to go to all the same meetings as the actual software people.

One day we got a new manager and he has everyone in the room for a meet and greet.  One of his first questions to us was ""How agile are you guys"".  My first reaction was to speak up and impress the new boss by pointing out that we are fairly agile in that we roll with the punches.

REALLY, REALLY glad I kept that little comment to myself because that was the day I learned what Agile was and got introduced to Scrums and Stories.",2019,Just joined an agile DevOps like shop and I am lost.
DocDerry,5,">I am really disappointed cause I thought a larger company would have mire of their crap together.

The biggest secret of adulthood was that no one has their shit together.",2019,Just joined an agile DevOps like shop and I am lost.
Andrew_Waltfeld,4,"[To quote a Klingon](https://www.youtube.com/watch?v=ulr8Uyqi3X0&t=42). 

Serious note: Yes. Start looking again.",2019,Just joined an agile DevOps like shop and I am lost.
wgc123,4,"Use their own strength against them.  teach them how to do agile devops: keep reminding them they are proud to do agile, and don’t let them escape actually doing it.

yes, this is an example of using buzzwords and fads to justify poor or entire lack of process.  It is not agile.

Edit:  maybe you can plead ignorance and talk them into brining in a scrum instructor.  It’ll be eye-opening for them",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,I really don’t know enough about agile to to teach them but bringing in a scrum master might be a good idea.,2019,Just joined an agile DevOps like shop and I am lost.
tobylh,3,"Jeez man. That sounds bad. Disorganised and totally mismanaged. 

First off, employment 101 is make your newbies feel warm and fuzzy, assuage their anxieties and make sure they have the tools they need to do their jobs. If they haven't even got round to getting more Slack licenses, which means you're cut off from communicating with your peers, then WTF? How can you start to be productive if you don't have one of the most important tools you need?

In my experience, Agile doesn't fit with every goddam thing to do with tech, and it's not suitable for all scenarios, so sticking to it no matter what is totally counter productive.  
If they are a large, well established company, have they just decided they ""need to be in the cloud"", ""hire DevOps engineers, man"", ""<insert other tech buzzwords here>""?

Jut sounds like they really dont have their shit together at all, and you sound pretty unhappy already, so everyone is losing. So yeah, look for something else.

On the flip side, you could get your head stuck right in, learn some shit, start organising everybody and their processes and make it a well-oiled machine, and get promoted to CTO by Xmas 🤷‍♂️",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,"Thanks I was actually thinking about sticking it out because I feel it is a huge Learning opportunity, that being said if I am not productive how long would I even last.",2019,Just joined an agile DevOps like shop and I am lost.
Goldenu,8,"While I acknowledge that this looks bad on the surface, you're new and there might be more going on than you see.  Is it not worth sitting down with management of the dept. and going over your frustrations?  I had to do this when I worked with for an MSP-like company and it gave them the time to explain what was up, why it was done that way, and they worked with me to get up to speed on their style of doing things.  Turned out to be an excellent job.",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,3,[deleted],2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,Thanks,2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,3,Is this a gig with the DoD cause it sounds like you're on a contract with the DoD.,2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,Lol no worse financial.,2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,1,That is worse..scarier actually.,2019,Just joined an agile DevOps like shop and I am lost.
ianjcarroll,3,"Start looking for a new opportunity,  immediately.",2019,Just joined an agile DevOps like shop and I am lost.
lowqualitybait,3,It somewhat sounds like we skipped the *do you have any questions for us?* part of the interview.,2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,2,The answers were literally all lies .,2019,Just joined an agile DevOps like shop and I am lost.
DirkDeadeye,3,"That part of GTA V when you infiltrate Lifehacker, that's what I'm picturing here.",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,2,"I would look elsewhere, I'm in the same spot where the job turned out not what it was described, i have a new job lined up and am waiting for my start date.",2019,Just joined an agile DevOps like shop and I am lost.
Wing-Tsit_Chong,2,"i think it's normal to feel lost at the start of a new job. Annoy the crap out of your colleagues and ask for help until you know what's what. Remember why you signed with them and see if and how you can make it better, seems like there is ample opportunity. If they follow scrum by the books, you're in luck, you, as part of the team, get to decide what is needed to be done to achieve the goals of your customers.

Also people complain *a lot* about their jobs and blame it all on somebody or something else. It's just what people do and it goes always full circle. It can be safely ignored.",2019,Just joined an agile DevOps like shop and I am lost.
ABotelho23,2,That's dev without the ops..,2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,2,"You're fucked.

That company won't last another year. You joined a chaos shop run by clowns.",2019,Just joined an agile DevOps like shop and I am lost.
flecom,2,"Maybe I am sick in the head but I would make it a game of doing nothing all day and seeing how long it would take to get fired... just like, have a text editor open scrolling random source from sourceforge or something and watch youtube videos all day on the other monitor... no access to email so nothing to worry about there... if anyone asks you anything just spit out random buzzwords until their eyes gloss over and they leave etc... if they do give you access to the environment just change random things enough to show you changed something without actually changing the code (like update the copyright date or something equally innocuous)... if someone invites you to a meeting complain about having to do windows updates or something in the middle of a compile or commit or whatever... 

but really a reasonable person should spend all day applying for jobs and updating your resume... which is why I would do the first",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,2,So Wally from Dilbert?,2019,Just joined an agile DevOps like shop and I am lost.
flecom,1,"now that you mention it, yes, basically an updated Wally",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,2,"So a lot of companies do DevOps wrong. DevOps is a marriage of Development and Ops to more easily build and release items and test using automation.

If you are changing a port (say 22 from outside access) or a DIV tag, do you need a change request? No you don't, you need it documented though. In Ops we make change requests for EVERYTHING when we shouldn't.

As  far as IaC goes, its not hard to learn, especially if you agree on using something like Terraform. 

As far as the Slack and Jira stuff, this needs brought to your manager and talked about in your standup so everyone knows you don't have access but they can still communicate via email, also if you are assigned in Jira then you do have access.

Stay and learn from it, you will build a hell of a resume.",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,My manager knows I have brought it up every standup . Also when I go to our jira page it prompts for login credentials. My manger said to put in a request for access . I just found out I am not authorized to put in requests for my own access till I complete new hire training which is in a month.,2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,1,"Then you forward ALL OF THAT to your manager. Let him/her deal with that, he should have the ability to request access on your behalf.",2019,Just joined an agile DevOps like shop and I am lost.
notDonut,2,"> There isn’t even a real change managment process 

I'm not one to shy away from a cowboy environment, but this:

> blame the other guy culture 

is enough to get me out of there real fast. I worked for a number of years in a place with zero accountability and it sucks.",2019,Just joined an agile DevOps like shop and I am lost.
opus-thirteen,2,"Back slowly away, and once you touch the door... turn and *run*.",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,"I think this might be the best course of action I grabbed breakfast with a guy here who says this place is a revolving door and that is why they are slow to give access to anyone , ironically leading to people leaving.",2019,Just joined an agile DevOps like shop and I am lost.
LongJohnJolla,2,"In a environment like the one you have found yourself in, at this point, do what you can but make sure you are communicating with whoever is your lead on a daily/weekly basis.

At least this will give you the vision and the experience of what to specifically ask during interviews next time you entertain new opportunities.",2019,Just joined an agile DevOps like shop and I am lost.
ikilledtupac,2,So is it a bank or a hospital lol,2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,Bank,2019,Just joined an agile DevOps like shop and I am lost.
ikilledtupac,1,Of course,2019,Just joined an agile DevOps like shop and I am lost.
Thameus,2,Play your cards right and maybe you can be the IV&V test lead. I'd work on a backup plan...,2019,Just joined an agile DevOps like shop and I am lost.
DudeFromDudeville,2,"I was in a similar situation recently.

I quit my previous job, to join this company, as I needed a change and was falling out with my previous boss.
This new company used all the buzzwords, and told me all the time how modern their codebase was, and compared themselves to big companies with great culture and so on. But reality was completely different. 

Horrible people, with horrible code, most of it legacy, and the culture was horrible as well. The project manager was bashing colleagues behind their backs, just one example. Really shitty.

I decided to get the hell out, and found a new job. And the new job, while it has only been three months, had been the best three months in my whole career.

So I would definitely say that you should look for something else. I'm certain you'll find better where you can thrive and have fun.
And if next the job is shit, look for a new one.
The most important thing, is that you're happy with your job and enjoy showing up.",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,2,Thanks that seems to be the general consensus. I was really excited about this job to this a company I wanted to work for but I can’t see how I won’t get fired here or grow.,2019,Just joined an agile DevOps like shop and I am lost.
internetinsomniac,2,"No official written change management process, and wanting infrastructure as code by themselves would be fine in my book - but that's only because those can work in an environment where you have competent team members who know how to ask for review and feedback and take responsibility for implementing their own changes, and seeing them through.

I wouldn't mind having no starter checklist for example, if anyone could grant you access to systems when asked. But when basic stuff like that isn't getting done, and no-one's documenting, there's going to be some definite fallout, and many separate complex pieces of work held together in peoples heads just breaking months down the line. That's the real mess",2019,Just joined an agile DevOps like shop and I am lost.
danekan,2,"' There isn’t even a real change managment process. They just list the changes in a sheet and they are auto approved. '

&#x200B;

Just picking one point of your post...That process is correct for *some* changes -- that in fact is the difference in ITIL between a ""normal"" and ""standard"" or above change.

&#x200B;

You're not going to fix that issue by telling them their system sucks. You need to define what change impacts by category so you can define which should be auto approved and which should be reviewed.",2019,Just joined an agile DevOps like shop and I am lost.
shemp33,2,"This is one of those cases where likely Agile has been pushed down from the top. Some asshole reading Skymall on the airplane toilet learned about Agile and how it speeds up time to market, requires less high-skilled (read: expensive) engineers/admins, and so he’s bought into it. Damn the lack of existing skills, team-level buy-in, organizational readiness, etc. 

If you’re making enough money, wait it out, and be a buoy that bobs and sways with the currents. If it’s mediocre money, start looking and bounce when you get the opportunity. Right now, this close to the end of the year, I wouldn’t expect anyone to be actively hiring. But it’s a good time to polish up your resume and spend some time doing some online training/labs if you can do that. Then once January hits, you can work on your exit strategy. 

*note, I know Skymall doesn’t exist anymore but you get the picture.",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,2,"I had flash back to reading a sky mall that had noise canceling headphones when they first came out , that and the pen that was also a voice recorder. I ordered both for an arm and a leg both sucked .",2019,Just joined an agile DevOps like shop and I am lost.
shemp33,1,"Ha!  Which is likely part of why Skymall doesn't exist today.

When you add up the weight of the stack of magazines being hauled on each plane - multiplied by the number of trips each plane takes in a day, and compare the extra fuel needed to the commission made by the airlines, it is obvious why they don't haul the extra 50 pounds worth of magazines on each flight anymore.",2019,Just joined an agile DevOps like shop and I am lost.
_The_Judge,1,CIO is the new copy/paste on linked in that shows you are a smart director.,2019,Just joined an agile DevOps like shop and I am lost.
73td,1,"Run away, as fast as you can",2019,Just joined an agile DevOps like shop and I am lost.
ugus,1,"are you me?

it's a new world out here....",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,Perhaps?,2019,Just joined an agile DevOps like shop and I am lost.
iceph03nix,1,"That sounds like a clusterf@$#.  Sounds like they're running and afraid to slow down for fear they'll trip and when they trip anyway, it's gonna hurt hard.",2019,Just joined an agile DevOps like shop and I am lost.
teksimian,1,Sounds pretty toxic.  There's one guy on my team with that attitude. Can't wait to give him the boot.,2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,0,Are you saying I am toxic? What exactly do you mean?,2019,Just joined an agile DevOps like shop and I am lost.
FujitsuPolycom,1,Was there no interview before you took this job?,2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,There was and it seems like it was for a completely different job other than the one I have . I feel like it was a bait and switch.,2019,Just joined an agile DevOps like shop and I am lost.
TikiTDO,1,"> They want the whole environment is going to be infrastructure as code by the end of the second quarter next year but it seems like no one on my team knows how to code.

Please, no, this is genuinely difficult the first few times you do it even when you're really good at coding. Doing this without guidance and/or experience is like going through a minefield... Where the floor is also lava.

Run from there as fast as you can, unless you want to get some first-hand experience in disaster recovery.",2019,Just joined an agile DevOps like shop and I am lost.
realnzall,1,"If you're still in your trial period (if such a thing exists where you live), get out of there. Trial periods are for both sides to judge whether it's a good fit, not just for the employer to judge the employee.",2019,Just joined an agile DevOps like shop and I am lost.
plasticarmyman,1, If it werent for the Slack licenses I could swear you were talking about my previous gig,2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,"I am really sad that a lot of people seem to have similar experiences, what has happened to IT?",2019,Just joined an agile DevOps like shop and I am lost.
plasticarmyman,1,"Mismanagement to be honest...

We need mangagers that know how to work with people and IT people.",2019,Just joined an agile DevOps like shop and I am lost.
rcook55,1,"Huh, did you join Businessolver?",2019,Just joined an agile DevOps like shop and I am lost.
therealmrbob,1,"If you're really doing agile there's a lot of testing...
Random pushes to prod is not agile.",2019,Just joined an agile DevOps like shop and I am lost.
scootscoot,1,If they won't give you licenses to the tools you need to perform the basics... Do you have RSUs? Maybe you can rest&vest. lol,2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,What is an RSU?,2019,Just joined an agile DevOps like shop and I am lost.
scootscoot,2,"Restricted Stock Unit. Its when a company gives you stock but you have to work there for some time before it vests (becomes yours), so if you leave the company before the vesting period you get nothing. ""rest&vest"" is showing up to work and doing just enough to not get fired so you don't lose your RSUs.",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,1,"Do your best, get some experience, don't be a hero, polish that resume, and don't burn any bridges.",2019,Just joined an agile DevOps like shop and I am lost.
Pb_ft,1,How did they manage to screw up Slack licensing?,2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,I don’t have any visibility into that I was just told they have no more licensees.,2019,Just joined an agile DevOps like shop and I am lost.
Pb_ft,1,Holy cow.,2019,Just joined an agile DevOps like shop and I am lost.
protohippy,1,I would just start looking again.  Do what you can to keep a paycheck for now while you quickly find an exit stage left.,2019,Just joined an agile DevOps like shop and I am lost.
rejuicekeve,1,"welcome to the future /s

agile is fine if it's done right, but it's almost never done right.",2019,Just joined an agile DevOps like shop and I am lost.
jimbaker,1,This sounds like my old employer. Is this in education software?,2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,No financial,2019,Just joined an agile DevOps like shop and I am lost.
bruceleet7865,1,"Run OP, do it now..",2019,Just joined an agile DevOps like shop and I am lost.
mysteryweapon,1,"> They have been out of Slack licenses for almost 6 months

> I have been here 2 weeks I just found out I have been assigned items in Jira but have no access to Jira to see what they are.



Holy shit find another job ffs",2019,Just joined an agile DevOps like shop and I am lost.
whostolemyslushie,1,Lol does OP work where I work?,2019,Just joined an agile DevOps like shop and I am lost.
spokale,1,"If you plan on staying, you'd probably get the most mileage by helping them actually implement real 'devops'.  


I.e., work on the CI-CD pipeline and automate unit testing.  No unit tests available?  Bring it up with management and explain it using a combination of real reasons and buzzwords and anecdotes about how The Big Boys do it.  Use your infrastructure knowledge to actually get a system going to streamline code -> testing -> production deployments.    
Wrangle it so that the infrastructure that gets deployed is properly configured and monitored - sure, they just hand you a container or whatever in the end, but the actual kubernetes installation, loadbalancers, monitoring, logging, all that still needs to be configured properly.",2019,Just joined an agile DevOps like shop and I am lost.
Cisco-NintendoSwitch,1,Got hired to a DevOps team and none of you can code... wut lol.,2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,Basically yes. ... wut L.O.L. indeed,2019,Just joined an agile DevOps like shop and I am lost.
majornerd,1,"Run, Lola, run. Nothing good will come of this. Run. Bad management. Run. Soon you will learn they will play “Blake the new guy” as a hazing ritual. You may think you will tough it out and be okay, but what you will find is 1 day in that environment will be a 1 month somewhere else burn rate. Run. Quickly now, son.",2019,Just joined an agile DevOps like shop and I am lost.
rmbowie,1,Agile != ad hoc,2019,Just joined an agile DevOps like shop and I am lost.
lhwnova,1,"May I ask what company? 

And no coding? Don't they give you coding tests during interview?",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,No coding tests but the position was infrastructure engineer I have never needed to do a coding test for infrastructure. And sorry I don’t mention my employers past or present.,2019,Just joined an agile DevOps like shop and I am lost.
lhwnova,1,"Here in the silicon valley, almost all the technical positions ask for both technical and coding interview.",2019,Just joined an agile DevOps like shop and I am lost.
whipthemoutsaturday,1,"that actually sounds hilarious :D I'd try to ride it out for 2 years, just CYA as everyone else and you'll be fine, who cares about the product or what gets accomplished, in that shitshow those are you bottom of the list concerns.",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,I am worried about not being productive . What do i tell my next employer?,2019,Just joined an agile DevOps like shop and I am lost.
whipthemoutsaturday,1,"you lie, like the rest of us, you pretend that you enjoyed the SHIT out of being agile and devops and all that, it's not exactly a lie, you'll know well how it shouldn't be done.",2019,Just joined an agile DevOps like shop and I am lost.
OldschoolSysadmin,1,Run,2019,Just joined an agile DevOps like shop and I am lost.
treetyoselfcarol,1,And all that shit gets pushed to my team. Followed up by what's the status emails. And raise a flag if you need help.,2019,Just joined an agile DevOps like shop and I am lost.
cb98678,1,"Two years ago I would have sworn you were talking about the company I work for. Thankfully these days it's much better.  Do your best, but balance your work and life time. Look for something better but also try to make this place better while you look. 
use this as an opportunity to learn coding and languages like Python and powershell.",2019,Just joined an agile DevOps like shop and I am lost.
heapsp,1,we acquired a 30 person company with 10 IT people... They said they were devops... none were IT. They didnt have anything licensed and all of their client stuff was accessibly from the outside with RDP.,2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,I would just cry.,2019,Just joined an agile DevOps like shop and I am lost.
heapsp,1,"oh trust me, it sucks. The users are all 'EVERYTHING IS USELESS NOW I CANT DO MY JOB' because not everyone in the company is an administrator anymore.",2019,Just joined an agile DevOps like shop and I am lost.
davidberger1,1,"Back in my day we didn't have dev or staging
https://imgflip.com/i/3i8ehn",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,Thanks this made me feel better :-) ironically I am the old guy complaining about this stuff to the 28 year old director.,2019,Just joined an agile DevOps like shop and I am lost.
nineteen999,1,"Worked in a couple of places like this already, glad they are behind me. I found the doublespeak and the buzzword addiction hard to handle. 

And the sad fact is, these places are much more common that those who follow devops/agile and get it right, at least in my part of the world.",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,1,"Is this my company? 
Mostly kidding but the agile DevOps struggles sound identical. It's terrifying.",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,"It really is terrifying . I mean I take pride I the work I do , the last thing I want to do is contribute to a shit show . Then you reputation is ruined . How can you succeed in. A place like this?",2019,Just joined an agile DevOps like shop and I am lost.
MalnarThe,1,"The Devops market is hot right now. I've been hiring a lot for my team and good people are hard to find. Get in touch with a Devops focused recruiter. You don't owe this company anything. If they don't have the business maturity to understand why all that stuff you mentioned is important, then the problem is at the top, and you can't fix that. If you are in a tech hub and are competent, you should be able to find a job within a month, imo.",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,"Thanks , I am an old school sysadmin being shoved into DevOps and so far I don t like it, maybe it’s because this is the type of environment I keep running into.",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,1,Sounds like our practice management app,2019,Just joined an agile DevOps like shop and I am lost.
azephrahel,1,">I have been here 2 weeks I just found out I have been assigned items in Jira but have no access to Jira to see what they are.

It sounds like they've got serious organization problems, and nobody is taking any responsibility.  Keep shopping that resume around.  You don't want to be in that position.",2019,Just joined an agile DevOps like shop and I am lost.
jnex26,1,"So I'm  running a DevOps team I use scrum heavily .. it is a useful tool to discover what someone is planning to do that day and if there is anything I need to intervene on . 

However ... It sounds like this is a clown show, DevOps should be absolutely ANAL about testing it is my biggest given so much so the company are building up the test team.",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,Oh they are ANAL alright. Pfft,2019,Just joined an agile DevOps like shop and I am lost.
Chimera_TX,1,"I sort of walked into something similar, a lot of 2014 documentation, I did have Jira but licensing for everything was super unaccounted for, etc. DevOps means ""we only have Jenkins running."" Typical mismanaged environment. From what I understand, it was a lot of different contractors from different companies that worked on things here and there. There was newish management and they decided to go internal with their tech department. My first few weeks were trying to audit everything we had because the documentation was so out of date. 

I wouldn't call myself DevOps (I'm more of a cloud engineer). I've steadily been working on improving things, standardizing things, and building as much documentation as I can. Infrastructure as code is one of the reasons I got hired honestly. I would say it's worth while if management is willing to let you implement new things, some won't. 

The Jira thing might be a huuuge red flag if they can't manage to scrape together enough to get you a license. Coming from a similar position, it can be tough to get projects approved for budget reasons. There is big trouble ahead if you have no avenue to make things better and if that's the case, leave. If they're open, stay imo.",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,I am sure they have budget for the licenses for some reason they aren’t spending it . That being said how did you get into Cloud Engineering? I am a traditional old school Sysadmin being shoved into DevOps and I don’t really like it from what I have seen so far.,2019,Just joined an agile DevOps like shop and I am lost.
Chimera_TX,1,"I basically was just a SysAdmin but I got my AWS SAA, and learned a lot of IaC in my free time. I also moved to a area with more of a demand for cloud as well.

I would say I'm more on the Ops side of things compared to Dev or DevOps.",2019,Just joined an agile DevOps like shop and I am lost.
RossDaily,1,"I literally just joined a company precisely like this today.

Minus the licensing problems & extended lack of access to resources.

Maybe I just have to get acclimated to their workflow, maybe I should nope the fuck out.... 50/50 split.",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,It seems everyone is saying to get the heck out of here . I just don’t understand how a company this big can be so insanely mismanaged .,2019,Just joined an agile DevOps like shop and I am lost.
infinityprime,1,I worked for a place where the CIO might have gotten a x% of the IT budget not spent. So it was in the CIOs interest not to spend the budget.,2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,2,That is horrible. And quite possibly what is happening here.,2019,Just joined an agile DevOps like shop and I am lost.
Mutjny,1,Its way less stress to find a new job when you already have one.,2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,Yeah I am just bummed cause I really wanted this job.,2019,Just joined an agile DevOps like shop and I am lost.
Mutjny,1,"I know man its too bad.

Something I've realized over my long career is that _everywhere is a dumpster fire._  The perfect environment doesn't exist.  Sometimes people are able to make anti-patterns work.

Here is a good article about how the first few months always seem broken: https://randsinrepose.com/archives/the-blue-tape-list/",2019,Just joined an agile DevOps like shop and I am lost.
swisstony24,1,Did you join my company?,2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,Possibly are they Located in NJ and are a Fortune 500?,2019,Just joined an agile DevOps like shop and I am lost.
BorisBaekkenflaekker,1,It sounds like you work for our hosting company.,2019,Just joined an agile DevOps like shop and I am lost.
Scott555,1,"Definitely find an exit.

That being said, many shops are nearly this bad and it's not quite as obvious, so definitely hone your instincts based on what you're seeing and be on the look out for similar pathologies.

Also - ""Agile"" is not for infrastructure management unless you're 100% IaC with mature CI/CD and your ""Operations"" staff (or whatever else you call support/incident response/on-call/vassal roles) are on something like Kanban. We run our entire DevOps workflow on Kanban, and honestly can't see any other way to do it.",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,I have heard that before but it seems more and more companies are ignoring it . I mean these guys don’t even know how to code and they are going from 0 to IaC ... forgive my ignorance what is CI/CD?,2019,Just joined an agile DevOps like shop and I am lost.
Scott555,1,"CI/CD == Continuous Integration / Deployment

In theory it's an automated pipeline managing all your code promotion and testing from development through QA/testing and Production.

Also in theory it should reduce (hopefully eliminate) the amount of manual, reactive, time sensitive ""operations"" work required to manage release deployments.

I say ""in theory"" 'cause I've only heard it spoken of and struggled toward, but never actually achieved.",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,I have seen it before but was always afraid to ask out of fear of being seen as out of the loop.,2019,Just joined an agile DevOps like shop and I am lost.
jinmyshoes,1,Sounds like they use the word Agile as a buzzword to learn people in to what is perceived as a forward thinking company. It doesn't get any better I am afraid. Run and run fast.,2019,Just joined an agile DevOps like shop and I am lost.
Scubber,1,"DevOps isn't ProdOps, there's supposed to be an automated build that pushes to production from dev if the code passes unit testing. 

They lack project management and process, if you're up for the job.",2019,Just joined an agile DevOps like shop and I am lost.
markstopka,1,"> There is almost no testing they do everything in production  

That's not DevOps, DevOps is built around a lot of (automated) testing prior to deployment into production.",2019,Just joined an agile DevOps like shop and I am lost.
1creeperbomb,1,"Scrum?

Sounds more like a scrambled mess (haha get it? No? Ok)

Being a large company my only suggestion is get out of there as fast as you can.",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,2,[removed],2019,Just joined an agile DevOps like shop and I am lost.
1creeperbomb,1,"Lol I guess so!

Srumble - scrum but when it's actually not done properly and everything devolves into a mess",2019,Just joined an agile DevOps like shop and I am lost.
networkasssasssin,1,"Can you talk to your boss and/or HR? If nobody is willing to help you at all, especially as the new guy, I would honestly just look for a new job. If you need the money/experience, then just say fuck it and and join the band of wild animals to see if you can survive/fake it until you make it.",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,1,Hey. Are you at my company? Sounds like you're at my company and I'm looking to GTFO.,2019,Just joined an agile DevOps like shop and I am lost.
Frizzdoodle,1,"Run... that's not agile, that's just bad management, bad workethic and (most of all) a f\*\*\*ing miracle. How the f\*\*\* are these people getting payed? xD",2019,Just joined an agile DevOps like shop and I am lost.
zeronikon,1,"Is this a Brazilian Fintech? :X

Anyway, just run off it... You´ll get burned soon.",2019,Just joined an agile DevOps like shop and I am lost.
Xelopheris,1,"Agile requires the ability to miss ""deadlines"" to get things right. If you're just dividing your work into sprints and barreling forward, that's not agile, that's management fuckery.",2019,Just joined an agile DevOps like shop and I am lost.
jimbobhoss,1,do we work at the same company?,2019,Just joined an agile DevOps like shop and I am lost.
Mkins,1,"There are places that don't have a cover your ass blame the other guy culture? That is motivation to move on like noting else. 

The biggest frustration of my job are my escalation paths requiring me to effectively submit a report confirming that I have tested everything that is NOT what they support, or it will be kicked back blaming that thing if it's even vaguely possible that could be related. 

Doesn't make for much of an escalation when you have to find the problem and solution, and tell them what button to press with their magic privileges.",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,I think they are varying degrees of cya and blame the other guy. I have been fortunate enough to work in a number of high trust environments. Unfortunately most of those jobs were just contracts .,2019,Just joined an agile DevOps like shop and I am lost.
Geauxcat,1,"If you don't mind me asking, what did you do previously?  What type of role?  Can you go to your direct manager and let him know you don't have access to JIRA yet?  I was a Senior Service Desk Analyst in a pretty boring, but stable job at a law firm and left after 3 years to take a chance with a boutique consulting firm to join a DevOps team as a Identity Management Administrator/JIRA Admin working on developing the mobile app for Chick-Fil-A.  I learned a lot about AWS (Amazon Web Services) but had to teach myself all of the Atlassian Suite, including JIRA.  I was a fish out of water for a bit with zero support, but I figured it out on my own and worked there for 3 years.  Decent jobs with good benefits/pay are hard to find and I was recently unemployed for 3 months.   Depending on your age and finances, don't bail at the first sign of trouble.   Build a backup plan and I highly suggest a savings of 6 months salary in case you're ever unemployed for a bit.  It's rough out there.  Take care and good luck!",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,Petty much just a Sysadmin I have a lot of experience with VMware and some azure experience but not much . Mostly windows environments.,2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,1,Testing in production has 0% to do with DevOps.,2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,2,"I was told it is agile , not wasting time in dev environments. I wish I was joking.",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,1,LOL.. Im sorry for laughing at your situation. That's terrible and stupid.,2019,Just joined an agile DevOps like shop and I am lost.
SteroidMan,1,">I am really disappointed cause I thought a larger company would have mire of their crap together. There isn’t even a real change managment process.

Stop being disappointed unless you're a shareholder.  Just do you and call it a day.  Taking pride in a company you dont own is silly.",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,"Ouch , but I can understand your point of view . It has more to do with taking pride in the work I do and if I can’t do it effectively due to other incompetence than it is disappointing.",2019,Just joined an agile DevOps like shop and I am lost.
Deleted Account,-2,Holy shit is that Microsoft? I heard an almost spot on description from someone who recently started in MS and promptly left. It was an isolated case as a lot of teams are not that dysfunctional.,2019,Just joined an agile DevOps like shop and I am lost.
mixduptransistor,10,Microsoft likely isn't using Jira nor would they be in a situation where they can't get licenses for something,2019,Just joined an agile DevOps like shop and I am lost.
LinuxMage,1,"I went to file a Minecraft bug yesterday - I had to sign into Jira to do so. So yeah, Mojang/Microsoft are using Jira.",2019,Just joined an agile DevOps like shop and I am lost.
mixduptransistor,4,"Mojang is a separate company that Microsoft purchased that would've been using Jira for longer than that. Edge case that wouldn't be in a shit show like OP mentioned, and is not representative of the rest of Microsoft as a whole",2019,Just joined an agile DevOps like shop and I am lost.
FourFingeredMartian,1,"They'd use Skype+Teams, probably.",2019,Just joined an agile DevOps like shop and I am lost.
Loneleenow,1,No financial in New Jersey.,2019,Just joined an agile DevOps like shop and I am lost.
benkloos,108,Multiple sources of truth,2023,Anti-Patterns in DevOps
horus-heresy,6,Elaborate?,2023,Anti-Patterns in DevOps
nullbyte420,60,"the list of servers you own exists in three spreadsheets where only one is correct at any given time, but you never really know which one.",2023,Anti-Patterns in DevOps
Deleted Account,9,But cmdbs don’t work if you have ephemeral resources that are not static. It’s often garbage in and never taken out when things change or get deprovisioned. How do you deal with short lived resources or auto scaling.,2023,Anti-Patterns in DevOps
lovemyonahole,4,"If you really need to keep that state, for example for static, you can use auto registration scripts in form of Kubernetes controllers or AWS lambdas.",2023,Anti-Patterns in DevOps
nullbyte420,1,yep,2023,Anti-Patterns in DevOps
i_am_voldemort,1,Use the API.,2023,Anti-Patterns in DevOps
horus-heresy,6,"True, but hard to achieve without additional data wrangling. Let’s say our service now scans/discovers onprem. Rapid7 tool scans aws, azure, gcp. To merge this data you gotta slap some redshift and tableau to become a single source of truth. Which we have but wonder how easy to do that for smaller orgs.",2023,Anti-Patterns in DevOps
nullbyte420,7,"single source of truth would be more like having a definition of what exists, and then everything is provisioned/deleted according to it - not compiling the truth into a final destination. gitops is a beautiful example of a single source of truth pattern.",2023,Anti-Patterns in DevOps
ub3rh4x0rz,1,"I know it's popular to say gitops isn't just for k8s, but it kind of is. It depends on your target platform having a declarative API and a reconciliation process, so... k8s.",2023,Anti-Patterns in DevOps
nullbyte420,1,"Nahh strongly disagree. Kubernetes has pretty good tooling for it, but puppet is in my opinion a lot easier to set up from scratch. Kubernetes is great because of the beautifully simple api and the interplay you can have between resources that listen to each other. Kubernetes is great for high availability, self-healing and abstracting away storage and network. But you don't need that abstraction.

For example, you could manage database users and roles with a spreadsheet or whatever in git, then have ci/cd trigger on a merge, which starts a container that sets the state to what you defined, fails if it doesn't pass validation, comment the output in the pull request. That's basically what the operator pattern in kubernetes is.  

You can do pretty much anything in Linux like this. Installing stuff, uninstalling stuff, updating stuff, configuring stuff. Puppet Enterprise can do this very easily (so can any other automation tool), and you could just build it yourself if you wanted. https://www.puppet.com/docs/pe/2021.2/control_repo.html 

You can definitely manage traditional systems like that, just with actual pipelines increased of the indirect pipelines that effectively run when Flux reconciles your cluster.

Systemd can do the self-healing very easily. For autoscaling you can do it indirectly with vmware by overprovisioning - means you tell 10 VMs they each have 100gb RAM and 8 CPUs, but in reality they share maybe just 16 CPUs and 500gb RAM, not 80 CPUs and 1TB RAM. Overprovisioning effectively just turns your resource allocations into resource limits.",2023,Anti-Patterns in DevOps
ub3rh4x0rz,1,"interesting. So if a CI/CD pipeline calls an async task that actually updates the system, that makes it GitOps? That doesn't seem right. I think the distinction is whether CI/CD (push) or a process integrated into your target platform (pull) causes the update.

Requiring the desired output be expressed declaratively is merely IaC.

CI/CD is a hat on top of your VCS. Reconciliation is a hat on top of your platform's execution environment that's aware of your VCS state via polling. If your platform is offline when CI/CD runs, it should pick up where it's supposed to when it comes online.

CI/CD where the final phase is completed asynchronously, out of band of the actual CI/CD pipeline, might yield similar patterns for the operator (the human, not like a k8s operator), but I think it's fundamentally different than GitOps, which technically doesn't need any CI/CD job be configured at all if you're writing your configurations by hand. Sure, a standard tool like k8s/argo is not a literal hard requirement, and I definitely have seen some simple lamp stack systems go from developer-runs-rsync-while-praying to daemon-running-inside-target-platform-git-pulls-regularly-and-runs-hook-on-change, and the latter probably technically counts as GitOps, but only technically and doesn't do enough for you for it to really be a shiny pattern to flock to.

Say I'm using pulumi. I have my CI/CD pipeline end with computing the preview, commenting that on the PR, and once a maintainer says ""/deploy"" in response to that comment, a job merges the PR and tees off another deploy job, writing any errors back to the original PR. That is 100% not GitOps, but it seems to fit your original description. It's also 100% better than the crappy git polling daemon I described at the end of the last paragraph, even though that would be kinda-sorta-technically GitOps",2023,Anti-Patterns in DevOps
nullbyte420,1,"oh okay well that's not a common definition of CI/CD nor gitops, but if you define gitops as a pull based system and ci/cd as a push based system, then sure, you're right.

however, the common definition of gitops is just using IaC in git as a single source of truth through pull request-triggered ci/cd pipelines. has nothing to do with pull or push methods, both are equally valid. the point is that you use git for defining state of the system. in contrast, each server represents the state and git is a repository for your IaC stuff (git doesn't dictate state, it just contains tools to set it). if git triggers an action or if the system polls git really doesn't make any difference.

the way you use pulumi might be gitops, but only if git is the source of truth. take my example with managing users through git. gitops means ensuring the system is as defined in the users file. non-gitops could be having a tool that adds or deletes users, but the source of truth is in config files on the server. to get a list of users, you would read the users file from the server. this way of managing stuff would make sense if you tie user creation to for example an application. lets say you deploy application ""a"" that creates a postgres user ""alice"". next you deploy application ""b"" that creates a postgres user ""bob"". to get the list of users, you would check the postgres database. it's the norm in my experience.

so, gitops just means that you have the truth about any given state defined in git, rather than on the individual servers. no relation to push/pull methods.",2023,Anti-Patterns in DevOps
ub3rh4x0rz,1,"I'm using CI/CD in the colloquial sense, but the push/pull distinction is in virtually all the literature clarifying the difference between GitOps and mere IaC tracked in git (edit for clarity: with CI/CD exclusively applying the changes, such that git is the source of truth), I'll die on that hill.",2023,Anti-Patterns in DevOps
nullbyte420,1,"no it's not! i'm dying on this hill too.

top 3 google results from googling ""gitops"":

>[GitOps is an operational framework that takes DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD, and applies them to infrastructure automation.](https://about.gitlab.com/topics/gitops/)

&#x200B;

>[GitOps uses Git repositories as a single source of truth to deliver infrastructure as code. Submitted code checks the CI process, while the CD process checks and applies requirements for things like security, infrastructure as code, or any other boundaries set for the application framework. All changes to code are tracked, making updates easy while also providing version control should a rollback be needed.](https://www.redhat.com/en/topics/devops/what-is-gitops)

&#x200B;

>[GitOps is a way of implementing Continuous Deployment for cloud native applications. It focuses on a developer-centric experience when operating infrastructure, by using tools developers are already familiar with, including Git and Continuous Deployment tools. The core idea of GitOps is having a Git repository that always contains declarative descriptions of the infrastructure currently desired in the production environment and an automated process to make the production environment match the described state in the repository. If you want to deploy a new application or update an existing one, you only need to update the repository - the automated process handles everything else. It’s like having cruise control for managing your applications in production. GitOps: versioned CI/CD on top of declarative infrastructure. Stop scripting and start shipping. — Kelsey Hightower](https://www.gitops.tech/)

&#x200B;

Note that they all are reputable sources and that none of them refer to a push/pull distinction. It's just declaring IaC state in git and triggering automation that makes it so.

I'll give you that push is not always as desirable as pull, but only because you might have a server that doesn't take any inbound connections, so you can't log in to push state. pulling state is also a nice way to distribute and parallelize the workload. but it makes sequencing the work much more difficult, so pull is not always desireable.",2023,Anti-Patterns in DevOps
ub3rh4x0rz,1,"First link is a GitLab ad -- I'm going to dismiss that out of hand. ""Want to practice X? our tool does that too"". In practice you're always going to integrate your GitOps tooling with your CI/CD pipelines in some sense, but that doesn't mean everything you do in your CI/CD pipelines -- even if applying declarative IaC with terraform/pulumi -- is GitOps. Pushing is a mutation. Pulling is truly declarative. Tools like terraform and pulumi push. If that push fails because of a network partition, outage, temporary disruption -- that's the end of the automation line.

Second one points you to Argo CD, despite the overly broad prelude. Argo CD is GitOps -- you graft it onto your target platform and hook it up to your git origin. It finds declarative IaC and updates the platform its grafted onto. This is GitOps.

Kelsey Hightower is awesome and his explanation is on track until he kind of bungles the final tl;dr because he doesn't bother challenging common misconceptions. The declarative infrastructure is the key, not the term ""CI/CD"" which he's using in the more academic sense, not the colloquial sense we've been using of ""automation pipelines that live in your VCS"".

Edit: this is a better source for this hair splitting semantic dispute: https://www.weave.works/blog/why-is-a-pull-vs-a-push-pipeline-important",2023,Anti-Patterns in DevOps
nullbyte420,1,"1. pulling does not make your change resistant to outages and whatever. not being able to deal with outages and errors is a problem with the automation tool, not the pushing/pulling itself. do you mean ""modification"" when you say ""mutation""?
2. second one is red hat talking about their product ansible, not argocd, but sure okay. ansible can be used for gitops too.
3. kelsey hightower is not bungling anything. it's just as simple as that, and coincidentally the same thing i've been telling you.

gitops just means defining your infrastructure in your vcs and ideally instantly applying it to the system, it has absolutely nothing to do with pushing vs pulling anything.

ci/cd does not colloquially refer to anything that has to do with a vcs. where i work we have plenty of ci/cd systems that don't use a vcs. jenkins is a popular choice for this kind of setup. you can trigger a ci/cd pipeline through other means, such as pushing a container to a repository, or through webhooks, a jar file entering a file server, or whatever you can think up, even triggering pipelines when something happens in a central git repo.

gitops specifically and only means declarative IaC in a git repo, which triggers ci/cd pipelines. it means you shouldn't trigger any ci/cd without having it declared in git first, otherwise git is no longer the single source of truth.",2023,Anti-Patterns in DevOps
ub3rh4x0rz,1,"1. You're not pulling from some system that sits outside of your runtime environment, you're pulling from inside. It absolutely makes the communication of desired state resistant to intermittent outages, because it lives in the same system as your current state, not a mere representation of current state as with terraform etc. It doesn't guarantee that the reconciliation step succeeds, but it does guarantee that your platform is able to receive marching orders any time it's ready to handle them and has a network path to your git origin.

2. I clicked the link. I read it. The first product it links to is Argo CD.

3. Everything Kelsey Hightower said is technically correct, but it didn't disambiguate GitOps from things that preceded it, as evidenced by your position. It's not a dig at him -- he's generally ahead of the curve and can't be expected to anticipate every point of confusion that will emerge on the conversation. Continuous Deployment proper is not an automation tool married to your VCS, and colloquial ""CI/CD"" is not actually accomplishing academic ""CI/CD"" 99% of the time, which is why from the start I've been consistently using the term in the colloquial sense.

Pushing is not GitOps, take it from the people who coined the term (see my previous link). I'd even argue that IaC necessary includes the ""use git + CI/CD pipelines"" because otherwise, you just have declarative deploy scripts, but the act of manually running them makes the overall equation procedural, not declarative. GitOps is properly defined in contrast to traditional IaC as I just defined it, not yolo'ing procedural deploy scripts.",2023,Anti-Patterns in DevOps
nullbyte420,1,"you don't need a vcs to have IaC. you can just have it on your laptop in any folder. you can also apply the IaC without a vcs. some people - especially non-devs - dont know how to use a vcs and do it like that.

they are literally not saying that pushing/pulling has any relation to gitops - just that pulling is more secure and that you should use their tool for it.

whatever i dont care you can have your weird definition if it makes sense to you.",2023,Anti-Patterns in DevOps
ub3rh4x0rz,1,"""My weird definition"" of GitOps and its distinction from IaC is literally the one espoused by the person/company that coined the term and elaborated on its meaning in granular detail. Also what you just described is /using IaC tooling/ but really just describing how it's supposed to be used at development time, not how you actually manage production according to IaC principles.",2023,Anti-Patterns in DevOps
nullbyte420,1,"response to edit: your link is literally just weaveworks advertising their ci/cd tool Flux. I read the site.

>Most CICD tools available today use a push-based model. A push-based pipeline means that code starts with the CI system and then continues its path through a series of encoded scripts to push changes to the Kubernetes cluster. The reason you don’t want to use your CI system as the basis for your deployments is because of the potential to expose credentials outside of your cluster. While it is possible to secure your CI scripts, you are still working outside the trust domain of your cluster which is not recommended.

so yeah they think it's better to have an agent on the system pull from git, rather than having automation triggered by git, but that is only for security reasons (as i said earlier, because it means you need to log in to systems). it has nothing to do with whether or not you manage your state with git as a single source of truth.

if you read that link, you'll see they also talk about the downsides of a pull based method: knowing if the configuration was applied or not was pretty difficult - until someone got the great idea of just using comments in pull requests for log output.",2023,Anti-Patterns in DevOps
ub3rh4x0rz,1,"Unlike the GitLab ad you shared, weaveworks is not just literally advertising Flux. What they say carries weight considering they quite literally coined the GitOps term and their semantic opinions therefore carry significant authority https://www.weave.works/blog/the-history-of-gitops

Edit: And especially https://www.weave.works/technologies/gitops/",2023,Anti-Patterns in DevOps
ub3rh4x0rz,1,"I'm done editing my original reply now and I've read your edits. I think we're mostly in agreement about what's possible, but maybe differing on technical requirements of GitOps.",2023,Anti-Patterns in DevOps
Deleted Account,1,This is spot on and shocking we don’t operate IT this way. Can you imagine an assembly line for a car manufacture that is disconnected from a supply chain ecosystem.,2023,Anti-Patterns in DevOps
CustomDark,1,"Many places do. They’re the places you hear that you want to work at DevOps in, like Netflix. If we build from a single source of truth, there’s nothing to record - those values are already at play. When we change them, infrastructure changes to match.

Your companies spreadsheet of static values is a comfort tool for non-technical stakeholders, who don’t understand and don’t want to understand that the map is changing faster than their ability to type.",2023,Anti-Patterns in DevOps
Deleted Account,1,"Why are people not just creating a smol cmdb or using one of the many existing ones? I don't understand. That's a world that I was never a part of, I guess.",2023,Anti-Patterns in DevOps
nullbyte420,2,they do but one thing is whats in there and another is what's actually running at any given time.,2023,Anti-Patterns in DevOps
1nguz,1,Let the game begin.,2023,Anti-Patterns in DevOps
BuriedStPatrick,7,"I have a different real world example:

We had a database (the real source of truth) and a distributed ElasticSearch index to make searching faster. This index was updated using an event-driven approach. So far, so good. This is all good practice.

Then we started doing background work and manipulating larger datasets. Guess how we fetched the data? Using the index, not the database. It's faster, you see. BUT - this is an incredibly bad approach if you're treating the data as a source of truth. The index is a reflection of the underlying data and not necessarily up-to-date. If you're changing data, always work off the real source.",2023,Anti-Patterns in DevOps
outthere_andback,100,"Confluence always seems to end up an anti-pattern. Write something in there and its never found nor read again 😆

I find centralised documentation in general not helpful. I have found my fellow devs and devops get a lot further with a well filled out README or documentation located right in the repo",2023,Anti-Patterns in DevOps
JaegerBane,16,"Tbf Confluence has some of the most bizarre search and lockdown functionality of any service I've ever seen. Its like its been designed by an alien.

>I find centralised documentation in general not helpful. I have found my fellow devs and devops get a lot further with a well filled out README or documentation located right in the repo

The biggest issue I've seen with this is that putting documentation into the repo means the people who need it most are least likely to find it. If you need to know how a given service does XYZ and how it interacts with service ABC, you need to know where it is in the repo. 

That's before you get into architectural issues, where you either have to fragment your documentation or add stuff that ins't related to the app in the readme. And then you end up having to give people access to your source to get them up to speed. It's a slippery slope I've never seen work well outside of the most trivial material.",2023,Anti-Patterns in DevOps
stilldestroying,3,docs in repo are best served by having a platform like Backstage that can present them to users who might not have direct access to the repo but need access to tech docs,2023,Anti-Patterns in DevOps
outthere_andback,1,Thats a fair point. I think ive been lucky so far then - everything ive written in the repo is usually for the developer or technical audience who will needvto work eith the repo and is within scope only of that repo 🤔,2023,Anti-Patterns in DevOps
daedalus_structure,8,"It's amazing how hard you have to fight to keep the documentation close to the thing it documents and change controlled with the changes it documents. 

I have adopted an analogy of maintenance manual for an industrial machine. Do you keep it at the machine or do you keep it in a library you can't access directly, but must request from a librarian that is legally blind and drunk. 

Because that's what it is like searching Confluence.",2023,Anti-Patterns in DevOps
vsamma,1,"But if you keep the docs in the repo, how can you share it?
For example we have a lot more Confluence licences than Gitlab licences.",2023,Anti-Patterns in DevOps
Deleted Account,1,[deleted],2023,Anti-Patterns in DevOps
vsamma,1,"Well, yeah. So architectural things like on which servers is the service deployed etc is already something that is necessary for both devs and other roles.

But right now I’m having more of an issue trying to figure out where to put coding rules, ie how to name variables, how to name branches, how to do code review, how to version the software, linter/prettier rules etc etc.

I want this info to be in one place, handled centrally. And we give it out to partner devs as well so they would follow our guidelines.
But writing code examples and technical docs in confluence seems such a pain.
And i want this info to be easily accessible in each repo as well.

So the obvious solution would be: docs in Confluence and link to that in each repo readme.

But a part of me still wants to write the whole thing in MD files.

We also have like a boilerplate repo to use for new projects.

I was thinking if i could add the docs to that repo and somehow show the MD files out in confluence then that would be nice",2023,Anti-Patterns in DevOps
chzaplx,3,I'll raise you writing scripts to auto-generate confluence markup and insert new documents.,2023,Anti-Patterns in DevOps
zpallin,2,My support work has usually included answering questions with a link to a confluence doc I made several presentations on already so they wouldn’t have to ask these questions.,2023,Anti-Patterns in DevOps
aghost_7,1,Well written tickets with the ticket id in the commit also make a huge difference.,2023,Anti-Patterns in DevOps
MotherSpell6112,1,"We have Confluence and I've found much greater success in ensuring we document in markdown in the repos. If we need to (and we have) we can add deploy steps to our projects to deploy the docs into confluence.

Having the repository be the single source of truth is immensely more valuable imo.",2023,Anti-Patterns in DevOps
Fantastic_hai,1,"Hey man just came here to say that I love your flair.. for someone like me who just came out from a huge transformation program(RAX to K8s), and now working on remnants of that project called tech-debt(basically goes no where as everyone has their egos), brought tears to my eyes.",2023,Anti-Patterns in DevOps
outthere_andback,1,lol thanks! Sometimes I wonder if its my legacy knowledge is why im still employed,2023,Anti-Patterns in DevOps
dogfish182,220,Let’s go multicloud so we are not tied to a cloud,2023,Anti-Patterns in DevOps
i_hate_shitposting,68,"We're not multicloud and have no plans to be, but let's architect all our infra and tooling to be ""cloud agnostic"" just in case.",2023,Anti-Patterns in DevOps
planetafro,7,"....a small counter point. I feel that building cloud agnostic makes it easier to onboard new staff. In addition, local development is much easier if you don't use all the bells and whistles of <insert ci tool here>.",2023,Anti-Patterns in DevOps
_azulinho_,3,"the biggest added value of taking this approach is that you can now run a lot of your workloads locally on your laptop.
this is often overlooked as a benefit of doing things in a cloud agnostic way",2023,Anti-Patterns in DevOps
i_hate_shitposting,3,"So what I'm talking about is really more the obsessive urge to prevent any form of coupling and the semi-mythical ""cloud abstraction layer"", especially on the infra side and especially when supporting a large number of application teams. Like, ""We'll just deploy everything on VMs using Ansible, so if we migrate to another cloud we can just spin up VMs there and deploy our code the same way."" or even worse ""Let's build our own HTTP APIs that abstract all of our one cloud provider's services, so we can just build all our tools against those APIs and they'll be cloud agnostic by default.""

Also, I've definitely built and worked on services that weren't cloud agnostic but could still be run locally, usually using emulators for the cloud services they relied on. And conversely, I've seen ""cloud agnostic"" services that didn't have the tooling in place to run them locally. I think supporting local development is super important, but if you don't have a business case for multicloud, the driver should be developer experience rather than cloud agnosticism for its own sake.",2023,Anti-Patterns in DevOps
SilentLennie,3,It reminds of database abstraction layers in development.,2023,Anti-Patterns in DevOps
inspectoroverthemine,1,"Good analogy.

I assume you mean: sounds good but never works?",2023,Anti-Patterns in DevOps
SilentLennie,2,"sounds good, adds overhead for the organization but is never used to do any migration ever.",2023,Anti-Patterns in DevOps
inspectoroverthemine,2,"Yup- the one time we actually tried to migrate it, we still had a more work than we anticipated. After front loading the abstraction and then the actual migration pain, we definitely didn't come out ahead- and that was in the rare case of _actually_ migrating.",2023,Anti-Patterns in DevOps
colddream40,2,Let's setup our DR in case AWS completely ceases to exist,2023,Anti-Patterns in DevOps
chin_waghing,0,"And by this kids, they mean using docker containers.

The part they neglected to tell us, is the container relies on the Google compute metadata API for everything",2023,Anti-Patterns in DevOps
binaryfireball,15,Going multicloud is probably bad but so is fundamentally tying your business to the whims of Amazon. I think the correct approach is to keep your infrastructure as portable as possible and work to inhouse some of that special sauce the giants spoon-feed you.,2023,Anti-Patterns in DevOps
dentistwithcavity,3,Multi cloud has a cost. You need to know whether the cost of implementing multi-cloud is less than what you'd get from being able to switch vendors. For most companies it is not,2023,Anti-Patterns in DevOps
kneeonball,6,"We're multicloud, but that's because when you sell software that cloud vendors use, they want you to run it on their platform. Our apps were mostly all in kubernetes and infrastructure as code anyway, so it wasn't that much of a lift to just add a cluster in their platform and deploy to it.",2023,Anti-Patterns in DevOps
Deleted Account,19,What a nightmare that must be like lol,2023,Anti-Patterns in DevOps
horus-heresy,28,"Going multi cloud is a business decision and risk mitigation. You just kubernetes it all and dev experience is the same across the aws, azure, onprem with devops/platform monkeys to bother with support of layers of abstraction",2023,Anti-Patterns in DevOps
MarquisDePique,3,"*insert gif of Michael from the office screaming no*

You *can* but you utterly should not abstract your cloud deployment to the point that 'you could just redeploy in any cloud'.

This is as nonsensical as the (people trying to sell you something) who were implying you can just pickup your data center vmware stack and mirror it to AWS because 'ec2's are like vm's right?' (VMware Cloud on AWS not withstanding).",2023,Anti-Patterns in DevOps
141_1337,7,"Just out of curiosity, why?",2023,Anti-Patterns in DevOps
sobrietyincorporated,10,It quadruples your IaC workload.,2023,Anti-Patterns in DevOps
Deleted Account,-4,"Switching between providers is fairly painless with terraform

^(Yes it's another f'ing abstraction on top of k8s but it works)",2023,Anti-Patterns in DevOps
horus-heresy,1,People pigeonhole themselves into one cloud and dread learning,2023,Anti-Patterns in DevOps
sobrietyincorporated,-2,Tell me you don't know anything about enterprise devops outside of containers without telling me you don't know anything about enterprise devops outside of containers.,2023,Anti-Patterns in DevOps
sobrietyincorporated,1,"Not if you're using cloud native or serverless services.  
   
Edit: switching providers is easy. Reusing resource code, not so much. You can't reuse intricate VPC networking/routing. All managed services need to be rewritten mostly from scratch.  
   
Edit 2: just to put it more plainly: terraform is cloud agnostic because it uses a domain specific language (HCL) that can be used with multiple providers. It is not provider agnostic in the actual code.   
   
Terraform's ""cloud agnostic"" marketing is mostly a lie. Hence, nobody really does cloud hopping outside container based solutions. Container based solutions can't compete with native, managed, or serverless resources in terms of price, performance, and maintenance (except for the few times a cloud providers introduces breaking changes in their updates).",2023,Anti-Patterns in DevOps
MarquisDePique,10,"1) Treating the cloud like just another data center is a costly mistake - it's not one
2) Failing to leverage what makes the cloud valuable is the other side of that mistake
3) Your staff now need training to understand more than one cloud. Tough to maintain, tough to hire for.
4) IaC does not abstract this to the extent you'd like it to - and if you throw enough IaC at it to make it possible you need teams just to maintain the abstraction layer.

Yet to see some arguments for that aren't nonsense.",2023,Anti-Patterns in DevOps
StaticallyTypoed,19,"Some of us actually work on critical systems and having those systems unavailable because Azure rolls out a patch to something you're dependent on and bricks it globally is something the system must tolerate. Therefore we went multi-cloud on a previous project and it worked out great. 

Our mantra was to avoid highly specialized cloud offerings for providers, generally only relying on their on-demand compute services, managed databases and managed kubernetes. Creating vendor agnostic IaC abstractions for those was fairly trivial as they are not too different. To",2023,Anti-Patterns in DevOps
MarquisDePique,-9,">Some of us actually work on critical systems

A critical system you say, in devops? Golly you're unique.

If you're not going to use anything unique to the cloud, why didn't you use OVHcloud or linode or rackspace etc - Pick any 3?",2023,Anti-Patterns in DevOps
StaticallyTypoed,1,If you don't see the benefits in managed services at all I don't feel you're qualified in the slightest to have this conversation lol,2023,Anti-Patterns in DevOps
MarquisDePique,1,"You just refered to a cloud environment as a ""managed service"" and you're questioning others qualifications.",2023,Anti-Patterns in DevOps
StaticallyTypoed,0,I did not. You're evidently not paying attention or overstating your own qualifications again lol,2023,Anti-Patterns in DevOps
huzaa,1,"Maybe don't tie it to any cloud so it's even easier to understand. Make VMs and networking work then who cares what resource would AWS give? Then maybe you realize, how costly AWS is for what is does and how much extra work it is to support. Then you can move out the cloud and take the money for yourself.",2023,Anti-Patterns in DevOps
horus-heresy,1,Kubernetes is that easily movable layer of abstraction and to run kubernetes you don’t need too much tech overhead. We do have bunch of stretched clusters running IaaS that sit on both aws and azure via dx/expressroute all you need is to bring right people together to finalize terraform templates for business unit devops groups to use. You can and you should abstract if you want to mitigate risk of reputation hit of getting into the news because you billion dollar app is down.,2023,Anti-Patterns in DevOps
Deleted Account,-5,[deleted],2023,Anti-Patterns in DevOps
horus-heresy,21,"Member how east 1 went down? Member how azure went down? Multi cloud makes no sense for tiny org, but when we are talking billions of course you will want to account for full region or global service to be down",2023,Anti-Patterns in DevOps
Deleted Account,-1,[deleted],2023,Anti-Patterns in DevOps
binaryfireball,0,Yea don't do that.,2023,Anti-Patterns in DevOps
Deleted Account,1,[deleted],2023,Anti-Patterns in DevOps
binaryfireball,1,Yea the point is that you never did that in the first place. I never said multicloud either,2023,Anti-Patterns in DevOps
TheRealKajed,1,Can a complex enterprise put every single x86 workload on k8s easily? If so tell me how it's done,2023,Anti-Patterns in DevOps
Vonderchicken,2,Actually pretty cool you get to learn a couple of them,2023,Anti-Patterns in DevOps
dogfish182,5,"This isn’t how it shakes out in reality for ‘platform teams’.

Now I’m talking about platform teams that don’t act like the IT versions of how Hollywood depicts navy seals, I’m talking about day to day regular boring teams. I’ve seen it go a few ways 

1. Have a reasonably shitty lowest common denominator ‘works for both’ setup (like a centrally managed templates pipeline that runs terraform and handles all creds etc. 

Nice if you provide for lots of teams that are fairly low skilled and instance based and can’t design their own pipelines and think about security.
Bad if you start getting lots of teams that want to explore serverless and use more cloud native or cloud specific deployment patterns, but also want consumable tooling (think CDK and whatever the azure version of that is). 
Now your ‘development of pipelines’ has more than doubled and your team is naturally balanced to be better at one cloud, offerings begin to diverge.

2. Have 2 platform teams, everything becomes ‘for that you need to ask ‘other team’. One of the teams is way shittier than the other team. Offerings start to diverge, things are looked at wildly differently by both teams.

3. Let’s just be a k8s house and do everything on k8s. Now you grumble about how ‘that clouds k8s sucks way more’ And when do you even really think the entire cloud will be down long enough to move it anyway.

I’m sure there are use cases for doing this well, but in general, most enterprises don’t or won’t need the extra level of complexity and cost to do this well and at their current spend can’t do it well enough to be worth it.",2023,Anti-Patterns in DevOps
Vonderchicken,1,What's your take about being instance based? Do you think it's backward? Got some debate in our team about running the apps on instance vs containers. I'd like your take on it,2023,Anti-Patterns in DevOps
dogfish182,2,Would always want to move away from instances wherever possible,2023,Anti-Patterns in DevOps
shagyubeef,4,"I don't see how this is an anti-pattern. With some of the outages some leading cloud providers have had recently, a proper risk assessment has to be done depending on what services your business uses. These providers claim 5 nine's uptime, but that doesn't include slowness or degradation of services. I will admit though that it is a little crazy to use more than three. My current job uses AWS, Azure, and OCI, and it is overwhelming as hell. We are trying to get rid of Oracle.",2023,Anti-Patterns in DevOps
Deleted Account,2,"It's worse then that.  I don't think anyone claims 5 9s.  Lambda and ec2 are 99.95 for SLA credit purposes.  Many cloud vendors just copy those numbers.

SLA credits often don't reflect reality.  An outage at 3am isn't the same as an outage at prime time on an important launch day.  And they are generally a pittance anyway.",2023,Anti-Patterns in DevOps
TenchiSaWaDa,8,I find being afraid of vendor lock in is for less mature users of the cloud. Half the reason you grt a cloud provider is tobuse the managed services to EASE the burden of maintaining. I,2023,Anti-Patterns in DevOps
dogfish182,4,Pretty much exactly what I think. I’m back at a client now who made this decision. 6 years only barely anyone using the ‘power of either cloud’ and it’s all lifted/shifted legacy apps dotted around ‘that teams favorite cloud’ with twice the level of security issues to get focus on.,2023,Anti-Patterns in DevOps
Deleted Account,6,"Been using cloud for clients and employers for almost 10 years now.  I've been rug pulled once by a vendor.  Seen it happen to others, fatally.

Ignore the warnings at your own risk.",2023,Anti-Patterns in DevOps
TenchiSaWaDa,3,"I would be interested to know what vendor. On the other hand, one rug pull is not really an excuse to bot used services like RDS or S3 or even lambda. Or even eks/aks. 

Like if a rug pull happens with those services its not that much of a leap to migrate",2023,Anti-Patterns in DevOps
Deleted Account,1,"I've done several migrations.  It's deceptively hard, even when the service set is actually compatible rather than you just think they are compatible.

Lambda?  Really depends on how far down the micro services rat hole your architecture has gone.",2023,Anti-Patterns in DevOps
TenchiSaWaDa,1,"Ive also done some migrations. Depends on tool and and architecture an depends on enegineers as well. A lot of different factors balance how something is. Nht for managing it, there are some services that should be utilized. Kr just go run everything in data centers and even then youre still vendor locking yourself relatively",2023,Anti-Patterns in DevOps
hottkarl,3,"um, that's not an anti pattern in itself.  having that level of availability is sometimes needed.

also, most large corps I've worked at are on at least the big 3 clouds anyways for one reason or another.

having a kube cluster that runs multicloud or hybrid is overkill in many cases, but there are definitely reasons to do it.

hybrid is going to become more and more popular as companies need more and more GPU/inference to train large models.",2023,Anti-Patterns in DevOps
BuriedStPatrick,3,"Bad idea, but not really an anti-pattern surely? Which pattern does this break with?",2023,Anti-Patterns in DevOps
dogfish182,2,"It’s more of a ‘well meaning enterprise way to screw themselves’.

While there are reasons to do this, most regular boring enterprises don’t have the need (or will to pay) the hidden costs of having teams be excellent at 2 native clouds or build an abstraction layer over a couple.",2023,Anti-Patterns in DevOps
amarao_san,3,"I know a company having this. They swap providers as cattle, and have full independency of any features. All they need is bgp, and PI.

But they are huge (thousands of big baremetal servers) and they know what they do and why.",2023,Anti-Patterns in DevOps
Deleted Account,5,"Consider the other side of the coin.


Our vendor cancelled us.  We're can't pivot because we totally depend on them.  Everyone is fired as of right now.",2023,Anti-Patterns in DevOps
f12345abcde,2,One cloud provider for building and another for deploying 🧠,2023,Anti-Patterns in DevOps
Sad-Firefighter-8235,2,Elaborate pls,2023,Anti-Patterns in DevOps
ZL0J,17,Let's use GCP aws and azure all at once for extra HA layer,2023,Anti-Patterns in DevOps
Deleted Account,6,[deleted],2023,Anti-Patterns in DevOps
thesllug,11,"also, the level of expertise to achieve the extra ""HA"" this strategy *might provide cannot actually be worth it.",2023,Anti-Patterns in DevOps
footsie,5,"Or I dunno, a bank or a health care provider ?",2023,Anti-Patterns in DevOps
TenchiSaWaDa,5,Worked for health care. Two region plus dr on systems with self healing is enough to pass almost all gdpr soxx. Hippa on the other hand is data protection and is not really a factor in multi cloud.  Security is a bigger deal. I would assume same for bank,2023,Anti-Patterns in DevOps
Deleted Account,3,"Or things where high dollar amounts, government regulations, defense applications, life is at risk, various utility controls integrators, healthcare, (etc.)",2023,Anti-Patterns in DevOps
UpgrayeddShepard,1,Sorry I don’t even think those need multi-cloud most of the time.,2023,Anti-Patterns in DevOps
footsie,0,Must be nice only having 3 9's ;),2023,Anti-Patterns in DevOps
_throwingit_awaaayyy,1,Omg lmao.,2023,Anti-Patterns in DevOps
Live-Box-5048,37,Too many different tools that essentially do the same thing.,2023,Anti-Patterns in DevOps
Deleted Account,2,In some cases too many tools that do precisely fuck all to be useful.,2023,Anti-Patterns in DevOps
1whatabeautifulday,56,"Too many environments, we have dev, test, stage and prod for buildings our infrastructure in azure. 

I have argued only dev/test, stage and prod is required. 

But I am fairly new and didn't listen to me.",2023,Anti-Patterns in DevOps
Environmental_Ad3877,52,"but you can't shut down stage, we have prod stuff in there !!!

Oh and don't touch pre-prod, that's got prod in it too

You've created a dev environment? Cool, we'll spin up out test branches and let the client access them.

see a pattern here? The wails and gnashing of teeth when I locked Dev and shared to internal only...",2023,Anti-Patterns in DevOps
horus-heresy,6,Well then your governance sucks and you don’t have stage/test/uat,2023,Anti-Patterns in DevOps
superspeck,17,"Everyone has a test environment, some of us are lucky enough to have a completely separate environment for prod.",2023,Anti-Patterns in DevOps
saltyvagrant,2,This made me laugh... and cry.,2023,Anti-Patterns in DevOps
colddream40,1,Government regulations ruin everything. Why can't external clients access prod or stage :(,2023,Anti-Patterns in DevOps
DigBig3448,28,"Agree on this one. However, the major issue with having too many environments is not handling them equally. Different processes apply to different environments. Companies save money on licences in test answers stage. Different security policies apply to different environments. Thus companies end up with bugs that only appear in PROD.",2023,Anti-Patterns in DevOps
cube-drone,15,"It doesn't matter what you do, how intricate your environment setup is

_only prod is prod_",2023,Anti-Patterns in DevOps
tacocatacocattacocat,7,"I argued many times that we should have the same hurdles getting to stage as prod. Not from a change management perspective, but from an environment preparation perspective.

Prod has different passwords than non-prod? Then stage should have different passwords than lower environments to validate that passwords are sourced/injected correctly. Judy one example.

Not every environment needs full parity. The amount of parity, however, should be well considered.",2023,Anti-Patterns in DevOps
HarmlessSponge,4,"The amount of times I've argued for infra parity across envs is mad. Management always quote cost, and then conveniently forget that argument when they pour ridiculous man hours into myriad issues that come up as folks move through envs.",2023,Anti-Patterns in DevOps
Ariquitaun,14,The only environment needed is production. Even for development. Real men edit directly files in the only server running prod.,2023,Anti-Patterns in DevOps
frugalonekenobi,4,"Hey, women have been editing in Notepad++ and dragging into Filezilla since forever too!",2023,Anti-Patterns in DevOps
mrkikkeli,4,On a Friday afternoon.,2023,Anti-Patterns in DevOps
chzaplx,2,Morning of Black Friday,2023,Anti-Patterns in DevOps
1whatabeautifulday,2,Anti pattern 😂,2023,Anti-Patterns in DevOps
CellsReinvent,9,"dev /stage / prod can definitely be enough. Some projects I've seen, dev is the wild west, stage is where things are (hopefully) very prod-like, but that can make it difficult for other types of testing (performance, resiliency, operational-readiness) or even to rehearse deployments or big infrastructure changes, without disrupting other teams' environments.

During early stages of a project, I think there's a case for dev, test, stage, prod, but you can reduce as things get smoother (or even create ephemeral environments for specific, potentially dangerous changes)",2023,Anti-Patterns in DevOps
daedalus_structure,6,"When you start you have one environment and all features immediately go live. 

Something goes wrong, and you want to test changes in staging first. Someone has experimental work in staging blocking the way out the door when a hotfix needs to go out, so you spin up dev, etc.. 

But dev has shit data so nobody can test anything meaningful there, and all the requested sanitized copy downs of production data to staging to use for troubleshooting get annoying and expensive both in hours and cost, finance starts complaining that you are spending production money on preprod to maintain parity, and you consider maybe you took a wrong turn somewhere. 

As you grow even further, you decouple release of code from release of the supporting feature with flagging, you build testing tools into the application, and you tear down all the previous environments but production.",2023,Anti-Patterns in DevOps
hottkarl,5,"3 environments if developers mostly launch local environments on their machine.

4 environments if they don't.

also, 4 environments may be needed if you have partners who need to test integrations


not counting sandbox environments where people can do wtf ever in.",2023,Anti-Patterns in DevOps
moratnz,3,"follow cooing weather crush groovy live mindless provide full sparkle

 *This post was mass deleted and anonymized with [Redact](https://redact.dev)*",2023,Anti-Patterns in DevOps
TenchiSaWaDa,3,"A lot of people for some arbitrary reason make their prod different infra than their stage. Im not talking t instance class but more of one uses serverless vs the other reserved instances. 

So scaling and cost are out of whack and you cant garuntee 1 to 1 performance.",2023,Anti-Patterns in DevOps
1whatabeautifulday,1,"Also connection may be different. 

We can't have a VPN in stage and prod because it's too expensive",2023,Anti-Patterns in DevOps
horus-heresy,2,"Sandbox (less guardrails, new services), dev, test, acpt, acpt-east2, prod, prod-east2",2023,Anti-Patterns in DevOps
1whatabeautifulday,1,If its actually used for the correct purpose it might work,2023,Anti-Patterns in DevOps
Arafel,2,"Oh man don't get me started on this. I worked for a University that had test stuff in prod, prod stuff in test and a dev environment that was never refreshed and didn't resemble test or prod in any way. It was a nightmare.",2023,Anti-Patterns in DevOps
mullingitover,3,"Yes and no - if you're sophisticated/lucky enough to be able create on-demand ephemeral prod replicas, you can have tons of high fidelity dev/staging environments that you can quickly nuke when you're done with them.

It's having tons of environments that aren't good copies of prod, take a ton of work to build, and sit around building up cruft that are the problem.",2023,Anti-Patterns in DevOps
rdevel,1,No pre-prod?  Nor pre-dev?,2023,Anti-Patterns in DevOps
Deleted Account,1,"I've developed engineering teams to such a maturity that only prod is required most of the time. 

We spin up an ad-hoc dev environment when we need to do something major. Like massive rewrites of legacy systems.",2023,Anti-Patterns in DevOps
mushuweasel,1,"Environment proliferation can be fine, you just have to be sure that environment setup and teardown are well automated, environment boundaries/use cases are well defined, and auditing process is capable of identifying idleness.

What problems suggest that 4 is too many?",2023,Anti-Patterns in DevOps
marsmanify,1,Casually looks at the 16 nonprod environments I have to maintain,2023,Anti-Patterns in DevOps
colin_colout,1,"You're right, but I'll boil it down to a deeper anti pattern; building environments before understanding what they are for. 

Here's a fun experiment; ask a person from each of these groups to define environment:
* Infra/DevOps engineer
* Software engineer
* QA engineer
* Product manager
* Data engineer / DBA
* Sales rep

Everyone will give a different definition and have a different use case. 

For infra people, environments are usually thought of all networks, databases, app servers, k8s namespaces, etc with their own deployments. 

Software engineers usually think of environments as a place that a certain revision of code is running. 

QA might think of it where they test a specific release. 

Product managers will often think of environments as set of features, bug fixes, and releasable changes. 

Data engineers will think of it environments as bubbles of data with specific attributes. 

Sales people might consider them places where customers can test a certain change before release. 

This is the root of the problem. Once you understand this, you can start figuring out what is actually needed and whether a certain person or team is actually asking for an environment or something else.",2023,Anti-Patterns in DevOps
Deleted Account,25,The current implementation of DevOps with siloed DevOps teams and over dependency on tools is an anti-pattern,2023,Anti-Patterns in DevOps
Deleted Account,8,"So, how siloed are we talking? Completely? I’ve seen some teams doing more platform engineering, laying the ground work and infra and having tools available for devs to deploy or spin up a test environment, then I’ve seen some that was more collaborative. 

I’ve also seen devs with 100% access to everything and it was a complete mess too. What’s the right mix of autonomy to provide freedom within the bounds needed for say regulation, etc.",2023,Anti-Patterns in DevOps
Deleted Account,2,"In general 

>DevOps is the combination of cultural philosophies, practices, and tools that increases an organization’s ability to deliver applications and services at high velocity: evolving and improving products at a faster pace than organizations using traditional software development and infrastructure management processes. This speed enables organizations to better serve their customers and compete more effectively in the market.

Judge for yourself how far and how siloed we are :-)",2023,Anti-Patterns in DevOps
Deleted Account,1,"lol thanks. Yeah the definition of devOps, I get, but I think it’s the misinterpretation across industries where it falls short. 

Granted there is no one size fits all, but that ability to pick and choose is largely why even to this day it’s a hodgepodge and everyone has their own flair and opinion on it. You can walk into 5 different shops all doing “devOps” and things will be so vastly different",2023,Anti-Patterns in DevOps
Deleted Account,3,">Granted there is no one size fits all, but that ability to pick and choose is largely why even to this day it’s a hodgepodge and everyone has their own flair and opinion on it. You can walk into 5 different shops all doing “devOps” and things will be so vastly different

Correct and that is precisely why the DevOps team should not be a separate team. It should be more like a short term cross functional team carved out of existing teams for project based collaboration and identifying opportunities for improvement.

Unfortunately, stupid people created siloed teams and used DevOps to fuel their ambition of managing larger teams to negotiate higher salaries for themselves. All the while screwing up with the actual process and code quality.

A lot of pain in IT today is directly responsible for this BS. The imposter syndrome has never been as wide spread as it is today. All thanks to this zombie DevOps that has taken over the IT world.",2023,Anti-Patterns in DevOps
Deleted Account,1,"So do you think it’s best to have a quorum of people from all relevant teams who shared time between developing or their day job and collaborating on this set of ideals? 

I’ve never seen a shared responsibility model work, but once you go beyond product teams and PMs up to C Level, they really don’t seem to care about what we see unless theirs an outage or excess costs. 

Separate teams can work, but not in a vacuum, and only if that team is adept enough and willing to help. If you have a bunch of kids who slap on the title of devOps and spend most of their time developing processes or trying out the shiny new tool that don’t align with the needs of those teams they’re to support, it’s a mess..

I don’t blame anyone for using the industry and its short comings to pad their salaries… I mean look at the market now. However doing that maliciously or without trying to help others is a PITA too",2023,Anti-Patterns in DevOps
Deleted Account,3,">I’ve never seen a shared responsibility model work, but once you go beyond product teams and PMs up to C Level, they really don’t seem to care about what we see unless theirs an outage or excess costs.

DevOps at the C level is a different ball game. My point is more relevant to the DevOps practice at the software delivery and management (development, testing, security, operations) level.  We don't need C level people to tell us how to work with our peers from the other teams.

In effect the use cases of DevOps teams should look like

1. Operations has a problem?? Sure, lets get together and find out how we can solve it and remove similar issues from all future releases.
2. Developers need an environment for poc?? Sure, lets understand the needs and put up reusable IaC scripts so that anyone can create and pull down environments independently. And in the process, improve speed of maintaining Production Environments. Make the scripts generic enough to provide flexibility so that it can be used for multiple use cases.

Instead, what do we see? Devs are complaining about DevOps, DevOps is complaining about OPs, Security, tools, vendor, etc etc.. Operations is still complaining about code.. And security felt left out of the spotlight, so they jumped in with DevSecOps without any clear understanding to muddy the waters by introducing restrictions on code, tools, services, etc under the garb of zero tolerance or whatever that BS term is.

Overall a big cluster fuck.

Edits:

>I don’t blame anyone for using the industry and its short comings to pad their salaries… I mean look at the market now. However doing that maliciously or without trying to help others is a PITA too

Yep, I agree, I should have clarified. They padded up their salaries by ruining a lot of careers. The focus now is learning tools than the core concepts. And when they ""finally listened and understood"" the complains about too many tools, they now make you learn a new tool under the garb of consolidating everything with a single tool. OH GOD.. WTH..

As I said before, this constant flux in learning, implementing and focus on tools has created an army of Engineers who are constantly second guessing themselves and brimming with self doubt.  Just thinking about all this is giving me hibbi-jibbies

Improvement and innovation is restricted to tools and replacing tools.",2023,Anti-Patterns in DevOps
IDENTITETEN,6,"It's called ""Resume engineering"".",2023,Anti-Patterns in DevOps
Sleakne,23,Assuming that adopting a new tool that has a good quick start guide and fancy features will solve your problem if you are using your current tool poorly,2023,Anti-Patterns in DevOps
Deleted Account,5,I feel like I’ve worked with you before. Everything you post is oddly familiar lmao,2023,Anti-Patterns in DevOps
janjko,49,"Using branches to solve every problem. You need a new deployment? Let's do it on this branch. Want to develop a new big feature? Let's develop it on this branch. Want to do a subfeature? New branch made out of the feature branch. Merged a branch with main? Don't delete the feature branch, just in case.

Wow, why do we have 72 branches?",2023,Anti-Patterns in DevOps
ExpertIAmNot,22,"Not trimming and/or deleting branches was a huge problem at a recent client I was working with. They had over 1000 branches going back nearly a decade with very little consistency in naming or organization. Many were long ago abandoned work they kept around “just in case”.

Total Hoarder house. Needed to be burnt to the ground in place. 

I am absolutely certain they now have even more branches.",2023,Anti-Patterns in DevOps
mullingitover,14,"I really like the pattern of ""Every branch is prefixed with the ticket ID, along with every commit and PR."" Ideally you integrate your ticketing system with your version control system so you can see all the branches/commits/PRs in the ticket, and when the ticket is closed you know the branch can be deleted.",2023,Anti-Patterns in DevOps
baezizbae,5,"It took a lot of pain to get there but this is exactly how my team operates and I absolutely of love it. Being able to just glance at a branch name in the commit history and know *immediately* what ticket I need to go look at when the inevitable ""why the hell is this here?"" question comes up saves SO much time not having to do Jira archeology and tripping over Chesterton's Fence.",2023,Anti-Patterns in DevOps
Calm-Fly263,2,"But this is the good stuff, we are doing it also (at least the DevOps team) we can’t make devs to switch doing the same.. 😑 For now, they are just adding IDs in the branches name..
It’s life (time) saver in some situations..",2023,Anti-Patterns in DevOps
mullingitover,2,"This situation is one where you probably need to go over their heads and sell this to their bosses as a engineering standard that your organization needs. 

I don't like dictating these things, however. Another way to do it is to form a cross-functional group with senior engineering/qa/devops and have that group serve as the standards/technology/platform leadership group for the organization. Make that group set the standard for all the teams. 

I find that best way to sell an idea to engineers is to get everyone together, present the problem, hint at your solution, and get everyone to arrive at the solution together like it was their own idea. People hate being told what to do, but they will generally follow a practice that they feel they had a part in establishing.",2023,Anti-Patterns in DevOps
hottkarl,2,"over branching can get a bit silly, lots of work that never ends up getting merged is usually the consequence.


I don't really see how keeping around historical branches is really that big of an issue.  especially if you have a naming convention.",2023,Anti-Patterns in DevOps
Le_Vagabond,2,"oh boy, I'll do you one better: multiple dev / test / prod branches but with all environments as a folder tree in all branches, with env vars accross shared files and prod merged back to dev and test ""automatically"" every month.",2023,Anti-Patterns in DevOps
VengaBusdriver37,1,"Man fuck branches. Where’s that meme, the giterrati have been playing us for fools!!!",2023,Anti-Patterns in DevOps
chzaplx,1,"I have a git alias specifically to display the hall of shame for people's aging, unmerged branches.",2023,Anti-Patterns in DevOps
Sleakne,76,Taking a long time to automate a manual task that happens infrequently and takes very little time,2023,Anti-Patterns in DevOps
Chango99,42,What about removing human error from the equation? That's a big reason why I try to automate a lot of things so it isn't reliant on a human remembering to do something. Cause I forget. A lot.,2023,Anti-Patterns in DevOps
hottkarl,12,"there is more to gain from solving an ""infrequent"" task than just the time involved.

documenting steps / run book.  scheduling it.  context switch to do it.

human error

when whoever was responsible for doing the task leaves, doesn't remember to train team on it,... 

also these tasks don't happen in a vacuum, they add up.

it seems silly to argue against this.  the only time I'd agree is for one time tasks, even then you could make the argument that it should be done in a reproducible way for DR purposes.

can you give an example of something not worth automating?",2023,Anti-Patterns in DevOps
horus-heresy,10,"https://xkcd.com/1205/
What is the value of this task?",2023,Anti-Patterns in DevOps
Teract,44,"I hate this particular xkcd. An infrequent task gets forgotten. It goes undocumented. When personnel leave, it falls through the cracks and breaks production. There is more value in automation than time saved.",2023,Anti-Patterns in DevOps
JaegerBane,5,"This, really. It's the first excuse out of the mouth for not doing it, and the same mouth is the one claiming no responsibility when said infrequent task isn't done right and its cause a clusterfuck that someone else has to sort out.",2023,Anti-Patterns in DevOps
CallMeKik,4,This is a fair point and I think I can agree that if the impact of re-discovering and re-learning that task could be measured in time then you and the xkcd could both be right.,2023,Anti-Patterns in DevOps
horus-heresy,1,Can you put dollar value to that? If activity doesn’t happen and nothing valuable breaks maybe it is just a nice to have and not a must have automation. Always a trade offs based on our limited time on this earth.,2023,Anti-Patterns in DevOps
Teract,1,"Often you can put a dollar amount down. Ultimately, the best indicator for a need to automate is whether or not the task is the bottleneck in the pipeline. Until it is the bottleneck, it's not important enough to automate.",2023,Anti-Patterns in DevOps
professorbasket,2,Yeh this is an often overlooked pitfall.,2023,Anti-Patterns in DevOps
mcfearsome,0,"The amount of times I need to bring this up, that something just isn’t worth automating bc it takes 30s and happens maybe once every couple of months, is downright horrendous.",2023,Anti-Patterns in DevOps
frugalonekenobi,0,Oh G\*d! The sheer pain of asking DevOps to do some basic clickops only for them to block your entire project while they RFC Terraform.,2023,Anti-Patterns in DevOps
Sleakne,14,Moving to the cloud but now making use of elasticity or managed services.,2023,Anti-Patterns in DevOps
moratnz,36,"rude scandalous sable like direful skirt numerous steep trees innate

 *This post was mass deleted and anonymized with [Redact](https://redact.dev)*",2023,Anti-Patterns in DevOps
daedalus_structure,6,">Moving to the cloud but now making use of elasticity or managed services.

We want to migrate to the cloud! It has SQL Server right? 

Yay! It does. Oh wait, we're kind of attached to our CLR Stored Procedures, can you spin us up a cluster of VMs and install SQL Server 2019 on them?",2023,Anti-Patterns in DevOps
Deleted Account,2,This getting hilarious of all the things not to do. Always that new guy or one guy that wants to do this. Never enough time to do it right but always enough time to learn a new tool.,2023,Anti-Patterns in DevOps
AMTRaxTGE,2,"Oh boy, does that re-open a memory. I was tasked with moving an application from our on-prem to the ""cloud"" and the project stalled for about a year for whatever reason, so they couldn't give me access to the repo.

Once we finally got access and got the plans from the upper team, our end goal was to just spin up VMs and load balance them, basically exactly the same as on-prem. Luckily, we were able to remove all CLR database stuff. Needless to say I was furious when I couldn't actually utilize ""cloud"" stuff. Not my money. We got yelled at for leaving things on too long while in that process too...",2023,Anti-Patterns in DevOps
PartemConsilio,4,I’m in a place right now that does this and its driving me bonkers. We have a lot of single EC2s in ASGs and they don’t actually auto-scale or load-balance or use rolling deployments. The tech lead and I have had numerous conversations about how we need to start moving our launch templates to utilize instance refresh for rolling deployments.,2023,Anti-Patterns in DevOps
thomsterm,30,"people who don't know tech and communication and call themselves ""DevOps engineers""",2023,Anti-Patterns in DevOps
Deleted Account,2,lol damn.,2023,Anti-Patterns in DevOps
Deleted Account,1,Oh man... I wish I could give you some reddit awards for this. So true.,2023,Anti-Patterns in DevOps
thomsterm,1,just signup on [devopsprojectshq.com](https://devopsprojectshq.com) that's enough :),2023,Anti-Patterns in DevOps
VengaBusdriver37,11,"Having nontechnical people define shit, people who have never been on the tools.  

Some “tech consultant” read the brochure on version control, some “quality engineering” knows the shitty Branching Strategy from their previous project so that’s how we all do things now, or some “security expert” making edicts about vuln management when they have NFI how anything actually works.",2023,Anti-Patterns in DevOps
hottkarl,12,yes.  security teams copy pasting scan results and saying we need to fix mostly harmless items is annoying,2023,Anti-Patterns in DevOps
27CF,1,Blacklist vfat kernel module on a UEFI system because we're hardening everything!,2023,Anti-Patterns in DevOps
JaegerBane,11,"The 90% solution.

Devops generally always suffers a bit in that since its not an actual feature being delivered, there's always a question over when a given devops solution is 'done'.

The rough route is:

* Try to implement a component (CI, CD, Secrets Handling, Integrations with other services, metrics, aggregation, recovery options etc etc etc take your pick)
* Get it to about 90% done
* 'Right it working fine now and we have a list of features to deliver, we'll gold plate it later' - time called, system has to go into use while incomplete and/or missing features
* Missing parts causes issue
* 'Oh ffs these systems are crap, so unreliable, we spent the time before and it's not been worth it, lets just slag it off/go for something else/just use the piece of shit team ABC has been using (and complaining about)' etc etc etc
* Return to initial bullet

I've seen this happen So. Many. Times over my career and its maddening. Any other form of engineering, delivering a partial solution would be understood to be providing partial functionality, but DevOps feels like its permanently cursed with never being able to properly finish stuff, even to MVP. 

I've must have heard every single excuse under the sun for this kind of scenario, but all of them seem to adopt this weird belief that development pressure X somehow means the underlying engineering problem will go away.",2023,Anti-Patterns in DevOps
mike_testing,2,Can relate to it so much...,2023,Anti-Patterns in DevOps
Firm_Bit,2,"The number of half baked half assed half migrated half complete initiatives at my new org is crazy. they ask why we can’t move faster, they accept the answer and give the green light to change things, then they interrupt the work the next day for some fire that requires another half assed solution. The company has not really accomplished much in the last 5 months and they just keep having more meetings about it and about what new strategies would help…",2023,Anti-Patterns in DevOps
hottkarl,1,"I don't think I've ever experienced that flow of events or justification for tech debt.

but I can agree that actively creating more tech debt is a bummer.

there are often good reasons for tech debt to acrue, but that doesn't sound like one of them",2023,Anti-Patterns in DevOps
freethenipple23,10,"Enforcing principle of least privilege when manually creating and assigning IAM permissions in the cloud. Those permissions are permanent, they're endless one-offs, and it's not standardized so you're making a mess of your environment.

The correct way to do it would be to create a self-service platform that provides temporary, automatically expiring IAM permissions based on some predetermined use cases or allow users to select exactly which permissions are needed to create a custom role. Send a public slack message with the context and ticket link to someone who has knowledge of the work being done and require their approval.",2023,Anti-Patterns in DevOps
hottkarl,2,"huh?

well, yes, they are endless one offs.  policies have their place, but in general (except for user access) you want your apps to be scoped down to least privilege.  we don't allow anything except inline policies or Amazon managed policies.  if you don't want to go down to app/service level, it's usually reasonable enough to have a ""grouping"" of apps that share a role.

but yes, things quickly become unmanageable without a way for engineering teams to do self service.  that's the main take away here.

edit: there's also tools that will look at API logs (cloud trail) and auto generate a policy doc that is least privilege.",2023,Anti-Patterns in DevOps
freethenipple23,1,"Huh?

The main take away here is automated temporary IAM permissions. 

I made no mention of policies or groups because either could be used to accomplish it.",2023,Anti-Patterns in DevOps
tretcadet,1,What would you use to do this? A CI pipeline?,2023,Anti-Patterns in DevOps
Alzyros,2,Hashicorp Vault is great for this,2023,Anti-Patterns in DevOps
freethenipple23,1,"Sounds like you had a better experience with it than I did.

Hashicorp Vault was a nightmare to manage but I was also going into a pre-existing setup that had received no love.",2023,Anti-Patterns in DevOps
chzaplx,2,"It's complex and most people don't implement it correctly, but when it's done right, it's a beautiful thing.",2023,Anti-Patterns in DevOps
freethenipple23,2,"I used Gitlab dynamic pipelines with Terraform, Python, and Cloudformation for AWS. We weren't using SSO originally though so when I set up the POC for SSO, there was a lot of extra work I had to do continue using that setup.

There is a free web application available for GCP if you dig through their white docs.

Azure has something too but I never had the chance to set it up.",2023,Anti-Patterns in DevOps
hottkarl,1,jira integration or ConsoleMe (tool by Netflix),2023,Anti-Patterns in DevOps
voodoo_witchdr,11,Treating containers as VMs.,2023,Anti-Patterns in DevOps
IDENTITETEN,10,Shoehorning old monolithic apps into K8s just because.,2023,Anti-Patterns in DevOps
thisisntmynameorisit,1,"Maybe dumb question but what’s so bad about this? Just that the containers will all share the same kernel etc? Is that a big deal?

 If it’s a good enough environment to deploy your application why isn’t it good enough for developing in or testing your application etc?",2023,Anti-Patterns in DevOps
Deleted Account,1,Because networking by default wont be optimal I'd guess. But managing networks can be dealt with quite well in docker. Especially the vlan backend can be agood solution. Otherwise I'd guess with VMs you didn't create one for every application so that's what could be wrong about it.,2023,Anti-Patterns in DevOps
voodoo_witchdr,1,I should have been more specific but what I meant is when devs try to stick multiple applications into a single container.,2023,Anti-Patterns in DevOps
thisisntmynameorisit,1,Oh right. Yeah that’s definitely bad. Do people put multiple applications in one virtual machine though (without containerisation)? That would seem like bad practice too surely,2023,Anti-Patterns in DevOps
ub3rh4x0rz,1,"They did. Before k8s, ""schedule X application to a server in our pool of servers"" was a common but non-generic task",2023,Anti-Patterns in DevOps
voodoo_witchdr,1,Lol dude we still do that. And also we have k8s.,2023,Anti-Patterns in DevOps
ub3rh4x0rz,1,Is the plan to gradually migrate your non-k8s instances of that to k8s?,2023,Anti-Patterns in DevOps
voodoo_witchdr,1,That's the plan for most things. Some things will remain on a smaller fleet of VMs.,2023,Anti-Patterns in DevOps
ASB-ASB,1,Treating vm's like hardware,2023,Anti-Patterns in DevOps
SweatyActuator9283,8,"i m on a company that uses cloudformation stacks for everything , we set kubernetes there and gitops , but guess who ? they requested to create a cloudformation custom resource that it will trigger a lambda that will execute a github workflow that will create the values file of the application on the gitops repo ( yes it can be done directly )  , of course we have to use that cloudformation resources using the application infrastructure repository with their cloudformation application definition.. crazy",2023,Anti-Patterns in DevOps
Deleted Account,-1,Are y’all not PoCing this stuff. Surely there’s some gains to be had.,2023,Anti-Patterns in DevOps
SweatyActuator9283,-2,only to keep the same process for everything and not make trouble for the developers ..is a shitty process,2023,Anti-Patterns in DevOps
Deleted Account,-1,"Yeah, sounds like. In your experience is devOps culture really taking hold? It should be a joint collaboration and the idea as I have learned it is for the developers to focus more on code quality and less on the mechanics of deployment or where it’s deployed",2023,Anti-Patterns in DevOps
SweatyActuator9283,2,well they already know that the solution that we give. ( move out of cloudformation ) is the right one .. but the burocracy and the fears are there .,2023,Anti-Patterns in DevOps
Deleted Account,1,"Sounds like a management support issue… seen it many times. 

We want innovation, but only the idea of it, and when it comes time to put into practice , the manager is oblivious and the wheels of business keep turning and innovation takes a back seat",2023,Anti-Patterns in DevOps
SweatyActuator9283,2,"yes .. im on the field since 21 years ago , 8 as a devops architect / lead .",2023,Anti-Patterns in DevOps
BuriedStPatrick,10,"CI branch = CD environment. Initially, it sounds great. Then you get to merge and branch reset hell.

Treat your CI as completely disconnected from your CD. Your deployment pipeline shouldn't care which git branch your code was built from. Only whether it's appropriate for a specific environment, which isn't the same thing.",2023,Anti-Patterns in DevOps
Mdyn,2,We do CI on all branches but CD only from 'main' branch or list of allowed and protected branches for some projects. All these depends on your tech/sec/business needs. I am working in sec segment so we very strict with who can deploy what to where.,2023,Anti-Patterns in DevOps
BuriedStPatrick,3,"It's very normal to only ""deploy"" from the main CI branch. However, it's really important to stress that while that may trigger a deployment in the end, the CI should not define what qualifies as production, only what is release ready. It's a subtle but important distinction.

In essence, CI says ""here's a new build artifact I made"". And CD says ""Sounds good, let me evaluate if and/or where I should put that"".

In your scenario I would only publish those artifacts when building in the main branch. Then I'd have a separate CD pipeline — that the CI pipeline knows *nothing* about — trigger when those artifacts are pushed, and then run through the process of evaluating which environments to push to.",2023,Anti-Patterns in DevOps
Mdyn,3,"We have two job per project. One is for CI and deploy to test from test branch. Another is for deploying to staging and after manual approval to production. In ci we do  actual build, docker and/or other artifacts, static analysis, security scans, integration testing in isolated environment (I wish we designed it better) and as last step we trigger CD job with some parameters (artifact version). Actual evaluation happens on staging after some e2e tests, and later production also with e2e.",2023,Anti-Patterns in DevOps
BuriedStPatrick,2,Sounds like you're pretty nicely set up. Wish I could say the same for what I'm doing haha ;),2023,Anti-Patterns in DevOps
bdzer0,15,"Creating multiple pipelines just to change branch the pipeline builds...

I'm fixing that exact thing right now... long story how it got this way, use your imagination ;-)",2023,Anti-Patterns in DevOps
TyLeo3,6,It depends... I don't like having my pipeline's history full of failed runs on your dev branch...,2023,Anti-Patterns in DevOps
bdzer0,2,"Fair enough, kinda hard to come up with hard and fast rules in the fast and loose world of DevOps ;-)",2023,Anti-Patterns in DevOps
UpgrayeddShepard,2,Can you elaborate?,2023,Anti-Patterns in DevOps
IrishPrime,4,"Ideal: Each branch is automatically built in a single pipeline and tested in an ephemeral environment, working their way toward production in some manner.

Common: A few branches (like QA or Staging) are manually started, but still run in the same pipeline.

Anti-pattern: Copy the pipeline that deploys to production into a new pipeline. Change the branch and target environment. Run manually.",2023,Anti-Patterns in DevOps
UpgrayeddShepard,2,Oh yeah that’s ass. Thanks for elaborating.,2023,Anti-Patterns in DevOps
Shanix,1,"Sometimes we do things suboptimally to solve people problems, at least my place.  We have a main Build pipeline for each major branch, but that's solely so the producers aren't scared of making new builds.  Oh, you're worried that you might make a new ALPHA build when you go to make a new build of MAIN?  No you aren't.",2023,Anti-Patterns in DevOps
hottkarl,1,"ok.  but not really an anti pattern, more convenience thing.  if it's something commonly used and you're inheriting from the main pipeline it's not -that- bad.",2023,Anti-Patterns in DevOps
bdzer0,1,"I'm talking about full duplication of pipeline and then just changing the branch, so you end up with   


* build\_project\_A\_branch\_main
* build\_project\_A\_branch\_test
* build\_project\_A\_branch\_feature\_y
* .....
* rinse/repeat with nobody cleaning up.. 

Literally 100's of duplicated files with minor modifications..",2023,Anti-Patterns in DevOps
chzaplx,2,"Oh yikes. I thought you just meant like 2 or 3 duplicate envs i.e dev/stage/prod.

But yes just make the branch a build parameter already.",2023,Anti-Patterns in DevOps
Sleakne,6,Starting a migration without planning how to finish it. Great now you have to manage thr new shiny thing... And the stuff that was such a problem before,2023,Anti-Patterns in DevOps
hottkarl,7,"adopting the new technology or tool rather than fixing pain points / improving your one.

there will always be the hot new thing, that seems great until you actually start using it and find out all the caveats you didn't consider.

there are some cases where simply using an open source tool is a better solution, but rewriting tools from scratch is rarely the right move.  unless things are truly unfixable.",2023,Anti-Patterns in DevOps
FinnaGetRichh,7,Let’s run everything on servers instead of managed services to avoid being locked to one vendor when you’re a startup that hasnt even launched yet,2023,Anti-Patterns in DevOps
Mdyn,1,"Managed services might be not cheaper, which might be important for start ups.",2023,Anti-Patterns in DevOps
ub3rh4x0rz,2,I don't think I've ever seen the cost of a managed service exceed the operational cost of managing an equivalently featured service or managing a lesser service and coping with the lack of features elsewhere,2023,Anti-Patterns in DevOps
FinnaGetRichh,1,"Exactly. once you factor in latency, engineering hours and downtime the managed service almost always becomes the best option.

And thats not to say the engineers that run the managed service are terrestrially superior..
Rather a team running a database and have been running a database for the past 7 years have a better shot than a single guy who’s also running everything else",2023,Anti-Patterns in DevOps
ub3rh4x0rz,1,"There's a tendency in startups to fixate on recurring expenses and not consider the ""expense"" of allocating engineering time to infrastructure because hey, we already made the hire, let's get all we can out of that salary. It would be a red flag if it weren't so ubiquitous",2023,Anti-Patterns in DevOps
zorgonsrevenge,13,"Having a siloed ""devops"" team who you toss things over the fence to.",2023,Anti-Patterns in DevOps
hottkarl,8,"tossing things over the wall is no good, however ""DevOps"" is a culture not a job title.   centralized ""DevOps"" teams aren't an anti pattern in itself.  the only way you can scale properly is centralizing into a ""DevOps"" department

but again, the name of these teams should really be named ""Platform"" or ""SRE""",2023,Anti-Patterns in DevOps
zorgonsrevenge,5,"I keep saying: it's a culture, not a job description. I have worked with a client that had imposed a process where a dev team had to write a waterfall spec for a job pipeline (for example) that could then be handed over to the ""devops"" team to implement. No conversation or discussion. Just a Jira ticket to be completed. And then finger pointing when things didn't go well. Naturally, it was a very dysfunctional organisation.",2023,Anti-Patterns in DevOps
aghost_7,5,Barely writing any tests. It cascades into multiple other issues.,2023,Anti-Patterns in DevOps
IDENTITETEN,4,"I keep bringing this up where I work but it never gets prioritized above getting stuff out the door.

Yes, we constantly have issues when we want to change stuff...",2023,Anti-Patterns in DevOps
aghost_7,3,I try to explain to people what CI/CD is. Most people think its just using github actions to run your linter or something.,2023,Anti-Patterns in DevOps
ub3rh4x0rz,1,"""We do CI/CD""

- 30 separate repos, so no integration, continuous or otherwise
- inadequate environment separation, so deployments are chaotic and/or frequently blocked, but hey, they're automatic, so it's CD",2023,Anti-Patterns in DevOps
m0j0j0rnj0rn,7,Having a “DevOps Department”,2023,Anti-Patterns in DevOps
lostlittleindian,4,"Right!!?? Most of the Devops folks hardly know the product and the optimum way to deploy it. Most of the developers are now encouraged not to look into the Devops side of things.
The one of the few projects that really clicked for me was one where a few developers were managing the whole stack (and writing the automation tests as well for that matter).",2023,Anti-Patterns in DevOps
frightfulpotato,1,"If it's not the devs writing the tests, who is?",2023,Anti-Patterns in DevOps
nonades,2,Trick question: nobody does,2023,Anti-Patterns in DevOps
Antique_Song_7879,0,software/data engineers need to do devops themself,2023,Anti-Patterns in DevOps
Deleted Account,4,Overcomplicating everything.,2023,Anti-Patterns in DevOps
schmurfy2,8,Using terraform but doing some things by hand because it's complicated.,2023,Anti-Patterns in DevOps
nekokattt,2,this a billion times over,2023,Anti-Patterns in DevOps
Deleted Account,4,Now we are getting somewhere in this sub. Realty check for all those that want a career in IT should read this. Newbs be warned some of these posts are being satirical in nature so be careful.,2023,Anti-Patterns in DevOps
UncommonDevopsWisdom,3,When people lift and shift their on-prem workloads to the cloud without re-architecting them to be cloud native.,2023,Anti-Patterns in DevOps
BrofessorOfLogic,3,"Multiple layers of templating context and inlined scripts. Bonus points for templating shell scripts.

I just puke when I see a terraform `templatefile()` on a gigantic bash script with inline heredocs with inline config files with inline scripts with `envsubst` with inline string substitution with inadequate quoting.

Good luck figuring out how many backslashes you will need to escape a character in there. It's a ticking time bomb, that will eventually blow up when some unexpected value finds its way in there.

Like for fucks sake, break things up into separate files.

If you want to write env vars to file system, put them in a separate file and source it.

If you want to create a config file, create it as a separate file and template that, don't inline it in a heredoc.

Don't inline a script file inside another script file. Just put it in a separate script file and call that, it's not hard to do.

If you want to send multiple things via user data, use cloud-init's `write_files` with base64 encoded values.

And never ever template a shell script in any way whatsoever. Shell scripts are supposed to read their data from external sources.",2023,Anti-Patterns in DevOps
zpallin,3,"Thinking your team would prefer to use community tested, flexible open source tools over that one bash script the smart guy who left wrote years ago.",2023,Anti-Patterns in DevOps
colin_colout,3,"1) Automation for the sake of automation. 

Yes automation is crucial, but simplicity is usually better. It's better to have simple documentation/runbooks that are easy to understand than to have over engineered automation that makes the one task easy but requires maintenance and incurs tech dept. 

2) Over-modularization.  Splitting your code to be composable can be good, but keep in mind it can hide complexity. Remember that simplicity is key, so when in doubt, KISS. 

3) Not reflecting (I might be stretching to fit this as an anti pattern, but it's important). After every success and failure, you should take a bit of time to look back and be honest about what went well and what didn't. Try to ask yourself ""why?"", and try to be honest about your own mistakes. 

The reason reflection is crucial is it will help you grow and discover these anti patterns first hand. The two I mentioned above were leaned there hard way. Reflection brought me to the point that I can deeply understand why these are anti-patterns. 

Understanding the ""why?"" also leaves me open to changing my mind in the future. Maybe a future advance in the field makes my advice obsolete. Always be ready to adapt or you'll become an old curmudgeon greybeard (rather than a wise sage greybeard). 

Source: I'm coming up on two decades of professional SysEngineering / DevOps / SRE experience and some non professional experience before that.",2023,Anti-Patterns in DevOps
tcpWalker,2,Having an SOP you insist must be followed even when obviously inapplicable.,2023,Anti-Patterns in DevOps
monkeynutzzzz,2,Large corporate environments with multiple outsourcers and hundreds of project managers.,2023,Anti-Patterns in DevOps
Deleted Account,2,I’ve never done well with project managers. I’d wish they’d stick to managing projects and not people… this lines blur really quickly and depending on who they know they can quickly become out of control and power hungry,2023,Anti-Patterns in DevOps
sombriks,2,manual updates,2023,Anti-Patterns in DevOps
Rei_Never,2,"Terraform that has evolved to ensure you have a bad day when provisioning new environments, forgetting that your predecessors had no idea how to build modules correctly.",2023,Anti-Patterns in DevOps
Guru_Meditation_No,2,"""All problems should be resolved with my pure, incredible technical skills. We should avoid  solutions which involve humans making an effort to collaborate and build consensus because they aren't as easy to manage as YAML files and docker containers.""

(You either have this person on your team or you're still cleaning up after them.)",2023,Anti-Patterns in DevOps
jetteim,2,Using dashboards to monitor instead of relying on actionable alerts with links to parametrized dashboards related to alert context,2023,Anti-Patterns in DevOps
spicypixel,4,"- More process and steps than the business needs or wants because it's shiny, and featured on a medium blog.
- More technology and tooling than the business needs or wants because it's shiny and featured on a hacker news post.
- Trying to abstract complexity with a simple interface, failing to understand the problem domain and writing a terrible interface layer, because it's shiny and featured on a reddit thread.

All the above can be loosely be attributed to resume driven development.",2023,Anti-Patterns in DevOps
Deleted Account,3,"It seems like there is always something new to try out when no one really has an idea of the challenges they’re really trying to solve to begin with.

I see a new tool built around the K8s api almost weekly and people still struggle with the basics while trying out the shiny stuff",2023,Anti-Patterns in DevOps
spicypixel,1,"I do appreciate complex problems can have complex solutions that use the latest tools but most of us ship CRUD apps bottlenecked by the database. 

KISS principle should be hammered into people.",2023,Anti-Patterns in DevOps
koffiezet,4,"In general: [NiH](https://en.wikipedia.org/wiki/Not_invented_here) tools, and adopting 10 million tools. A tech-radar can help you a lot.

In gitops:

* No clear bootstrapping plan
* Not doing everything IaC because ""it's hard"". 
* using different folders per environment instead of branches. It makes managing config drift a nightmare. It's Git, learn how to use it, and use its damn features.",2023,Anti-Patterns in DevOps
hottkarl,13,"I don't agree with using branches for dev/qa/prod envs for IaC.  

having a branch doesn't really make sense, because not all changes in dev / QA will always go to prod.

if that was the case, I'd agree with you.  we may be speaking about different use cases, though.

we aren't copy pasting, through.  we basically are patching / overriding what we need to per environment.",2023,Anti-Patterns in DevOps
koffiezet,1,"> we aren't copy pasting, through.  we basically are patching / overriding what we need to per environment.

So you have a basic shared code-base, where any change affects all environments at the exact same time?",2023,Anti-Patterns in DevOps
hottkarl,1,"I missed where you mentioned gitops.  it's not pure gitops.

dev is applied via hook, once dev is pushed a sanity test/ assertions are fired off and report is generated and stage job is sent into an ""approval queue"".  more tests, and prod deploy is waiting in the approval queue.",2023,Anti-Patterns in DevOps
Deleted Account,10,[deleted],2023,Anti-Patterns in DevOps
koffiezet,3,"> Different branches sounds like a merge nightmare down the road during a refactor.

The day-to-day dealings with config drift and copy-paste errors, missing services in some environments, ... is gonna be a much bigger PITA especially once you get beyond a certain scale, and that pain is a constant-one. Once it starts this gets out of hand very quickly. I'm used to dealing 500+ different services, but I've applied the exact same approach to small setups to.

Just treat every single service as an independent application, with it's own gitops repo that deploys independently. From the devops/platform team, all we need to know is which repo (hopefully standardized and automated), and we'll generate Argo Applications/ApplicationSets for them on the relevant cluster(s), and ideally enforce some rules and standards using Gatekeeper.",2023,Anti-Patterns in DevOps
nieldejonghe,0,"Hey u/koffiezet mind sharing some DMs on this?  
I DM'd you previously but seems you didn't see them.",2023,Anti-Patterns in DevOps
Soccham,3,Not Invented Here mentality is the bane of my existence trying to fix infrastructure at my current company. These guys protect their shitty tools like their lives depend on it and can’t comprehend that their patterns suck,2023,Anti-Patterns in DevOps
thenickfish,3,"Have you ever run into any of the problems outlined here? If so, I’m wondering how you dealt with them. We have been using environment folders so far but are always open to improvement. 

https://codefresh.io/blog/stop-using-branches-deploying-different-gitops-environments/",2023,Anti-Patterns in DevOps
koffiezet,1,"> Have you ever run into any of the problems outlined here? 

Being a freelance consultant, I see a lot of this crap. I've dealt twice now with an absolute gitops nightmare, and both times this was the main cause. Maybe it's fine if you're dealing with a few dozen services, but beyond that it simply does not scale.

If you run a limited setup and have maybe 2 dozen services or so, you could manage them all in a single gitops repo - and yes, working with branching there would probably become a pain. But beyond that it quickly becomes a PR and merge conflict nightmare. At some point some genius will add common helm or whatever code in the repo itself, which all a lot of deploys then blindly start using (and no versioning, since `main` rules the world). Inevitably, at some point, someone breaks the common code, and if you're lucky - that common code has a copy per environment, and only breaks everything there. But what's the point of common code if you can't use it to break all environments at the same time?",2023,Anti-Patterns in DevOps
Deleted Account,1,It seems the basics of git aren’t widely utilized. I think with IaC a lot of it has to do with people not using it or exposed to it and hard to get backing from leadership when they don’t understand it much less trust a newbie who’s barely getting acquainted with it.,2023,Anti-Patterns in DevOps
PartemConsilio,4,Overwriting Terraform files with CICD pipeline automation instead of just using Terragrunt or some DRY code method.,2023,Anti-Patterns in DevOps
obscure-shadow,2,"I feel like my interactions with terragrunt and trying to keep things too dry also turned into really complex anti patterns that were easily avoided and easier to maintain, but perhaps the larger anti-pattern was not having good planning of terragrunt architecture to begin with and just letting everyone do whatever for a while. The state becomes very cumbersome and hard to move once you realize you've made decisions that were bad...",2023,Anti-Patterns in DevOps
Deleted Account,2,"Where do I start?

DevOps as an engineering role.

Teams focus too early on Automation, particularly when they have very little/poor observability.

Sprints/Scrum (even these are never done correctly).
The ""DevOps Team"" Silo.

The Competitive Teams topology.

Having level 1, 2, and 3 support call centres for customers instead of customer partners and engineers...

Having a dev cycle with Dev, Test, Stage, Preprod, and Prod stages.

Having an arbitrary release cadence.

Not understanding the DevOps process.

The DaaJS (DevOps as a Jenkins Service) or DaaPS (DevOps as a pipeline Service).

I have heaps more that I have seen in my 20+ years of engineering tenure, I'll leave it at this for now. These are the most common ones I see out in the wild.",2023,Anti-Patterns in DevOps
professorbasket,1,"Creating wrapper classes and modules around existing interfaces 

Obsessing over code style and linting

Creating invisible technical debt in the form of layers of complexity.",2023,Anti-Patterns in DevOps
Deleted Account,7,Have linting and formatting be an automated step. Saves time arguing about subjective things and makes it easier to just run that step and not think about formatting while you are developing.,2023,Anti-Patterns in DevOps
professorbasket,1,Yeh should be automated always,2023,Anti-Patterns in DevOps
nullbyte420,2,"you dont deserve the upvotes. god damn i hate all these, particularly 1 and 3. we have a terrible case of wrapper modules and classes over existing interfaces in our org, making everything completely ungoogleable, undocumented, outdated and opaque. ""but it's easier now!""",2023,Anti-Patterns in DevOps
hottkarl,2,the list he gave are what he considers anti patterns. your comment sounds like you agree.,2023,Anti-Patterns in DevOps
LandADevOpsJob,1,Badass app architectures and shit processes to manage them.,2023,Anti-Patterns in DevOps
Massive_Evidence_214,1,"Developer needs to have new deployment for every new PR and every new branch. 

They don’t like to follow a standard branching strategy’s",2023,Anti-Patterns in DevOps
Mdyn,1,"Not asking ""Why we really need this?"". 
I had a lot of requests from developers and even pull requests. But later after asking ""why"". It revealed they done this to  get feature N, but it can be done in another, simple, more readable and obvious way.",2023,Anti-Patterns in DevOps
wursus,1,"1. Make a single long pipeline for building everything.
2. Use as many popular hyped tools/libs (especially k8s) in as many place as possible
3. Versioning on building stage without storing in/tagging commits in a repository.
4. Use tricks/hacks/parches in automating scripts without any refactoring.
Actually there are a lot...",2023,Anti-Patterns in DevOps
AppState1981,4196,"""I have no idea. I've never run it""  
""How did you test it?""  
""It has unit tests""",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Xander-047,2151,"That's such a funny scenario to me, a dev having 0 idea how his product looks like, he just knows it works",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
AppState1981,1293,"We have a developer like that. When it compiles, they ask me to test it. They don't even try to run it to see if it even goes.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
khalcyon2011,850,We had one of those. He got fired.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
AppState1981,454,"They got promoted. ""If I run it, I don't know if it does everything properly"" doesn't make my heart swell with confidence.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
nelusbelus,243,Y'know what they say right. Those who are too valuable can't get promoted,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
chrisagiddings,104,Story of my damned life.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Willindigo,76,"Me too, around 2018 machine learning / DS guys were getting $500/hr on contract at a major bank and were still getting headhunted by facebook.  I was on a team trying to get the Python scripts these worms were writing to run against Hadoop sized data sets and we were not making anywhere (\*and I mean not even close) in the same ballpark.  I actually had to learn Python to fix their messes.  Almost as soon as we would get an implementation running on a mock dataset and it DID NOT PRODUCE THE CORRECT MODELS, they were out the door to FAANG.  We went through no less than 6 ML/DS ""gurus"" that were basically frauds.  I decided to start learning ML/DS myself through 2019 then... 2020 came and everything went to hell in a hand basket.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,18,2020 and 2021 were fantastic years to break into the space.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,5,By space do you mean ML/DS or IT in general?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Procrasturbating,6,"In general.  Everyone had new IT needs (covid), and ML/DS got some freaking great tools that allowed for all sorts of impressive stuff that actually works most of the time.  Hardware all needed upgrading too to train models.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
chrisagiddings,2,Not to mention the added attention of all the worlds eyes on covid data.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Willindigo,1,">Not to mention the added attention of all the worlds eyes on covid data.

Dirtiest of all dirty data TBF.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
chrisagiddings,2,"Dirty or not, it served as valid inspiration for many people to pursue ML/DS and medical related careers.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Willindigo,1,"Do you have a source for that, or is that just what you feel?",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
chrisagiddings,1,"No source. But I know a lot of people who started down ML/DS tracks, hopped into healthcare related fields, and mentored quite a few people on whether such careers could be a good fit for them.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,1,ML/DS or MLE,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
ProbablyGayingOnYou,3,I started my masters in Data Science September 2020.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
nugget-lover-300,60,You’ve also gotta make sure they understand that you’d leave if they don’t value you right.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
nelusbelus,29,Food for thought,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
OG-Pine,20,"Yeah this is key. If I’m too valuable to promote then give me a big ass raise, or I’ll take my value somewhere else",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Solarwinds-123,9,And then actually do it,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
emmyarty,8,"Promotions can be grouped into two categories: progressive and successive.

Filling a pair of boots in a position above you? That's successive, and employers will absolutely hesitate to promote you away from where you deliver the most for the company.

But progressive promotions are always on the cards if you're good enough. When you're pushing a project and problem solving off your own back enough of the time instead of awaiting instructions, management time allocated to you will taper off.

Meanwhile the more work you take on, the closer you get to being able to demand an assistant to work with you and free up some of your time so you can spend more time delivering results in areas only you can deliver.

If you manage your assistant properly after choosing the new hire well, then you will de facto be in a position of more senior responsibility than you were before. This is a more difficult but more organic form of promotion, and can cascade into having an entire team working for you if you demonstrate the need followed by strong results.

Being stuck isn't a sign of being too good or too bad at a role; being stuck is a sign of being remarkably normal.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Mysterious-Crab,16,"Yes, and I love it. I do work that’s easy for me. I get to do all the side projects I want. And they know I’m very difficult to replace I get paid 1,5 times what my manager makes, but none of the stress of responsibilities.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
nelusbelus,9,"We're on the same page, but it does mean less pay (compared to manager for me at least; he's also the dev lead and definitely deserves it). But still, better QoL",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
tsteele93,51,"This is so true. I am 56. I have spent the last 15 years in a job where I _can_ leave at 10:00am if I _need_ to do so. I’m usually home before 11am. I literally grew up with my kids, taking naps with my son daily, tea parties with my daughter whenever I wanted. School plays, lunches, and all of that, I was there. 

Could I have made more money if I had played the game and worked up the ladder? Sure… but I feel like I won the game. My kids are in their mid-teens, they still like me and we get along. I still go to their activities and make my son write me python programs to do things I need done. My daughter and I read together and I take her shopping for hours at Ulta. 

Through all of this my wife and I have stayed close too because we see a lot, but not too much of each other. 

I wouldn’t trade it for any salary.

P.S. you are wise to recognize this.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
nelusbelus,10,"Same opinion here, I've had offers from amd and arm but the job would've just been way more stressful, less work life balance, more lonely and way less fun. And even though my first thought would be that I could grow more there, I think the inverse would be true. Such jobs would leave you tired, with not a lot of energy and time left to improve yourself and work on side projects. It's hard for me to imagine what those companies would be like with only this job to go off tho. With all this in mind, I'd rather try my hand at side projects and hope one might end up being viable financially but invest most of my money to earn compound interest over the years to earn it that way rather than spending time on a job I might not even like",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
tsteele93,0,"My biggest regret in life was not investing in more rental properties when I was younger. I always had excuses, didn’t want the hassle, was worried about the future. 

If I could go back and buy just 5 rental properties, pay for a property manager (and charge that to the tenants), I would be sitting on roughly $50k-60k per year in passive income during my retirement. 

That’s assuming very modest properties and not making much - if any - during the first 15 years of ownership. 

I own one rental property that (if I didn’t have relatives living in it right now) would be grossing $1,500-$1750 a month and paid for right now. After tax, insurance and setting aside 20% for repairs and maintenance and property management, that would be easily $1,100+ a month net.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
nelusbelus,2,"Yeah rental would be quite profitable but I'd rather invest (not that I have a choice currently) mostly into diversified indices (e.g. s&p 500) and some other things I think will remain important in the future (chips, nuclear, green hydrogen to name a few) as well as some stock options for the company I'm at ofc. Maybe rent out for cheaper price than market for friends in maybe 2 years if I manage to buy one for me of the houses they're gonna build (cheaper than on the existing market). 

I think one of the things we don't learn early enough in life is that due to interest stacking your money early in your life is worth more than later in your life to some extent. So saving money (not cents but larger amounts) early can lead to profits in later down the line given enough time (e.g. 100$ saved now is 670$ in 20 years with 10% interest). If I knew this 7 years ago I'd have put the part I didn't need for college into a few etfs and probably borrowed max (against 0% interest with payback time 15 years!). But unfortunately that stuff isn't really taught in school (at least for me)",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
AppState1981,6,"I stayed as a coder throughout my career and still made my million$. I finally told my boss ""I don't have to work anymore so don't stress me"". My retired wife freaked ""I'll have to get a job if you quit"".   
Me: ""Is there a downside to this?""",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
NaturalProof4359,3,"Yo I love how you snuck in “and make my son write me python programs to do things I need done” and left it at that. 

Bravo.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
cantsleep0041am,2,"You are a great, great man.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
someacnt,1,"Question is, do you have job security? i.e. Can you keep working there even in the periods of cutbacks and mass-firings?",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
jondaley,1,"It's that a thing in the tech world right now? Seems like everyone is desperate to hold onto the workers they have since there aren't any others to replace them.

Actually, in my 25 year career, send like that has been the case for most of that time.  I still remember my first job fair in the late 90s, when investor money was so prevalent it was hard to tell what the companies were actually creating because there was so much focus on the benefits to the potential new hire.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Blecki,35,"I run into this all the time. I know the output is correct given the input.

Oh, was the input garbage? Does the output actually make sense? Dunno, does what they asked for.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
gdmzhlzhiv,2,"You get given the input? Half the time we're expected to operate on input data that nobody will give us, in a format that nobody will document.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
DAVENP0RT,40,"I completely get that, I work in fintech. I have absolutely no fucking clue what I'm looking at. I just make numbers go vroom.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
ForlornPlague,5,"It's reassuring to know this is normal (or at least I'm not the only one). I moved from hospitality (hotels) to fintech and now I never have any idea what the data actually means. I know I moved it from here to there according to the specs, but I don't know what the hell the amortizatized gross short term profit is.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
DAVENP0RT,3,"I went from airlines to fintech. The money is way better where I am now, but damn if I don't miss flight data. It was so cool dealing with crazy time changes and geospatial stuff. I really wish I could dip back into that world without taking a pay cut.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Jeb_Jenky,1,Well he certainly showed management potential by offloading a part of the work on you.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
robgod50,1,PM here...... This explains so much to me.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Strange_Meadowlark,99,"I had a guy basically do that, but he also took forever to do it, told people in stand-ups that he was ""working on it"" and ""it's going fine"" and never asked for help. Only reason I ever got to see his code was because I asked him to push an early copy of his branch to Git.

Turned out he was a remote contractor who was double-billing his time with at least one other company.

Took us a week to fire him because we couldn't even get a hold of him!",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
jlosito37,3,I wish that would happen more often.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
MoSummoner,-42,":( y

Edit; I was asking why the guy was fired for letting other people test the code, I am unsure why my curiosity led me to downvotes",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
dcabines,68,Smoke testing is a crucial part of the job.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,53,[deleted],2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
XDVRUK,7,"He's not your buddy,, pal",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Ikarus_Falling,2,There are two types of smoke test in one your program goes puff in the other you smell Toast even though you don't own a toaster and should call an ambulance,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
XDVRUK,2,"You're down voted by the professionals because we're sick of this crap.

Testing your own crap is a fundamental grad level ability, that we find people claiming to be junior+ who still don't test their crap is unacceptable.

Now, there are circumstances where this happens for instance the seniors are not controlling the git checkins to freeze to allow people to sort out stuff so in perpetual bloody catchup to other people. There is a very simple and effectual rule: 

Do pr's in order and only in order. The only reason the get bounced out of line is if there's a significant change required.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Xander-047,224,Compilation errors are the only errors ![gif](emote|free_emotes_pack|sunglasses),2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
sysnickm,41,Functioning as written?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
nelusbelus,64,*laughs in javascript* what if we removed all the compile errors and just do them at runtime but instead of giving you the error we cascade it through your program so you can play a game of find the NaN or undefined,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
nostril_spiders,14,"oh it's this line

    if (srcTemplateV === ""undefined"")

_changes line_

_entire div fails to render_

_changes line back_

_doesn't fix it_",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
cosine242,3,Jesus wept,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
nelusbelus,5,undefined,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,3,Typescript FTW,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Dexaan,4,"Now you know where the null or undefined is, but you have to convince Typescript it's not an error",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,2,“as any”,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Sweatervest420,1,"As a Javascript developer... 

Is there any other way ? 

/s",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
nelusbelus,1,Truly the best language,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
szox,6,"To be fair, that's exactly what Elm promises.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Bakoro,5,"No, logical errors, or errors of fact are always possible. The structure and syntax is perfectly valid, but is encoding incorrect processes.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
AppState1981,5,"We ran a delivered COBOL program from a venfor and it never stopped running. I checked the maintenance log and they had added a perform of an error procedure to every procedure if a global error switch was set to Y.   
Every.single,procedure.  
Including the error procedure. They sure tested that thoroughly.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
wgc123,38,"As a DevOps Engineer, I assume all developers are like that but they can still get decent results if the pipelines are green or red.  Go ahead, check your code in, and it will build, scan, test; but if it’s red, your changes are not going anywhere.

If QE complains that’s not the same as “good”, I point to where they need to add test automation, and put up or shut up",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
shootersf,12,Interned at a company as a developer. Most of the code ended up on aws nodes in some kubernetes cluster through github and jenkins. It hurts being that clueless about all that stuff. In final year of college and though I don't want to go dev ops I do plan to create some simple project and try and set it up to push and run so I can at least ask better questions.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
EuphoricImage4769,9,"As a dev ops engineer I love this, if you start a company you will need to know dev ops, if you work at a small company without a dev ops team you will need to know dev ops, if you work at a company with great dev ops processes and something goes wrong with a command you copy pasted to deploy your code it will certainly help to know what it does behind the scenes, it truly baffles me that colleges don’t teach dev ops!",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
mopsyd,2,I felt like my code got the biggest short term quality improvement gain across the board when I started to delve into ops. It made me make sure I understand both the technical functionality of what I wrote as well as the likely impact on existing logic before deploying. I think colleges mostly don’t teach it because there is no universal standard that will persist for a full 7 year masters program before what you learned at the beginning is no longer relevant. Seems more a business decision on the part of universities than a need one.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
ksknksk,1,That… can’t be true. How could it be true?!,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
anonymousperson767,1,indian?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
AppState1981,1,Close,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Nalivai,1,"Oh yeah, lead dev on one project I worked on was like that. His shit was so bad, everyone eventually quit. It was more than 6 years ago, and the project is still at the same level of donness, that is to say, zero.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
TheOriginalSmileyMan,1,"Sounds like a dream dev. No ""it runs on my machine"" bullshit",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Fenor,1,"either it's an extra old developer . 

last time i heard of something done like this without firing the dev was a place where developer couldn't even compile the product on their machine so they had to send it for compilation and then wait for the test result (compilation error where within the day) i think it was at the end of the 80s and it was something an old collegue of mine told me a decade back.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Shazvox,135,"Ehm, there's a learning curve to the product 😅...

Step 1: Make it work.

Step 2: Understand what ""it"" is.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Tookoofox,38,"Oh, that stings. That's definitely the order we've decided to do it in with my company. Last minute requirements abound. And now they've discovered agile.

Every objection is met and beaten down with, ""Well that's agile.""

And every suggestion is quashed with, ""That's not agile.""

From the bottom of my heart: fuck agile. Nevermind rather it actually has good ideas in it. I hate what it does to every damn conversation.

Also: waterfall doesn't exist. It's something the agile people made up to contrast themselves against.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Jimmy48Johnson,15,So you have toxic management.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Tookoofox,7,I'm being a lot meaner than I probably should. But probably a bit.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
vladWEPES1476,26,.. on their machine,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
UltraCarnivore,8,"So deploy his machine, ffs",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,6,The devops guy contacts SpaceX too book that trip to the moon for deploymemt.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
DangerZoneh,1,"Most of my work I only have to get stuff running on one computer


It just sucks that that can’t be my own computer and I don’t have to travel to get it to work on the computer it needs to",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Tripanes,15,"Welcome to legacy system development.

Sincerely.

-Someone rewriting COBOL",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
AlGeee,3,Gah…COBOL? Still?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Tripanes,3,"Oh yes, I'm rewriting code that's older than me",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
bluearth,1,'Grats for the job security!,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
dsdvbguutres,10,"I don't know how it looks like, it doesn't work either.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Xander-047,10,Sounds like an average day at work to me,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Ok-Half-5742,-18,"you made a typo, it's it not at.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
WaterlooCS-Student,8,Pretty sure it’s “at” lol,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
NoButtChocolate,4,I’m not even sure what else it would be other than “at”,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
AltIns420,3,Of?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
NoButtChocolate,3,Fair enough… I’m working on-site 100% of the time so I always just consider “work” as a place I am at,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Ok-Half-5742,1,"it's a little joke: sounds like an average day, it work for me.

idk, but I read it as if the guy say it's an average day if it does'nt work, but *his* day is special since it work for him.

you guys are too serious, but I'll take my downvote ahah",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,22,"I’m a welder. I have the same issues with engineers. Engineer: “My computer says it needs to be welded here”

Me: “I can’t fit a rod or MIG here. I’ll have to cut some off for it to fit. Otherwise it’s not going to work.”

Engineer: “My computer says it will work.”

Your computers not fucking welding it!",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
msg45f,3,"I have actually had to do a lot of this. Had to rewrite storage implementation for various larger APIs. Its coded to an interface, so I dont need to worry about what the API does beforehand. Hundreds of unit, integration tests to ensure that it works, but none of my requirements actually involve modifying the third party API to use the new storage implementations.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
ConcernedDudeMaybe,4,"Clean data in, clean data out. Does that help explain it?",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Qwertycrackers,10,[ Removed ],2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
murderous_tac0,3,90% of everything I've ever written.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
xtreampb,3,Working on deploying a product now. What are your production variables? Doesn’t know. What infra is it going to run on. Doesn’t know. Who/what uses this. Doesn’t give me a straight answer? Who’s your SRE team. Doesn’t answer. Salads promised it’ll be ready by Friday. Been scrambling all week. Only been at this massive company a few months. I don’t know all the product lines and teams. That’s okay we’ve been doing peering sessions all week. They get shocked when the IT team knows how to write top tier C#. Like yea guys I was a sr software architect b4 I was a sr DevOps engineer. There’s a reason I’m damn good at my job. I’ll get these communication gaps filled so this won’t be an issue in the future.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
coldnebo,2,"no, I get it… I remember reading a book about PHP and the opening chapter said “go to your terminal and check these things are installed and working. if they aren’t, ask your system administrator to install them.”

I looked around, then back at the book. 

“what if I am the system administrator?!”

at least the rest of the book wasn’t completely useless.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
coldnebo,2,"you know what the second funniest question to ask a data scientist? 

“how much does your work cost the company and what’s the roi?”

😂",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
danimal51001,2,"I had seen a team with ample unit tests. Me, assuming all dev teams were practicing TDD, said “oh, I’m not sure how to test that, what level of confidence do you have in your unit tests?”

“Unit tests? We don’t write those. We just write perfect code.”
Me….side eye….chuckling along with what I assumed was a joke.

Nope. It wasn’t a joke and I had upset a team lead.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Xander-047,1,"Confidence is good, but sometimes there is a thing called *too much* I'm sure even the best developers out there are smart enough to know they can make mistakes sometimes and don't have blind confidence in themselves",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
gigahydra,1,"I dunno, it's been decades since I've had to look at non-interpreted code, and even longer since I've had to crack out the assembly handbook.  I'd argue the majority of modern devs have at best a baseline understanding of how their apps really run.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
volatilegtr,1,"One of my devs asked me if we had servers once. 


I thought it was a trap. 


He was serious.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
ArastooJoshi,1,"It Just Works...

-Todd Howard",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Dannei,40,The data scientist wrote unit tests? That there is the real joke.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Dave5876,14,Too real man,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
kookaburra1701,8,"Oof I felt that one.

Through grad school and a like year into my first job in a lab (where I was the only computational person, so no one to ask about this stuff), I thought ""unit tests"" meant I had made test data that I knew should fail the mathy stuff and test data that should pass the mathy stuff, edge case test data, etc, and I knew what the output should look like. Basically test data that would hit every function in my scripts so I could make sure they were all working. Then I'd run my ""unit"" through my scripts and if every thing came out the other side correctly my script passed!

🤦

Thank Gödel I read some books about general software engineering principles and figured out that testing whether my math or stats was wrong wasn't at all what ""unit tests"" meant before opening my mouth in a meeting in front of actual SEs.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Lily2468,2,"but your way of testing sounds actually pretty good. an effort, yes. but IMO probably better than most unit tests.

if you want to continue this kind of testing, call it integration test :) I learned that you can do pretty much anything under that name.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
kookaburra1701,1,"Oh I definitely still do it - when building algorithms to analyze tranches of genomic data that can reach into terabytes knowing your logic and math are correct (and performing operations on what you think they are) are crucial because if the script doesn't fail, you often don't know what the range of the correct result will look like.

But now that I'm actually doing unit testing it's much easier to find math and logic errors since most of the programming errors have been caught by my tests first.😁",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,3,HAHAHA unit tests!!?!?!  From Data Scientists?!?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,1,It works on my wiremock,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Error_No_Entity,1653,"DevOps \*sighing\* : 'Let's see the Google Collab then. I hope you have a requirements file'  
AIEng: 'A what?'",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Twistedtraceur,555,I got a docker compose file! Does that help?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Error_No_Entity,647,This compose file just launches a jupyter notebook server!,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,57,Oof I feel this so hard right now,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Altruistic_Milk_6609,129,:(,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
NoConfusion9490,18,That's the prod server.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Browsing_From_Work,3,I have received psychic damage from having this discussion.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Error_No_Entity,1,"Putting up infrastructure is akin to crystal ball gazing, I agree.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
alexanderpas,92,If that makes it run on my machine without any further configuration... YES!,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Twistedtraceur,40,Only if you are on windows ![gif](emote|free_emotes_pack|stuck_out_tongue),2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
DedlySpyder,34,And WSL 1,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
xtreampb,4,"It’s python, why the fuck isn’t in a Linux container!?!?",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
ilovebigbucks,1,It is but that Dockerfile and compose file can only be ran on Windows. I haven't seen a proper usage of Docker in development yet.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
xtreampb,2,I run MSSQL servers in Linux containers on my local windows box. I use that to develop tests. I run terraform in a Linux box. Azure and AWS clis on a Linux box to create my deployment scripts. I know some of the dev teams package their apps in containers and run them locally for some function validation. It is very useful in development,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
gdmzhlzhiv,1,"We had that working for a Rails app so that you could run the tests against something much closer to the real environment it would have been deployed as.

But then when it was handed to ops, they decided they wouldn't run it on docker anyway.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Protuhj,14,What about this 500GB VM ISO? Does that help?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,5,No unless you have details of all images used (or they are available otherwise) :P,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
lavahot,2,"I mean, yes.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,35,"I had to have a conversation about testing and deployment with an AI team a few months ago. I knew how it was going to go before I had it but did it anyway because clearly I like making my brain hurt.

I ended up pretending they were not really part of our platform so I didn't have to mention them in any arch docs, roadmaps or compliance strategies. I'm sure that won't come back round to bite me on the ass later.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
covidambassador,13,"I’m joining an AI team as the PM soon. I’ll keep this in mind and ensure that my engineering team is aware about the devops needs and can collaborate continuously with them. If you have any insights for me, I’ll gladly take it and it is highly appreciated",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
ringobob,2,"It's gonna be hard if you're the only one on the team pushing for that. If you're ostensibly agile, and can structure tasks around releasing often, even if ""production"" doesn't mean being used by customers or the business yet, then you can get devops involved on a weekly-ish basis to help with making sure you're doing the right things for every release. It's all about habit building. 

Make sure there's a clear idea of what the product is. Like, where the edges are between what you're working on and the stuff it should wind up integrating with. 

Just a couple things I picked up from the outside of one of those teams that operated outside the normal engineering process. It wasn't as bad, they had runnable code (no tests, or as far as I know, no QA), it was just completely outside the environments the rest of us were using, and they had no clue about what our needs were gonna be downstream from them. When it came time for a production release, they estimated a month, it took 4. And then they had to mostly switch it off because it was only dealing with part of the problem it was designed for.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
covidambassador,1,I see. Thanks for the details.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
GreatJobKeepitUp,-6,Stay in your lane and use dall e only,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
bluearth,1,I like the way you work,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
2blazen,130,Actually I think knowing how to program is what separates Data Scientists from AI/ML Engineers,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,193,[deleted],2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
2blazen,57,"From my experience at least. DS = know ML models and methods and their applications, and know how to implement it in code, ML Engineer = DS + know how to do it in a nice way (OOP, tests, CI/CD, etc.)",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
VooDooZulu,47,"definitionally, a scientist would be someone who pushes the boundary on novelty, creating new methods or applying those methods to novel situations. While an engineer knows how to take already-developed methods and implement them. You're not wrong, about the ML Engineer knowing how to ""do it in a nice way"" but a data scientist (theoretically) should know the inner workings of the methodology better and should be developing new methodologies.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
2blazen,23,"I agree, I just don't think the two roles are this distinguishable at most companies, MLEs are expected to do science stuff just as much as DSs are expected to do engineering. That said, titles don't really mean anything, nowadays everyone and their dog are called DSs",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,6,">everyone and their dog are called DSs

Given the amount I've used my dog as a debugging duck while slamming my head against the wall trying to set up Jupyterhub servers on AWS...this might also literally be true",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
harewei,1,"That’s a research scientist, not the general data scientist.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
VooDooZulu,1,"Its the difference between a scientist and an engineer. That is the same for any profession with that distinction. Scientists focus on exploratory research, engineers focus on implementation. Of course there is overlap, and a person trained as a scientist can do the role of an engineer and vice versa because their skill sets are very similar. But if you are talking about the duties of a job, a scientist's duties *should* be about research, while an engineers *should* be about implementation.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
lightwhite,31,This is sent shivers up my spine and sparked joy all at the same time :D,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
MadCervantes,15,One is a scientist the other is an engineer.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
2blazen,20,">One is a scientist

Are they though? (Usually) they just find optimal software solutions to challenges by writing computer code. The only exception is research scientists, but they are quite rare",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
MadCervantes,12,The term gets used very broadly but the core of a ds job should still be using data to test hypothesis no?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
kookaburra1701,3,"Quite a bit of it is exploratory vs hypothesis driven. For example, pretty much all of my work at my previous job (bioinformatician) was figuring out what categorical features of various proteins and their amino acid sequences contributed to them having certain behaviors under various conditions, and then using the results on the features I found to guide the proteins the bench scientists were screening. Basically hypothesis generating vs hypothesis testing, because you can get the most bang for your buck of grant money by figuring out ways to narrow down how many plasmids you need to order *in silico* instead of at the bench.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
ninuson1,1,"I mean, that definitely sounds like research.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
kookaburra1701,1,...Yes? Exploratory vs. Hypothesis-driven are both kinds of research.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
tgwombat,2,Which is which though?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
AcidDaddi,10,Me a Data Scientist: “Am I an AI/ML Engineer?”,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
2blazen,5,I just changed my title on LinkedIn after having worked more with software than models since I've joined my company,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
PlacatedPlatypus,2,"Two orthogonal things there, it's largely just theory vs implementation. Any data scientist who studies ML is also an AI/ML engineer. Similarly, any AI/ML engineer who develops new theory is also a data scientist.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Shadiclink,2,But isn't it all math?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
2blazen,2,"It's 10% luck, 20% skill",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
FenrizHasABeard,1,"15% concentrated power of will,   
5% pleasure,   
50% percent pain

... sounds about right",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
artificial_organism,21,"I've been playing around with data science and this has been such a PITA. Why do they need their own python, their own package managers, jupyter notebooks?

Like I get there's some precompiled libraries in there for efficiency but do we really need to reinvent the whole software development ecosystem to do it?",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
TheTerrasque,13,"The problem is that the dependencies are both very specific and they often rely on external libraries.

For example pytorch relies on very specific cuda versions, which have somewhat specific driver versions, and the way you install pytorch is to give python's pip package installer a specific source URL for that specific cuda version, but (iirc) the actual pytorch version for all the different cuda versions are the exact same.

And that's the nice installation. Tensorflow is approximately 3x as fiddly to install, with very very specific dependencies, some that needs either a binary wheel or a full C compile stack with relevant libraries.

Oh, and a few now require rust compiler, because why wouldn't they.

At least docker is now doing pretty well on giving gpu access, so you can just put it all in a container and be done with it.

Edit: and that's the new and improved stuff. Back when tensorflow was the new hotness you had a tf version only working with one specific cuda version, cuda had no good support for multiple versions installed, TF being in such rapid change that minor and even bugfix versions could break code, TF dependencies being just as fragile, and some having somewhat specific versions of python they worked on.

And of course just about every project and tutorial you found was for a different TF version",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
kookaburra1701,3,"Add to the differences in how libraries *of the same version* behave on different operating systems...

[A Code Glitch May Have Caused Errors In More Than 100 Published Studies - Vice.com](https://www.vice.com/en/article/zmjwda/a-code-glitch-may-have-caused-errors-in-more-than-100-published-studies)",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
TheTerrasque,1,Yikes..,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
kookaburra1701,3,"I keep that article at hand for anyone who suggests I ""optimize"" my code by removing all the explicit flags and options that are just assumed to be default behavior. It's not paranoid if your script really is out to get you!",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
ringobob,1,"That seems like exactly the sort of problems devops should help solve in their chosen environment. Now, if they put that all on you, then let them whine.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
H0lzm1ch3l,0,That’s why I studied SE with a highly practical approach first and am now becoming an AI Engineer first,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
theloslonelyjoe,2096,"You want me to code it and plan for deployment, infrastructure and scalability? Are you high? I can barely get it to run locally.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
luishacm,289,"Well... They make me do it, became data scientist/software engineer i just can't deal with the dev ops part (deployment, setting up servers, etc). At least they taught me in the beginning.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
alexanderpas,198,"Just run it in docker.

Seriously, if you come to me with a clusterfuck of legacy code, a database dump and other assorted shit, but you managed to get it running in docker on multiple machines... I will do anything for you if it needs to be deployed in production... Even if it means it has to run on its own VM.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
librarysocialism,131,The next data scientist I meet who knows docker will be the second.  Out of probably a hundred.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
kodman7,103,"Oh shit is my bosses insistence on dockerizing every project secretly turning me into an asset?

Can't have that",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
librarysocialism,36,Or they want to actually run it in production.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
lordcarnivore,3,"Oh God I wish I could run my stuff in docker. I'm only allowed Jupyter notebooks via cyber security policy. 

All the IT guys get whatever they want but because my management chain ends in Operations I have no choice but to run Jupyter notebooks via batch files with windows task scheduler on a VM.

I had to beg for a service account. If I had to go interview tomorrow I don't even know what I would tell hiring managers. ""Please save me!"" comes to mind.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
searchingfortao,18,"I'm continuously surprised by the ignorance of Docker in this industry.  It's a basic tool at this point, so if you don't know it, *you need to learn it*.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
HashBrownsOverEasy,3,Exactly! If you don't know Docker and Git you haven't been taught the actual skills required to do the job.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
poolpog,1,"just curious, how old are you",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
searchingfortao,2,I'm 43.  I didn't embrace Docker until about 5 years ago though.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
poolpog,2,"ok

docker is only 9 years old. although your statement is definitely accurate -- ""it's a basic tool at this point""

i've encountered a lot of people born after, say, 1985, that think docker has \*always\* been a ""standard tool"".

i've encountered a lot of companies over the last 10 years that existed before docker. and speaking as a person born quite a bit before 1985, docker still feels ""new"" to me although I do consider it a ""standard tool""

but it can be difficult for ""legacy"" companies and engineers to adopt docker when there is an existing toolset in place that works pretty well, and maybe docker doesn't add much obvious benefit, and/or the lift to add docker is relatively high.

as such, i'm not very surprised when i see a place not using docker.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
searchingfortao,1,"Heh.  I just realised that because I started my response with `43.  ` Reddit converted my answer to a one-bullet list so it looked like I didn't answer your question!

I can see where you're coming from on that one.  I had a lengthy discussion with my old boss about this a couple months ago.  They still build everything locally bare-metal and then deploy to bare-metal self-hosted servers.  They're a Python shop, so they're bound by the Python version of the CentOS target environment and the Ops people have rules about what packages they'll tolerate on their machines... it's a Pain In The Ass, and yet the dude just looked at me like *I* was the crazy one pitching something as new-fangled as Docker.

I put off using it for years for similar reasons as you mentioned.  I was a Gentoo guy, so I could happily build a project locally with 3 versions of Python and even multiple versions of PostgreSQL to better reflect production.  The idea of building a releaseable, tested image felt like overkill, but once I adopted that pattern, everything that came before feels like working with stone tools :-)",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
poolpog,2,">The idea of building a releaseable, tested image felt like overkill, but once I adopted that pattern, everything that came before feels like working with stone tools

i totally get it

i've been in a cycle over the last 5 years in trying to find jobs where **everyone** is looking for Docker experience, and related tooling (e.g. k8s, openshift), but everywhere I've worked since 2013 had, for whatever reason, not adopted containerized toolsets.

Also, I spent 2005 to 2015 polishing my ""VM"" and ""cloud V1"" skills (e.g. EC2, VMWare) + Puppet/Chef/Ansible. And all of a sudden, no one is looking for that! But also, I don't want to get stuck in some legacy company like you just described.

ugh

But you **must** keep moving forward with skills in this industry or you will soon be unable to find a new job.

But for an ""old person"" like myself (I'm 52), while it isn't exactly *difficult* to pick up new skills, I also don't really *want to* as much anymore.

I lucked into a current job that is at a company currently undergoing a large scale shift from cloud VMs to containerized workloads. A perfect situation for me since I get to learn stuff along with the company.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Tippity2,2,"I can agree that as you age, it can be hit or miss in whether what you pick up is a waste of time. My spouse has been in the same company for 20 years, doing the same function. I would master something, get bored, then jump to another place that had new tools and a learning curve. My experience is all over the place, which makes me attractive to a larger variety of roles. He, OTOH, eventually got promoted to VP as the oldsters retired and now he works 20 hours a week on a crazy high salary. Yes, he has been bored at times, but his experience is so great that he can solve an issue in an hour in what might take his employees a week.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
poolpog,0,">Gentoo

ew",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
searchingfortao,1,"Don't knock 'til you try it!  I was a Gentoo nerd from 2001 through 2016 and I regret nothing.  You get a machine built to exactly your specifications, and you learn a tonne.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
bikeranz,17,"🙋🏻‍♂️

I’m a huge fan of docker.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
librarysocialism,2,Good to meet you Number Two!,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
luishacm,3,"Hey, nice to meet you, data scientist who knows docker",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
librarysocialism,3,Three now - I'm forming a consultancy,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
A_H_S_99,2,This is why 90% of built models never make it to production,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
IlIllIlllIlllIllll,-14,"i couldnt even get docker itself to run on my machine. i installed it, tried to open the docker ide/whatever and i got an error.

why would anyone want to work with that piece of shitty software?",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
librarysocialism,9,"Because I can't run the website from your Mac laptop?

The problem is your OS.  And docker doesn't have an IDE.  I'm assuming since you're using a GUI for it you're using Mac OSX.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
IlIllIlllIlllIllll,1,Windows 10,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
librarysocialism,1,"Gotcha.  Honestly, especially if you're working with Python, just switch to Ubuntu, life will be much easier.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
IlIllIlllIlllIllll,1,"Yeah, I noticed that. Its not something I can decide though. Our IT-infrastructure is pretty locked down, because its in a critical infrastructure sector. 

I even needed an IT admin connecting to my pc to even install docker, I don't have the rights.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
librarysocialism,1,"Ah ok, so you're trying to do data science in a company where the network admins run everything and only know LDAP.  

It rarely ends well, tbh.  Can you run VirtualBox?",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
rm-minus-r,12,"Believe it or not, Docker has 7 million+ users that get it to work just fine. Mind you, it's not the simplest thing to run, but it's far from the most difficult.

If you have any need for ephemeral environments or portability, I'd highly recommend giving it another try!",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,12,"> why would anyone want to work with that piece of shitty software?

Because pretty much everyone but you can run it just fine and it solves huge swaths of enterprise engineering problems? There **are** legitimate things to complain about with docker, but getting it to run locally is definitely not one if you have the slightest idea what you're doing.

Big first year CS student energy lol",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Eulerious,1,Let's face it: if you can't get docker to run you have no business being in any IT related job anyway...,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
IlIllIlllIlllIllll,0,dont tell that to my colleagues,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Eulerious,0,"I'm sure they know, they are just to polite to say something.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
IlIllIlllIlllIllll,0,"ah yes, thats why every project manager tries to get me on the team. makes perfect sense.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
A_H_S_99,2,"They make me package it as an API in docker, they gave me a documentation for fastAPI that I just copy and paste and I start working from there. Everything else with servers and actual deployment is handled by the DevOps engineer, because that the job they are getting paid to do and it makes no sense to me handle the deployment as well beyond merging git branches.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
QwertzOne,331,"That's what I hate about business people or ivory tower architects that sometimes believe that every engineer is capable of everything, so you can throw anything at them and expect from them to deliver complete, quality solution in timely manner...

I was software engineer, now I'm DevOps engineer that also has also some knowledge about architecture and I really understand how complex everything can be and you just can't throw something at others and expect them to understand it. 

There has to be mutual understanding of different aspects of solution. I may don't know shit about AI/ML and I don't need details on used algorithms, but I need to understand how to build it, how to run it, how to test it, what kind of data does it use, what does it integrate with, so I can suggest how we can deploy it, what kind of infrastructure we need, how to scale it and in general how we can improve it to make experience better also for developer.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
nullpotato,93,My org only hires electrical engineers and expects them to code. There are like 3 actual software people and we are doing our best to unravel the flaming spaghetti. Just because almost anyone can write python doesn't mean they should.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
EarlMarshal,32,Consider: Leaving,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
uscbutterworth,40,">flaming spaghetti

I'm in this comment and I don't like it",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Tippity2,2,Butterworth filter?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
uscbutterworth,1,"Butterworth syrup.

Less technically impressive than the filter, but tastes way better on pancakes!",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
salty3,11,My comp hires all kinds of people who end up writing code but pays them all the same completely disregarding whether someone has a CS background and prior coding experience or not. Let's see how that will work out for them,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
kookaburra1701,3,"I love our software engineers - I'm part of the subject-matter expertise side of the operation, and they are so patient with us when our prototype code is being handed off, and always willing to do code reviews and teach us things.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
TheTerrasque,2,"Yikes. Python is probably the worst language for a group of inexperienced developers. 

I love python, but it's one of the languages that require the biggest discipline to keep a project from turning into flaming spaghetti",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
nullpotato,1,You aren't wrong. I setup linters on the repo pull requests so they can see what would be compile errors in other languages. Someone complained about their PR having too many change requests so manager said we need to stop expecting perfect code. Our response was when it runs without unhandled exceptions we will approve and that quieted them down.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,1,Electrical engineers usually know how to code. I’m a electrical engineer working as a software engineer and a lot of colleagues are like that too.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
HashBrownsOverEasy,1,Sounds like a headache. Could you simplifiy it by giving them boilerplates and a common API to use?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,130,"See also: people who think the manager is supposed to know everything subordinates do, and managers who think they know everything their subordinates do

totally different roles and if the team works better without management than with management, oh boy",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,35,"I would say the best managers come from the trenches, though. The manager should have a strong understanding of at least a good percentage of what their team does, at least in the abstract.

Managers who have MBAs or some shit and no experience doing the work they're managing are pretty much guaranteed to be of negative value to the team.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
shanereid1,2,"I work in ML, and my bosses boss is one of those people. It's frustrating as hell to be in a team of people with PhDs, (myself included) and then to be lead by a guy who clearly hasn't got a fucking clue what he's talking about. It's embarrassing frankly.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,1,"I love conversations like, ""Let's do X"".

""That's not possible.""

""Well, let's give it a shot.""

""...""",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Tippity2,1,"I think the ones who know how to manage up line and deal with politics are the ones who end up managing others. So sad, too, because a lot of real work is not done while trying to avoid the ignorance. Sometimes I feel like my job is best described as “chasing weasels all day.”",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,4,"I don't think that it's necessarily true that each of the best managers will come from the trenches of their respective field, but I do think they will have trench experience and will know when a look means get off the fucking phone

edit: in like the disaster recovery sense, not the micromanagement sense",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
theasianpianist,1,"My previous manager (now my skip level manager) was the perfect example of this. My team's project is essentially his baby that he brought over from the research side of the company and helped build/scale from the ground up. It's unbelievable how much knowledge he retains about so many different areas of our product and industry in general but at the same time, he's not afraid to ask questions and ping people about things that he doesn't know.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,55,"As a former systems engineer turned devops, I feel like generalized skillsets are missing from a lot of devs, and it would benefit many to gain some sysadmin/infra/networking knowledge (basically go find another job for that experience lol). I came up in a time where I had to build the infra for my code, but a lot of projects I manage now as devops have engineers who barely even understand how their own compilers work, or how config files are transformed, i.e. if the IDE doesn’t do it for them they look like deer in headlights.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
wgc123,25,"Same here.  I came up at a time when you had to know how it all worked, and where we were developing a lot of today’s complexity.  I also wore different hats: dev, sys admin, system integration, qe, DevOps, etc (and my current project lost its SRE so I’m apparently that now).  Sometimes a breadth of knowledge is critical and devs can be too narrowly focused 

… for example there was that issue where a file was being transferred wrongly from server to client.  The dev was pulling out his hair trying to figure it out…… he didn’t understand when I suggested fixing the mime type config on the system",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
desiktar,8,"Yea we often have issues with devs who don't understand how DNS works and can't fix a website on the dev servers themselves.  

Then you get the interns who have never used windows before.  Really smart and can write code.  But don't know even the simplest shortcuts and linux might as well be a foreign language.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Gartlas,3,"I...am one of those people. I don't even know where to start learning about it all, but I am pretty junior",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
gokarrt,7,talk to your systems guys. i love it when devs take an interest in that side of the equation.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
bei0000,7,"I really believe this is the right answer to this problem, unfortunately many companies either don’t have a culture that supports this, or don’t allot time for this to be possible.

Being able to sit down with someone for a few hours to cross train may not work towards a company’s bottom line, but it’s so important for personal development.

Someone else in this thread mentioned changing jobs to experience different career tracks, but that’s a symptom of a problem in the industry, the same as having to job hop in order to get pay raises or promotions.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
gokarrt,3,"yeah unfortunately this is a bit of a culture thing at all levels. 

i work for a medium sized shop and thankfully there are very few barriers between teams and employees. also at a personal level i'm never salty about talking shop with our devs over DM or whatever, as long as they're sympathetic that i generally have my own duties and responsibilities to attend to. 

some of our best run projects have been a direct result of devs being involved in the systems side implementation. i've never understood the tendency to close ranks or get defensive over that shit - we're all trying to accomplish the same thing.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,5,This is where devops really shines. Its basically all I do outside of putting out fires. Training devs and being a therapist to IT ops.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
TheTerrasque,1,"Same. Expected to plan the service, gather requirements, build the server, set it up, handle SQL server, deploy on it, maintain it, troubleshoot, update server, add new functionality, handle DNS +++

And my first real dev job was in a small ISP full of old school irc warriors *(literally, some of the first setting up large scale irc bot nets, and one even had a hand in the irc rfc iirc)*, which gave me a rather solid understanding of networking too.

I've noticed again and again that most devs have at best a rudimentary understanding of networking",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,1,"My bosses I learned under were old-school slackware devs who cut their teeth at ISPs. Our company was literally 8 people, and they were just amazing to work under. Got to touch everything in the stack, from building hardware in our datacenter to expanding into very early AWS. Got to touch it all, then was expected to contribute code. They were RTFM bastards and I could never come to them with a problem without doing my homework first. It was the best thing I could have lucked into early in my career.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Tippity2,1,It’s great if you have time to RTFM. Worse if the documentation is poor. But there’s a bazillion new things out there and sometimes I don’t have time to master something first. I know a few inches deep and just enough to get myself in trouble. Deep or wide? I tend to be wide.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Lilchro,1,"I’m going into my masters and I want to learn more about this type of networking, but it is hard to find good resources to learn with. Most classes focus on sockets, DNS, and general theory since that is the extent of what most developers need to know. The bottom line seems to be that most developers will not be in a position where they have to directly work with network infrastructure so it is extremely difficult to get hands on practice with the tools designed for that sort of stuff.

As a side note, one of my favorite assignments was when one class just handed us links to the HTTP/1.1 specification and a guide to working with sockets in C, then told each of us to make a minimal HTTP server and client. At first the task seems daunting, but understanding how these protocols work in relation to the tools most languages give us out of the box goes a long way. Sure I will likely never implement HTTP for any of my future projects, but that understanding helps a lot for other stuff.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Lilchro,1,"I am a masters student in CS and I agree. I really enjoy systems programming, but I can’t say the same for all of my peers. I spend a lot of time using C, C++, and a lot of Rust so if you give me a problem I can be fairly confident that I can create, write, and build a project for it in one of those languages on either Linux or Windows. This is generally fine since not everyone needs to specialize systems programming, but one thing I wonder about is how do I stand out from my peers in job applications? When I am applying to internships my resume won’t look much different from theirs since they probably also took the second year class on systems programming and the class on operating systems. Odds are they also list Linux, C, and C++ on their resume too since they have had classes that required them to briefly use those skills. This frustrates me since if you look at my resume and that of a student focused on web development, the only major difference will be that they also list a ton of web frameworks in their skills. I’m guessing the solution is to list personal projects on my resume, but not everyone will have that. I partly wonder if it would be beneficial to split computer science degrees into more concentrations that better differentiate between these areas.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
librarysocialism,2,The job of an architect is exactly to break the problem up into smaller boxes that individual teams can focus on without fucking each other up.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
CodingWithChad,2,"Ivory Tower Architect LinkedIn a power point of boxes and arrows, so you are ramped up on the project now.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,2,Don't ever report content on Reddit. The admins will just suspend your account for it.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
QwertzOne,1,"Have you ever seen C++ build configurations with CMake? Have your ever used some ML Toolkit like Kubeflow? In case of ML, it's entirely possible that someone knows math well, but when it comes to software engineering, all they can do is use Google Colab or Jupyter Notebooks with Python. However experienced ML engineer should understand more than just math and basics of Python.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,1,Don't ever report content on Reddit. The admins will just suspend your account for it.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Jeb_Jenky,2,"To be fair a lot of AI/ML people probably don't know what they are doing either. They could just be scooting by knowing what algorithms to use for what jobs. It's like how Software peeps joke about copy pasting from Stackoverflow all the time. Even good ML people don't need to write most of the stuff from scratch anymore. But you need to know what everything means at least and how to tweak parameters. Anyway that was a long-winded probably only mildly related reply, sorry.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
xtreampb,1,"I asked a team yesterday (including sre) when this stops running at two in the morning, how will we know? I got a bunch of “that’s a good question”. I asked the SRE if our infrastructure monitoring supported window service monitoring? I eventually got a yes",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Drunktroop,1,"I was in similar situations before. R&D should be packaged and documented their crap decent enough that I can deploy it without reading your actual code FFS. You don't even know how to invoke it in the shell then why would I able to make it to production on two weeks.

Switched job to be an ordinary Java dev and no longer need to worry about that. The beauty of big corp is a lot of crazy shit no longer needs to be solved by me. The solution is there.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Naltoc,1,"I started as a PhD, dropped out (murdering my superviser was the alternative), worked as a full stack dev, then backend, then tech lead/scrum master and now systems architect. The amount of colleagues that cannot code if you put a gun to their heads is staggering, and their work shows it. Beautiful diagrams, not a snowflakes chance in hell it will ever translate into prod.

Things like architect, scrum master etc really should come with a hard requirement of having put in time in the trenches or you end up with something like a WWI officer who has no idea what the fuck is going on.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
SassyMoron,1,Those people are why you get paid lotsa munny tho,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
xeroze1,28,"Then the request goes to a data engineering team which assesses it, and give a timeline of a year or two for the fully scaled version because the whole thing needs to be reworked

Everyone goes full surpised pikachu faced",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
bikeranz,17,"Being on the research side of AI myself at a few different companies, I've found that the cost of having your researchers write production code far exceeds that of letting them hack away into some unmaintainable mess, due to lost productivity. In particular, time-to-result is king with research, and building clean code and structures really can be the antithesis to TTR because “that idea you had that would have to cross 7 layers of production code so that you can provide feedback from your loss function to your data loaders” is much harder to try out with clean code.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
dr-tectonic,13,"Soooo much research code is run once, ever, and does not warrant heavy-duty engineering.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
bikeranz,3,Exactly!,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
gdmzhlzhiv,1,"This is why those of us who want to write production code who have only research projects to reference often find ourselves tearing our hair out trying to figure out how to run it, or in some cases how to read it.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
BobHogan,4,"The problem comes up when management (or even worse, the research team themselves like what happens at my current company) then insists that their garbage is the only possible code that can be deployed in production, and then the actual engineering teams have to waste resources trying to figure out how the fuck to support it and fix bugs in it",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
bikeranz,3,Just threaten them with PagerDuty if they’re not willing to hand it over. They should scatter like mice to light.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
BobHogan,1,"Its unfortunately not up to me :( upper management has decided the engineering teams have to support their mess. They get to do what they want, even up to having forced one of my teammates to include an expensive API call in a hot routine whose results just get ignored. He proved to them that the data they want to get/calculate there cannot be used at that point in the process flow and will be irrelevant and outdated by the time it could be used and they went above our managers head and forced him to include it anyway because ""that's how we do it while we are developing this and if we change anything we won't know if it will work anymore""",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Tippity2,1,Sometimes you have to just remind yourself that you’re there for the paycheck. And sometimes a stupid thing is purposely done to prove an idiotic point to an unnamed person or team.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
feedmytv,1,"shitcode gets it done, intime",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
G420classified,1,Prolly joking but if you aren’t maybe it’s time for a career switch,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
athos45678,1,"Lmao my entire job right now is workin out how to make deployment of dl less obfuscating, and this rings so true",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
WhereIsYourMind,1,"You jest, but the responsibilities you just listed are my dream job.  I've long understood that I don't have the patience to be a data scientist, but I studied enough to be fascinated by the underlying math and the architecture of its computation.  The challenge of building DALLE-2 as SaaS is much more interesting to me than the GAN behind it.

Maybe I'm weird, but we sit in caves pushing buttons to make the tiny lights in front of us change color.  We're all weird.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
smb_samba,1,"6 months later 

“It doesn’t run on our infrastructure…”

Well, it runs on my computer!",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,434,I've had this conversation so many times.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
2blazen,213,Well then you should work in Python instead of Jupyter Notebooks when it's not just exploratory analysis and you actually want to run it/test it/make it reproducible,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,334,[deleted],2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
c0d3s1ing3r,79,">non-linear

Bruh",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
TheLexoPlexx,15,"Prime numbered cells First, then the remaining even, then the odd ones dividable by 4, then the others.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Psychpsyo,7,I love odd numbers that divide into 4.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
TheLexoPlexx,1,Oops,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
2blazen,70,"Wait, DevOps is supposed to do **that**? I always thought they just work like 2 hours a day doing CI/CD and Docker stuff",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Dannei,28,"No, a separate operations team is literally the opposite of DevOps. The idea is that every team is responsible for developing (Dev) and managing the operations (Ops) of its software, as a single unit, rather than throwing code over the wall every six months to some distant operations team.

There may well be a need for teams who specialise in infrastructure or other cross-cutting concerns in the background, and specialists who can help provide specific expertise as needed, but a team shouldn't rely on another team to get their job done day to day.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
fardough,16,"Yeah, but DevOps is also a discipline and often a team.  Their responsibility typically is all the tooling and services that enables developers to follow devop principles.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
TheOriginalSmileyMan,5,"That's how it's ended up, but it's reductive and should be avoided.

source: my job title is Head of DevSecOps and my job is explaining this to people 10 hours a day",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
tgillet1,1,It’s reductive to have a team responsible for setting up the infrastructure to enable other teams to do their jobs? Is every team supposed to reinvent the wheel setting their own unique processes and infrastructure? Am I misunderstanding your point?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
TheOriginalSmileyMan,4,"It's reductive for them to be a separate team, because that way lies the bad old days of silos. A good rule I learned ""pronouns mark your silo boundaries"" which is a fancy way of saying ""avoid having a 'them and us' situation.""

My point is that you should absolutely have specialists in solution architecture, writing tests, writing code, writing integration pipelines, ensuring security and supporting operations. 10x full-stack developers are perfect for your one-team startup, but they don't scale and nobody could afford a whole building full of them anyway.

But what you should strive to do is, for the purpose of delivery, keep all of those people together in a functional team, and make sure everyone in that team is jointly responsible for the whole product or feature from architecture to running in prod.

Now in a large organisation where you might have dozens of people with those specialisms, it makes sense from a career development and person management point of view to group them together, and that's fine. But don't make the mistake of turning those groups into your delivery teams, because they you're in silo land and your SDLC is going to grind to a halt.

Hope that helps! Bit long and unfunny for /r/ProgrammerHumor but you did ask...!",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
tgillet1,2,"Gotcha. That makes sense. 

This is really a “yes, and” situation. In my recent experience having an infrastructure and support team for devops was highly valuable, but the idea that they could or would fully develop our DevOps system wouldn’t make sense to me. I learned enough to get started until we could add some more experienced folks to my team. Granted, my team is R&D for new capabilities so we didn’t have as much of a need to start with those folks embedded. In any case I strongly agree that our team as a whole needs to be responsible for producing a deliverable (prototype) product, and the better each team member understands the roles of the other team members the less friction there is in achieving that.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
TheOriginalSmileyMan,2,"Top tip - naming them ""delivery teams"" really helps a lot. The power of language.

Who do you work for? Delivery Team Alpha. Who's your line manager? The team's Delivery Lead. Who's her boss? The Head Of Delivery... it all adds up",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
AuraspeeD,1,"The nodern term for that is Platform, and the underlying teams that make it function. 

The platform is what developers push their products onto.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
fardough,2,"Yeah, that is a good term, though gets confusing when your product is a platform as well.

But in the end, I feel someone has to plan to make DevOps a reality and there is a fair bit needed to provide devs to make it function.  I feel often that team gets called DevOps.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
-tehdevilsadvocate-,20,The one I know does...,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
DullSpoonsHurtMore,2,">a buggy, uncommented notebook where cells must be ran in a specific, non-linear, unspecified order for the code to work

Are you me?",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
jamesvoltage,1,Which of my untitled notebooks that are not in a GitHub repo was it saved in?…,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Dannei,1,"A DevOps team that gets code thrown over the wall, rather than developing, and is left only doing Ops?

What you've got there isn't DevOps, I'm sorry to say.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
TheTerrasque,1,"If you ever see a devops guy coming your way carrying a clue-by-four, run!",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
flavionm,1,That sounds like a Ops team.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Linsorld,1,But what if everything I do is exploratory analysis until it's too convoluted to be worth transforming into something productive and useful?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
dlevac,728,"DevOps engineer is a hat I always end up wearing at some point or another. The real joke is asking the dev how to run it...

Dev: my build does not pass the pipeline but pass locally.
Me: and you are using a virtual environment?
Dev: ???",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Sam-Gunn,359,"It's like asking certain people ""windows or OS X""?

""What?""

""Mac or Windows""?

""Uhhh""

""Dell, HP, Thinkpad?""

""Ohh, it's a Dell!""

""Windows it is then. Now, round start button, square start button and is it colored or not?""

\--

""Virtual machine or container?""

""Huh?""

""\*sigh\* Docker, Virtualbox, or Vmware Workstation?""

""Ohhh, I've heard of Docker. But it's none of those. It's called Docksal.""",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
yumyumfarts,110,Are you sure you talking with dev and not management or operations folks!,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Chrisazy,19,"They're talking with a head canon. Which same, tbh",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,10,[deleted],2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
gdmzhlzhiv,2,"QA are often a bit like that. You'd think they would know their way around a computer, and then you spot one asking in Slack what Windows 6.2 means.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Tippity2,2,"I had a management guy chastise me because the new embedded CPU “supported Windows.” No, it doesn’t. Yes, it does. Finally, after a lot of back and forth, I had to explain Target vs. Host and that the *Host* is what the manufacturer claimed supported Win. And it was sooooo delicious, bc the guy was always trying to show that he knew more than I did. I really, really, do not look like a typical engineer. Knowledge, skill and experience trump everything. The look on his face was priceless.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,2,Some devs don't recognize anything outside of the IDE,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
flavionm,1,You'd be surprised...,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
librarysocialism,12,"but I put Pop! on my Dell.  Yes, I understand I'm now my own support . . . .",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Meskoot,1,"I put Tumbleweed on my Lenovo, only used Windows in my life and tested out PopOS! once for a day, I guess we all just have to do something crazy eventually.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
hedgehog_dragon,2,"Wait what's the difference between a virtual machine and a container? I understand VMs, but my understanding of Docker is fuzzy at best.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
JivanP,5,"A VM runs an entire operating system, so it has to emulate everything except the hardware. A container shares the same kernel as the host OS, using an abstraction layer for system calls if necessary. (Wine for Linux works similarly to a container in this respect; it just converts WIN32 API procedure calls to Linux kernel system calls, and lets the host OS handle the rest.)",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
SubParPercussionist,2,"A container is more lightweight. The short eli10 of it:

- A VM emulates starting at hardware level and a container emulates starting at the OS level. 

- A VM creates a whole machine, a container is more so an ""environment"" within your machine.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
lavahot,1,Excuse me?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
IQueryVisiC,82,Thank to IOC framework you don’t need a VM . Or what does a VM do differently?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
jdl_uk,56,"The IAC framework might create the VM. 

If you dig deep enough into Azure Functions, you'll find Docker

Edit: IAC, not  IOC",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
PG-Noob,26,"Docker isn't a VM tho, right? As I understand it, the linux containers are quite a bit different from Virtual Machines.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
jdl_uk,51,"Depends on how you define a VM. If you think VM implies something like VMWare, Virtual Box or Hyper-V then you're right but remember the JVM (Java Virtual Machine) exists. Yes it's different, just don't take the term VM to mean a single specific type of thing.

I consider docker to be a kind of virtual machine, it's just that the virtualization happens at a different level than with some other types.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Diniden,39,"Virtual machine does have a very important distinction to the concept of containers:

A VM will run a guest operating system and abstract the hardware. 

A container is a sandboxed portion of the host OS of the container on the machine.

They accomplish two very different goals.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
ChainSword20000,8,"A virtual machine is a container, not the other way around. A virtual machine has to run the code in a contained environment to function properly, but a container does not have to emulate additional/different hardware. A vm can serve the purpose of a container most of the time, but a container distinctly cannot serve the purpose of a vm.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
jdl_uk,3,"So where would the JVM fit into your definition?

Don't make the mistake of getting hung up on the definition meaning only full-fat VMs like VMWare or Hyper-V",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
99DogsButAPugAintOne,6,"Went looking for a consistent definition of a virtual machine, came back with 10 different definitions/explanations. 

Apparently the only consistent throughline is it uses software instead of hardware to run an application. It virtualizes a machine. Who would have thought!

After reading Wikipedia I think containers qualify as a process virtual machine.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Diniden,4,"No they do not. Docker containers are still bound by rules associated with the OS they operate under. There has been efforts to seamlessly integrate say a Linux VM underneath Linux containers to run on windows, but the containerization portion is specifically for the sake of setting up a uniform software environment within the hardware and OS it runs on. 

Containers at their heart are not platform independent. It is the platform the container runs on that attempts to make the container run platform agnostic. 

It’s very nit picky sounding, but it has big implications for how the underlying tech operates for a docker container vs a VM. It also has big implications for “why did my deployed container asplode?!”

You can’t mix the two up or you’ll remain confused.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
99DogsButAPugAintOne,1,"Like I said, 10 different definitions. I'm not the only one confused. 

But you have a valid point. If platform independence is a requirement then containers don't qualify, which Wikipedia seems to agree. The JVM still qualifies.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
jdl_uk,2,">Went looking for a consistent definition of a virtual machine, came back with 10 different definitions/explanations. 

... Yup that's kind of my point

>After reading Wikipedia I think they qualify as a process virtual machine

Indeed it does",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
PhoebusQ47,3,"While the JVM calls on the more generic concept of a “virtual machine”, the useful distinction between containers and VMs means that in everyday usage “VM” means something more specific.

Botanically a tomato may be a fruit, but culinarily it’s a vegetable and that’s the more useful everyday definition. Saying “containers are VMs because so is the JVM” is willfully missing the point.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Diniden,1,"Found this from a google that explains how the jvm fits this definition:

Being a virtual machine means the JVM is an abstraction of an underlying, actual machine--such as the server that your program is running on. Regardless of what operating system or hardware is actually present, the JVM creates a predictable environment for programs to run within",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
hedgehog_dragon,1,"Oh, is a Docker container basically a cordoned off copy of the host OS then? 

Say I've got some Linux OS and run Docker on it, I've got a copy of the same OS to work with
Vs. a virtual machine, which is mocking up hardware so we can run, say, Windows (or anything else, even the same Linux) on the Linux machine?",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
_PM_ME_PANGOLINS_,1,"Yes, VM has multiple meanings, but Docker isn’t any of them.

It’s a container system. Just like systemd only more bloated.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
noobtastic31373,21,"In general infrastructure terms,  a VM usually refers to virtualizing the hardware so multiple OSs can run on the same physical computer. Containers are up a layer and virtualize the OS so multiple software environments can run independently on the same OS.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Diniden,11,"This is a good summary of the differences :)

They are indeed two very distinct approaches. 

VM - virtual “machine” virtualize the hardware

Container - virtual “OS” virtualize the environment",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
IQueryVisiC,1,"Docker can has virtual IO. Drives which you only see in Docker. Our Hyper-V had a problem with a device driver. I feel like IO is the difficult virtualization .. for the CPU intel and before that IBM did all the hard work. IBM had working virtualization in the 70s and intel f\*\*ked up their 286 ""Server CPU"" in the 80s . Okay, 386 came in 1987 with full virtualization support ( for OS and memory ). I think Motorola had to break some compatibility in their 68k ISA, but the 68030 had full virtualization support.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
nostril_spiders,2,"I think you guys mean IaC, otherwise you're doing it wrong",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
jdl_uk,1,Good point,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
IQueryVisiC,1,">IAC framework

No I mean IoC because my code only interacts with the injected interfaces only. The IoC framework then decides what classes and indirectly what hardware they really represent or if it is fully software emulated, probably with hardwired test data.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
TommyTheTiger,8,"Virtual env in python does not mean VM, it's referring the the default requirements.txt and installing lib dependencies with [this](https://docs.python.org/3/library/venv.html)",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,15,"I think they're talking about python venvs, which isolate the package manager's environment, because that shit can get super messed up.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Thebombuknow,2,conda ftw,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
TommyTheTiger,3,Poetry ftw,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
iKeyboardMonkey,1,Nix ftw,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
IQueryVisiC,1,"The one [asp.net](https://asp.net) core book I read used IoC for these environments: dev, stage, prod.

For packages we use nugget. Until now I could always solve version conflicts, but I think starting with core .net allows you to import multiple versions of a package in different parts of the dependency tree .. transparently. No mention of the word ""environment""",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,8,Wait do people actually not know what a virtual environment is or is this hyperbole,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
SaucyMacgyver,7,No idea but I’m guessing a lot of people don’t think to run their code in a VM because they just kinda don’t care or realize why you should.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
The_Cheeky_Cunt,10,If you don't mind could you explain why you should run your code in a VM?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
SaucyMacgyver,17,"I mean it depends on what you’re doing obviously but put very simply not all machines are the same. So your code could run locally and then when you stick it on another machine it doesn’t run, maybe it runs but does something different, or maybe it blows up your data center. Who knows, but that’s the thing is there shouldn’t necessarily be a question mark when you run something. Running code in a VM that’s basically a recreation of the same system that you’re going to put it on eliminates (really just reduces) the variance you might run into when running on different machines. By building it in a replica you know it will fit so to speak. 

It’s like you’re building a desk in your house, and it fits in your house. And it’s a great desk. Then you finish and bring the desk over to the client and it doesn’t fit in the house. Not necessarily because the room it’s going into doesn’t fit the specifications maybe, but maybe it’s physically impossible to get it up the stairs and your house doesn’t have stairs.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
TheTerrasque,3,*docker evangelism intensifies*,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,0,"Wait, is there a difference between a virtual machine and a virtual environment?",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
antonivs,5,"""Virtual environment"" is a broader, looser term, but for example Python supports [virtual environments](https://docs.python.org/3/library/venv.html#venv-def) that are not VMs.

""Virtual machine"" is also a bit ambigous - e.g. the Java Virtual Machine (JVM) is not the same kind of virtual machine as say Virtualbox, Parallels, or KVM.

Usually the specific meaning is determined by context, although of course you need some background knowledge to be able to do that.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Illin-ithid,5,You tend to make changes on your own computer that wouldn't exist on others. Maybe your program monitors gitlab repositories and has always worked locally because you already had local requirements setup before programming. But then you deploy and you realize it was using your personal environment variables which the VM doesn't have.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
antonivs,3,"VM is not the only option: VMs, containers, and even something like Python virtualenv all overlap in part of their purpose, which is to insulate your code from quirks of your local machine, to ensure that it will run unchanged in other environments.

Containers are very good for this purpose, but for complex systems you may have many containers, and it can start to make sense to use a real VM. In that case part of the point is to avoid messing up your local machine with a complex infrastructure platform, especially if you're working on more than one project that may conflict with each other.

In summary, the point is to isolate the system being tested from your local machine, and vice versa.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
d4nowar,2,"It's more isolated, you can construct and tear down your VM to your exact specifications whenever you want, and there's snapshots.

Those are my three big reasons.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
RaspberryPiBen,3,"A virtual environment (venv) is not the same as a VM. A VM is a virtualized computer, while a venv just separates the libraries from the globally installed libraries.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
CodingWithChad,1,Data Scientist has a PHD and wrote a white paper.  So it works in theory.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
pseudouser_,1,Wearing that hat so many times as a data scientist is the biggest reason I ended up being an MLE. Not sure if it was the right decision though but at least it’s more fun.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Anxious_Ad9233,350,"I run my code like every developer: I press the Build button on Jenkins and wait for my 300 lint & SonarQube errors to harass me via cooperate email.

Edit: the funny part is… I’m the lead DevOps engineer and I write the linting and sonarqube conditions 😈 get rekt devs, only clean code in production",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
dirtyLizard,118,I once got a ticket from a PM saying that the build button wasn’t working. He wasn’t clicking “ok” on the “are you sure” prompt.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
yumyumfarts,59,Why is a pM building code?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
ryanwithnob,12,"If PMs and customers run it in visual studio, its easier to reproduce bugs",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
xMoody,5,Why would they do that instead of running it in the test environment? Bizarre that you’d have a scenario where your customer needs to see or do anything with the code.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
ryanwithnob,4,"Even though you didnt pick up on the sarcasm, you are right. Heres an upvote",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
xMoody,3,"Dang, fair",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
often_says_nice,2,I once had a PM lose a contract because when he was demo’ing the software he was fully zoomed out in chrome. He said the new build has a bug and was unusable,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
richardathome,7,"I worked in a place like that once.  


Once.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Koervege,2,"I have to constantly ignore failing tests so sonarqube actually shows coverage. I don't like my job, and i just got a 5% raise. Already looking for options",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
amihaic,2,"> get rekt devs

😂",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,1,@SuppressWarnings goes *brrrrrrrr*,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
gdmzhlzhiv,1,If only SonarQube's checks resulted in clean code.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Anxious_Ad9233,1,You’re right! But Me + SonarQube = Clean Code.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
pab_guy,154,"This is why the best devs have deployed and operated their own code, they take more consideration of the operating environment and context, need for quality telemetry and error handling strategies that log everything, etc..",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,38,"We do this. Prod is handled by a dedicated infra / ops team, but our dev environment is set up by us from bare metal up and is a scaled down mirror of the production deployment. It forces us to consider both deployment and architecture from day one (though that should be done regardless) and lets us catch potential issues very early.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
js_ps_ds,9,Deploying other peoples code seems like a nightmare,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Normal-Math-3222,2,Oh it is.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
notAbratwurst,5,"Nah… see, a manager reads a trendy article on DevOps, instructs the team to do the DevOps… and then, since the DevOps is done… best winnings.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,1,Show them a free Azure DevOps account and then get back to what you were doing!,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Chthulu_,4,Jack of all trades master of none though. I spend far more time on dev ops than I’d like to.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
idkidchaha,227,I'm a fairly junior dev and my smallish company (50 people) doesn't have a devops person. What do they do exactly?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Twistedtraceur,342,Deploy and release your code for you. Take care of and update your pipeline. Handle production issues like outages. Manage things like kubernetes clusters and aws services.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Santi838,383,Oh. TIL I’m part time devops,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,177,[deleted],2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Mysticpoisen,108,"My least favorite thing to hear on an interview: ""well, we're *all* sorta like devops here.""",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Symnet,31,"I still don't even mind this (if I'm interviewing for the new devops position, lol) because no matter how many devs you have doing work in kube, they still probably don't know, for instance, why their deployment keeps scaling back up even though they manually scaled the replicaset. Unbeknownst to them, of course, there's an autoscaler that they copy/pasted into their repository when they were googling how to make a kube deployment :P",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Mysticpoisen,29,"In my experience, if *everybody* is devops, nobody is. Telling developers to do devops doesn't make it so.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
gemengelage,20,"In my experience there's like one person per team who does a single devops task once, which automatically turns him into ""the devops guy"" for this rest of the team for the remainder of his employment.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
patrick66,3,"Yep, got annoyed by my teams deployment process, decided to create proper pipelines for all of it and have been responsible for it ever since",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
gemengelage,2,I really want to check in with my old team. I was their inofficial devops guy and I can't imagine any of my old colleagues picking up the slack.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
c0d3s1ing3r,3,I don't necessarily think it's a good thing if developers don't actually understand their tech stack or deployment process,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
imdyingfasterthanyou,11,"""DevOps"" doesn't really mean anything. In some companies it's some dude clicking away on the AWS console. In others the devops team is in charge of managing and optimizing thousands of services/pipelines which naturally requires developing tooling to deal with such volume(me).

Because of this I no longer consider any positions with ""DevOps"" in the title. I wouldn't want to accidentally get myself into an AWS-babysitting role.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
nullpotato,28,Our devops person literally died of cancer a few weeks ago and management said they won't backfill the position so everything is fine.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
EMCoupling,4,Time to get some cancer apparently,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
mkat5,2,"Business “inventions” are always just: “I’m going to save money by making one employee do two jobs for minimal if any raise in pay, hell maybe even less pay on the grounds that they are not a specialist”",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
ColinHalter,4,"In my experience, devops teams rarely do much actual coding for the application/service. They're mostly focused on automation and architecture.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
fardough,2,"I disagree with this sentiment.  To me it is more technology has evolved to where devs can manage ops because they no can control pretty much everything the need themselves.

And I feel there is still often DevOps teams to manage the ci/cd pipeline, overall health, tooling, etc. to make it so devs just pretty much have to code their infra and application.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
notAbratwurst,1,This why we shift left and fire QA as well.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
NoButtChocolate,19,Add to the resume ✅,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
nullpotato,11,I'm full time devops and full time my actual job...,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
marcosdumay,4,"If you don't know who de devops team is, it is probably you.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
bikeranz,1,Avatar checks out,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
SameRandomUsername,1,Often happens in small companies. You end up taking the job without knowing.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,31,[deleted],2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
alexanderpas,10,"> At least at a factory you are kinda free to jury-rig something with mostly arbitrary tools of your choice.

DevOps do the same, just with software tools.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
TheTerrasque,1,Quite. You should see some of the more rube Goldberg'esque build pipelines we have.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
GreyAngy,7,"Perhaps, it is the reason they are [paid better than developers](https://survey.stackoverflow.co/2022/#work-salary)",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Squid-Guillotine,12,I thought devops were like black ops. Like they're the secret devs on the team sprinkling in illegal block-chain/anti-privacy code.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
deux3xmachina,2,"Also yes, depends on the company. I'm ""the devops"" at a startup and a good portion of my work right now is reverse engineering our under-documented products, tools, and processes so we can actually support new OS versions and hopefully speed up the install process significantly.

Also, allow our core product team to release more frequently than every three months.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
hedgehog_dragon,1,Oh. My company has a devops team then - We just don't call it devops.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
llama052,1,I’d prefer to say that they set up automation and platform tools to enable developers to ship their own shit. Versus devops babysitting someone’s code for them.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
PixelizedTed,17,"Like facilities for devs. Instead of keeping the building up and running they keep the dev infrastructure running.

I’m not sure if they all do this but at my old job they “put out fires” aka when shit hits the fan.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,16,"The developer is responsible for adding new code. 

For example, adding a label to a page that says “hello {user}”. They then check in the change, and push to git.


The dev ops team is responsible for pushing the code to production, and rolling back the change if it breaks production.

For example, if the query to get the user name is on an unindexed field, so deploying the change to production causes excessive load on the database.

Splitting devops from development is part of Sox compliance.

https://www.lepide.com/blog/what-is-sox-compliance-and-what-are-the-requirements/",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,2,[removed],2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
AutoModerator,1,"```
import moderation
```
Your comment has been removed since it did not start with a code block with an import declaration. 

Per [this Community Decree](https://www.reddit.com/r/ProgrammerHumor/comments/14kbu1m/comment/jppq9ao/?utm_source=share&utm_medium=web2x&context=3), all posts and comments should start with a **code block** with an ""import"" declaration explaining how the post and comment should be read.

For this purpose, we only accept Python style imports.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/ProgrammerHumor) if you have any questions or concerns.*",2023,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Sloth_Flyer,1,Splitting devops from dev is part of Sox compliance? Wut?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,1,"Ya, first I heard of it was after change management was put in place, for Sox.

That way you have a record of the changes, since devops isn’t* going to push to prod unless they know what changed.

* sometimes they do anyways, of course.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Sloth_Flyer,1,"I mean, what if you just have dev and use something that gives you an audit trail for deployment?",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,1,"That would work, it’s just easier to make sure the audit trail is there is there’s a gatekeeper to production.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
c0d3s1ing3r,3,"(Dev)elopement and (Op)eration(s)

They're supposed to be SEs that neither just write code or just manage servers / infrastructure, but rather can do both.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
drdiage,2,Here you go. https://twitter.com/forrestbrazeal/status/1577298602371809281,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
KickBassColonyDrop,2,"Depends. It can range from:

1. Bossman: ""click these set of buttons for the rest of your career"" 
to 
2. Bossman: ""alright <name>, you've been promoted to the company IT department.""

You: ""what?""

Bossman: ""yup, you.""

You: ""what's my job description?""

Bossman: ""Everything IT does. See you Monday.""",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Dannei,2,"If you're seeing references to a DevOps person, or a DevOps team, then it's likely the example you're seeing isn't really what DevOps is intended to mean.

DevOps is a strategy whereby a team is responsible for both developing (Dev) its software, and managing its day-to-day deployment and operations (Ops). This makes software delivery faster and more reliable.

If someone's speaking of a ""DevOps"" team that receives code from everyone and deploys it on their behalf, they're talking about an Operations team, with a modern-looking name but without modern software practices.

If the team is instead managing common infrastructure, a common software platform, or something similar for the benefit of other teams, then that's probably an Infrastructure or Platform team (surprise!), which may be practising DevOps if it's creating and deploying software, but that doesn't make it ""the"" DevOps team.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,5,[deleted],2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
daguito81,4,"Devops is definitely not supposed to get your code ""production ready"" they have to create the pipelines so that your production ready code goes through its lifecycle in an automated way to production as fast and safely as possible. It's not a debugging team. 

If you forgot to create a setup.py file and your requirements.txt has no versions. And your code accesses sine random environment variable you set locally but didn't document it anywhere. Yeah that's your ""paradox""",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Symnet,15,"lol making your code ready for production means putting it in a package or container and deploying it, not fixing all of your bugs.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
lledargo,0,"They do development specific operations work. i.e. managing systems developers use to develop, test, and release their products.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
nelusbelus,1,Making sure that the devs are admin on the minecraft server,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
js_ps_ds,1,We manage infrastructure and yell at you when your code breaks or exposes shit,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Kerosene8,1,"Devop means different things at every company

Look at the Wikipedia article for the title if you want a laugh",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Xploited_HnterGather,271,Explain the joke for the slow ones like me,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Mr_Engineering,180,The developer has absolutely no idea how to actually deploy the product that he's developed.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Longjumping_Goat790,87,"DA here, deployment is very easy. I just email the model binary or MOJO to someone on the tech team.

Simple as.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
IlIllIlllIlllIllll,2,district attorney?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
SameRandomUsername,2,"It's worst than that, he doesn't actually know why it works.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,181,[removed],2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
OIC130457,11,AWS Lambda devs: 😎,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Asteriskdev,397,"He's basically saying ""Well, it works on my machine.""",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
IsGoIdMoney,136,"If it's in Collab, doesn't that mean it works on all machines with modern web browsers?",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Diligent_Bank_543,64,"Well, what is “modern web browser”? :)",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
IsGoIdMoney,39,"I am not an expert on colab requirements, but if you can read the markdown in your browser, then the code runs the exact same.

Also I'm confused as to the application where you need the users to train models themselves that aren't in the org and thus capable of using colab?",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
jimkoons,11,"Collab is bloated with packages you're probably not using for your usecase... Really cool for exploration, prototype but jupyter notebooks/Collab for production? Yikes",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Shazvox,4,\> IE 6,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
VonNeumannsProbe,1,Internet explorer,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Asteriskdev,32,Do any web browsers work exactly the same on all machines that support them?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
rotflolmaomgeez,46,It's kind of like asking if JVM works the same on all machines. At some abstraction point you just have to assume it's true for the sake of your own sanity.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
TheRidgeAndTheLadder,2,That will be a glorious day if it ever happens,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
IsGoIdMoney,10,What types of errors do you envision for the colab environment?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Asteriskdev,9,"I can think of a possible answer, I'm in no way saying it is probable.  I can envision a browser being cross compiled for both a little endian and big endian machine having a byte order translation bug that may only show up as a data race at seemingly random intervals, months or even years apart, even surviving releases.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
trent_33,4,"Oh, hello there Satan",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Asteriskdev,0,"More likely though, it would probably be due to the things running an that machine that aren't web browsers.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
IsGoIdMoney,7,"When you run colab it runs jupyter on Google hardware though, unless I'm misunderstanding something. The entry point of web browser being able to let you interface with Google hardware seems like the only possible failing point other than your computer just crashing which is a problem for anything, no?",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Asteriskdev,2,"Not just crashing, it can be more subtle, but yes this can be a problem for anything including a browser interfacing with Google hardware.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
2blazen,3,"Anything but, once you want to store/load data or other scripts and not just run a single notebook",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
maxoutentropy,2,The back end on collab gets run on some sort of vm at google,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,1,IIRC most production servers do not have web browsers installed.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Funtycuck,1,I mean depending on the ml package it might not work in colab really either.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
IQueryVisiC,15,"I thought the programmer does not even know how to run it locally, but is back to terminal and mainframe",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Asteriskdev,3,"I was using it as an analogy, but my dev environments usually reside on my local machine.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
IQueryVisiC,1,"And that's the way! Once we set up VMs with MS Dynamics NAV on our local machines. I could work while the network was down. Then: React, also local. Great! You know what: With local we had unit tests. Coincidence? I think not!

In one team people did not know how to use version control and thus chef forced them to work using remote desktop all on the same computer (did not distribute SharePoint licenses nor Windows Server license). NAV was fun that way too: Shared Database and code stored therein. The moment you save your code, you get a collision warning: ""Another user has changed this record set"" . I think it refers to line numbers? NAV does not show them, but under the hood everything has an ID .",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
orangina_it_burns,5,It works on my machine! Throw it over the wall! Let’s go for drinks!,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
phaemoor,2,"""Well, if it works on your machine, why don't we put your fucking laptop in the datacenter?""",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Intrexa,106,"""Nice car, how do you start it?""

""With a signal that operates over a radio frequency that implements a challenge response that tells the car to turn on""

""No, I mean, how do you start your car""

""Oh, from my house about 5 minutes before I need to leave, so it has time to warm up""

The answer we're looking for is:

""With this button on this key fob.""",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
MushroomNervous,2,This is an incredible inversion of the meme in the post 🤯,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Mantissa-64,95,"Jesus christ all of the other answers are clearly from people who aren't data scientists or devops people.

Google Collab is a development environment. Think of it like Google Docs but for ML-focused python code.

All applications must be deployed to run on a server, a container in an Kubernetes cluster, a VM, a set of serverless functions, or some combination of the above.

The joke is that data scientists have their heads buried so ass-deep in the machine learning and data, combined with a general lack of knowledge regarding infrastructure and deployments, that when you ask one ""okay how do customers actually use the machine learning,"" you get a shrug, an email containing their code, and a very strongly implied ""i don't know what HTTP stands for, you think I fucking know how to do that?""

This is a particular issue with data scientists because they're almost always from an academic instead of industry background. All theory, no application.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
BeerDude17,21,As someone who always coded as a hobby and never had to worry about doing anything non-locally and who is also extremely confused about how to implement any code. How do I go about learning all of that?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Mantissa-64,16,"It's a rabbit hole haha, the easiest answer is ""work for a client,"" you'll learn whether you like it or not.

A more practical and accessible answer is probably to try and deploy something for yourself, to get there you'll need to learn all about infrastructure.

I'm web developer by trade, so this isn't the only way to ""deploy"" software- Deployment is any act which gets it into the intended users' hands. So deployment could also mean distributing a Windows installer or releasing a game on Steam.

But, for web deployments, if you want to learn, start by getting the application up and running on your computer, obviously. So you should have one or more HTTP servers running at different ports, i.e. frontend on localhost:3000, backend on localhost:4000, etc.

Then grab a free tier account such as on AWS or Heroku, and start jumping through all the hoops necessary to get your app running in a hosted environment. You'll end up learning about VMs, hosted containers, possibly Kubernetes, domain names and DNS, proxies, the works. All of these things are largely necessary for cloud hosting.

You can also go a little simpler by grabbing a raspberry pi and trying to use that as a webserver via a combination of port forwarding and DNS configuration. But that's the less industry-relevant route, though just as fun.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
BeerDude17,1,"Hummm, I see, I understood partially the comment haha. Some of the words I still don't know yet. I already have some notion of network protocols and such, just the basics, same thing goes for VMs. Guess I should start testing now right? 

I'm mostly interested in industry deployment tho, since I intend on working on a dev team not much into the future, does testing on a VM help with that?",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Mantissa-64,5,"""cutting edge"" in industry is definitely managed Kubernetes clusters like RedHat OpenShift, combined with serverless stuff like Lambda, and continuous integration with something like GitLab pipelines.

It's all useful knowledge though, you'll have to know what a VM is and how it works regardless.

I recommend getting started with Docker and docker-compose files on your local machine. A lot of that knowledge will transfer to other stuff.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
BeerDude17,2,"I see, you're not the first one to mention Docker, guess that's the best starting point indeed! Thanks :)",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
bhison,1,"sure I can deploy

`$ vercel --prod`",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
HorrorMove9374,1,"You mention Heroku, and it’s worth calling out that there is increasingly have the option to intentionally and deliberately NOT do DevOps. That was the idea behind Heroku, and Render (the company I work for) carries that forward.  Our goal is to abstract away as much of the DevOps as possible…so kinda to make the meme true :  D 

good advice in this thread about getting started with Docker to get some applied foundational knowledge.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
youareright_mybad,1,"I am a data scientist, at my first experience in a company.

What I am doing is coding in a docker container (starting from the Ubuntu image), putting the program in a .py file once I am done with the jupyter notebook.

I thought it would be enough for dev/ops.
Does it make sense? Or should I do something else?",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Mantissa-64,2,"I mean, the right answer is ""ask your devops team + lead architect and they'll tell you what to do""

General practice is not to _code_ in a docker container, although you can if you choose, there's nothing wrong with it. Just bear in mind that docker containers are very ephemeral and it's quite easy to lose what's inside of one unless it's stored in a volume. Best practice is to track stuff like that in Git on your machine, unless you _need_ the Docker container for some reason.

The ""normal"" workflow is code collaboratively in a git repository, and have some kind of CI/CD pipeline that automatically builds and dockerizes your code to deploy as some kind of application. In this case a Flask/Django service makes the most sense.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
youareright_mybad,1,"Thankyou a lot! Very kind of you:) I will ask them for sure.

I see your point. I use to code on docker because I am a student and have to follow a lot of courses, I keep having to install/uninstall programs and unusual libraries, and I feel safer to do things separately for different courses. I use git from outside the container, synchronizing the volumes with the shared repository. Probably there is a more clever way though.

I will try to read something about Flask and Django as well.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Nmanga90,29,"Oh Lordy… 

You are better off getting a degree than asking here. There is so much fuckin information that’s not related to code at all. And regardless of if you’re devops or what, everyone has to have a little knowledge of the systems we’re using in order to work with them.

Learn unix, learn networking protocols (TCP/IP, HTTP, Ethernet) learn about environment variables and virtual environments.

There’s a lot of stuff that separates the ML engineers from software engineers",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
BeerDude17,17,"I... Uh... Almost have my degree already... They just never really went over that in college for some reason :/

I'll try to follow the advices I get here tho, thanks! :)",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Mantissa-64,15,"CS degrees are hit or miss... They don't go over this at my university either. Lots of universities also don't teach you how to organize code.

I think the most common ""junior syndrome"" is being able to explain to me in agonizing detail how quicksort works but being unable to, say, submit an MR/PR, read a diff, use a debugger or comment their code sanely.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
psycho_monki,3,"oof this hits home very hard, im almost through my degree and trying to keep up with the degree and learning stuff out of classes that will actually help in employment / is actually used in industry plus trying to get internships and trying to have a social life is making me go crazy :\`)",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Nmanga90,6,"Damn thats tough. If I were you, id grab a popular networking textbook, a popular operating systems textbook, and a systems programming textbook and give those a skim. You dont need a shit load of knowledge on the subjects, but you should definitely have knowledge on the important components of each one.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
BeerDude17,2,"Well, guess that's a good idea, books are quite useful overall as a learning source, thanks :)",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
feedmytv,2,"its normal they dont explain operations in school as its mostly hyper specific code related crap that keeps changing over time. if you want to devop you need to get a job a linux msp, skip the windows smb msp bullshit.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
GlobalVV,5,I got the degree. I had to learn about all of the deployment and environment stuff on the job.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
SteazGaming,1,"this is the real answer.

You learn through the mistakes of others and yourself over time by observing shit hitting the fan, furious discussions about what went wrong, root cause analyses, bandaids, hacks, and then real solutions if you're lucky.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
flavionm,1,"The degree at least facilitates you understanding these things later on.

Well, some do. There are some pretty bad ones out there.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Dannei,5,"Is learning TCP/IP *really* a useful thing to do in order to learn how to deploy code? Unless you're doing some pretty low-level networking logic, that seems overkill.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Nmanga90,1,"Well when you’re scanning your ports and you see ESTAB , TIME WAIT, etc, it would be useful to know what these mean. But at least at a very high level you want to know what IP addresses are, how they work, what ports are, how they work, what is port forwarding, what are proxies, etc",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
bhison,2,"the real answer is, do a udemy course for one day, tell employers you have ""some experience"" in it, then when you get the job ask others kindly for help and just hope they're not pulling the same grift",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
CHR1SZ7,3,"Set up WSL if on windows, and install docker. Learn and practice common linux commands if you aren’t already used to using the command line. Go through the tutorial in docker desktop and thoroughly examine everything it says, *especially* the example web app it instructs you to download. That is by no means comprehensive, but it should get you to the point where you’ll be thinking of the right sorts of questions to be googling to learn more.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
BeerDude17,1,Thanks dude! I'll do just that then :),2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Bulky-Juggernaut-895,1,Learn docker,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
SameRandomUsername,1,"You have to do it yourself, get into trouble and survive.

I don't know any other way.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
OIC130457,3,"...as it should be.

It makes little economic sense to expect extreme specialists (many of whom spent like 6+ years on a PhD to develop that specialty) to spend a lot of time on generalist tasks.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
beiherhund,3,"> combined with a general lack of knowledge regarding infrastructure and deployments, that when you ask one ""okay how do customers actually use the machine learning,""

IMO data scientists do not need to know this and it isn't really their job, they should be working with engineers to get their model deployed properly. It would help if they have some understanding of what is required as well as the challenges, but when it comes to ""how do customers actually use it"", they should be responsible for knowing how data gets in and how it's going to be made available to the backend or client but that's about it.*  
  
A machine learning engineer, on the other hand, should know a fair bit more about this process and if they can't do most of this themselves, at least be of a much greater help to the engineers who are actually figuring out how to get their model working and deployed in prod.   
  
It's like expecting a designer to do frontend. Some of them can, sure, but it's not expected of most and they don't need to know the details of how their designs get turned into a website or app UI.  
  
*Just to be clear, I don't mean a DS should just handover a Jupyter Notebook to a dev and say ""good luck"".",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Mantissa-64,2,"I fully agree, I'm moreso getting at that compared to a developer or engineer, data scientists in particular seem to be more oblivious to the realities of production. They always seem to take the longest to get work out of development and are always the most reluctant to work with devops.

I say this as someone whose role partially involves data science. To be clear this is at least 25% a self-burn.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
beiherhund,1,"> They always seem to take the longest to get work out of development and are always the most reluctant to work with devops.  
  
I can believe that. At least for me, it's because I know jack squat about devops and I want to try put in an honest effort before bothering the devops gods.  
  
Since data scientists don't typically go down the comp sci path in uni, or maybe only take a class or two, they're often lacking some of the fundamentals when it comes to software development and I think it can trick normal devs and engineers into thinking we should know about X because we do Y, whereas for a dev if they do Y they know X.  
  
So it kind of creates this awkward situation where you can't play dumb and inexperienced and have the devops hold your hand unashamedly because from the devops perspective, we should know what they're talking about and what it is they do. In some sense, it's like how a data scientist might expect a dev/engineer to know more about analytics pipelines and SQL than most do, because from the DS perspective we think ""well they do database and SQL stuff in the backend"" but the application is quite a bit different.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
coldblade2000,19,"If it's google Collab, that means the data scientist is pretty much just running a Jupyter notebook, not an actual .py file",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Fourstrokeperro,0,Maybe he's asking about running the inference while the AI engineer is talking about how the model training is run,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
EnigmaticHam,38,Just send this JSON to this endpoint and go away.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
rsvp_to_life,30,"Data Science in school: ""learn all these super challenging algorithms'
Data Science As a job: ""import python run main.py""",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
stormyordos,22,"Waddyamean ""run my code""? Thought I was paid to write it.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
UberWagen,21,Jupyter notebooks...this was my life for about a year. Trying to deploy some crap somebody spent years building in a dadgum Jupyter notebook.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
ZebulonPi,1,You want some PTSD? Look up “Jupyter Notebooks Netflix”…,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
richardathome,16,"""Can we change the entry point to accept json?""  


""What's an entry point?""",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
MushroomNervous,6,…but seriously what’s an entry point?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
flerchin,51,Going through this rn with our PHds. They literally cannot explain it.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Denziloe,46,"Because they are data scientists, not DevOps or software engineers.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
TheRealMichaelE,30,Just like the devops people can’t explain the complex data science. It’s why we all learn different skills - so at least someone can explain it.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,24,"So you're going through reddit posts with your phd's? Tell me more about your job, please.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Altruistic_Milk_6609,3,Same. Please tell.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
lavahot,2,It's because they don't *know*.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
oj_mudbone,12,You save the model to a pickle file and then load it in your production code at build time. Pretty sure he would know that,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,9,This is me. The data engineer told me to add this line of code to upload to the server. No idea how it actually works.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
MasterpieceOver5510,70,"In all fairness, its the Dev Ops guy's job to run it, the Data Scientist doesn't expect the Dev Ops guy to write the ML, we poke fun at the ""Full Stack"" job postings here all the time",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Jorgestar29,26,"It's the MLOps job to build and test a pipeline to deploy the model and even retrain and redeploy it if the data drifts over time...

I'm the Junior CS guy working with mathematicians and physicists in a ML team... and I'm in charge of everything else that cannot be developed inside a notebook. 

It's more interesting to develop and deploy models with real cameras/sensors instead of tuning hyperparameers and looking at loss curves.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,17,[removed],2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
markhc,35,"(DevOps here)

Sure. It's your job to write the code and my job to have it deployed properly to our infrastructure. But if said code is more than just a couple lines long and has many specific requirements (like specific versions of some obscure library) I expect you to document that somehow, not just send me a single .py file and expect me to deploy that as if our servers are running inside google collab.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
youareright_mybad,1,Is it enough giving you the dockerfile of the container I am using?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
markhc,2,"Yes, usually a Dockerfile is good enough to deploy an application or at least to have to have a decent starting point.

Depending on how the infrastructure is done on your company, the Dockerfile might not even be used but it at least encapsulates the logic for setting up the application and any requirements.

That is assuming you don't have to exec into the container and run some command manually. The logic to run the application should all be handled by the Dockerfile and/or docker-compose imo",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
youareright_mybad,1,"Ah okay, I didn't think about the last paragraph! Thanks a lot!",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,6,"If you can’t tell me how the code is deployed/built/run/etc and what its requirements are, how the fuck do you expect me to deploy it?",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Nmanga90,14,"Dude wtf? You need to at least have a list of required packages for your question answering algos. You can’t just send a .py or .ipynb and be like “teehee we’re done here”

Same vibes as git pull -f origin main",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,2,[removed],2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Nmanga90,6,"Yeah thats fine and a semi competent devops person should be able to deploy your code given a list of dependencies and the code. 

To be perfectly honest, I feel that most development should take place inside a docker container so it can be easily ported wherever.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
SpaceHub,3,"> don't expect a data scientist to write deployment quality codes

It does seems like there are a lot more applicants for data science roles than software engineers, maybe they should start asking for this.

Anyhow, if you write code, why not write clean code? There's no concept as ""deployment quality code"", it's either good code, or bad code, or code that doesn't even work. All of which can be deployed, to different effect.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
youareright_mybad,1,Is it enough to give you a dockerfile?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Nmanga90,2,Ask ur devops guy. In most situations that would be good enough but if we’re working with different GPUs or different CUDA kernels that might be an issue too,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
youareright_mybad,1,Thankyou a lot!,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Denziloe,2,"Yeah this post is cringey bullshit.

It's no different from a backend dev approaching a front end dev and saying ""bUt hOw dO yoU ruN iT??"". Dude, that's literally your job, not theirs.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
JapanEngineer,20,How creepy. Was just watching this show,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
MrsMonkey_95,3,What‘s it called?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
iron7681,8,Mr. Robot,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
MrsMonkey_95,1,thx,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
kyleekol,2,"Same here, literally started the show from the start and watched this episode a few hours ago. I thought Reddit had finally started to spy on me",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
JapanEngineer,1,They probably are. Still gonna watch the next episode tho,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
malexj93,7,`> python run.py`,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
wammybarnut,1,"I had an engineer use django's manage.py runserver command to run their app in production. Luckily, we caught it before we ran into problems.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
adamxi,11,"There's a long way from a Jupiter Notebook script, to production. But some data scientists don't envision that when they develop it.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
gdmzhlzhiv,2,"I use Jupyter notebooks myself, but only during the prototyping stage. Sometimes they end up being checked in, but the code only remains in there as an alternative way to describe the algorithm for someone trying to understand the document.

They work well for the purpose, I just never seem to find a perfect language to write the code in. Have written them in Python, Kotlin, R and Elixir. Elixir has been the cleanest code, but R has had the most useful types out of the box to allow writing something useful. I'd prefer something which has mathematical utilities out of the box but also doesn't look ugly, and I'm not sure the language exists right now.

Meanwhile some crazies actually try to use notebooks in production.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Ewenthel,21,"If developers are deploying code on their own, what exactly are you paying your devops team for?",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
ThatRealMF,4,"For quite a lot of different things actually! They write shared libraries for instrumentation and metric collection, alerting, CI and CD pipelines, IaC and things like that. They try to modularize everything from the infrastructure point of view, so developers can reuse those libraries/modules. They provide a platform on which you can then use those modules. They educate developers on how to utilize given tools at hand and how to run their services efficiently in the production enviroment. In the end, developers are still responsible for their service in every enviroment, but they have the means and tools to run them efficiently with support from “DevOps team”.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Pushnikov,-1,That’s an Ops team.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
leadzor,2,"We don’t have a devops team. We, developers, do the code and make sure the pipeline has the right commands to build, test and deploy the code.

Then we have infrastructure/SRE who maintain and manage all the cloud and provisioning stuff, along with providing the necessary devx services (pipeline provider, dependency and images hub, K8S nodes, secret storage, service discovery, and networking).

We’re actually required as per our job to make sure the stuff runs both locally, on the pipeline for testing and on different environments (and of course prod).",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Ewenthel,4,Then you’re not who either OP or I am talking about.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
bhison,7,Anyone else find this meme impossible to read?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
von_roga,41,"""I have a diploma in web development... I should go into DevOps so I can boss around the computer science degrees with virtually no understanding of what they actually know or do."" 🙂",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
YesICanMakeMeth,36,"Yeah, reminds me of drinking from the fount of infinite wisdom that is MBAs.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
luishacm,16,Wait until I finish my MBA so I can say you are wrong,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
YesICanMakeMeth,7,"Lol, it really isn't all MBAs. The problem arises mainly when MBAs are attempting to manage people who do something they don't understand. Engineering -> MBAs are pretty good. Something similar happens in education with EdD's who have never taught before.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
luishacm,8,"I'm just joking bro, I agree, people in my MBA are insufferable.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
YesICanMakeMeth,5,IK :).,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Altruistic_Milk_6609,4,That was fun to read lol,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
sar2120,4,Your DevOps does all that?! Mine installed Jenkins and said good luck!,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
tomten87,3,"You guys have a DevOps guy?

![gif](giphy|DOPKHQg6oFWUg)",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
ArchWaverley,3,"Me: ""I put the code in this text box, hold control and press enter. Why? Is there another way?""",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
ITSCOMFCOMF,3,"I had a similar conversation with the ML person at my last job. My task was to get ML results through an api. Easy enough. But they had no clue how to tell me to run the code. It was wild. Like, they had their dev environment setup from school, and had never learned how to duplicate it.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
wineblood,3,Data scientists aren't programmers,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
aiitu,3,"Lmaol, this happend today with a Java guy.

Same question.

Him: you use Spring Boot. 

Me: How

Him: with intellij 

Me: Wtf

Him: ohhh, I just zip it and send it to devops team.

Fml .",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
CeladonBadger,3,Reading the comments as a data scientist I feel like I’m either doing too much or being paid too little. (It’s prolly both),2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
yorokobe__shounen,2,"Honestly, I find it easier to do stuff in colab than my local python",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Popernicus,2,Lmao. Them to the themselves (when the data scientist used to be a Devops engineer),2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Z-Zanimuri,2,"Oh shit, this is Mr Robot!",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
1235813213455891442,2,My friend doesn't understand the joke,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,2,With a python interpreter? I don't think I could be any clearer.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
TechNickL,2,"""..... Jupyter notebook.""",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
HalcyonAlps,2,"Jokes on you, our DevOps team refuses to deploy anything else but notebooks.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
pharanth,2,On a project where I was performing both roles I had this conversation... with myself,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Andrewshwap,2,I have been asking my teammates this for the past few months & no one knows how to run it locally,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
batatatchugen,2,"Just ask for a step by step tutorial, with pictures, on how to make it go.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,2,Devops guy gets his own taste.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
poolpog,2,"as a ""devops engineer"" i approve this meme",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
A_H_S_99,2,Docker ftw boys. Learn your basic APIs.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
turningsteel,3,"I’m working on a project now that was previously run by data engineering teams. They shared their code on master branch to our dev team. We asked, “ok but where’s your dev branch and pipeline and stuff?” They said and I quote, “oh, we don’t do that.”.

They just write python scripts and deploy straight to prod! And then mgmt wants to know why my timeline projections are significantly longer than what it takes the data engineers. They don’t understand the difference between that and actual software engineering.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
alcalde,4,"That's the way it should be, like back in the good old days. No ""devOps"", ""anythingOps"", ""data engineering teams"",  ""branches"", ""pipelines"", etc. Just one person. At a desk. With a copy of Delphi. No version control, no clouds. Write, compile, copy binary EXE to a server, done. 

Deploy remotely? I made some floppy disks with InstallShield, gave them to my boss, he drove an hour to the client and installed them. 

And there was no StackOverflow. And yet it all worked.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
turningsteel,3,"Ahh, the halcyon days of yore..",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
awesomeplenty,1,I had to teach a Java engineer to upgrade the sdk to support new classes…,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
aciddrizzle,-3,"90% of Data Scientists are garbage programmers with pretty charts in tow

Change my mind",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
jasdfjkasd,21,90% of data scientists are just overhyped data analysts,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
luishacm,-1,"Sure, that's why they are paid double of a software dev.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,1,[deleted],2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
luishacm,1,"Well, in my country even afjusting is almost double at any level",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,1,[deleted],2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
luishacm,1,How much is the difference in the us?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,1,[deleted],2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
luishacm,1,"Yeah, same as my country. There isn't a data scientists undergrad, usually they are social sciences, economists, engineers or computer scientists that worked on their fields and then made a master in data science then changed fields, but is basically the same salary but in my own local coin. Only soft dev will make ranging from 70 to 150k a year, in a good company will go up to 200-220k. Data scientists go up to 400k a year (not in dolars).",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
VonNeumannsProbe,1,I could be a garbage programmer with charts.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
psilo_polymathicus,1,This is my life right now.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
enano_aoc,-15,It is for me very hard to imagine a scenario where I would like to hire a Data Scientist or AI scientist instead of a software engineer. I would always prefer a professional software engineer for that type of work.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
midnitte,51,"I mean, there are reasons that the data scientist label exists.

A software engineer may be able to eloquently explain pointers, but does that mean they understand parametric estimation or central limit theorem?",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
caleeky,13,"Yea part of the problem is that business is conflating these things. E.g. the real problem is ""My customers need reports that show that I am operating within SLA and and that KPIs are or are not being achieved"". 

What you need is first to define those SLAs and KPIs, organize the business to be able to measure them, then measure them, then build some sort of reporting solution. But because it's ""reporting"", and we should do some kind of ML prediction (because cool!) it's a data problem and they go looking for data engineers. 

The data engineer eventually quits because they are like ""who the fuck are these idiots? Just let me freak!"" and the people who know better in the org roll their eyes and say ""should have just had some regular dev project"". 

The places where real data science are required do in fact exist, but the places where this mistake are made are many.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,8,"As a data scientist, comp sci's can sometimes think they understand statistical analysis/ML when they do not. You need experience to understand where erroneous thinking can occur. 

It's not just ""slap a linear regression on the data"" or ""just us lightGBM"". Yes, these tools are easy to setup, but if you don't know how to confirm assumptions, or how to interpret the results, or think about how your data was collected, then you have no gaurantee of utility.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
ProperApe,-2,">does that mean they understand parametric estimation or central limit theorem?

Parametric estimation and central limit theorem is definitely taught in CS or any engineering degree. I also taught this stuff in uni.

I just don't have the patience to do deep learning stuff and mess around with the parameters. Or spend weeks trying to find a paper where the model is better. I would not apply for an AI job.

Linear regression, SVM, random forest I use those often enough. Anything that takes hours or days to train I give to the AI guys.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
YesICanMakeMeth,15,"I mean, this isn't too far away from asking why you would ever hire a mathematician over a software engineer. Well, because software engineers are (on average) nowhere near as good at math. Data science really is not about the software so much (hell, it's often done in Python), which is what software engineers understand well and are good at. It's about understanding the mathematical/statistical relationships between features and also the strengths/weaknesses of different modeling strategies and pulling it all together in order to cleanse the data (this is basically a whole field and an under-emphasized amount of the prowess of companies like Google is tied up in their ability to identify junk vs. valuable data), extract insights from the data (which aren't trivial to extract), and using it to make predictions.

I do computational chemistry/physics and, although I spend a lot of time programming, really only tangentially am a 'programmer'. Why wouldn't you hire a software engineer to replace me? Well, because it'd probably take him about 5-10 years to understand what the hell he was looking at.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
enano_aoc,-12,"I do not know about computational chemistry/physics, but I know about software development and I know about AI.

I can teach a good software developer *all* he needs to know about AI in a couple of months *at most*.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
YesICanMakeMeth,18,"That statement reveals how much you don't know about AI or data science in general. I suspect you don't know much more of it than you do computational chemistry/physics, because the level of knowledge data scientists have is not something that can be compressed into a couple of months. This seems to be a classic case of not knowing what you don't know, i.e. dunning-kruger.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
enano_aoc,-14,Maybe it is you who don't know much about AI... or who gets impressed by basic Math :),2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
YesICanMakeMeth,9,"No, I don't think so. It isn't really my main field but I did a machine learning fellowship at a national lab during my PhD.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
enano_aoc,-8,"I believe that you did all this. I don't believe that you have any clue about AI, based on your original comment :)",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
YesICanMakeMeth,2,Who cares?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
enano_aoc,-5,"Not me, for sure :D",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
itijara,9,"I am a software engineer. I also do Data Science. Software engineering doesn't require knowledge of statistics, ML models, data pipelines, data cleaning, hyperparameter tuning, etc. Ideally, a data engineer develops the models and a software engineer helps to integrate it into a real solution (unless it is a one-off), but lots of businesses try to get people to wear multiple hats. Ultimately leading to either 1.) terrible models or 2.) terrible applications.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Fuih22,15,"Think about it like this, you need to integrate and run an AI model in your system to provide new features, that type of AI model or problem has been worked on a lot and is widely available => A software engineer will just use a model, maybe tuning it a little bit then integrate it to your system, job's done.
Now imagine you have a quite unique problem, unconventional datasets, different constraint, there isn't much of proven models that handle the task well. Now you need someone to research the datasets, do the math, come up with a solution, quickly implement prototype model to showcase the result. Only after that you will considerate integrate it to your big system. That's where data scientist and AI scientist come in I think.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
HarlotsLoveAuschwitz,1,I have seen biologists working as data scientists. That's where I drew my line.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Runfasterbitch,1,Why? I know biology PhDs who could run laps around highly paid “data scientists” wrt statistics.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
IQueryVisiC,0,Data Scientists are cheap enough to wait for the training. They look at real time numbers more tiresome than monitoring in a real fab. They write ugly code.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,0,"I feel like there's always a devops team doing tons of things with the platform, but they can never do something basic when you ask them to, like update the version of node for a jenkins server, or set CORS permissions.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
LadyKnight151,0,"This has been my life the last week. I decided to give Stable Diffusion a try, but didn't realize how hard it would actually be to set up and I haven't been able to find any good guides that don't assume you already have working knowledge of Python",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
azadmin,0,Guess im one of the lucky DevOps Engineers that runs everything bare. I will agree that the dependencies are aids,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Grass_Is_Blue,0,"Lmfao, ya one time I was in the ER and I asked the doctor what was the exact manufacturing process for the scalpel he was using, and what metals are in the filaments of the lights over the table, and the big dummy had no idea. He must be a terrible doctor then…",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
dota2nub,1,"I think data scientists are more like chickens and less like doctors. So the analogy would be more like asking the chicken how it turns food into eggs and the chicken just going ""cluck cluck""",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Denziloe,-11,"Why is the DevOps engineer asking the Data Scientist how to do his job?

The Data Scientist does the modelling and writes the code. It's the job of engineers to put that into production. If an engineer can't productionise some simple Python code and model files, that's a problem with the engineers.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Big-Yogurtcloset-341,1,Let me roll the pods up,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
throwaway43234235234,1,"Ok, this is pretty hilariously true.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
thelastpizzaslice,1,"""Docker. Here you go.""",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
MagellanCl,1,"This scares me, because we had almost the same chitchat recently.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
kyleboddy,1,"This has been a weird ongoing problem with people at my previous job (where I was a Data Scientist) and the company I run. It seems as though a bunch of quite talented developers in their 20s legitimately don't know how computers work. On one hand, it's pretty cool that we got here - no need for IRQ/DMA hell and so forth, to say nothing of building your own drivers in Slackware. On the other hand... some knowledge of how computer resources work would be helpful...",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,1,I felt this on a spiritual level lmao,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
jonobonbon,1,"As someone who came from electrical and embedded engineer to purely software engineering, it hurts me how devs don’t test their code. Granted I’m just learn all these great things like linting and code coverage, but those aren’t excuses for not knowing how your code works or even how to run it. (Tip: document your code and use READMEs)

I should also say that I went from working with actual hardware to pure serverless and I am in pain",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,1,I've had this conversation with other devs...,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
freshggg,1,"Can someone explain this to a non-coder? 

Is it common to not actually run the code you write?",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
ConcernedDudeMaybe,1,![gif](giphy|l0HU20BZ6LbSEITza|downsized),2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
ConcernedDudeMaybe,1,🤌💋,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
matt_mv,1,What letters in a row do you type to make it run?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
c0d3s1ing3r,1,The foray of statistics and data scientists into Software Engineering has been an interesting one.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
MrSTAR4567,1,Google has an IDE??,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
LostThighs,1,👍,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
juberish,1,Bad dev ops is bad,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
ginger_huntress,1,This could also be replaced with the QA Engineer ... This has been my whole job for life.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
OneSnootyMuffin,1,I used to have this conversation so many times that now I say “tell which which buttons on the computer to physically click and what to physically type into the keyboard to run it”,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
nuuren,1,Omg this is me asking the ML team how they run their stuff. Now my job is to figure out how to run their stuff on edge devices and update it on demand. Fun times.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
ImpossibleJoke7456,1,npm run build:dev,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
TrekkiMonstr,1,Hi I'm confused please help,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Thex115,-1,"Hey dont worry ive gotcha covered. so pretty much a devops is the development operations lead, theyre in charge of the whole product, which in this case an ai. Kinda like the director for a movie. The ai engineer is the one who actually creates the ai. When the devops asks “how does it run”, theyre really just trying to test the actual ability of the ai engineer. This is a pretty common occurrence throughout most IT circles, because most people in devops dont actually work on the product, so they have to constantly make sure that the people they designate to do so are at the top of their game, or at the very least know whats going on. Hope that helps!",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Mathematitan,1,![gif](giphy|amxLHEPgGDCKs),2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
incrediblediy,1,"my answer would be in CPU registers with clock cycles, can't forget my background in EE.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
TheHoodedMan,1,"It will print ""Greetings professor. Shall we play a game?"" And you have to type ""global thermonuclear war"" and then everything happens on its own.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,1,"“Just link me the tutorial you followed, please”",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
xtreampb,1,HOW DO YOU INVOKE YOUR BINARY/CLASS,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
notAbratwurst,1,I liked that show… right up until shark week. When the sharks started jumping.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Benutzername,1,Agda developers: what is “running code”?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Thavus-,1,I write my own build scripts. Then I just type “run” in the console and it runs.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
aboutthednm,1,"If your code can't run on your own machine, is it even yours?",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
ongiwaph,1,What movie?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Mathematitan,2,Mr. Robot,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
heated_curiosity,1,"“It never reached till Production”
“We’re just testing a bunch of POCs”",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
imtheguyinthevideo,1,What is this movie ?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,1,[deleted],2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
imtheguyinthevideo,1,Thanks,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
DedicatedDmitriy,1,"[python in a nutshell](https://youtu.be/YnL9vAFphmE)

Main function at the bottom of the file? Booyah.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
kkruel56,1,…shift + enter?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Winnipesaukee,1,My code runs? How did that happen?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
R4mp4g31329,1,Command noob command? What is the command to run it?,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,1,*runs with the computer*,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
llmarx1,1,Love this show,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
SameRandomUsername,1,That's why I LOVE BEING A DEVOPS!!,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
AngieRani,1,Haha,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,1,"hey that dude is from the In Flames music video I am Above, not Rami Malek but the other guy",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
alexdembo,1,Then we'll just deploy/ship your machine.,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,1,"have been doing some DevOps work recently, can definitely understand the confusion.",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,1,"Yea, even I have been thinking about this for some time now.

how do you run your ML models?",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
QAInc,1,Task scheduler or cron 😌,2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
sir-nays-a-lot,1,"After working with data science students in grad school, I have big doubts about the “science” part",2022,"Like, Every time, ever. When the DevOps Engineer chats with the Data Scientist."
Deleted Account,73,"I see their point on one hand. Why are developers operationalizing their code.

on the other hand, Why aren't developers operationalizing their code? That's what devops is all about right? Tearing down that wall.

They are responsible for whether or not their code runs correctly by the time it gets to production and the CICD process automates that. It sounds like these devs want to throw it over the wall.

It only sounds that way, maybe they are struggling because kubernetes is unnecessarily part of their work flow. Is there anything your team can do to make that invisible to them, automate those processes as well? Why should anyone have to do kubectl? Their process should be git clone, work... git push and let the automation handle all the checks.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
Deleted Account,13,">Their process should be git clone, work... git push and let the automation handle all the checks.

I think that those who exist in mature shops don't realize just how incredibly difficult this concept is to bring to fruition in an enterprise environment. It's always:

>Okay, we should automate that. What will it take?

Well, it takes X Y and Z.

>Oh, really? That's hard.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
Luguaedos,15,">Oh, really? That's hard.

Or

>OK, get on it but you still have to maintain your other deliverables. End of the quarter sound good?",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
Deleted Account,12,Bro I’m in this comment and I don’t like it,2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
codeshane,4,"Oh, and coronavirus, economy.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
i_like_trains_a_lot1,23,"You are absolutely right. At my work, we are using kubernetes for running staging and production workloads but the development is done with docker-compose. If the developers need kubectl to get their job done, somewhere something is fishy.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
rearendcrag,13,"Look into flux and implement “GitOps” approach. The developer’s job then ends when a PR is pushed. While I second the view that operations and development are two very different skills sets, they overlap but such a huge amount, which is why we came up with the DevOps concept (remembering it’s not a job title, but a culture). That said, code compiling in A local dev. environment doesn’t mean it’s production ready. And that’s where I see most of the friction between the developers and the mechanics. Mechanics are on call and get woken up when the proverbial hits the fan under load, while working very nicely with a handful of users. Performance testing I hear? Well, welcome to DevOps - suddenly a developer may want to know a little about how clusters work (just an example).",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
kvgru,5,"This is a clever comment. I believe for instance that Continuous Delivery in general is something that is hugely undervalued in this regard. Sort of obvious I have this opinion as I work in this space but I truly believe this. This is how I think about this: 

A well tuned Continuous Delivery setup, either self-scripted or “as-a-Service” is much more the “glue” in a teams toolchain:

* It allows all the different components, from source control system to CI-Pipeline, from database to cluster and from DNS setup to IaC to be integrated into a streamlined and convenient developer experience.
* It’s a way to structure, maintain and manage the growing amount of yml and configuration scripts. If done well this allows your developers to dynamically spin up environments with the artefacts built by the CI-Pipeline and fully configured with databases provisioned and everything set up.
* It can act as a version control system for configuration states with an auditable record on what is deployed where, in what config and it allows you to roll back and forth as well as manage blue/green/canary deploys. 
* Well thought through CD setups have a game-changing effect on developer productivity. They make developers self-serving with less dependencies within the team while increasing maintainability of your setup. ",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
iscottjs,6,"Totally agree with this. One of our clients has shifted their products to Kubernetes and helm charts.

Every now and again, they ask us to update the chart config to be compatible with some new tools they’re deploying.

I just feel terribly guilty that I have no idea what they’re talking about and I feel like I’m letting them down by having them spend time explaining to me a bunch of stuff that is probably second nature to them. 

So instead of feeling annoyed, it’s just motivated me to start learning so I can feel less useless. 

If this is the way things are going then it will be better to learn these tools instead of resisting the change and preventing progress of new tech. 

Also yes, your point about tearing down the wall is spot on.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
Deleted Account,4,"That’s exactly how ours works. Gitlab push triggers tox and pytest (python dev here) and then rancher kubernetes deploys it. Dev, prod, all good to go just push or merge. 

Idk why on earth you’d push back on this. It’s zero touch testing and deployment. When my senior devops gal showed me the ropes on this I was like, oh... so you mean I can retire all my old ansible playbooks and fabric scripts to deploy my apps? 

“Yup.”

From someone who used to hate git and “all that nonsense” idk how anyone could do without it anymore. I don’t even need to care about kubetnetes much. If something goes wrong senior devops people handle it. I can write focus on writing and deploying apps and good tests and the minimal work of building pipelines and rancher namespaces and I’m good to go!",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
kvgru,25,"My No 1 is probably splitting monoliths into microservices too granular and not optimize the tooling properly for the job. From a tooling perspective this will make you have to deal with a lot more yml files, docker files, with dependencies between variables of these services, routing issues etc. They need to be maintained, updated, cared for. Your CI/CD setup as well as your organizational structure and probably your headcount needs a revamp.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
Hell4Ge,3,"What voices in your head are shouting a ""microservice"" word when you know nothing about the project?

Some monolith can work very well (ie. DDD / Hexagonal pattern) especially if dev team is small (they should know better the overall project concept, be independent).",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
yrral86,4,He said over doing microservices was his number one issue...,2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
6716,30,"I'm instituting DevOps from scratch and the devs have pretty much said ""if this makes our lives easier we're in, but if not, then no."" And I have tried to design from there.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
LocalLeadership2,-15,"Wiw, how enlightening lol

Might as well have said : if it makes money, I'm in!

If it would be that easy, we would be all rich.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
hamgeezer,-23,"They sound like dickheads, work isn’t about ease it’s about quality. I’m all for keeping things simple, but attitudes like that are toxic imo.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
bit_pusher,26,"Assuming that ease is anathema to quality is toxic. Assuming that when developers say ""makes our lives easier"" doesn't mean ""reduces our workload to produce a quality product"" is toxic. You sound like a dickhead.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
Deleted Account,4,[deleted],2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
hamgeezer,-6,"Coming from the person who gets off on appearing superior to others, nice. Could have just kept it to yourself and here we are!",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
hamgeezer,-11,Telling someone else to make your job easier is toxic regardless of context so I’m only pleased that I can sound like a dickhead to anyone who agrees with that statement. People like you make development shit.,2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
moratnz,6,"I don't read the dev's statement as telling OP to make their job easier. I read it as them saying that if OP wants them to expend effort to change their work habits and learn new tools, there has to be a benefit to them; they're not going to take on extra work just to make OP feel like they've accomplished something.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
VanaTallinn,4,Isn’t the very goal of software to make people’s lives easier?,2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
flagbearer223,2,Lol what?  How is wanting a job to be easier toxic?  Even our devops team members focus on making our job easier.  The goal is to make the job easier in general so there's less cognitive overhead for the hard parts,2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
PsychoticallyAmiable,0,I heard that sometimes it's  about making money,2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
mikemol,3,"You and /u/6716 both should probably read *Accelerate*; it talks a bit about ease vs quality, in *actual measured numbers* across multiple organizations. I liked to loan out physical copies back before lockdown.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
moljac024,2,"author? esbn? link? I'm not sure how google-able a common phrase like ""accelerate"" is.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
hamgeezer,2,“Accelerate book” got it for me. Gene Kim.,2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
mikemol,2,"In DevOps, there's pretty much just one [Accelerate](https://smile.amazon.com/Accelerate-Software-Performing-Technology-Organizations-ebook/dp/B07B9F83WM/) book.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
hamgeezer,1,"Book looks good but chances are I already principally agree with it, I don’t think anyone concentrated very hard reading that sentence perhaps this makes it clearer (emphasis mine):

“If this makes our lives easier, we’re in if not, **then no**”

Tell me you want to work with someone who flat out refuses to cooperate with any process involving tradeoffs they don’t immediately understand.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
mikemol,6,"Conversely, you emphasized ""isn't about ease, it's about quality."" That book includes data directly correlating ease *with* quality, which is why I recommend it to you. And agreeing in principle isn't enough if it leads to assumed caveats; that's why I emphasized that it's data-driven.

Seriously, you should just pick it up and read it. You're making assumptions about its content and (lack of) influence on your opinions before givin git a chance.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
hamgeezer,-1,"I never said that ease can’t coexist with quality but it’s a useless emphasis that leads people to folly (imo) unless you’re willing to say that ease _causes_ quality...

Focus on quality, ease if it’s sensible.

Tell me the book doesn’t agree with that.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
mikemol,2,"I don't think it does. Not in the way you're describing. That's why I recommended it, since it uses data to build its observations on what's correlated with high-performing organizations.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
hamgeezer,0,"I honestly think you’re wilfully misinterpreting me in that case (a common theme in this thread from what I can tell), it’s about as uncontroversial an opinion as I can imagine.

Ease can define anything, make it easy to do what?

Quality is at least more specific in that whatever you do includes something valuable. 

It’s very _easy_ to duplicate code, it’s very hard to produce _quality_ bugs.

Ps. saying it has “data” doesn’t mean shit don’t know what to tell ya",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
alluran,2,"> They sound like dickheads, work isn’t about ease it’s about quality. I’m all for keeping things simple, but attitudes like that are toxic imo.

To be honest - your comment shows more of a toxic attitude than the devs...

First up, there's nothing easier than maintaining a good quality product.

Next up, if you're putting something in place which is *harder* than the existing process, then you're probably doing it wrong. Some might say ""but we never had to do <X> before"", but then that's not a devops thing, that's a SDLC thing.

If your developers are complaining because the automated tests are failing, then take them away and make the developers manually test. I guarantee they'll ask for those automated tests back within a week.

The DevOps transformation should be making your jobs easier. It's really about improving the quality of the outputs at every stage of the process, which means improving inputs at every stage of the process. If you're not improving inputs, then you're making jobs harder, and I'd say it's reasonable to question the process.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
hamgeezer,0,"Jesus you people are freaks, you’re projecting some other shit onto me buddy.

I can’t remember where I said “make people’s jobs harder” but it’s cool that you guys are all after cush easy jobs. Very employable.

https://www.reddit.com/r/devops/comments/hg5n0e/i_think_we_are_underestimating_how_extreme_the/fw3d9m5/?utm_source=share&utm_medium=ios_app&utm_name=iossmf",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
alluran,4,"> Jesus you people are freaks

Yup, I'm *definitely* projecting your attitude /s

> the devs have pretty much said

Guess you've never heard of paraphrasing, given how much emphasis you're placing on 2 words from a paraphrased statement. *Definitely* no context lost in translation there.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
hamgeezer,0,"I have and it still means it has the same semantics, nice attempt though",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
jeeenx,10,"Well yes.. devops should be a culture shock. Both “sides” are taking ownership. There will always be people unhappy with the extra work that comes with ownership but this is why leadership has to be onboard otherwise it will never work. The behavior of this team member is just that, he doesn’t want to take ownership and truly own the product he works on. 

As engineers we try to abstract a lot and ease that steep learning curve. But effort just can’t be from one “side”. Give him the pager and let him learn!",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
JustDyslexic,8,"Part of the problem is sounds like is that decisions to use a certain tool wasn't s collaborative effort between the dev team and yours. Everyone needs to feel like they had an opinion in these choices so that they have buy in. I'm not a big fan of having devops teams I think it takes people too far from the development side and the real world issues. 

A big part of DevOps is that the dev team builds and owns the code in production. Since means the dev team needs to be allowed to make choices on how to develop, test, deploy, and support code. To me this does not sound like it is happening if your team is making decisions on how code is to be delivered.

Also why are you coming up with a list of things the devs like and don't like why not have the devs come up with the list.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
Deleted Account,12,">that he would be wondering what we, the DevOps team would be doing all day.

what a shitty culture/team. that kind of thing drives me insane. 

&#x200B;

but to answer ur question, the biggest thing is socializing rollouts. how you go about training devs and documenting your new procedures go a long way. if you have a cultrue of solid and well deployed changes, with good documentation and company-wide demos, they will eventually just learn to work with the changes.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
Platformaya,5,"Hey u/kvgru,  if all developers need to learn how to work with K8S it could be frustrating. There are better self-service options where you can abstract stuff from the teams and let them concentrate on what they care about. Being a platform Ops team is building a product, and everyone will always have requests and complaints. I think if you're focused on your current constraints for adoption and on developer experience - you can map what the most important things to add or change are in the platform. In your case - sounds like self-service application/infrastructure automation is an area that needs attention, and you need to get feedback from the dev teams and understand if there are others that feel the same",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
gunsofbrixton,5,"Clean dev interfaces should be the starting point of any change IMHO. If something makes your life easier and the dev's life harder, you've failed.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
humoroushaxor,1,"Not sure if you are getting at how I view this topic but I find a ton of depth to this comment when you really apply it. Conway's law is a meme at this point in my experience but it is so true. Enterprises need to invest in their platform teams to set reasonable boundaries. 

This allows you to set reasonable expectations and boundaries for your teams. Not everyone can be a K8s expert, domain ninja, network guru, and UX wizard.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
sk8itup53,3,"I'm on the developer side for my team, but I play a devops role for them. I do everything from backend API coding to CI/CD to host config. I think developers like that are lazy. I mean great you can code, but what good is your code if it's not running somewhere? What happens if you ever want a pet project on your own? You'll have no idea how to even do that. Don't get me wrong there's a lot I still don't want to have to do myself or learn that a lot of you guys do, but if you are too lazy to learn how to interact with a CLI tool properly, you're limiting your skills and shouldn't even be a Software Engineer. Because that's what engineers are supposed to do, they make shit!

Edit: make things, not that they're trash.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
morphemass,3,"> Because that's what engineers do, they make shit!

Developers who are overstretched, who are not allowed to become experts in their tools and craft, do, indeed, make shit.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
sk8itup53,1,I meant make things but yeah that's also true.,2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
needmoresynths,2,Sounds like your devops team is not working alongside the dev team as closely as it should be,2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
alainchiasson,2,"I have been through this a couple times - not just with k8s, but also with chef, ansible and before eve just custom scripts.

I now look at these as my tools - and wrap them in something simpler. In a way making a (simple) higher level PaaS for the developer. 

Dev has new code ? A simple script to build, push the dev image to docker, trigger a reload in k8s. Merge ? Well now it should be in the pipeline.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
kvgru,2,"I should have probably phrased this slightly differently. I am not talking about my team in general. I was talking about the team of a client I recently got to spend a good amount of time with. The culture was, as many of the commenters lined out correctly a hostile battle between developers expecting something from DevOps. I had been seeing similar behaviour in a variety of different setting and for a list of reasons. So I started gathering and ranking them coming up with 7 core reasons which I summarized in above linked blogpost.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
BestUsernameLeft,5,"Senior dev here, currently in the early phases of a brand new project building out our CI/CD pipeline.

This is the second time I'm on this sort of project, and my biggest complaint is that many of the tools and products I'm using this time are totally new to me. The principles and core concepts are generally similar, but I have to learn new UI's and config files and how to stitch everything together. 

My team is spending day after day on Google, Stackoverflow, reading documentation, and figuring out how to get it all working. I like learning, but once our pipeline is set up and working, it will require nothing more than a few tweaks here and there to keep maintaining it. A lot of the learning I'm doing is going to be gathering dust in a few months.

I'd prefer that my learning be something I use often enough to justify the time investment. I'm being paid a good deal of money to learn things that I will at least partially forget soon because they won't be in constant use.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
jeeenx,4,"I disagree here, the knowledge your gaining will help you in managing this new CI/CD pipeline. Who will do upgrade when there are security vulnerabilities, update to new version, plugins, bug fixes, Infra goes down, pipeline optimization. Unless you plan to have a very old, outdated, and fragile pipeline you’re going to spend time maintaining it.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
Platformaya,5,"Completely agree. Why would developers need to waste time learning this, or maintaining the CI/CD platform and everything that connects to it? There should be one team building and maintaining the platform and the others should be using it, it makes no sense that developers have to learn to become cloud or kubernetes experts, build it and maintain it just because they can code",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
BestUsernameLeft,3,"Yeah, I have no problem learning some of it, but  I don't want to have to maintain infrastructure or become a terraform/kube/azure/octopus wizard. That's not my expertise. I'll do it, but not efficiently.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
jeeenx,1,"See here you’re in with the mentality of I’ll build it but not maintain it, which is “throwing” stuff over the wall. 

And I agree you should not be building the CI/CD pipeline that’s a different role and usually requires a small team. 

K8s is different since that is your actual application. What if it breaks? How will you fix it if you don’t understand k8s fundamentals, how can it scale to handle large traffic? Metrics and health ports/checks. It’s part of the app and devs should understand how their app actually operates.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
BestUsernameLeft,3,"No, that's not my point. I am absolutely okay with maintaining what we build. But when the dev team is doing 100% of the dev, and 95% of the CI/CD pipeline and ops, with a sprinkling of help from other people who happen to know something about the problem you're solving at the moment, that's a lot for the team to absorb.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
Deleted Account,1,"So, go back to the bad old days of separate development and operations teams with a big wall between them?

No, thanks.

Yes, there are new things to learn. Yes, some of these new tools are complicated, but Kubernetes is a great skill to have and doesn't take long to learn. I've got my team of 15 engineers ramped up on it and they enjoy using it now.

I try to involve my engineers in as much of the infrastructure as they will tolerate. Knowledge is power. They don't need to be Kubernetes experts, but they should damn well understand what it is and how their code runs in it.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
Platformaya,1,Having a platform team that builds the DevOps platform and as part of this takes responsibility for k8s or infrastructure automation is not going back to the old days. Having 15 developers learning skills that won't get your product any better is a waste of their time and money. Why should developers have to understand how their code runs on infrastructure?,2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
Deleted Account,2,"Because in my experience, the best infrastructure people come from the ranks of software engineers. I hope that at least one or two of these engineers takes an interest that leads them down the same path I took.

Stop with the us vs them nonsense. I'm only trying to help them have a better understanding of the pipeline that moves their code from their machines to production.

Understanding how your code runs on production is critical as to how you architect your application. The 12 factors definitely apply here. Understanding how your application behaves when my autoscaler scales it out is important.

So, yes, developers need an understanding of infrastructure.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
Platformaya,1,"I agree that  infrastructure needs to be automated = by someone who can code. I just don't think it's practical to teach all developers how to use terraform, they need to get something that works. As you said - some portion of the engineers need to do it, and if you have a few teams you should try to do something wider. Even google explains this is the way to handle multiple teams (SRE book etc.). There's a difference between understanding and actually building (and maintaining) the ci/cd platform (CI/CD tools +infra automation + secret management+ monitoring + incidents management +++)",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
foofoo300,1,Maybe ask them what they have in mind and build it together?,2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
ippem,1,"We did not jump to the k8s bandwagon - did onlu one project as a pilot. Not trivial, devs should not bother themselves with this. I deciced that ECS Fargate is the way to to go for us after it was announced. Last ones migrating from EC2. No regrets so far. Not perfect, lots to improve, but easy for the devs. And we can focus for the Real Stuff vs. managing clusters is understanding every k8s detail...",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
Deleted Account,2,"EKS can run Fargate workloads. It’s not terrible to learn K8s in detail if Helm is used properly for defining your resources to deploy IMO. Not _everything_ needs it though. Nothing wrong with ECS + Fargate, my data engineering team loves it. Mainly, I think it’s that I prefer the open source nature and flexibility of K8s given the workloads we run. 

To your point I don’t foresee why devs are bothering with this K8s or deployments. Proper CICD should take care of this. If anything they should use minikube or K3s for local development.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
nourzabaneh,1,"My team and I are our provisionings in our cloud spend. When deploying application we struggle with allocating resources, settings, and runtime parameters. How do I continually optimize my infrastructure and my application?",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
jeenajeena,1,"The DevOps team? 
Shouldn't DevOps be about Dev + Ops working together?",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
bilingual-german,1,"Nothing in the blog and here says anything about logs and error tracking.

From my experience the one thing developers care most, are bugs in their code. If something goes wrong they feel embarrassed and they need to find the information needed to reproduce that bug. If you make that simple to discover for them it helps tremendously.",2020,I think we are underestimating how extreme the impact of our DevOps toolchains and workflows are on developers. Gathering top things in your workflow or architecture the f*ck things up.
jonathanhandoyo,778,"wow, according to the status dashboard:

* it's across *all* google services
* it's *outage*, not disruption
* it's between 7:50pm to 8:50pm SGT, so about *one hour*

this will be remembered as the great outage",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Bobbbay,133,The Great Outage*,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Decker108,63,The Great gOutage,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Kerzaphin,45,The Great GAuthage,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
John_Fx,-1,His name was Robert Paulson.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Compsky,4,https://en.wikipedia.org/wiki/Gout,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
wikipedia_text_bot,1,"**[Gout](https://en.wikipedia.org/wiki/Gout)**

Gout is a form of inflammatory arthritis characterized by recurrent attacks of a red, tender, hot, and swollen joint. Pain typically comes on rapidly, reaching maximal intensity in less than 12 hours. The joint at the base of the big toe is affected in about half of cases. It may also result in tophi, kidney stones, or kidney damage.

[About Me](https://np.reddit.com/user/wikipedia_text_bot/comments/jrn2mj/about_me/) - [Opt out](https://np.reddit.com/user/wikipedia_text_bot/comments/jrti43/opt_out_here/) - OP can reply !delete to delete - [Article of the day](https://np.reddit.com/comments/k9hx22)

**This bot will soon be transitioning to an opt-in system. Click [here](https://np.reddit.com/user/wikipedia_text_bot/comments/ka4icp/opt_in_for_the_new_system/) to learn more and opt in.**",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
tehbeautifulangie,23,The Great Outage Total Landscaping of 2020.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Decker108,1,Sounds like a nice hotel.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,65,"> this will be remembered as the great outage

Nah, that still belongs to CloudFlare's recent outage or the AWS outage a year or two ago, since those broke a multitude of other websites as well.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
MrMonday11235,28,"> the AWS outage a year or two ago

That was only last month, buddy. /s",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
larholm,5,"I'm not your buddy, guy, and this is 2020 so each month feels like a year. /s",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
eigreb,1,That's painful. He thought he just made his first friend.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
jimmcfartypants,0,You forgot the \~8 or so hours of O364 that went AWOL from a couple of months ago,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
tecnofauno,114,"Youtube was working fine in incognito mode, so I presume it was something that has to do with their authentication schema.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
well___duh,51,"Yeah it’s definitely a disruption, not an outage. Things still worked just fine as long as you weren’t logged in. 

Outage implies nothing works no matter what scenario",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Unique_usernames5,36,It could have been a total outage of Google's verification service without being an outage of every service that uses it,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,5,[deleted],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
eigreb,1,"DELETE FROM gmail_users;
33 rows deleted",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
-Knul-,18,"In a thousand years, nobody will know that COVID-19 happened but they will remember the Great Outage. ^^^/s",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
holgerschurig,14,"So, will the baby rate increase in 9 months?",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
eigreb,1,Nope. People couldn't google how to let that happen.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
star_boy2005,9,Can confirm: 7:50PM to 8:50PM is indeed precisely *one hour*.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
einord,2,"Or to be completely correct, 61 minutes.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
goodwill82,1,*source /s,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
thelehmanlip,-23,I mean probably. But is google down for an hour when most of the US is asleep as bad as all the times AWS goes down and totally unrelated services are affected?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
jonathanhandoyo,40,But the outage is worldwide and US is not the whole world.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
thelehmanlip,-6,And AWS outages affected the whole world too.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
TheOneFlow,13,"I mean this was over noon for most of Europe, it hit us right during business hours.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
dat-dudes-dude,7,"Ah, right during siesta",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
hamza1311,7,Just a little reminder that the United States of America is not the world,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
ClassicPart,5,"There are more people in that mystical place known as ""the rest of the world"" than there are in the U.S.

So yes, it's bad. Try being less self-centred, it's not a good look for you.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
granadesnhorseshoes,3,Tell that to all the kids in the US attempting to use google classroom this morning...,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
pau1rw,1,I knew it was serious when Google maps was down.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
sadfsdffsdafsdfsdf,1,"\> this will be remembered as the great outage  


And forgotten by the end of this week.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
jexmex,1,The 2020 Outage Pandemic.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,1,The Great Reset*,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
ms4720,913,I want to read the outage report,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Theemuts,616,*Took 20 minutes because we couldn't Google for a solution but had to go through threads on StackOverflow manually.*,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
null000,106,"Don't work there now, but recently used to. You joke, but their stack is built such that, if a core service goes down, it gets reeeeally hard to fix things. 

Like... What do you do when your entire debugging stack is built on the very things you're trying to debug? And when all of the tools you normally use to communicate the status of outages are offline? 

They have workarounds (drop back to IRC, manually ssh into machines, whatever) but it makes for some stories. And chaos. Mostly chaos.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
pausethelogic,55,"That’s like Amazon.com being built on AWS. Lots of trust in their own services, which probably says something",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Fattswindstorm,28,I wonder if they have a backup solution on Azure for just this occasion.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
ea_ea,11,"I don't think so. It could save them some money in case of problems with AWS, but it will dramatically decrease trust to AWS and amount of money they get from it.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Decker108,9,"Now that the root cause is out, it turns out that the authentication systems went down, which made debugging harder as Google employees couldn't log into systems needed for debugging.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
null000,10,"Lol, sounds about right. 

Pour one out for the legion of on calls who got paged for literally everything, couldn't find out what was going on because it was all down, and couldn't even use memegen (internal meme platform) to pass time while SRE got things running again",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
gandu_chele,3,"> memegen 

they actually realised things were fucked when memegen went down",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
eigreb,3,Sounds like my job where we were always listening to streaming music proxied through as many network equipment we could. Most of the time we were already starting crisis investigation before our monitoring system even detected an major issue and went through the grace period before alerting us.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
ms4720,46,Old school,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
bozdoz,54,Not using DuckDuckGo?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Vespasianus256,16,They used the bangs of duckduckgo to get to stackoverflow,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
gizamo,5,Using DDG for anything on Stack Overflow is pure nightmare fuel.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Reich2choose,2,Meta,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
pxm7,1,“It was worse. We had to use Bing for some searches.” /s,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
BecomeABenefit,330,Probably something relatively simple given how fast they recovered.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,554,[deleted],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
thatwasntababyruth,359,"At Google's scale, that would indicate to me that it was indeed simple, though. If all of those services were apparently out, then I suspect it was some kind of easy fix in a shared component or gateway.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
coach111111,1365,Forgot to pay their Microsoft azure cloud invoice.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Brian-want-Brain,77,"yes, and if they had their aws premium support, they could probably have restored it faster",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
fartsAndEggs,29,Those goddamn aws fees though - fucking bezos  *long inhale,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
funknut,14,"> fucking bezos  *long inhale

~ his wife (probably)",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,3,[deleted],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
funknut,1,Exactly,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
gex80,1,"Yea but if there is one thing I can say about AWS premium/enterprise support, they fucking take care of their customers. Multiple times i accidentally mis purchased RIs bigger than what I needed and Amazon let me refund them to get a smaller size.

Our TAM, takes my team out to lunch multiple times a year, we get free AWS swag like surprisingly good quality hoodies (thick hoodies, not the thin stuff handed out at reinvent), booze, reinvent discount codes, etc. Our TAM is also VERY GOOD at staying up to date on our support cases. They slack me directly letting me know a support rep responded to the ticket asking for more info before I even realize it.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
LookAtThisRhino,26,"This brings me back to when I worked at a big electronics retailer here in Canada, owned by a major telecom company (Bell). Our cable on the display TVs went out for a whole week because the cable bill wasn't paid.

The best part about this though is that our cable was Bell cable. So Bell forgot to pay Bell's cable bill. They forgot to pay themselves.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Nexuist,9,It has to be some kind of flex when you can get to a level of scale where you have to maintain account balances for all the companies you buy out and have a system give yourself late fees for forgetting to pay yourself,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
dagbrown,3,"Sony, representing a consortium of music publishers, once sued a consortium of hardware manufacturers for enabling music piracy. Part of the consortium of hardware manufacturers included Sony.

Sony accidentally sued Sony.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
gex80,2,At that point you have to realize you're way to big if you have trouble keeping track of yourself. Or you need to reorg.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
HorrorNo6753,84,lol,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
jgy3183,13,OMG thats hilarious - i almost spit out my coffee from laughing!! :D,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
SnowdenIsALegend,-4,The don't ACTUALLY rent from Azure do they? I'm guessing they have enough in-house resources.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,11,r/missedthejoke,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
SnowdenIsALegend,3,I know it's a joke. But was just wondering if their in-house resources are enough or they need to lease from others.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,3,Yes yes they are very big,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
dagbrown,1,Everyone leases from everyone else. It's part of how you maintain redundancy--you lease services from your competitors in case your own service goes down and you need a backup.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
SnowdenIsALegend,1,"Makes sense, thanks.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Decker108,250,They probably forgot to renew an SSL cert somewhere.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
thythr,141,And 19 of the 20 minutes was spent trying to get Glassfish to accept the renewal,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
DownvoteALot,152,I work at AWS and you wouldn't believe the number of times this has happened. We now have tools to automatically enforce policies so that this 100% NEVER happens. And it still happens!,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
granadesnhorseshoes,55,"How was that not baked into the design at a very early stage? And by extension, how is AWS not running their own CA/CRL/OCSP internally and automatically for this shit; Especially if cert failures kill services.

Of course, I'm sure they did and do all that and its still a mind-grating game of kitten herding.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
SanguineHerald,122,"Speaking for a different company that does similar stuff at a similar level. It's kinda easy. Old legacy systems that are 10 years old get integrated into your new systems, automated certs don't work on the old system. We can't deprecate the old system because the new system isn't 100% yet.

Or your backend is air gapped and your CAs cant easily talk to the backend so you have to design a semi-automatic solution for 200 certs to get them past the air gap, but that opens security holes so it needs to go into security review.... and you just rolled all your ops guys into DevOps so no one is really tracking anything and it gets lost until you have a giant incident then it's a massive priority for 3 weeks. But no one's schedule actually gets freed up so no real work gets done aside from some ""serious"" meetings so it gets lost again and the cycle repeats. 

I think next design cycle we will have this integrated....",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
RiPont,73,"There's also the age-old ""alert fatigue"" problem.

You think, ""we should prevent this from ever happening by alerting when the cert is 60 days from expiring.""  Ops guys now get 100s of alerts (1 for every cloud server) for every cert that is expiring, but 60 days means ""not my most pressing problem, today"".  Next day, same emails, telling him what he already knew.  Next day... that shit's getting filtered, yo.

And then there's basically always some cert somewhere that is within $WHATEVER days of expiring, so that folder always has unread mail, so the Mr. Sr. Dev(and sometimes Ops) guy trusts that Mrs. Junior Dev(but we gave her all the Ops tasks) Gal will take care of it, because she always has.  Except she got sick of getting all the shit Ops monkeywork and left for another organization that would treat her like the Dev she trained to be, last month.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
schlazor,80,this guy enterprises,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
mattdw,5,I just started convulsing a bit after reading your comment.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
SanguineHerald,2,Just know you are not alone. Top 50 of the fortune 500 and this shit is our daily life on every team...,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
multia2,2,Let's postpone it until we switch to kubernetes,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
DownvoteALot,13,"Absolutely, we do all this. Even then, things go bad, processes die, alarms are misconfigured, oncalls are sloppy. But I exaggerate, this doesn't happen that often, and mostly in old internal services that require a .pem that is manually updated (think old Elastic Search servers).",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
dnew,8,Did you ever see this? https://azure.microsoft.com/en-us/blog/summary-of-windows-azure-service-disruption-on-feb-29th-2012/,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Decker108,1,It's crazy to me that something like certificate expiration causing outages is such a common problem.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,1,So 99.9% of the time it won't happen.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,123,I'm in this comment and I don't like it lol,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Decker108,16,So is everyone maintaining Azure.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
wizzanker,1,Better than AWS!,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,2,The ultimate right of passage for a dev,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
skb239,14,It was this has to be this LOL,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
thekrone,8,"Hahaha I was working at a client and implemented some automated file transfer and processing stuff. When I implemented it, I asked my manager how he wanted me to document the fact that the cert was going to expire in two years (which was their IT / infosec policy maximum for a prod environment at the time). He said to put it in the release notes and put a reminder on his calendar.

Fast forward two years, I'm working at a different company, let alone client. Get a call from the old scrum master for that team. He tells me he's the new manager of the project, old manager had left a year prior. He informs me that the process I had set up suddenly stopped working, was giving them absolutely nothing in logging, and they tried everything they could think of to fix it but nothing was working. They normally wouldn't call someone so far removed from the project but they were desperate.

I decide to be the nice guy and help them out of the goodness of my heart (AKA a discounted hourly consulting fee). They grant me temporary access to a test environment (which was working fine). I spend a couple of hours racking my brain trying to remember the details of the project and stepping through every line of the code / scripts involved. Finally I see the test cert staring me in the face. It has an expiration of 98 years in the future. It occurs to me that we must have set the test cert for 100 years in the future, and two years had elapsed. That's when the ""prod certs can only be issued for two years"" thing dawned on me. I put a new cert in the test environment that was expired, and, lo and behold, it failed in the exact same way it was failing in prod.

Called up the manager dude and told him the situation. He was furious at himself for not having realized the cert probably expired. I asked him what he was going to do to avoid the problem again in two years. He said he was going to set up a calendar reminder... that was about a year and nine months ago. We'll see what happens in March :).",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Decker108,4,Was this company... the Microsoft Azure department? ;),2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
StrongPangolin3,2,"I have a note on my screen at work with a date on it.  21st May 2022.

I have to get a new job or be on leave far away from a telephone before an SSL cert i renewed on a legacy system runs out. It was such  a mega fucking drama to fix.  So much CORBA...sigh",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
EdhelDil,1,That is why you preferably set the testbed environnement certificates to expire 2 months before the production ones,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
smk49,1,Reminds me when this guy at an old job pushed out an update at 4pm on a weekday and left for the day and didn't leave a contact number and nobody could access external sites 🤣,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
micalm,74,"I think auth was down in an unhandled way. YT worked while unauthenticated (incognito in my case), multiple people reported they couldn't login because their account couldn't be found.

We'll see in the post-mortem.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Trancespline,100,Bobby tables turned 13 and is now eligible for an account according to the EULA.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
firedream,40,"My wife panicked because of this. She almost cried.

Account not found is very different from service unavailable.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
hamza1311,8,"In such situations, it's always a good idea to use down detector",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
KaCuQ,26,"I find it funny when AWS etc. isn't working, and then you open [isitdown.com](https://isitdown.com) (just a example) and what you got is...  


Service unavailable  


You were supposed fight them, not to become them...",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
entflammen,8,"Bring balance to the internet, not leave it in darkness!",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
copy_paste_worker,1,How do you guarantee down detector is not down?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
gex80,1,Nagios and new relic synthetics.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
ShinyHappyREM,1,"> In such situations, it's always a good idea to use down detector

^*insert ^obligatory  ^pregnancy ^joke*",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
_tskj_,0,"Crappily programmed shit, like they haven't even considered that their service might be down.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
weedroid,4,"was seeing the same, I could get a login prompt on Gmail in incog but after entering my username I would get a ""user not found"" error",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
kartoffelwaffel,32,"$100 says it was a BGP issue

Edit: I owe you all $100",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Inquisitive_idiot,19,I’ll place 5million packets on that bet ☝️,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Irchh,11,Fun fact: if all those packets were max size then that would equal about 300GB of data,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
ithika,3,"My first thought too, but then I know fuckall about enterprise data systems and slightly more about networking so — every problem looks like a nail.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
fissure,27,"A haiku:

It's not DNS  
There's no way it's DNS  
It was DNS",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Browsing_From_Work,4,Simple?  Probably.  But also terrifying that someone as big as Google clearly has a single point of failure somewhere.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
gex80,1,"Sometimes it's not a single point of failure,  it could be a load issue or a feed backloop. That was the problem AWS had couple weeks back. When adding to the kinesis  cluster CPU spiked trying to get the new machines into the cluster. And the more you add, the more CPU it takes to get them into parity with the cluster.

That can create a feed back loop in something that dynamical spins up resources as it needs.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
fireduck,3,Long live global chubby,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Legendary_Bibo,2,Someone accidentally kicked out the power cable and no one noticed for a bit.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
TheSilentCheese,3,"Reminds of a Halo party at a buddy's house. Halo 2 maybe. Someone tripped over a network cable and the game dropped. Everybody yelled at him for tripping. His defense was ""guys you don't understand! Let me explain, I tripped over the cord!"" We were all like, ""yea, we know!""",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
iamacarpet,2,"We have loads of services on GCP and with Google generally and going on the bits that went down vs. the bits that didn’t, it seemed like a failure with their Directory API or service (or the internal version of it), as everything that required a user identity or a permissions check failed and notice that “Google.com” searches stayed online, but it didn’t register sign-in status, etc.

Our e-commerce platform on GCP actually stayed up beautifully, it was all the backend services that were authenticated that failed.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Infin1ty,1,"Th r services themselves weren't down, it looked like something with their authentication because you could still access services that require an account (e.g. YouTube) if you weren't logged in",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
JustaRandomOldGuy,1,The janitor unplugged the cloud to plug in his floor buffer.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,1,My guess would be a networking change that got quickly reverted.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
plasmaSunflower,1,Did they say what happened?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
SimpleSimon665,56,"20 minutes is nothing. Like 2 months ago there was an Azure Active Directory outage globally for 3 HOURS. Couldn't use Outlook, Teams, or any web app using an AD login.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Zambini,88,"> couldn't use Outlook, Teams...

Sounds like a blessing",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,15,[deleted],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,29,"No one's arguing that it's not expensive or significant for them. They're saying it was an impressively *fast* resolution considering the scale of Google's operations.

Remember that time half of AWS went down for a few hours and broke a third of sites on the internet? This was nothing compared to that.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
BaldToBe,12,Or when us-east-1 had major outages for almost the entire business day the day before Thanksgiving this year?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
asthasr,2,"There was still fallout into Thanksgiving, as well.

Source: Had to log in on Thanksgiving to check whether I could turn off the ridiculous mitigation I had put into place.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
BaldToBe,1,Dam that's awful. I was really curious and tried to lookup exactly how long the downtime was the next day but couldn't find any information (especially since AWS' status page is more of an aesthetic than real information),2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
asthasr,1,"It varied by service, and by use of that service. Most things were fixed the night before, but there were a few things we were doing that were using scheduled lambdas kicked off by CloudWatch ""crons,"" and those didn't fully recover until around 7 a.m. or 8 a.m. the next morning (EST).",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
auto-cellular,5,The internet is in a bad need of more decentralization.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
izpo,2,20 minutes of this scale is a mess.... Their SRE teams are probably redesigning lot of stuff now,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
FiftyLinesOfCode,3,Hmm... For me it was closer to 40,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Zambini,7,I would venture a guess that 50m USD is a conservative estimate tbh,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,2,Especially if you consider the loss of customer trust and how this might influence customer decisions to rely on gcloud in the future.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
AliMas055,2,45 minutes actually,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,2,[deleted],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,1,[deleted],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,1,"1 hour, approximately 300 million if all customers request SLA credit (on top of other lost revenue).",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
devils_advocaat,1,">That's probably like 50 million dollars or something stupid. 

Ad services stayed functional.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
sadfsdffsdafsdfsdf,1,"Are you implying that Google makes 50 Million $ every 20 minutes? So they are making what, 5256000000000 USD/year. really? Let me buy some shares.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
cameron_mj,1,A few jobs as well,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
StrongPangolin3,1,Do you think they gave themselves cloud credits for the outage?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
tecnofauno,21,They mixed space and tabs in one line of python code... Probably,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deltigre,2,"""There's no way this patch can fail, send it."" - me, probably",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Infinitesima,1,"""Steve forgot one semicolon""",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
namekuseijin,1,"yeah, they just delivered about 1 hour of global ads profit to cyber terrorists to deliver back their keys

either that or their quantum AI is finally wiping them out",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
ChocolateBunny,1,They normally just rollback to the last time it worked and do the analysis later.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,1,Just had to unplug and plug it back in,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
The_Grandmother,51,Me too,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
no_apricots,19,It's always some typo in some infrastructure configuration file that propagated everywhere and broke everything.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
PeaceDealer,6,"Incase you haven't seen it yet, https://twitter.com/googlecloud/status/1338493015145504770?s=20

Storage issue on the user service",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
ms4720,2,I had not thanks.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Edward_Morbius,2,It's DNS.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
CritJongUn,1,Maybe someone did a fuckup with BGP. Big outages like these usually have that in common,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
ms4720,1,"And i did 

http://status.cloud.google.com/incident/zall/20013#20013004",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
headzoo,1256,"I was just in the process of debugging because of a ton of ""internal\_failure"" errors coming from a google api. Thankfully it's not a problem on my end.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
serboncic,1054,"So you're the one who broke google, well done mate",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Gunslinging_Gamer,314,Definitely his fault,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
hypnosquid,101,Root cause analysis complete. nice job team.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,6,I only tried to search what happened when you divide by 0,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
theephie,6,/u/headzoo what's the latest estimate for fix? Can you do it ASAP?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Crazy_Flex,3,Get him boys,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
deadshots,2,Segmented!,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Tamagotono,65,"Did you type  ""google"" into google? I have it on good authority that that can break the internet.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
ClassicPart,13,This is what happens when The Hawk is no longer around to de-magnetise it.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
netburnr2,2,the internet doesn't weight anything jen,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
MINIMAN10001,1,I do it when I want to search the legitimacy of a website and related discussions. I can't just type it into the address bar because then it goes directly to the website I'm trying to research but not go to.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
cmcewen,1,Some new guy prob unplugged something that says “never unplug this machine” on his first day,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Inquisitive_idiot,145,***Assigns ALL of his tickets to @headzoo*** 😒,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,20,[deleted],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
theephie,13,"Last one that tripped me was APIs that did not fail, but never returned anything either. Turns out not everything has timeouts by default.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Cruuncher,2,"Python requests library has no timeout by default. 

I learned this one the hard way after we hit resource exhaustion pretty damn quick from hanging requests

Edit: this is pretty tangential, but things often differentiate between connect timeout and read timeout. The former you should set really small, while the read timeout for any request that writes data should be much longer, but read only requests can have a much shorter read timeout",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
evilgwyn,28,It was working until you touched my computer 2 years ago,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
hackingtruim,11,Boss: WHY didnt it automatically switch to AWS?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
everythingiscausal,3,I cringed internally reading this.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
gex80,1,"I mean assuming you had it kinda 1 to 1 or a warm site in AWS, it's just a DNS change or origin in you CDN.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
iatethefrog,3,That’s a certain relief that only a few know. Shot just blew up but it wasn’t me. It could have been but not this time.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
mybotanyaccount,1,I love when that happens,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Hindu_Wardrobe,1,"so it was YOU

figures",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
funknut,1,"You assured me that I'm not the only one who skips testing and CI, even relying on external services.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
sivgunwadhwa,1,Officer this comment right here,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Botman2004,163, 2 min silence for those who tried to verify an otp through gmail at that exact moment,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Zer0ji,11,"Were the POP3 mail servers, Gmail app and whatnot affected, or only web interfaces?",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
SpideyIRL,6,Gmail app was affected too,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
61746162626f7474,3,"Was Google's authentication service that was down so POP3, Gmail app and anything that needs user authentication was affected.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
teerre,299,Let's wonder which seemly innocuous update actually had a side effect that took down a good part of the internet,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
SkaveRat,261,Someone updated vim on a server and it broke some crucial script that held the Google sign on service together,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Wildercard,105,I bet someone misindented some COBOL-based payment backend and that cascaded,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
thegreatgazoo,83,Some used spaces instead of a tab in key_component.py,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,15,Wait aren't spaces preffered over tabs in python?  It's been a while.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
rhoffman12,38,"Preferred yes, but it’s mixing and matching that throws the errors. So everyone has to diligently follow the custom of the dev that came before them, or it will break. (Which is why whitespace indentation of code blocks is always a bad language design decision, don’t @ me)",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
theephie,10,.editorconfig master race.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
larholm,1,pep8 uber lords ftw,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
awj,10,Or Python...,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
teerre,63,"The script starts with 

    /* DO NOT UPDATE */",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
tchernik,9,They didn't heed the warning.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Muhznit,36,"You jest, but I've seen a dockerfile where I work that uses vim commands to modify an apache config file.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
FuckNinjas,19,"I can see it.

I often have to google sed details, where I know them by heart in vim. 

I would also argue that for the untrained eye, one is not more easy to read/write than the other.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
_tskj_,2,How does vim work non-interactively from the command line?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
FuckNinjas,4,With ex mode. This answer details it nicely: https://vi.stackexchange.com/a/789,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
theephie,3,This guy just caused The Great Outage of 2030.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
FuckNinjas,3,"Oh look, someone already made a small friendlier script [1]. 

No releases? No problems! I'll just use clone it from master, that way it's always bug free and up to date.

[1] https://github.com/MilesCranmer/vim-stream",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Architektual,8,Oh no,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,1,[deleted],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
nthai,53,"Someone fixed the script that caused the CPU to overheat when the spacebar is hold down, causing another script to break that interpreted this as a ""ctrl"" key.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
BoogalooBoi1776_2,2,This feels too specific to be made up. Did something like this actually happen?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
SkaveRat,8,xkcd  reference,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
ianepperson,7,https://xkcd.com/1172/,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
sanity,10,Wouldn't have happened with Emacs.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,1,They couldn't figure out how to exit vim so they just said fuck it and turned off the server.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
RexStardust,99,Someone failed to do the needful and revert to the concerned team,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
BecomeABenefit,33,It's always DNS...,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
s32,17,"Or TLS

My money is on an important cert expiring",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
kartoffelwaffel,8,BGP,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,15,"It was probably some engineer ""doing the needful"" and a one-character typo in a config file",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
tso,4,"And wonder with worry how a single company became ""a good part of the internet""...",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
trisul-108,3,"Maybe they deployed that code with:

`*`  
`* You are not expected to understand this.`  
`*/`",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
de1pher,1,The author of that PR will be telling their grand kids about it,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
burningpixl,1,Did they make it so that images was loaded and shown while hovering over a normal google result? Never noticed that before the outage,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,2660,Did they try to fix them by inverting a binary tree?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
lakesObacon,577,Yeah maybe implementing a quick LRU cache on the nearest whiteboard will help them out here,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
kookoopuffs,138,nah sliding window on an array is much more important,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
darkbluedeath,272,I think they're still calculating how many golf balls would fit in the empire state building,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,11,oh crap i just finished calculating how much i need to charge for cleaning every window in los angeles,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
The_Grandmother,252,"No, I think the very hyped [interviewroomwhiteboard.io](https://interviewroomwhiteboard.io) integration isn't done yet.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
xampl9,165,Did they try checking what shape their manhole cover is?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
nvanprooyen,120,Dev ops was too busy out counting all the street lights in the United States,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
KHRZ,54,"Code the fix on whiteboard, then use optical character recognition to parse it directly into the system. But wait... their cloud AI services was down, shiet",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,10,They need more autogenerated gRPC,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
de1pher,62,"They would have fixed it sooner, but it took them a bit longer to find an O(1) solution",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
AnantNaad,55,No they used DP solution of traveling salesman problem,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,3,best i can do for them is n\^2 \* 2\^n,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
xtracto,41,"Haha, I think they would have taken log(n) time to solve the outage if they had used a Dynamic Programming solution.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
pp_amorim,2,No polynomial time for you my friend.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
lechatsportif,81,Underrated burn of the year,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,-7,[deleted],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
lechatsportif,14,I was in b4 blowup,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Varthorne,9,"No, they switched from head to tail recursion to generate their Fibonacci sequences, before then implenting bubble sort",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
HorrorNo6753,22,LOL,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
SnowdenIsALegend,11,OOTL please?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Lj101,45,People making fun of their interview process,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
nnnannn,77,"Google asks pointlessly tedious interview questions and expects applicants to solve them at the whiteboard. They didn't hire the (future) creator of Slack* because he couldn't implement an inverted binary tree on the spot.

*I misremembered which person complained about this, apparently.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
sminja,56,"Max Howell wasn't a Slack creator.  He's known for Homebrew.  And he wasn't even asked to invert a binary tree, in [his own words](https://www.quora.com/Whats-the-logic-behind-Google-rejecting-Max-Howell-the-author-of-Homebrew-for-not-being-able-to-invert-a-binary-tree):

> I want to defend Google, for one I wasn't even inverting a binary tree, I wasn’t very clear what a binary tree was.

If you're going to contribute to repeating a trite meme at least get it right.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,32,It's still a bit of a meme. The interview process requires you to exhibit exceptional skills at random pieces of computer science the interviewer will ask you on the spot. What if you spent the entire time researching binary trees but the interviewer asks you to talk deeply about graphs instead? It's good to have this knowledge but interesting how every interview is a random grab bag of of deep technical questions asked and if you miss any of them you're basically an idiot\* and won't be hired. Meanwhile in day to day you're most likely not implementing your own heavy custom algorithms or only a small subset of engineers on your team will actually be doing that so there's a question of how effective these interviews are or if you're losing talent by making this so narrowly defined.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
714daniel,15,"To be pedantic, asking about binary trees IS asking about graphs. Agree with your sentiment though",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,-14,its not about those problems. its about whether you have the understanding of such problems and the tools known to the field.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,16,That has not been my experience. Deep technical questions and/or whiteboarding sessions where you solve the interviewer's issue off the top of your head appears to be the industry standard.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,-14,"whats that supposed to mean? did you misunderstand me?

nobody expects you to write those simple algorithms for which there are already libraries.

but the techniques you use to solve interview problems are the building blocks to solving more complex real-life problems.

the assumption is that people who pass technical interviews are better at solving real-world problems and those are the people they want.

that's why google has been asking less tricky and more algorithmic problems.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
sparr,19,"> nobody expects you to write those simple algorithms for which there are already libraries.

It sounds like you haven't been interviewing much lately.

I've interviewed with Facebook, Google, LinkedIn, and Amazon in the last three years, and they all ask for exactly that. Every one of those interviews asked me to implement sorting or tree traversal or n-greatest or something like that on a whiteboard, from scratch and without libraries. One even had me do it in C (which I am proficient with and is on my resume), so I was doing goddamned nested pointer dereferencing on a whiteboard.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
philipdestroyer,3,What's what with asking questions related to skills you claim to have? If you had put C on your resume without actually being proficient with it then it wouldnt have looked good. People have to still write complicated C code. E.g. lots of people at Google work on Linux which has even more complicated C code than nested pointers.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
sparr,2,"Asking questions is fine, but everything wrong with whiteboard coding exercises is even worse in a lower level language.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Lord_Aldrich,2,"Yeah, so I've both been interviewing and been the interviewer a bunch in the last several years: no one cares about you regurgitating the the algorithm from memory. They want you to talk through your thought process for figuring it out.

Like, if I ask you to implement A* I don't care if you have it memorized - I want to you say that know that ""it's a graph search algorithm, it's kinda like depth-first-search, and I vaguely remember something about distances"". And then I'll give you some more details and we go from there.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
sparr,1,You're exceptional. I want you instead of the guy who calls out that I missed a set of parens on my pointer manipulation due to misremembering the precedence.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Lord_Aldrich,1,"Man, I'm sorry, that sucks. And it seems so backwards too - in my experience the FAANG companies have been the ones with good training programs for interviewers.

It must just not be consistently applied across the whole company.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,-8,"i meant nobody expects you to write those simple algorithms at work...

but the techniques you use for those simple algorithms are highly relevant to real world problems.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
sminja,-13,"> What if you spent the entire time researching binary trees but the interviewer asks you to talk deeply about graphs instead?

I mean, a failure to properly utilize the preparation material that your recruiter gives you might be a no-hire signal.

Snark aside, I'm aware that whiteboard technical interviews are far from perfect.  Having just gone through some interviews myself, I can say some companies are trying out other stuff (e.g. pair programming, code review), but if you want a FAANG job this is the game you gotta play.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,12,"That may work for newbies and grad students but what if you're already a 10+ yr senior engineer with family and a life? It's one thing being a 18yr old single guy with no family sure you can cram after your 8 hour work day, but this doesn't work for everyone.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Lord_Aldrich,3,"Most 10+ yr senior engineers I know also spend a lot of time being the interviewer. Which is not all that dissimilar from interviewing.

As I've gotten more career experience I've found the interview prep process to be easier and easier each time, not more difficult (but I totally get that this might not be typical).",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,-10,[deleted],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,10,">  A* pathfinding

I was literally asked to whiteboard that once at Amazon.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,3,[deleted],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
StuurMijTieten,0,"Are you kidding? It's just a bfs type search where you select the next node based on a heuristic like Manhattan distance. It's quite similar to Dijkstra's, I would be kinda shocked if any engineer worth its salt wouldn't know what to do",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Lord_Aldrich,1,"Why? You're not being graded on if you can regurgitate it from memory, you're being graded on how well you demonstrate your thought process for figuring out how it works.

If you know and say out loud that ""it's some sort of search algorithm that works on a graph, and its kinda like depth-first-search but there's some distance thing involved"" then you're like 80% of the way to passing the interview. The interviewer will help you fill in the gaps.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
tetravirulence,15,">I mean, a failure to properly utilize the preparation material that your recruiter gives you might be a no-hire signal.

Years ago when I first interviewed at G they gave me prep material. I read it, made study guides, and was ready to go. In the interview the engineer told me I was not permitted to use anything from the preparation material and instead was asked to solve a tedious bit mapping question without using any standard functions or data structures. 

Genius interview process there. Bravo. 

I've since been in and out of FAANG (off and on, including G) and I can safely say the people who you work with don't know the answers to their own questions most of the time. So to say interviewing is anything other than throwing shit at a wall and seeing what sticks would be disingenuous. I think the meme fits.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,5,"> I can safely say the people who you work with don't know the answers to their own questions most of the time. So to say interviewing is anything other than throwing shit at a wall and seeing what sticks would be disingenuous. I think the meme fits.

That has been my experience as well on both sides of the fence. LOL. Sometimes I'm going in with 2 mins of preparation and have to wing stuff on the spot.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
semarj,1,"I had never heard of this story about Max Howell or any binary trees, inverted or otherwise. 

Still the OP's comment slapped. It stood on its own.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
bob_the_bobbinator,15,Same with the guy who invented etcd.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
allhaillordreddit,6,And sadly it’s not just Google that asks irrelevant (to the job) questions,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Wizardsxz,12,"I juuust got done with an interview for a senior position in video games, and they were all about the binary trees (I rarely need them these days with all the custom stuff we have to use). 

I know how they work so I ""eeee..."" Through the questions but answered correctly eventually. Didnt get the gig... I guess they had a lot of binary tree inversions to do!",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
SnowdenIsALegend,2,Thank you!,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
xtracto,4,https://twitter.com/mxcl/status/608682016205344768?lang=en,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Portugal_Stronk,7,"I work with trees and graphs on a daily basis, and I genuinely have no idea how I would invert a tree. What does ""inverting"" even mean in this context? Swap the order nodes appear at each level? Such a dumb thing to ask on an interview...",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
SpacemanCraig3,11,"well you'd never get hired at my office, its simple...you just turn it inside out.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,6,draw the leaves at the top and the root at the bottom like a proper tree,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,4,[deleted],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
7sidedmarble,2,"EXACTLY. It's actually a brilliant question because if you don't know what it is, it's simple enough that asking your interviewer questions (the thing you're supposed to be doing already) should easily lead you to solving it. A binary tree is just a tree of nodes where each node has a left and right child. It sounds complex, but even if you've never heard of it in your life, asking your interviewer would be enough to wrap your head around it. Inversion in this case is just a fancy word for mirror. Once you know those two things, most programmers could solve it with 0 CS education.

This example frustrates me because there is examples of BS questions you'd have no hope of answering without a few weeks of prep time. This one gets touted a lot, but it's actually simple enough that the thing you're supposed to be doing (asking questions) should lead you to the answer.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Xyzzyzzyzzy,4,"It's especially dumb because the real answer is ""but why?"" An inverted binary search tree is literally just the tree with every `left` and `right` node swapped. Clearly any operation you can do on the inverted tree, you can do on the original tree in equal time and space.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,3,[deleted],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
xtracto,13,"I've been growing Engineering teams for the last 10 years as hiring managers in different startups.   At some point in our startup we had those kind of HackerRank questions as filters.  

The thing we realized is that those sort of interviews optimize to hire a specific type of very Jr Engineers who have recently graduated or are graduating from CS. That is because those are the people that have the time to churn these types of ""puzzle"" problems. Particularly, there are 3 types of recent graduates from CS or related fields:  The ones that don't know crap, the ones that focus on these sort of problems, and the ones that are ""generalists"" because they dove into all sort of subjects during their degree. 

I found out that the Jr people that excel at those sort of problems have a huge learning curve to climb to be productive in ""production, real life environment.   On the contrary, the ""generalists"" work better.

We stopped doing those sort of algorithm puzzles interviews after that realization, and we started getting really good Engineers with great real-life experience.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
7sidedmarble,1,IMO the best interview is just reading someone's GitHub. You can tell pretty quick what someones in to and gauge experience.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
7incent,2,this comment was your  Christmas gift to me,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,1,"Aha, I always wondered when this arbitrary and esoteric development exercise would come in handy!",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
nik0,-45,"Lmao why people are so salty at Google or other of the BIG interviews? They just play a numbers game, and are able to discard perfectly capable candidates with this kind of questions, and still get a bunch of great candidates.
False positives are just way worse to them than false negatives.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Erosion010,65,"Because much smaller shops look to them and copy, so you end up with a ten person team forcing applicants to jump through hoops to get a chance at doing work that is largely plugging premade software together",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
xampl9,38,"“Please reverse two numbers without using a third variable”  
“Will I be doing that frequently while working here at InsureTech?”",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
BeatPeculiar,19,"Lol. My team is currently interviewing for a QA position.  I'm sitting in as the developer  rep on the scrum(ish) team.

This is for a new grad position and the scrum master asks all the candidates this reverse numbers without a third variable thing. It's supposed to ""test their logic skills"", but it really just tests whether or not they googled ""software interview questions"" before the interview.

I usually ask things like ""how would you find a specific string in a directory full of log files?"", or ""what are some things you would check if you couldn't log in to your remote server?""...stuff that is actually important to a QA person.

We get applicants with master's degrees in computer science who have never heard of grep or ping. Those ones take far longer to get up to speed than someone who struggles to puzzle out something they'd never have to do in real life.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,-9,"> invert binary tree

> jump through hoops

ok",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
gigitrix,8,"Google popularized and evangelised the approach, then slowly rolled it back as it was failing to work.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
TheRedGerund,14,"It’s a waste of fucking time. I’m a really talented programmer at real life programming challenges. Obviously I’m biased, but I’ve been eliminated based solely on messing up some dumbass arbitrary puzzle. 

I know it’s a numbers game but I strongly feel that if you stop trying to make your interviews relevant to the job eventually you’ll get fucked. In this case they’re selecting for a bunch of devs that just practice coding problems instead of being just good developers. 

Anyway I’ve got a really great job but I had to fucking puzzles to get it and that’s dumb.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
BlockFace,1,"Well the logic goes anyone smart enough to pass the coding problems will probably be good devs and it doesnt matter that you pass over good devs that cant do the coding problems because you have 100,000 applicants a month.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
TheRedGerund,14,"I disagree, you’re gonna get think by the book devs. Devs who spend their days practicing problems.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
fartsAndEggs,1,"I think it's more if you can learn the problems, you can learn any one generic thing the company does and produce. Its kinda like their version of the BAR or mkat or any other professional type test. Since there is no ""comp sci mkat"" or whatever, theyve essentially made one. If that system is bad, I can entertain that, but I think you should mention those other professional type tests because the same problems should be happening for lawyers, doctors, etc too",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
gex80,2,"But aren't things like the Bar or mcats designed to test your understanding of theory, practical examples, and history? How is, ""how many glass windows are there NYC?"" an example of those 3? There are logic problems that see how you think and then there are logic problems that waste time.

 How many dimples are there on a golf ball? Idk but does that mean part of my duties involve golf or are you just being an ass and asking questions that have little to no value on my skills?",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
fartsAndEggs,2,I dont think they ask those brain teaser type questions anymore. It's all comp sci stuff. Which is similar to what the mcat and bar does for their respective fields,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
nik0,1,"Oh i agree that its a waste of your time, but its worth it for them, as you said its a numbers game, i dont really know what would i change if i was in charge of recruiting on one of this companies, can’t figure out something that would be more cost effective than what they are doing",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
TheRedGerund,9,"Is it that hard to find relevant challenging problems? They can filter out people by making them harder, not less relevant.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,-26,[removed],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,20,[removed],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
repocin,1,Good bot,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
FuckCoolDownBot2,17,"
Fuck Off CoolDownBot Do you not fucking understand that the fucking world is fucking never going to fucking be a perfect fucking happy place? Seriously, some people fucking use fucking foul language, is that really fucking so bad? People fucking use it for emphasis or sometimes fucking to be hateful. It is never fucking going to go away though. This is fucking just how the fucking world, and the fucking internet is. Oh, and your fucking PSA? Don't get me fucking started. Don't you fucking realize that fucking people can fucking multitask and fucking focus on multiple fucking things? People don't fucking want to focus on the fucking important shit 100% of the fucking time. Sometimes it's nice to just fucking sit back and fucking relax. Try it sometimes, you might fucking enjoy it. I am a bot",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deltigre,5,Bad bot,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
ErGo404,-6,"Just because their process is effective to recruit good engineers doesn't mean it's fair, humane or even good for them in the long term.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,19,It is not even effective.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
nik0,-6,"I mean, they seem to be doing pretty well, they also probably looked multiple times at their processes and reached the conclusion its the most cost effective way to run things for them",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
ErGo404,-1,"Good for them doesn't mean fair, or humane.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
nik0,5,"Its an interview not an internment camp lmao, its not inhumane",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
bob_the_bobbinator,-1,">Just because their process is effective to recruit good engineers doesn't mean it's fair, humane or even good for them in the long term.

I thought it was an effective, scalable method to filter out bad candidates. Not necessarily a method to get all the good ones:

[https://news.ycombinator.com/item?id=22331804](https://news.ycombinator.com/item?id=22331804)

Google's hiring process is especially known to have bad frontend engineer hires. Like they will put bootcamp grads who passed the Leetcode test on the Google Cloud UI team.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
gigitrix,1,"> Like they will put bootcamp grads who passed the Leetcode test on the Google Cloud UI team.

In fairness their competition is the AWS Console, the bar is low",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
gex80,2,"I like the AWS console but for the recent redesign. But I will give them credit they are slowly fixing that. The new router add record wizard was annoying when it came out. Now they have a simple page like it was before with the option of the wizard.

But aws does have a uniformity problem with their UIs. 

GCP, their shit is a mess as far as that IAM page with the orgs and projects. It's a stupid design and honestly Amazon takes the cake here. Create an account/role/group and do or take away permissions and generate keys with a single button click. Google, isn't a cloud provider i would actively choose if I had a say

On the Google search console for their indexing apiI recently had to increase the number of publish requests.  For some stupid reason, you are only allowed 200 quota wise.but if you want to increase it, you have to fill out not a support ticket, call support and open a case, nope none of that. You have to click on shady ass looking Google forms page, fill out something thay looks like a poor man's survey page. Then you just twiddle your thumbs for weeks before magically one day you login and it's increased.  But there is no case number, no support portal, no automated email or even not automated to at least know they got the request and completed it. 

GcP is pretty shitty.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
crabsock,0,Whatever it is I'm sure it can be solved with an efficient graph traversal or some good old fashioned dynamic programming,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,1,"They ran around in the data center shouting ""Fizz"" and listening for ""Buzz"".",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
fundou,1,Using a multi-head self-attention transformer model. cuz writing code would be so 2000s for Google.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
quasifaust,1,Not before figuring out how many ping pong balls can fit in the room,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,334,[deleted],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
ms4720,93,"May, britsh thermo nuclear understatement there",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
JDurski,84,Monday uh?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Decker108,36,"MS Teams was down in parts of the world this morning too, as well as Bitbucket Pipelines. I considered just going back to bed.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
JDurski,15,I guess a lot o people can't do their job if they can't Google it. /joke,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
TheLemming,5,I feel personally attacked,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
DonRobo,4,I feel like it would be bigger news if Bitbucket Pipelines didn't have a problem this week.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Decker108,2,"You're absolutely right, and I hate it...

(Disclosure: the company I work for relies on the Bitbucket Pipelines *alpha* for production systems)",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
DJDavio,37,"""looks like Google has a case of the Mondays""",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
s_0_s_z,352,Good thing everything is stored on the cloud these days where it's safe and always accessible.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
JanneJM,206,Yes - perhaps google should implement their stuff in the cloud too. Then perhaps this outage wouldn't have happened.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
s_0_s_z,84,Good thinking.  Maybe they should look into whatever services Alphabet offers.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
-Knul-,30,"Or AWS, I've great things from that small startup.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
s_0_s_z,18,Gotta support local businesses.  They might not make it past the startup stage.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Martian_Maniac,2,This is the answer.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
theephie,11,"Don't worry, Google will identify the critical services that caused this, and duplicate them on AWS and Azure.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
jonomw,-6,"This is why I use a different email provider routed through Gmail. I get all the benefits of Gmail, but when stuff like this happens, I can go to the shitty website for my email provider and still get my emails.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Drasha1,20,I am sure the shitty email provider has better uptime then google.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,5,Why don't you just use outlook and store emails locally..?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
figuresys,2,What the other guy said,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
rollie82,339,I was forced to listen to music not built from my likes for a full 20 minutes. WHO WILL TAKE RESPONSIBILITY FOR THIS ATROCITY?!?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,137,[deleted],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
qwertyslayer,23,"I couldn't update the temperature on my downstairs nest from my bed before I got up, so when I had to go to work it was _two degrees_ colder than I wanted it to be!",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
spider-mario,2,Fahrenheit?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
qwertyslayer,6,"Of course. 2C might actually be something to complain about, which is not what we're doing here",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
gordonv,3,"Rwar! Instead of raunchy pics for a nightclub, people are looking at nature, self reflecting, and changing their ways! Nuuuu!",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Semi-Hemi-Demigod,43,For 20 minutes I couldn't have the total sum of world knowledge indexed and available to answer my every whim AND I DEMAND COMPENSATION,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
lykwydchykyn,7,You could say you were compensated with 20 minutes without every action of your life being logged and mined for marketing data.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
rohishimoto,4,but what if I went to every social media platform to complain?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
lykwydchykyn,2,"Hmmm, that does kind of nullify things.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
rsampaths16,2,Did you find something interesting though? That is the question.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
appdevtools,2,MY FAVOURITE HUB FOR POR--no wait that was all good,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
vSnyK,228,"Be ready for: ""working as devops for Google, AMA""",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
politicsranting,144,Previously *,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
meem1029,100,General rule of thumb is that if a mistake from one person can take down a service like this it's a failing of a bigger process that should have caught it more than the fault of whatever mistake was made.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
romeo_pentium,109,Blameless postmortem is an industry standard.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
istarian,57,"Unless it's a recurring problem, blaming people isn't terribly productive.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
politicsranting,-32,"It’s a major corporation, they need to affix blame to ensure shareholders it’s a one time problem.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
yiliu,52,"You'd be surprised, I guess. I've seen giant outages, and I've never seen anyone fired, or even really chastised (in public at least).

The idea, and it's a good one, is that it shouldn't have been possible for one engineer to cause a major (especially global) outage; it's a failure of process, testing, rollouts, isolation and monitoring, on top of the (usually minor) fuck-up in question.

Anyway, scapegoating has all kinds of negative side-effects. You lose good engineers (both the scapegoats themselves and people who just don't like the stress of making changes in a blamey environment). You get people focused on shifting blame or covering tracks during outages. You get inter-team hostility, and teams dodging new dependences. And on and on...",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
witti534,13,"Firing the person who caused the outage isn't that clever. He will know what not to do next time. And if there should still be a next time, then yes, you can fire him.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
theephie,15,"> And if there should still be a next time, then yes, you can fire him.

If there is next time, you didn't fix the process. Fix the process. Don't fire people who trip on a broken process.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
bradfordmaster,1,"Well, if we're really trying to blame an individual here, I'd say it's whatever lead needs to drive fixing the process. If they were supposed to do that after the first failure, but didn't, and then the same class of failure happened again, some hard conversations would be earned.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
politicsranting,-1,Even if it’s just on a system/process that is getting fixed. Not necessarily a team or a person.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
yiliu,4,"Oh, yeah, they'll definitely want to announce what they're giving.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
_tskj_,4,Yeah that's exactly why they do blameless postmortems.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
politicsranting,-11,I am excited for the blog post with the circular logic shifting blame across the different teams and then no one taking responsibility,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
vancity-,34,"The thing is most epic failures are a collection of little failures aligning at the same time.

Where you see circular logic and blame, I see interdependent teams with shared responsibility.

Unless Ted pushed the big red DO NOT TOUCH button that brings Prod down.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
BlockFace,13,Yeah if 1 person can fuck up and take down googles systems for an hour its not even that persons fault at that point.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
vSnyK,2,"Haha, indeed 😂",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
localsystem,3,🤣🤣 they will soon come out of the wood works,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
karuna_murti,1,But I can't invert binary tree.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
madh0n,54,"Todays diary entry simply reads ...

Bugger",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
teratron27,17,"Wonder if any Google SRE's thought of putting pants on their head, sticking two pencils up their nose and replying ""Wibble"" to their on-call page?",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
remtard_remmington,21,Love this time of day when every sub temporarily turns into /r/CasualUK,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
johnnybu,77,SRE* Team,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Turbots,24,Exactly. Hate people just slapping Devops on every job description they can. Devops is a culture of automation and continuous improvement. Not a fucking role!,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
dunderball,7,Say that to half of all devops-related job description on the internet lol,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
lachryma,3,Which is exactly what they're saying.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
EmTeeEl,7,"It's now an interchangeable word. It's on many job title ads 

Used to be infra, then sre now devops. I know each term is meant to be a specific distinct specialisation, but in practice all 3 roles are merged in many companies",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Resquid,0,Tell that to every retarded startup I've worked at.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
lavahot,1,SRE is an implementation of DevOps! OP just wasn't specific enough.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,33,"Someone tried to replace that one Perl script everything else somehow depends on.

They put it back in place few minutes after",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,113,[deleted],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
jking13,57,"I worked at a place where that was routine for \_every\_ incident -- at the time conference bridges were used for this. What was worse was as we were trying to figure out what was going on, when a manager trying to suck up to the directors and VPs would go 'cmon people, why isn't this fixed yet'. Something like 3-4 months after I quit, I still had people TXTing me at 3am from that job.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
plynthy,32,sms auto-reply shrug guy,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
jking13,19,"I wasn't exactly expecting it, and I'm not even sure my phone at the time even had such a feature (this was over a decade ago). I had finally gotten my number removed from their automatic 'blast the universe' alterting system after several weeks, and this was someone TXTing me directly.

There was supposed to be against policy as there was an on call system they were supposed to use -- pager duty and the like didn't exist yet -- but management didn't enforce this, and in fact would get into trouble if you ignored them, so they had the habit of just TXTing you until you replied.

Had I not been more than half asleep, I would have called back and told them 'yeah I'm looking into it' and then turn off my phone, but I was too nice.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
NAN001,3,"> I still had people TXTing me at 3am from that job.

What the actual fuck.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
PoeT8r,3,"In principle, I hate to plug a certification. But, the GCIH is directly relevant for learning how to properly handle IT incidents. A little unfortunate the cert is aimed at security, but the steps apply to all IT incidents. And medical trauma too.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
jking13,3,"It's a bit of too late now, but back then ITIL was en vogue... except of course management had to put their own spin on it. In other words cargo cult and micromanage (lest a director or VP cede control of anything under their domain). The end result defeating any benefits ITIL _might_ have provided. I have no doubt any other framework would have met a similar end.

Fundamentally, the problem was most of IT management was incredibly dysfunctional. The only things that would get funding (and thus done) were largely useless window dressing a particular business unit wanted (despite providing questionable business benefit). Any sort of investment in infrastructure that could improve stability were of course never done (since no business unit would even sign off on it, even if it didn't come out of their pocket -- after all it might mean that then they didn't get _their_ shiny done now now now).

This structure was so ossified, their solution to fix this wasn't to get rid of the directors and VP that cemented things into place.. the answer of course was offshoring! Offshore everything not nailed down, with their 'airtight' contracts with IBM and EDS. All their problems will be solved! (narrator: they weren't solved).

My group (and a few others) managed to avoid the offshoring, but we still had to deal with the dysfunction, which is why I finally quit (as well as having a cheapskate director who was willing to tank a $60 million dollar project and try to pass the blame one to me and a few others -- all because he was scared about less than $10k in his own travel budget). Since then, the company (while a F500, was either second to last or last in their industry), has merged with the other bottom contender in a (likely) vain attempt to challenge the two leaders, though a lot of the same terrible middle management is still there.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
PoeT8r,1,"> merged with the other bottom contender

Surely two anchors will float when joined together!

I'm grateful my current workplace is not as deficient as some of my previous ones have been. But that offshoring thing hits....",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
jking13,2,"Yeah it just hastened the downward spiral. The problems were (and wouldn't surprise me if still were) structural, and outsourcing did nothing to change that.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
PoeT8r,1,"And this is why we should lynch senior management. They exploit everybody for their quarterly bonus, damn the consequences.

Looking at you, John White, Eckhard Pfeiffer, and Carly Fiorina. Mike gets a pass for CPQ since he did not ask for that bag of brunost.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Fatallight,41,"Manager: ""Hey, what's going on?""

Me: ""I'm not quite sure yet. Still chasing down some leads""

Mangager: ""Alright cool. We're having a meeting in 10 minutes to discuss the status""

Fuuuuck just leave me alone and let me do my job.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
jeerabiscuit,11,Try screams of IS IT DONE???? every 10 minutes.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Xorlev,4,"Thankfully, it isn't run like that. There's a fairly clear incident management process where different people take on roles (incident commander, communications, operations lead etc. -- for small incidents this might be one person, for big ones these are all different people) -- the communications lead's job is to shield everyone working on the incident from that kind of micromanagement. You can read about it in [the SRE book, chapter 14](https://sre.google/sre-book/managing-incidents/).

The only incident I've ever been a part of where my VP wanted to hear details during the incident itself was a very long, slow-burning issue where we were at serious risk of an outage recurring, even then they just wanted to be in the loop and ask a few questions. I'm sure it's not like that everywhere, but at least in my experience it's been very calm and professional.

The time to examine everything in details comes _after_ the incident, to figure out why it happened, and how to prevent it in the future. This follows a [blameless postmortem process](https://sre.google/sre-book/postmortem-culture/). You might be like ""psh, yeah right"", but for the most part it's true. Not all postmortems are quality (some do lowkey point fingers at other teams) or have poor takeaways, but all the big issues ultimately end up creating work to make the system/process/etc. more robust. After all, you learn best from catastrophic failure.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
-Knul-,2,"You never know if the competition tries to board your ship during such a crisis, better be prepared.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
mlk,2,how can you even work without a call with 50 people in background?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
frogspa,1,"I once had a marketing manager stand by me asking ""is it fixed yet?"" every minute (I'm not exaggerating about the frequency).

When I snapped and said ""it's not going to happen any quicker with you keep asking"" she looked genuinely hurt and wandered off.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
perspectiveiskey,1,">  ""all hands on deck"" 

I really hate this one so much. They fancy themselves rear-admirals.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
orangetwothoughts,36,Have they tried turning it off and on again?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Infinitesima,12,That's exactly how they fixed it.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
EmTeeEl,1,"Amazon's problem few years back was actually precisely that problem. The guy had shutdown/decomissionned more servers than needed, and when they restarted the servers, they hadn't thought about the long startup involving among others building caches. They didn't fire the guy, because one, the script he ran was misleading/not well made, and two, he couldn't have known the servers were slow as shit to boot. They rewrote their servers startup procedure.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
nahuns,135,"If Googlers make this kind of mistakes, I, as just another developer struggling at a startup and working with limited budget, am unimpeachable!",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
The_Grandmother,-73,"Well, I think your startup and Google faces a radically different set of challenges.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
SizeOne337,21,"Yes, but with the best minds money can buy, lots of experience and one of the deepest wallets in the world. They should only struggle with the impossible. Let's wait and see if they disclose what really happened...",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Vakz,65,/r/woosh,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
AggressiveLigma,12,Granma is having a hard time boohoo,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
adrianmonk,1,"I guess it's whooshing me too.

I took the top comment to mean that, since the outage reminds us that even Google engineers are fallible, engineers at other companies can feel OK about being fallible too. But Google is sitting on a gigantic mountain of cash that can cushion things a little bit when things go wrong, a luxury most other companies don't have. So what applies to Google doesn't necessarily translate to other companies.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Vakz,3,"I took the ""another developer struggling at a startup"" to mean the he's calling Google a struggling startup",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
adrianmonk,2,"I guess it's possible to read it that way, but (obviously?) I read ""just another developer"" to mean ""an ordinary developer"".",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
BonesCGS,-3,r/itswooooshwith4os,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
_VitaminC_,3,No it's not. Check when the subs were created,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
pick-axis,7, People upvote and downvote the strangest sentences on this sub.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,4,>People upvote and downvote the strangest sentences on ~~this sub~~ Reddit.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
nahuns,-1,Really? xD,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
orig_ardera,1,I thought they were facing the same challenges. Thx for clarifying ;),2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
zeValkyrie,1,Apparently not. I also have trouble keeping my services up and running :),2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,35,"Can someone explain how a company goes about fixing a service outage? 

I feel like I’ve seen a lot of big companies experiencing service disruptions or are going down this year. Just curious how these companies go about figuring what’s wrong and fixing the issue.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Mourningblade,78,"If you're interested in reading about it, Google publishes their basic practices for detecting and correcting outages. It's a great read and is widely applicable.

Full text:

https://sre.google/sre-book/table-of-contents/",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
diligent22,40,"Warning:  some of the dryest reading you'll ever encounter.

Source: am SRE (not at Google)",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
perspectiveiskey,3,"Call me old fashioned, but this is humorous to me:

> Both groups understand that it is unacceptable to state their interests in the baldest possible terms (""We want to launch anything, any time, without hindrance"" versus ""We won’t want to ever change anything in the system once it works""). And because their vocabulary and risk assumptions differ, both groups often resort to a familiar form of trench warfare to advance their interests.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
vancity-,41,"1. Acknowledge problem and comm internally
2. Identify impacted services 
3. Determine what change triggered the outage. This might be through logs, deployment announcements, internal tooling
4. Patch problem- Rollback code deploys, spin up new servers, push a hotfix
5. Monitor changes
6. Root Cause Analysis
7. Incident Post Mortem
8. Add work items to prevent this outage from occurring again",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Krenair,8,Assuming it is a change that triggered it and not a cert expiry or something,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Xorlev,4,"Even if that's the case, you still need to do the above _including_ an incident post-mortem. Patch the problem, ensure it's healthy, start cleanup and post-mortem. Concurrently, start the root-cause analysis for the postmortem.

Note, this has _nothing_ to do with today's outage, not even ""wink, wink - nudge, nudge"" -- as an example:

Summary:

foo.example.bar was offline for 23 minutes due to a failure to renew the SSL certificate, affecting approximately 380 customers and failing 44K requests. CSRs received 21 support cases, 3 from top-shelf customers.

Root cause:

certbot logging filled the /opt/ volume, causing tmpfile creation to fail. certbot requires tmpfiles to do <x>.

What went well:

- The frobulator had a different cert, so customers didn't notice for some time.

Where we got lucky:

- The frobulator had a different cert, but had it expired first this would have led to worse outcome X.

What went poorly

- This is the second time our cert expired without us noticing.
- Renewal took longer than expected, as `certbot autorenew` was failing.

AIs:

- P0: renew cert [done]
- P1: survey all existing certs for near-future renewals
- P1: setup cert expiry monitoring
- P1: setup certbot failure monitoring
- P2: catalog all certs with renewal times / periods in spreadsheet
- P3: review disk monitoring metrics and decide if we need more aggressive alerting",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
znx,12,"Change managment, disaster recovery plans and backups are key. There is no one size fits all. Any issue caused internally by a change should carry a revert plan, even if that is .. delete server and restore from backup (hopefully not!). External impact is much harder to handle and requires investigation, which can lead a myriad of solutions.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
vancity-,7,"What if your backup plan is ""hope you don't need backups""

That counts right? Right?",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
znx,1,"As long as you don't tell my boss, yeah sure.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
kevindamm,10,"Mainly by inspecting monitoring and logs.  And you don't need a ton of preparation, but even just some monitoring (things like qps, error rate, group-by service and other similar filters are bare minimum, more metrics is usually better, and a way to store history and render graphs is a big help), will help make diagnosis easier to narrow in on, but at some point the logs of what happened before and during failure will usually be looked at.  These logs keep track of what the server binary was doing, like notes of what is going as expected and what was error or unexpected.  With some expertise, knowledge of what the server is responsible for, and maybe some attempts at recreating the problem (if the pressure of getting a solve isn't too strong).

Usually the first thing to do is undo what is causing the problem.  It's not always as easy as rolling back a release to a previous version, especially if records were written or if the new configuration makes changing configs again harder.  But you want to stop the failures as soon as possible and then dig into the details of what went wrong.

Basically, an ounce of prevention (and a dash of inspection) are equal to 1000 pounds of cure.  The people responsible for designing and building the system discuss what could go wrong, and there's some risk/reward in the decision process, and you have to hope you're right about severity and possibility of different kinds of failures... but even the most cautious developer will encounter system failure, you can't completely control the reliability of dependencies (like auth, file system, load balancers, etc.) and even if you could, no system is 100% reliable: all systems in any significant use will fail, the best you can do is prepare well enough to spot the failure and be able to diagnose it quickly, release slowly enough that outages don't take over the whole system, but fast enough that you can recover/roll-back with some haste.

A lot of failures aren't intentional, they can be as simple as a typo in a configuration file, where nobody thought about what would happen if someone accidentally made a small edit with large effect range.  Until it happens and then someone will write a release script or sanity check that assures no change affects more than 20% of entities, or something like that, you know, that tries to prevent the same kind of failure.

Oh, and another big point is coordination.  In Google, and probably all big tech companies now, there's an Incident Response protocol, a way to find out who is currently on-call for a specific service dependency and how to contact them, an understanding of the escalation procedure, and so on.  So when an outage is happening, whether it's big or small, there's more than one person digging into graphs and logs, and the people looking at it are in chat (or if chat is out, IRC or phone or whatever is working) and discussing the symptoms observed, ongoing efforts to fix or route around it, resource changes (adding more workers or adding compute/memory to workers, etc.), and attempting to explain or confirm explanations.  More people may get paged during the incident but it's typically very clear who is taking on each role in finding and fixing the problem(s) and new people joining in can read the notes to get up to speed quickly.

Without the tools and monitoring preparation, an incident could easily take much much longer to resolve.  Without the coordination it would be a circus trying to resolve some incidents.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
chx_,11,"Yes, once the company reaches a certain size, predefined protocols are absolutely life saving. People like me (I am either the first to the be paged or the second if the first is unavailable / thinks more muscle is needed -- our backend team for the website itself is still only three people) will be heads down deep in kibana/code/git log where others will be coordinating with the rest of the company, notifying customers etc. TBH it's a great relief knowing everything is moving smoothly and I have nothing else to do but get the damn thing working again.

Blame free culture and the entire command chain up to the CTO if the incident is serious enough on call basically cheering you on with a serious ""how can I help"" attitude is the best thing that can happen when the main site of a public company goes down. Going public really changes your perspective on what risk is acceptable and what is not. I call it meow driven development: you see, my Pagerduty is set to the meow sound and I really don't like hearing my phone meowing desperately :D",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
zeValkyrie,3,"> I call it meow driven development: you see, my Pagerduty is set to the meow sound and I really don't like hearing my phone meowing desperately

I love it",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Xorlev,2,"Back when I was on a Pagerduty rotation, I had a sad trombone when I was paged. My wife would be equally pissed and amused that we, once again, woke at 3am to a sad trombone from my bedside table.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
SizeOne337,0,"Log/event reporting and aggregation plus monitoring tools. If they are correctly configured and implemented it should be enough to pinpoint what is failing and then it is a matter of figuring out why it is failing.

Nagios, icinga2 and all those other equivalent tools from cloud providers.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
SpacePaddy,1,"It depends on what caused the outage in question. 

I think what's more valuable is thinking about how to detect if there is an outage is and where that outage lives in the code/serverspace. Often this is done via alarms, logs and monitoring of the services that are in place. 

Once you know exactly what is broken you can start to formulate plans on how to fix that specific issue. 

After an outage is fixed there should be a process in place to figure out why this outage happened and actions that are to be taken to prevent that style of outage again. (For example: You ship code which throws a NullPointer exception. Why was this not caught? How do we test code to make sure that something straight forward like this doesn't happen again)",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,1,"Probably by middle management getting shit on by lower C tier, making everyone miserable",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
yawaramin,1,"Someone else gave a good answer, I'll just add from my experience: carefully walk through each component of the system that could have been in the failure path. Know very well or quickly get up to speed on how the components interact with each other. Try to look at the actual data flowing through the system. And form a hypothesis (probably more than one) about what's going on, and test it by going through all of the above.

The thing about a hypothesis is that it's testable and falsifiable. So if more and more data points come in and you still can't rule out the hypothesis, then you're likely getting closer and closer to the root cause.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Miragecraft,45,With Google you always second guess whether they just discontinued the service without warning.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
bicx,3,“We will be sunsetting Google Cloud Services in -5 minutes. Thank you for your loyalty!”,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
YsoL8,70,I'm surprised Google is susceptible to single points of failure,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
skelterjohn,130,"Former Googler here...

They *know* how to fix that, and so many want to, but the cost is high and the payoff is long term... No one with any kind of authority has the endurance to keep making that call for as long as it's needed.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,53,So like any other company? This is the case everywhere from the smallest startup all the way up,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,71,[deleted],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
TheAJGman,9,That explains the dozen chat/sms apps they've made and abandoned,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
phunkystuff,7,This is so true :'(,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
PM_ME_YOUR_DOOTFILES,1,"I call this ""Promotion Oriented Programming"".",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
bagtowneast,1,PDD. Promotion driven development.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
mikkolukas,5,Thanks for insight :),2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
F54280,26,Could just be that the NSA needed some downtime to update their code...,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
the_fucking_doctor,7,"Google shares code across services.  So if a core library had a bug introduced to it, it could wipe out several services.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
free_chalupas,3,Not susceptible to a single point of failure == hasn't found their single point of failure yet,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Edward_Morbius,24,Make note to gloat for a bit because all my Google API calls are optional and degrade gracefully.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
vermeer82,19,Someone tried typing google into google again.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
casual_gamer12,25,Its back up,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,9,It's *,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,-4,So,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
v1prX,11,What's their SLA again? I think they'll make it if it's .995,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
skelterjohn,14,5 9s global availability.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Decker108,7,Not anymore...,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Lookatmeimamod,10,"4 nines for multi instance setups 99.5 for single instance. They also only pay out up to 50% at the top outage ""tier"" which is interesting to learn. Most enterprise contracts will pay 100% if outage goes too high. (Tiers for enterprise at Google are 99.99-99 -> 10%, 99-95 -> 25%, under 95 -> 50%, aws tiers ar the same range but 10, 30, 100 for comparison)",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
zetaconvex,4,"There's a moral in all this, but I doubt we'll heed it.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
istarian,3,"Yeah.  
  
It's the sort of thing I'd love to bring up the next time someone touts Google as 100% reliable, will never go down.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
regorsec,4,Isn't this the SysOps team not DevOps?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
MauroXXD,5,It sounds  like the Google SRE team had some leftover error budget to spend before the end of the year.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
audion00ba,1,"Yeah, the ""let's not over deliver for free""-budget. 

Enterprise not good enough? Can I interest you in some Super Enterprise service then?",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,22,[deleted],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,157,If you tell your super redundant cluster to do something stupid it will do something stupid with 100% reliability.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
x86_64Ubuntu,23,"Excellent point.  And don't let your service be a second,third,fourth-order dependency on other services like Kinesis is at AWS.  In that case, the entire world comes crashing down.  So Cognito could have been super redundant with respect to *Cognito*.  But if all Cognito workflows need Kinesis, and Kinesis dies across the globe, that's a wrap for all the redundancies in place.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
awj,6,"Sure, and then all your tools fall apart or just don’t exist because you’re stuck trying to rebuild dependencies from scratch.

It’s not a problem with easy, pat answers.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
x86_64Ubuntu,4,"That's a good point which leads me to the question: ""Can AWS deploy AWS without AWS"".  If some service needs AWS CodeBuild or IAM to deploy, and those services go down, are they just shit out of luck?",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
awj,6,"Yeah, it's honestly a very difficult problem. Half of being able to build *anything* with software lies in the things you can remain blissfully ignorant of. Not needing to care about a detail gives you the opportunity to accomplish other things with that time.

That all falls down in this kind of scenario. It's remarkably easy to accidentally build cyclical dependencies (or turn something *into* a cyclical dependency).

In the past AWS has been unable to report S3 outages *because the status page was hosted on S3*. Despite all the fun jokes to be made there, it does present a real/interesting problem. If you're AWS and your *status page* gets more traffic than plenty of big profitable services, how do you host it without creating this kind of problem? The obvious answer (use Google/Azure) isn't palatable to management, and ""go build an S3-alike that reimplements 3/4 of S3"" is a very expensive way to solve the problem.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,2,[deleted],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,2,"Yes, just build it bit by bit in assembler.

Assembler => shitty compiler => use shitty compiler so you can write code to make the compiler less shitty => repeat until your compiler is working fully

It's the bootstrapping process",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
marqis,1,I was talking to a guy at another cloud vendor once upon a time and he said they keep a lot of data in AWS for exactly that reason. It's hard to bootstrap yourself.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Wildercard,1,All I'm hearing is a potential for  Amazon Leftpad.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
yaku9,2,Hahahaha,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
eponerine,29,"When you’re talking about the authentication service layer for something the size and scale of Google, it’s not just “a set of distributed servers”. 

Geo-located DNS resolution, DDoS prevention, cache and acceleration all sit in front of the actual service layer. Assuming their auth stuff is a bunch of micro services hosted on something like k8s, now you have hundreds (if not thousands) of Kubernetes clusters and their configs and underlying infrastructure to add to the picture. 

At the code level, there could have been a botched release and rollback didn’t flip correctly, leaving shit in a broken state. If they’re doing rolling releases across multiple “zones”, the bad deployment zones traffic could have overwhelmed the working zones, taking everyone out. Or the rollback tooling itself had a bug! (That happens more than you’d think). 

At the networking level, a BGP announcement could have whacked out routes, forcing stuff to go to a black hole. 

Or it could be something completely UNRELATED to the actual auth service itself and a downstream dependency! Maybe persistent storage for a data store shit itself! Or a Google messaging bus was down. 

Point is .... for something as massive and heavily used as Googles authentication service, it’s really just a Rube Goldberg machine.

—EDIT—

For what it’s worth, Azure AD also had a very brief, but similar issue this morning as well. Here is the RCA from MSFT. The issue was related to storage layer, probably where session data was stored. 

Again, Rube Goldberg. 

=====•

Summary of impact: 
Between 08:00 and 09:20 UTC on 14 Dec 2020, a subset of customers using Azure Active Directory may have experienced high latency and/or sign in failures while authenticating through Azure Active Directory. Users who had a valid authentication token prior to the impact window would not have been impacted. However, if users signed out and attempted to re-authenticate to the service during the impact window, users may have experienced impact

Preliminary root cause: 
We determined that a single data partition experienced a backend failure.

Mitigation: 
We performed a change to the service configuration to mitigate the issue. 

Next steps: 
We will continue to investigate to establish the full root cause and prevent future occurrences.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
derekjw,26,"Some data must be shared. For example, I suspect there is some account data that must always be in sync for security reasons.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
edmguru,13,thats first thing I thought was something broke with auth/security since it affected every service,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
glider97,5,"Very possible, seeing as how YouTube was working in incognito. Comments were still down, though.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
The_Grandmother,29,100% uptime does not exist. And it is very very very hard to achive true redundancy.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Lookatmeimamod,17,"100% does not but Google SLO is 4 nines which means ~5 minutes downtime a month. This is going to cost them a fair chunk of change from business contract payouts.

And as an aside, banks and phone carriers regularly achieve even more than that. They pull off something like 5 nines which is 30 seconds a month. Think about it, when's the last time you had to wait even more than 10 seconds for your card to process? Or been unable to text/call for over a minute even when you have strong tower signal? I work with enterprise software and the uptime my clients expect is pretty impressive.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
salamanderssc,17,"Not where I live - our phone lines are degraded to shit, and I definitely remember banks being unable to process cards.

As an example, [https://www.telstra.com.au/consumer-advice/customer-service/network-reliability](https://www.telstra.com.au/consumer-advice/customer-service/network-reliability) \- 99.86% national avg monthly availability (October)

I am pretty sure most people just don't notice failures as they are usually localized to specific areas (and/or they aren't actively using the service at that time), rather than the entire system.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
granadesnhorseshoes,16,"Decentralized industries != single corporation.

There isn't one card processor or credit agency, or shared branching services, etc, etc. When card processing service X dies there is almost always competing services Y and Z that you also contract with if you have 5 9s to worry about. Plenty of times I go to a store and ""cash only. Our POS system is down"" is a thing anyway.

Also the amount of ""float"" build into the finance system is insane. When there are outages and they are more common than you know, standard procedure tends to be ""approve everything under X dollars and figure it out later."" While Visa or whoever may end up paying for the broke college kids latte who didn't actually have the funds in his account, it's way cheaper than actually ""going down"" with those 5 9 contracts.

Likewise with phones - I sent a text to bob but the tower I hit had a failed link back to the head office. The  tower independently tells my phone my message was sent and I think everything's fine and bob gets the message 15 minutes later when the link at the tower reconnects. I never had any ""down time"" right?

What phones and banks appear to do, and what's actually happening are very different animals.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
chuck_the_plant,3,">Plenty of times I go to a store and ""cash only. Our POS system is down"" is a thing anyway.

More often than not and judging by how old and tattered some of these signs are at some shops around my office, I suspect that these signs mean they (a) don’t want to accept cards anyhow, and probably (b) tax evasion is easier with cash.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
PancAshAsh,5,"Cell service drops more often than you think, the difference is phones are pretty well engineered to handle short service outages, because that is part of their core functionality.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
CallMeCappy,7,"The services are, likely, all independent. But distributing auth across all your services is a difficult problem to solve (there is no ""best"" solution, imho). Instead make sure your auth service is highly available.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
derekjw,2,"That’s where the fun comes in. At a simple level when a problem occurs, the more available a service is the less consistent it is (CAP). Consistency can be quite important for an auth system so there are limits to how available it can be if something breaks.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
BecomeABenefit,3,"SPOF's are impossible to remove. Example: DNS. One wrong DNS entry, and I can take down literally any service. That's why you have code reviews, rollback plans, etc.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,1,Because it's probably cheaper to make a few people in charge of the point of failure instead of implementing redundancies. Human capital is cheap in IT,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
the_angry_wizard,6,"The day I moved our gitlab repos to github, github goes does down. I take one day off and Google account services services go down. This explains the distinct lack of contact from my employer today. Sorry guys, I'll post here next time I plan a change internally.....",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Shiv-am,3,i thought my Oauth got fucked thankfully that was not the case but now will have to implement facebook auth just in case,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
padraig_oh,3,"since youtube worked if you were not logged in, and google search worked as well, i suppose the google account stuff was the broken part.

this is a weird thing to be broken though..",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
megasxl264,3,No commits on Fridays or Mondays!,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
slantview,2,"No ~~commits~~ deploys on Fridays or Mondays.

FTFY",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,3,Why not on a monday? Do people push bad code on mondays? Personally i find the first 2 days of the week to be my most productive,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
CyAScott,2,Post mortem Mondays. Any non critical bugs experienced over the weekend means spending the day chasing bugs.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
rydersdw,3,I seriously want to offer drinks for operations team of Google to handle the outage and work without Google to solve this issue!!!!!,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
JustACommonPCBuilder,3,"I was nearly late for a zoom interview because i had the link on my email. Logged on to my laptop, opened gmail to get the zoom link and got errors. Tried logging in incognito for it to say my email doesn't exist. Luckily had the link still on my phone so had to manually type it all out",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Beneficial-Glove-849,3,"YouTube wasn't working.

I thought it was the End of the World.😩👀",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
icjoseph,3,But their trees are probably well balanced and are easily inverted.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Turbots,3,"Devops is a culture, not a role. Change my mind.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Tediously,0,"My role is officially DevOps Engineer. Guess you're out of luck there, buddy.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Turbots,2,Is your name Brent?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Hanse00,1,"You’re right, but people like to bastardize things. Agile is also a very specific thing (I mean, it has a bloody manifesto) but people think “using kanban track work” makes you agile.

All that aside, last I worked at Google there was no DevOps anyway. It’s called SRE, and the org wrote a few books about it: https://sre.google/",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Garp74,3,Apparently the cause was a disk quota on the underlying storage of the auth layer.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
voyagerfan5761,1,r/CitationNeeded,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Garp74,5,"Hiya.  At the time I posted it, it wasn't public info.  It now is:

https://status.cloud.google.com/incident/zall/20013",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
voyagerfan5761,1,Appreciate it!,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
WingersAbsNotches,3,I permanently feel bad for their developers. A mono-repo with billions of lines of code sounds horrific.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
binarydev,3,"I’m a googler, and I honestly really appreciate it. I thought it was a terrible idea when I first heard about it during onboarding, but it actually has quite a few benefits that have strongly won me over since then.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Hanse00,1,"It’s actually great, I highly recommend it to anyone (I mean once you get to billions you might have some scaling issues using off the shelf source control systems).

What would make you think it sounds horrific? It’s probably a matter of how you think about organizing the work.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Nowhereman50,8,Google is so disappointed with the poor Cyberpunk 2077 release they've decided to hold the world ransom.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
GreatTragedy,6,This coming on the heels of that carrier services update they rolled out last week that killed SMS capability on tons of phones.  Not a good look.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
terrorerror,1,"I use Textra, and their bot alerted me to it and gave me a workaround (enable Messages). I wondered what that was about...",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
LewisgMorris,2,Mines working fine !! Got kicked out of chrome remote desktop but then all was fine after that.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
figurediask,2,Maybe it was an intern?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
pdnagilum,2,"We were in the middle of launching one of our clients new sites and had just put the site live, and all our colleagues started reporting Google services down. The obvious question was asked on our internal chat; What did we just do? :P",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
htrp,2,Can't wait for the debrief/postmortem blog post,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Kandoh,2,Man imagine getting woken up at 3am to that,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,2,"They must have turned it off and back on, working fine.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
DustinBrett,2,Outage or AI awakening?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Sure-Philosopher-873,2,It’s 2020 sooner or later even Google had to break!,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
cyclopsreap,2,"That's it, I'm switching to Bing!",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
pier4r,2,I am impressed this is not in /r/sysadmin,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Hanse00,1,"Those guys only harp on about their Microsoft products.

That sub should be renamed /r/windowssysadmin",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,2,Warning: Content may be high in sodium.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
audion00ba,2,"No, let's point and laugh at their CEOs.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Johnwavescar,2,This is karma for killing google music and making us use YouTube music,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
MacroJustMacro,2,We released a new feature yesterday that included clustering of thousands of markers in google map. This is probably my fault.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
gordonv,2,"So, I got Cloudfare, AWS, and Google on my bingo card.  Come on Azure. Come on! Everything else is under that free pass on the bingo card.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Shamalamadingdongggg,2,Have they tried turning it off and on again?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
mcdade,2,Did they try turning it off and on again?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Kuuuu,2,I gotta stop relying on one service for everything,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
damn_duude,2,"Man, bing can now afford rent.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Macluawn,4,"My headcanon is that there was a security breach, and google shut down all auth servers to kick them out as part of damage control.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
rush22,4,Shut them down. Shut them all down.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
grauenwolf,1,Did you see the Tom Scott video about the day when passwords were disabled in gmail and you could view anyone's email history?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Hanse00,0,You know that was a hypothetical right? It was a talk he gave to explore what *could* happen.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
grauenwolf,0,"And for his next trick,  u/Hanse00 will explain that Star Wars didn't really happen in a galaxy far, far away.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
goofdup,1,They did just release the news about the US government security breach yesterday.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Synyster328,2,Looks like we're getting a new version of the SRE handbook,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
irCuBiC,2,Cleaning lady took out the plug while cleaning?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,2,as more people use cloud we see how unreliable it is? this kind of stuff seems to be happening quite often between all these cloud providers,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
htrp,2,">“Today, at 3:47AM PT Google experienced an authentication system outage for approximately 45 minutes due to an internal storage quota issue,” a spokeswoman wrote in an email. “All services are now restored. We apologize to everyone affected, and we will conduct a thorough follow up review to ensure this problem cannot recur in the future.”

--- [Google Spokesperson](https://www.bloomberg.com/news/articles/2020-12-14/google-services-outage-hits-gmail-youtube-in-multiple-countries)


Why the hell would internal storage quotas affect auth (unless they ran out of space to store every login we've ever made).",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
nukem996,1,I'm guessing but I could see the logging service being unable to log which is recognized as an error causing authentication to fail. Security people want things fully audited.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Shadow703793,2,"Ahh yes, the planned outage to install the new NSA spayware in the data centers.

;)",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
san-mak,1,"Wolf Gupta, student graduated from WhiteHat Jr platform is suspected to be a man behind this because Google didn’t paid his salary on time. 😂

PS: Please take it as a joke. Pun intended. Don’t hammer me. 🙂",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,1,"Nah fuckem, they make more money than all of us. I don’t feel bad they are under pressure.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
YellowB,1,"""Google+ is down? NoooooooOOOooo!!!!""   

-No one",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
ballzwette,1,Fuck them all.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
kadolao,0,Fuck google and anyone that supports them.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
greenjm7,1,"Did anyone try unplugging it, then plugging it back in?  


Anyone look at the call stack? Run in debug. Come on people. let's offer solutions",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,0,"Devops teamS? The probably habe hundreds of devops teams. I dont think even k8 has only one team. But yes, they are being whipped atm i suspect.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
lofi_addict,0,Pray for their support team as well....,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,0,Thank fuck I just escaped their shitty ecosystem. Took forever to delete everything from Photos and Drive.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
kersurk,2,What did you move to?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
keepthepace,0,F,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Thunderkit101,-6,None of Google's services are down for me. I'm still able to search and go on YouTube..,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
The_Grandmother,10,It was resolved ~20 min ago,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
thnok,-1,F,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,-10,I wonder who is getting fired for this,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
chx_,12,"Noone. It doesn't work like that. Putting the very people who can pull you out of an outage under additional stress by the threat of firing is absolutely counter intuitive. _Everyone_ makes mistakes and at a certain size there must be protocols in place that makes it extremely unlikely any individual mistake to cause an outage. If it does, it's not the fault of an individual, it's the safety net -- made mostly from code review, CI and manual QA -- that failed. There's no I in teamwork.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,-42,[deleted],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Hanse00,1,"Have you ever been to the Googleplex in Mountain View? I suggest you go. You’re free to stroll around the outside of the campus.

Your imagined scenario is not correct.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,0,[deleted],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Hanse00,1,No. I worked there.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
John_Fx,-4,It was me guys. I was hacking someone’s Facebook for a friend.  It is my duty as a programmer.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,-16,[deleted],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
awj,10,Can we stop encouraging that attitude? People make mistakes. Shit happens. We need to push back hard against the idea that firing people is an acceptable default response to humans being humans.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
CodaDev,0,This whole ordeal sounds a bit more like carelessness than human error to me 🤷🏻‍♂️,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
zetaconvex,-5,I guess this what happens when they get Rob Pike to design a language specifically for people who aren't particularly good at programming. Or something.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Sumbooodie,-8,"Google has ""services""?",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
that_which_is_lain,-30,No.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
The_Grandmother,7,It was resolved 20m ago,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
that_which_is_lain,-2,Good for them,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
all__my_S0rr0w,-18,Someone is gonna get fired,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
ButItMightJustWork,26,"No. It is more valuable to keep people who make mistakes with such outcomes. Because they will learn and will do their best not to do the same (or a similar) error again in the future. If you go around punishing people for every mistake, noone will ever try to do something new again, in fear of getting fired.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Wynadorn,2,"On top for teaching all the devs that admitting to any mistakes is the last thing you want to do, happy bug hunting",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
yupitsGoV,8,Fire the person who probably knows much better than anyone else how to fix this issue? great idea,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,1,Haha I am pretty much relaxing by blaiming everything on Google.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
ATownHoldItDown,1,I am waiting on a final grade for my Cloud Application development course. We used Google Cloud exclusively. Guess that grade isn't coming today.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,1,[deleted],2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
OMGItsCheezWTF,3,The GCS management console I suspect. Or maybe the Google workspace admin console.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,-4,Google stadia,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Giacomand,1,At least it happened on a Monday,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
iDamso,1,F,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
someonedoneit,1,Working fine for me.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
philounette,1,I was suffering for them and I am not even part of google,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Deleted Account,1,19 of those minutes were waiting for the wfh tech lead to accept the MR on the revert,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
pure_x01,1,Reboot the services? Unplug and replug the powercords?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Grandfunk14,1,Good luck brave warriors of the google.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
camerontbelt,1,Aren’t they supposed to be like 100% code coverage on all their stuff?,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
SSTX9,1,"Fuck google, I just want reddit to load one video normally",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Cannacology,1,"Why have I been seeing this the past 24 hours? All my shit (Gmail, drive, YouTube) have been working just fine.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
IDKWhyImOnReddit_,1,.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
Humandisdaintopleas,1,Let’s take a moment to be thankful that our self imposed overlord is not yet immortal.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
The_Northern_Light,1,F,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
myringotomy,1,LOL. Most people here would happily make them miserable as long as possible. People here hate google with a passion normally reserved for despots and mass murderers.,2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
JessieArr,1,"I'm glad to see that their status dashboard is up even when everything else is down. I've seen a number of systems where the status page went down as well when there was a major outage and it was a big facepalm moment, heh.",2020,"Every single google service is currently out, including their cloud console. Let's take a moment to feel the pain of their devops team"
digitalshiva,562,It's a huge ambiguous role so every engineer will have weakpoints.,2024,Why is it hard to hire good Devops Experts ? 
SWEETJUICYWALRUS,198,"I have not felt challenged at work for quite some time. Then I went into DevOps and now I'm putting together pretty much everything I've learned over the years into one role. I'm a sysadmin with 8 years of experience and I feel like a very junior DevOps engineer, so I'm not even slightly surprised people have a hard time hiring. The amount of self study for this role is far beyond what many people would be willing to do.",2024,Why is it hard to hire good Devops Experts ? 
YouDoNotKnowMeSir,138,"Rabbit holes everywhere. You need to fundamentally understand your tech stack and how it all interconnects upstream and downstream. Amazing for life long learners, but my god some days it can be a drag.",2024,Why is it hard to hire good Devops Experts ? 
nucc4h,33,"I use the word rabbit hole once to twice a week. It's fantastically interesting to discover, but the details certainly become unnerving.",2024,Why is it hard to hire good Devops Experts ? 
UncleKeyPax,19,"""Yeah but how soon can you put it in production fully automated and monitored alerted to shit and self healing FML. "" Bro chill I need more people while I grab the info from your sme who is the guy that only used the app on prem while I am learning your corpo specific tools.",2024,Why is it hard to hire good Devops Experts ? 
nucc4h,3,"Nice part of being a consultant. I didn't do it or agree to it? Not my problem. There are a good 50 channels that are straight up muted because their idea of monitoring is throwing alerts for everything and mixing real problems with mountains of shit.

I stopped giving a shit after the 10th time of a no budget/over budget response. #1 reason I'll take the disadvantages against being a pawn to someone who can't connect two brain cells.

/rant cause I had one of these today, had enough and dressed someone (a PM, don't blame the drones).",2024,Why is it hard to hire good Devops Experts ? 
Willbo,8,"Yes and being able to identify and navigate these rabbit holes makes all the difference. Many of these rabbit holes can be bottomless pits of spending and despair, only to be realized after significant research.

* Dev does initial investigation that turns into rabbit hole = 2-3h man-hours. $

* Manager orders collective death march into rabbit hole = hundreds.. thousands of man-hours wasted before anyone says anything $$$$$

With the amount of complexity increased in the last 5 years, the latter is becoming waaay more common than measured or realized. Cloud spending bill go brrr. Most companies don't know what they don't know, and they are going to spend LOTS of money before they figure it out.",2024,Why is it hard to hire good Devops Experts ? 
Jose_Canseco_Jr,1,"your rabbit holes are only 2-3 hrs deep?

_l u c k y_",2024,Why is it hard to hire good Devops Experts ? 
nucc4h,1,No what he meant was it's 2-3h to go down the rabbit hole. Many more to get back out 🙂,2024,Why is it hard to hire good Devops Experts ? 
nucc4h,1,"I particularly love it when the rabbit hole is outsourced. Next thing you know, it's some hundreds of hours later and all the conclusions are assumptions or straight wrong.",2024,Why is it hard to hire good Devops Experts ? 
throwaway0134hdj,1,"I feel like that’s development in general, just a series of rabbit holes you go down until you discover (or don’t discover the answers). Like a recursive tree going down various branches.",2024,Why is it hard to hire good Devops Experts ? 
MulberryExisting5007,22,"I’m often the expert in the conversation, but only because I know marginally more than the other three ppl on the call.",2024,Why is it hard to hire good Devops Experts ? 
carsncode,24,It's amazing how often you can be the expert in the room on a topic you spent 30 minutes researching and hadn't even heard of the week before,2024,Why is it hard to hire good Devops Experts ? 
BetterFoodNetwork,5,"Or the expert on a Zoom call because you're a fraction of a word per minute faster at sifting through BS while things are burning to the ground, lol.",2024,Why is it hard to hire good Devops Experts ? 
YouDoNotKnowMeSir,7,The cycle won’t break because you’re “the guy” now,2024,Why is it hard to hire good Devops Experts ? 
Operation_Fluffy,11,And the stress. OMG the stress.,2024,Why is it hard to hire good Devops Experts ? 
YouDoNotKnowMeSir,6,"My hairline ain’t what it used to be, that’s for sure. Hear Turkey is beautiful this time of year though. 😂",2024,Why is it hard to hire good Devops Experts ? 
webstackbuilder,2,"Turkey is beautiful all times of the year. It's a great place to vacation (and maybe to live, idk).",2024,Why is it hard to hire good Devops Experts ? 
markole,3,You have missed the hair transplantation joke.,2024,Why is it hard to hire good Devops Experts ? 
webstackbuilder,2,Do'ht! I thought it was a dinner joke.,2024,Why is it hard to hire good Devops Experts ? 
livebeta,1,Turkey looks especially great the fourth Thursday of November,2024,Why is it hard to hire good Devops Experts ? 
Jose_Canseco_Jr,1,gobble gobble motherf*cker,2024,Why is it hard to hire good Devops Experts ? 
webstackbuilder,1,"Can you elaborate? The aspect that seems to stress other people out greatly are incident responses. I hate it for the company, but I have the exact opposite feeling about it than others.

I've worked with some great incident managers, though, where a large group of people effectively become a single well-oiled machine solving a difficult problem. It feels like being in NASA space control (at least I imagine so) when something goes wrong, and the talent of everyone contributes to bringing the astronauts home safely.",2024,Why is it hard to hire good Devops Experts ? 
saulgoodman_london,1,"Can Gen AI play a good role in helping ease these issues, in terms of educating on the spot in today’s landscape and potentially with automation in the future ?",2024,Why is it hard to hire good Devops Experts ? 
livebeta,1,is GIGO and will regurgitate a five year old stack overflow solution that's also inaccurate and outdated,2024,Why is it hard to hire good Devops Experts ? 
throwaway0134hdj,1,Yep. You need to have a Birds Eye’s view as well as an ants view of the application. It’s too much for one person.,2024,Why is it hard to hire good Devops Experts ? 
jaydizzleforshizzle,1,"And depending on the complexity of your devs environment, I was supporting nasa engineers doing robotics work. I could never really replace the devops guy who left, managing linux hardware at that level is too much, their containers would spin up 20 services that monitored and talked in real time to perform things like SLAM and object recognition.",2024,Why is it hard to hire good Devops Experts ? 
ukralibre,0,Rabit holes that can become obsolete at any moment. Also after ChatGpt my know-it -all costs even lesss,2024,Why is it hard to hire good Devops Experts ? 
Posting____At_Night,29,"I think self study is the key. I just did a round of interviews for a couple positions at my company, and that was the thing we were looking for above all else.

Yes, we want you to have some experience with the tools of the trade, but we mostly wanted to hear signs that you're able to figure out solutions to problems you've never seen before, present the options, and make an educated decision on which one is the best. I'd take a self motivated junior who's good at picking things up over a senior that's stuck in their ways any day. Specific technical skills can be taught. Problem solving and critical thinking, not so much.",2024,Why is it hard to hire good Devops Experts ? 
Deleted Account,14,"Even then - I have long experience in Linux and networking from labbing, worked for 5 years in nominal DevOps roles and sometimes code until 2am after work. Currently applying to my first ""real"" medior cloud engineer position and Jesus Christ, it's a wholly different level. ""Feel comfortable to give an AWS summit talk"" is a 6 on their self-assessment scale... for 20 different skills. I have no idea how it would be humanely possible to get to this depth.",2024,Why is it hard to hire good Devops Experts ? 
Posting____At_Night,16,"The trick is that you don't actually need to keep that much in your head. If you're using every service AWS offers, you're probably not doing it right. It's kinda like C++ (which is where my background is). *Nobody*, not even Bjarne Stroustrup himself, knows all of C++, and you certainly shouldn't be using all of it. Any given project only needs a subset of the lang. You just have to know generally what exists, and keep a mental note of ""oh, this thing I heard about might be good to use here,"" and that's the point at which you actually dive into the specifics.",2024,Why is it hard to hire good Devops Experts ? 
NUTTA_BUSTAH,18,"You also start to see the linux box behind the productized abstractions, the ""CRUD"" of the trade (it's always storage, compute, networking). And suddenly you are fairly fluent with multi-cloud.",2024,Why is it hard to hire good Devops Experts ? 
Posting____At_Night,8,"Yep, if you dig down basically all of AWS's services are just glorified EC2. Same with the Azure and GCP equivalents.

We get 95% of the work done at my org using only ECS, RDS, and Lambda (plus some iam, vpc, eventbridge and secretsmanager stuff to glue it all together)",2024,Why is it hard to hire good Devops Experts ? 
Sad_Recommendation92,1,"That's partly why I believe DevOps focused roles are specialization roles and not something for entry level, you need a certain amount of support and troubleshooting experience where you've had to look under the hood a few times and had to resolve some obscure OS / Server issues.

I find entry level tends to lack this awareness of the OSI model and some of the gnarlier infrastructure concepts, and can see The Matrix lying behind a productized abstraction layer.",2024,Why is it hard to hire good Devops Experts ? 
painted-biird,2,"While it’s encouraging to hear this being said- I’ve heard it quite a bit online, but have yet to hear it in-person at an interview (or see the commensurate actions).",2024,Why is it hard to hire good Devops Experts ? 
Posting____At_Night,1,"We're a small shop, I was the only devops person there for a solid couple years until we did a round of hiring recently. From my anecdotal experience, you're more likely to get the sentiment the smaller the org is, since having the ability to learn to wear many hats is far more important at those smaller scales.",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,Completely resonate with you on this.,2024,Why is it hard to hire good Devops Experts ? 
pinklewickers,13,">I'm a sysadmin with 8 years of experience and I feel like a very junior DevOps engineer

Trust me, that feeling never leaves you but it's actually a _good thing_. It means you care, it means you're humble enough to recognise you aren't a propeller head, and hopefully you're a great person to work alongside.

There are those I come across absolute tech mentalIsts that are seemingly amazing at everything, but trust me, they're not.

They might be great at low-level debugging, but absolutely terrible at building relationships.

They are great at writing an app or script that is technically amazing but nobody else in the company can decipher.

Also, the pace of development in IT these days is *insane*. Just ""keeping up"" is an achievement in itself. Anecdotally, I was blown away by Claude today due to a change in the way I prompted it?

Who'd have known an LLM would seemingly perform better to more human-like input and positive encouragement? 

Melts my mind, you poor, poor bastards.",2024,Why is it hard to hire good Devops Experts ? 
saulgoodman_london,1,Can you please elaborate on how you have changed the prompts to Claude with an example,2024,Why is it hard to hire good Devops Experts ? 
riickdiickulous,2,I feel like I’m not getting credit for a lot of learning when I have to say I only have a bachelors degree. I have at least a masters in the DevOps role 😄 (as a mid level devops engineer),2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,Perfectly put !,2024,Why is it hard to hire good Devops Experts ? 
webstackbuilder,1,"I feel the same things you are (love the challenge, it bringing lots of things together).",2024,Why is it hard to hire good Devops Experts ? 
james-ransom,77,"As long as you know terraform, k8s,eks,gcp, aws, python,salt,linux,gitops,networking,security,azure,bash,argo,grafana,prometheus, ,cloudflare,emails systems, l7-l4 lbs, ingress controllers, queue systems,datadog,nosql,dataflow,unit testing,integration testing, postgres/mysql database replication,docker,nginx,npm ALL in stressful production env......  it isn't that bad.  Here is handy roadmap! [https://roadmap.sh/devops](https://roadmap.sh/devops)",2024,Why is it hard to hire good Devops Experts ? 
BrocoLeeOnReddit,35,"Yes and of course ""know"" doesn't mean ""I know how to open a port and create subnets"" when it comes to just network, it means stuff like BGP, VLAN, VPN, WAF, complex routing, proxies etc.",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,7,Oops ! I read your comment after adding mine ! Same pinch 😄,2024,Why is it hard to hire good Devops Experts ? 
stocktaurus,1,"Yes, networking & shell scripting are essential for devop engineers! They need to be paid more for all these skills.",2024,Why is it hard to hire good Devops Experts ? 
Obscure_Marlin,1,Where do I sign up!,2024,Why is it hard to hire good Devops Experts ? 
AstraeusGB,1,"And if you don't have 15 years of experience in each of those right out of college, then you aren't hirable!",2024,Why is it hard to hire good Devops Experts ? 
cerealShill,1,I like this roadmap,2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,-2,"Yup. I would just add know ( at atleast intermediate depth and not at surface level, and be able solve real world problems). What you think?",2024,Why is it hard to hire good Devops Experts ? 
therealtaddymason,13,"Our struggle has always been people who have a combination of good troubleshooting skills (this seems particularly difficult to teach) as well as a comprehensive understanding of systems.

They'll know their piece/s but then either fail or choose to not understand the larger ecosystem so are only effective in specific cases. 

Troubleshooting as a skill is even harder because there are so, SO many people that expect a completely comprehensive run book laid out for them or hand holding through anything that isn't immediately familiar.",2024,Why is it hard to hire good Devops Experts ? 
Subject_Bill6556,19,"the interview process i created using k8s is a straight up troubleshooting session with problems that stack on top of each other while you work to deploy the app successfully. Ive managed to hire good several candidates from India for our new company there. ZERO algo/ds/da questions or coding questions. People need to stop that shit. Troubleshooting knowledge, for me, is a leading indicator of success potential, not solving f-ing algos. We even allow chatgpt and googling during the interview as long as we get to see what you are searching for. I want to see HOW people use the tools they have and how they think.",2024,Why is it hard to hire good Devops Experts ? 
hombrent,8,"This is very similar to my interview technique now.  Give them a pre-setup AWS account with a set of problems to solve, and let them work on it.  It's copied from the best interview I ever received.  You don't need to know everything off the top of your head - the interview is better if you don't - you can google it to find out / learn what you need to.",2024,Why is it hard to hire good Devops Experts ? 
webstackbuilder,5,"The leetcode screening is just a proxy for IQ tests like Stanford-Binet, which are problematic in hiring. And IQ is highly correlated to ability to troubleshoot (or any other complex cognitive task). So they're not worthless as a screening tool.",2024,Why is it hard to hire good Devops Experts ? 
Ciff_,3,Leet code is mostly a memory competition tho,2024,Why is it hard to hire good Devops Experts ? 
AdrianAlter,2,"ya got any reference for the ""iq correlated to troubleshoot""? Cause im great at it but suck at algos, now you're giving me confidence xD",2024,Why is it hard to hire good Devops Experts ? 
webstackbuilder,1,"As a caveat, IQ isn't the only vector of human intelligence. It's just the easiest to measure in a quantitative way. Other forms of intelligence are usually evaluated very subjectively, like musical talent or aptitude for languages.

IQ is a measure of pattern recognition ability. Troubleshooting is generally a process of recognizing patterns in available input (like log files) and projecting a range of possible causes and solutions. It's conceptually very similar to the standard IQ test where you are given an isometric drawing of a complex object in three dimensions, and asked to identify the correct two dimensional drawing for a specific view (plane) of the object.",2024,Why is it hard to hire good Devops Experts ? 
Euphoric-Golf-8579,3,this is a great step in interview process.  others should follow this.,2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,This is the ideal interview process for devops imho. 👍🏼,2024,Why is it hard to hire good Devops Experts ? 
Ok_Negotiation598,1,This sounds like a voice of enlightenment if you ever need new employees let me know!,2024,Why is it hard to hire good Devops Experts ? 
peepopowitz67,8,"""why is it so hard to hire a relatively undefined role that is the combination of like 5 jobs?""",2024,Why is it hard to hire good Devops Experts ? 
Taoistandroid,4,"I want you to do all the things, and the hardest thing of all. Steer this impossible to steer org to make the changes they desperately need to make whilst I give you no agency at all.",2024,Why is it hard to hire good Devops Experts ? 
jordanpwalsh,5,I think this is the answer. I was once flat out rejected because I didn't have any Azure experience. I don't have that because I have spent my time with other cloud providers.,2024,Why is it hard to hire good Devops Experts ? 
webstackbuilder,1,"In fairness, Azure is often tied to the larger Microsoft ecosystem. Experience with any of AWS, GCS, or OpenStack is easily transferable to the other two. Experience with Azure encompasses that + knowledge of a whole range of systems, products, and practices beyond the cloud.",2024,Why is it hard to hire good Devops Experts ? 
jordanpwalsh,3,"I know. azure is a weak point of mine. Doesn’t mean I’m bad, i just have no need for it.",2024,Why is it hard to hire good Devops Experts ? 
26J-stroke-6,1,Agreed: I never had to touch Azure until they were offering free GPU credits for new AI companies.  That’s like free candy at a parade!,2024,Why is it hard to hire good Devops Experts ? 
PerryEllisFkdMyMemaw,2,"Well that and hiring managers are snobby about those weak point so they don’t hire and give people experience, which further constrains the pipeline of experienced DevOps engineers.

I’d love to be in DevOps and have a large breadth of knowledge around cloud, DE, DS, sysadmin, but anytime I’ve landed an interview for DevOps I seem to get rejected at the hiring manager stage bc I don’t have enough/any experience in a couple specific things (which I’d love to learn).",2024,Why is it hard to hire good Devops Experts ? 
Aronacus,2,"This is it! 

I do a lot of devops work. [Scripting to automate workloads]  I have 25 years in IT and typically write in 3x programming languages, but the killer isn't the coding.

It's that most companies don't document their APIs properly.  I have found countless issues with API's and almost feel like i should make a website to name and shame companies on it.",2024,Why is it hard to hire good Devops Experts ? 
Quick_Turnover,2,"It’s also not a tool, or an architecture, but a cultural shift. As you say, it’s an extremely overloaded terminology with a bunch of overloaded sub-terms. Then once you *do* get down to the technical implementation details, there are 100 tools that can be fit together in various ways to accomplish the tasks.",2024,Why is it hard to hire good Devops Experts ? 
Deleted Account,167,[deleted],2024,Why is it hard to hire good Devops Experts ? 
bsedg,66,And the problem with hiring that person is that the company is not willing to pay for it.,2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,"Some are not, some are. The complaint is same though.",2024,Why is it hard to hire good Devops Experts ? 
ImpactStrafe,19,"Honestly? It isn't for those willing to pay.

I've worked at companies that complained about it.

My last two companies haven't.

The difference?

My current company pays $250k base + meaningful equity (400 tc), is fully remote, and has a great culture and team.

The last company? Same thing. 250k+ base, 400k tc.

Neither had problems. We were overloaded with candidates, had basically our pick, and have built an extremely strong platform engineering team because of it. Mix of devs who know infra and infra engineers who can write app code. 

You get what you pay for",2024,Why is it hard to hire good Devops Experts ? 
webstackbuilder,0,"what is ""400k tc""? I've never worked a position that had equity.",2024,Why is it hard to hire good Devops Experts ? 
ImpactStrafe,5,"Total comp.

I.e. 250k in base salary and 150k per year in equity (options, rsus, etc)",2024,Why is it hard to hire good Devops Experts ? 
webstackbuilder,1,"Is that actually true, though? I have a certain dollar figure in my head of what I'm worth and what is justifiable in terms of value that I add. It seems like there are employers who agree. I wonder if people have convinced themselves they're worth more than they actually are / what they contribute.

I'd love other's take on that, in particular specifics. My goal is to bill $120/hr USD (not there yet but moving towards it and feels achievable) and to maintain full time (40 hr/wk) employment 50 weeks a year, freelance.",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,-1,You mean lower than what you are making right now? Or lower than what you deserve ?,2024,Why is it hard to hire good Devops Experts ? 
Obvious-Jacket-3770,9,"It's not either of those, it's what the role should realistically be paid.",2024,Why is it hard to hire good Devops Experts ? 
ISaidItSoBiteMe,38,"Companies want a wizard but only want to pay 65k USD and expect him/her/they to know every language, every OS, every CICD platform, every SecOps tool, be available 24/7x365. When they can’t find anyone, they complain, find an offshore that doesn’t do any of this, half the price, get 2-3 guys and still complain",2024,Why is it hard to hire good Devops Experts ? 
rice_bledsoe,10,"i made the mistake of accepting a lowball offer (SRE) to work for a company / team that had no dedicated SRE or DevOps but let the duties fall to the software director and the technical manager mostly. I got blamed for not taking on knowledge quickly enough while being paid near entry-level salary. They laid me off after 6 months and I landed a job soon after with a significant pay raise and title, which sounds like humblebragging -- or straight up lying on the internet -- but I'll be honest, I was so pissed with how the previous job was handled I felt the need to overcompensate and bust my ass. That with a little (lot) of luck and here we are.

The point is, companies and teams don't know what to do with devops and sre a lot of the time. They see a title and they all think different things. The worst types of jobs are the ones where devops / sre falls on one person, who gets no flowers when things (everything's fine, what do you even do?) are working and plenty of blame when things aren't working (things aren't working, what do you even do?)

This combined with the hardest part of devops / sre: integrating technologies that are new / esoteric and not a lot of documentation for it, so you have to create your own tools, but learning those technologies don't have a ton of carryover to the next company who has no use case for it.",2024,Why is it hard to hire good Devops Experts ? 
Deleted Account,5,[deleted],2024,Why is it hard to hire good Devops Experts ? 
26J-stroke-6,2,"I’m a tech boomer (42 yrs coding, poorly) and I feel your pain.

Always talk from the pain that is currently felt, or will be felt if it’s a “risk of” situation, then leave the decision in their hands.

As the reasons for/against are discussed, note down the comments and opinions with names.  Follow up after researching.",2024,Why is it hard to hire good Devops Experts ? 
26J-stroke-6,1,"My last job, I was an E6 among E5s and E6s, but since I was in Canada, I was paid halfway between E3 and E4.  My US colleagues paying 37% tax made nearly double than I did before my 57% tax came out.  I was a total patsy at that poker game.",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,3,"Well put ! The emphasis should be to hire someone with potential, and then mentor them or give them enough resources and time so that they can build those skills.",2024,Why is it hard to hire good Devops Experts ? 
saggingrufus,2,"The secret behind devops is to take a step back and stop using buzzwords. It's a team methodology, not a job title XD",2024,Why is it hard to hire good Devops Experts ? 
NiceStrawberry1337,173,"I am guessing you are coming from the recruiting side of the house... First issue a lot of people face is hiring a devops ""expert"" into an environment that is not built for devops culture and agility. Second looking for a devops ""expert"" is like finding a mechanic that can work on ALL combustion engines but also make the tech debt steam boast run faster than a jet.",2024,Why is it hard to hire good Devops Experts ? 
Warsoco,12,This,2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,-32,"Not recruiting but I am a corporate trainer and see both sides of the issues. People struggling to hire people with depth of skills , at the same time prospective Devops engineers wanting to make a career and struggling as they do not have access to real world problems. So it puts me in a very unique position and  mine is a very objective perspective. The reason why I ask this q is to provoke people to start finding the root cause and fix it, together.",2024,Why is it hard to hire good Devops Experts ? 
NUTTA_BUSTAH,29,"We are way past that. Todays technology is so god damn complex and the majority of that complexity just happens to fall to the infra/ops. The only thing that is doable, and what most good shops are already doing, is sharing most of the responsibilities with the development side of the shop. ""You write it, you own it. Ask the linux beards why your full stack design will not work in production and you are good.""

To keep the complexity at a minimum, you should be hiring the best architects you can find. Not the management type architects. Actual architects. Those people set the future of the companys technology, and it's a really hard pit to dig yourself out of (for example, not being able to hire anyone competent enough to the insanity at hand)",2024,Why is it hard to hire good Devops Experts ? 
HarmlessSponge,15,"Ugh, exactly this. We have a breadth of dev teams in terms of experience and maturity, and some of the teams are forever whinging about ""why can't I use X"" and ""I need permissions to do Y"". 

Every time it comes up it's like the Architecture team chose tech Z for myriad reasons, one of which being we already use it and 75% of the company devs know it so it makes sense? Go harass them for change instead of your Dev Enablement team please",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,-21,"I agree on the Architect part. Not on devs owning everything, which is neither feasible nor efficient.",2024,Why is it hard to hire good Devops Experts ? 
NUTTA_BUSTAH,25,"It is the most efficient. That's why the ""DevOps role"" is turning into a Platform engineer role. Throwing shit over the wall (i.e. not owning anything) is the worst. It blocks everyone, it creates bad solutions, drops the quality, burns out your ops and is risky in terms of bus factor. It also slows you down quite considerably.",2024,Why is it hard to hire good Devops Experts ? 
Deleted Account,5,[deleted],2024,Why is it hard to hire good Devops Experts ? 
PanZilly,2,"It doesn't really matter if they wish to call it devops engineer. As long as they understand what skills they're asking. I agree on ops or platform engineer, which is most often what they need",2024,Why is it hard to hire good Devops Experts ? 
edgmnt_net,1,"It's very confusing, most DevOps roles I've seen flung around are more or less asking for someone that can install Jenkins, deploy stuff with Terraform, that sort of thing. Meanwhile the very existence of the role hints that the company isn't really willing to do actual DevOps and it's instead trying to build silos.",2024,Why is it hard to hire good Devops Experts ? 
GGxSam,2,"Why would it not be feasible or efficient? In fact, what even is the alternative?",2024,Why is it hard to hire good Devops Experts ? 
Stephonovich,2,"Competent ops teams that maintain a VERY limited set of tech that is boring and well-understood.

Devs can deploy to said infrastructure, and also own application issues.

You want some new shiny tech? Explain in detail why what we have doesn’t work, demonstrate you know how the new stuff works in explicit detail, and show real-world usage under load. Can’t do that? Don’t use it.

This model slows development, but holy shit does it make everything more stable, and ops doesn’t hate their life quite as much.

I _hate_ DevOps. It’s the worst of all worlds, because no one ever knows how shit actually works, they just know how to install new stuff.",2024,Why is it hard to hire good Devops Experts ? 
PanZilly,-5,"Devs owning everything is a devops anti pattern.

The alternative is dev and ops _collaborating_ and owning everything together - aka devops",2024,Why is it hard to hire good Devops Experts ? 
kahmeal,5,"Owning everything does not mean the infrastructure it runs on; However, it does mean understanding what that infrastructure is and how your application interacts with it as well as taking part in troubleshooting problems when they go beyond infrastructure level. This is from a mid to large size perspective. Startups and similar sized outfits often do have devs own everything down to the cloud services that run their applications. Perfectly reasonable at that size, imo.",2024,Why is it hard to hire good Devops Experts ? 
PanZilly,1,"I think you misunderstand what I mean. Owning the entire stack and process is not something that is (or should be) done by one role. Devs shouldn't own the infra, they should understand it. Just as much that infra engineer shouldn't own everything but needs to understand what the infra is for. The owning is done by all the roles collaborating. In teams and across teams. Aka devops.

Perhaps in a small <5 engineer startup we can have a couple of devs who find themselves doing infra. Bc they have to. As soon as they grow, they'll expand their team with the relevant expertise.

Been there done that, I did application development, set up pgsql, some productivity engineering like teaching the others about git, delivery and delivery pipeline, install and manage the servers (iron), later on move everything to cloud, logging, monitoring, customer support, 3 of us owning fucking everything bc we had to. First thing, looking at the expertise between the 3 of us, we got ourselves someone to manage ops and infra. The next expertise that we lacked was ux.

I'm now in a ~500 engineers company and we have a team managing infra, a platform team that turns that infra (k8s) into something the application teams can use (like managing helm and argocd), and an enabling team with a deep understanding of build and delivery pipelines. Application teams own everything because they are not devs, they are devops. Dev, qa, ops collaborating.

These teams aiding the application teams are not devops engineers. They are all those separate roles (also including dev and qa), working together, combining their expertise. 

This is OP's problem in a nutshell. Bc wtf is a devops engineer. The company needs to know which expertise is needed exactly in their specific context",2024,Why is it hard to hire good Devops Experts ? 
kahmeal,1,"Yea you really did need to expand on that. Well done, though; I agree.",2024,Why is it hard to hire good Devops Experts ? 
HeligKo,102,I generally assume when a company is struggling to fill a role like this they have poor job requirements and/or aren't willing to pay enough for what they are looking for.,2024,Why is it hard to hire good Devops Experts ? 
effyverse,51,"""can't find the right fit"" screams  ""you will be the entire dept but without a budget for tools and yourself""",2024,Why is it hard to hire good Devops Experts ? 
Extension-Store6763,21,"Or they simply don't understand how to interview. Senior eng or HM is living in their own little bubble on the left side of the Dunning Kruger curve.

1. They will ask very specific questions on things that objectively don't assess anything.

2. Candidate doesn't know the answer.

3. ""Dang all these candidates with surface level knowledge!""

Edit: left side of the curve",2024,Why is it hard to hire good Devops Experts ? 
writebadcode,5,"Oof I ran into this. The hiring manager asked me how check a git repo for updates without downloading anything. I was stumped because that’s pretty obscure.

Turns out he thought “git fetch” didn’t download anything…",2024,Why is it hard to hire good Devops Experts ? 
tuna_safe_dolphin,2,"LOL, I’ve been thrown off by interviewers like this who don’t understand their own questions. At least they give you a preview of what the company culture is like. :)",2024,Why is it hard to hire good Devops Experts ? 
schwarmo,14,It's always pay and conditions. They want the best for £12.,2024,Why is it hard to hire good Devops Experts ? 
Got-Dawg-In-U,2,This. You get what you pay for. Good devops people should be getting $200k minimum for their role in keeping the systems humming. ,2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,-11,Not always!,2024,Why is it hard to hire good Devops Experts ? 
webstackbuilder,1,"Not sure why this comment got downvoted. I've heard more than once from people trying to staff these kinds of positions that they can't find the right people, regardless of where they are in the normal salary band for the job.",2024,Why is it hard to hire good Devops Experts ? 
rwa2,15,"Besides DevOps is a culture, not a role.  Even with that stuff they're not going to be able to solve their culture problem by ""hiring a DevOps """,2024,Why is it hard to hire good Devops Experts ? 
Deleted Account,3,[deleted],2024,Why is it hard to hire good Devops Experts ? 
rwa2,1,"In small companies you can just hire a ""team of one"", sure.

Anything midsize or up that I've worked for would hire a consultant like OP to teach their existing teams how to change their culture to be less like ITIL or individual silos and apply more agile or devops mentality to their processes.  There's generally no ""one size fits all"" approach for every industry, they all have little customizations and the existing people have the domain specific knowledge to best implement them. The culture doesn't change with one or two new hires, it takes a certain critical mass in multiple teams.

That, or I've also known directors who just take their entire team with them every time they change employers.  That's an approach.",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,-6,Also a role imho for all practical purposes.,2024,Why is it hard to hire good Devops Experts ? 
rwa2,13,"It's certainly a collaborative mindset and skillset.

Problem:  Barriers between Devs and Ops.  

Solution:  Work more closely together so you're not just throwing deliveries and issues ""over the fence""

Corporations who don't understand DevOps:  Hire a DevOps team to sit between Devs and Ops.   Congratulations, now you're throwing support tickets across two fences.",2024,Why is it hard to hire good Devops Experts ? 
angellus,12,"It is not a role. That is the problem. Nearly every company I have seen that has a ""DevOps Engineer"", their job description actually says, ""System Administrator that knows how to use git/Terraform/Ansible"". The better and more ""modern"" title for that is Cloud Engineer, but sysadmin still works if you have onperm stuff, but onperm and cloud are usually pretty similar nowadays. Just different Terraform providers/knowledge sets.

An actual ""DevOps"" role would basically mean Cloud Engineer/sysadmin (infrastructure, mostly ops) + SRE (alerting/APM/reliability, a bit more dev but mostly in between) + Platform Engineer (CI/CD + developer tooling, mostly dev). It is _way_ too broad of a role unless it is a really small team.  ""Fullstack"" roles are bullshit and are just a lazy way to mean ""we do not want to hire more specialized people"". Either everyone is bad at everything, or they are really only good at one thing and do not really care about the rest/do it poorly. 

Places often just say DevOps to mean Cloud Engineer and completely forget about the SRE + Platform Engineer parts. Either no alerting/APM tracking or very basic done by the sysadmins. And then making sysadmins make CI/CD pipelines and that are completely useless for improving/enforcing code quality or optimized for developer workflows.",2024,Why is it hard to hire good Devops Experts ? 
PanZilly,5,"I asked gemini to summarise for me what cncf says a devops engineer is.

'DevOps engineers play a crucial role: They bridge the gap between development and operations, automating processes, breaking down silos, and fostering a culture of continuous improvement.
 * Key responsibilities of a DevOps engineer might include:
   * Automating infrastructure provisioning and management
   * Implementing CI/CD pipelines
   * Monitoring and troubleshooting production systems
   * Collaborating with development teams to improve software delivery processes'

This is precisely why it's such a difficult hire. Not many people are cloud engineer, platform engineer AND sre, and on top of that have a deep understanding of how software development works.

And even AI, when asked to look at cncf, literally says 'collaborating with development teams'.

Stop trying to hire a 'devops engineer', instead, look at what your company/client needs. A dev with a deep understanding of how to improve and automate the build process? A platform engineer? An sre? An architect? A traditional ops who knows how to improve and automate the delivery process?

And here, gemini didn't even mention security. Perhaps you need a security expert.

All that said, ok, fine if you wish to call it devops engineer. Just make sure to ask for the right skills for the right reasons",2024,Why is it hard to hire good Devops Experts ? 
LordWecker,3,"But a very different role...

I believe in unicorns.  I believe there are people who can design, develop, automate, and fully run their systems, and have the ability to bridge teams, train everyone, and work on company policies and culture.  However, I don't believe that even such people could ever have the time to do both those things.

Do you want me fixing that pipeline or teaching engineering managers the importance of a healthy DevOps culture.  I can do either, but they're both full time jobs.",2024,Why is it hard to hire good Devops Experts ? 
NewPresWhoDis,1,Porque no los dos?,2024,Why is it hard to hire good Devops Experts ? 
TwoWrongsAreSoRight,31,"You asked team leads, managers and startup founders.  The question in your topic is incomplete.  You should add ""at sub industry rates"".  There's many good ""devops"" engineers out there but the good ones aren't going to work for free.  I find the people who complain about it being difficult to find good employees are the real problem here.  They tend to underpay and overwork their people to the point they are barely making minimum wage with the number of hours they have to put in to compensate for the cheapness in other areas of the companies infrastructure.",2024,Why is it hard to hire good Devops Experts ? 
NewPresWhoDis,1,">You should add ""at sub industry rates"".

I thought that's just assumed in this market.",2024,Why is it hard to hire good Devops Experts ? 
TwoWrongsAreSoRight,1,Not always.,2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,-10,Not necessarily. I get to interact with folks from to from some of the top product companies of the world as well who are willing to pay good numbers. The complaint is people do not have enough depth of skills.,2024,Why is it hard to hire good Devops Experts ? 
wevanscfi,23,"Put some numbers where your mouth is on “good numbers.”

I’m a DevOps / Platform engineer with 15 years of experience. I’ve been the primary architect building out the stack for multiple companies that have hit 1 billion plus in market cap. The last time I worked full time it was at 375 base. I currently pull in about 800-900 knocking out fix price contracts working a few hours a week.

I constantly get bombarded with job postings offering 120-140 for senior and staff positions that are expecting someone to come in and fix the entire engineering department’s last 5 years of mistakes and save the company.",2024,Why is it hard to hire good Devops Experts ? 
Obvious-Jacket-3770,17,"That's not the problem, depth of skill.

The problem is you are slamming what should be multiple DevOps positions into one hoping for a unicorn. You should post an example of what you are looking for so we have more context. You don't have to include things like salary or the company, just in the qualifications areas.",2024,Why is it hard to hire good Devops Experts ? 
namenotpicked,2,Outside of pay or location. This is usually it. They want a unicorn at entry level pay.,2024,Why is it hard to hire good Devops Experts ? 
jaydizzleforshizzle,2,"The pay is true but the unicorn even more so, they see an already struggling it infra and go, we should get one of those dev opsy guys, and the put a req out for an it sysadmin devops software engineer and no one wants to do that. Most hr or recruiting folk have no fucking clue either.",2024,Why is it hard to hire good Devops Experts ? 
TwoWrongsAreSoRight,7,"I'd be interested to see what skills they look for.  The problem I increasingly find as I go into companies is they have hired a dev to do the job because ""it's right there in the name"".  However, the job has very little to do with actual dev work and these companies tend to treat the infra side like it's a secondary responsibility.  My experience is that this is a common trend as these individuals can perform ""double duty"" but the reality is pure devs lack the experience in OS tuning and management, network troubleshooting and just general infrastructure problem solving that a true sys/network admin possesses.",2024,Why is it hard to hire good Devops Experts ? 
m4l4c0d4,4,"Devops is too expansive for any single person to master more than a handful of things. 

 You might as well complain you can't find law experts who know the nuance of every type of practice.  then complain you cant find patent/real estate and corporate lawyers but you are advertising for a lawyer not the skills you need.

  Anytime i see some one looking for a devops something or another I know to not apply to that place because they dont know what devops is and they dont know what skills they are looking for.",2024,Why is it hard to hire good Devops Experts ? 
matsutaketea,4,"few people are going to have experience in all the same buzzwords that a shitty startup constructed their first 'architecture' with. I think the skills you're looking for (a list of technologies) and the skills you actually need (someone understands all levels of the stack and how they interact, how business needs relate, and how that relates to the development teams) are not the same.",2024,Why is it hard to hire good Devops Experts ? 
balalaikaboss,4,"OK, what do YOU consider ""good numbers""?  Lets talk realistic base-salary rates that you, personally, have seen from these companies that are complaining.",2024,Why is it hard to hire good Devops Experts ? 
xfr0,26,"Easy,  
Many people don't even know what devops means, let alone hiring for a position that factually doesnt even exist. They're looking for a sysadmin, an SRE, a software engineer, an infra engineer and a platform engineer in 1 and they want the biggest sparkling unicorn there is. 

Meanwhile they think they can get away with paying them a regular sysadmin pay.",2024,Why is it hard to hire good Devops Experts ? 
nomadProgrammer,7,"\>  They're looking for a sysadmin, an SRE, a software engineer, an infra engineer and a platform engineer in 1 and they want the biggest sparkling unicorn there is.

Spot on.",2024,Why is it hard to hire good Devops Experts ? 
foofoo300,3,"and deep experience and skill in all of the categories.  
No surface level allowed in anything must be an expert in all of them",2024,Why is it hard to hire good Devops Experts ? 
anarchochris_yul,13,"Honestly... $$$

I've had recruiters try to poach me, offering me $25k less than what I'm currently making, which is already less than what I want to be making. I'm a senior with 20 years of experience and I'm damned good at what I do.

I don't want to go into management, and my next jump will be to a Staff level (I've been a senior tech-lead for \~5 years. Time for the next jump).

It wouldn't even be so bad if they were willing to budge on other benefits -- 4 day work week? 6 weeks+ vacation?

But alas, most of them just want to pay Windows SysAdmin salaries...",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,2,"Yup , but they are not expecting to take their offers I an assuming :). Based on my conversations, you are not the category of folks we are talking about. You are a different league. We are talking about entry or even mid level positions where they put 15 technologies in the resume but have a surface level  knowledge. That’s the main complaint.",2024,Why is it hard to hire good Devops Experts ? 
transer42,13,"I think you just hit on one of the big problems - DevOps really isn't a junior role.  There's just too much knowledge needed to accomplish the tasks.  However, employers are demanding juniors have familiarity with all the various tech stacks.  If I'm a junior who wants to get into DevOps, I'm going to do a project on each technology so I can say I know it, because anything else means my chances are nil.

If you want good juniors, they need to be looking for some depth with a subset of skills, some enthusiasm and willingness to learn, and have a plan for training/mentoring.  You're just not going to get someone who has a strong (or even intermediate) understanding of networking, linux, ci/cd, IaC/scripting/coding, containerization/virtualization, cloud and troubleshooting skills who is willing to get paid a junior salary.",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,2,Right on money ! What’s the best way you think for someone like you to get into devops. And what are your biggest struggles ?,2024,Why is it hard to hire good Devops Experts ? 
transer42,5,"I'm long past being a junior myself, and I had the advantage of being a sysadmin for a couple decades before ""DevOps"" was a thing.  

My reference above was what I'm seeing from candidates I'm interviewing, and how the hiring process is structured.  Candidates are coached to check as many boxes on a job listing as possible, because that's how you get through the resume scanners.  So you end up in a quandary - the pool of candidates willing to take a junior/mid role that actually makes it to interviews are almost guaranteed to have thin experience in many areas, because anyone with deep knowledge in all the areas needed for devops isn't taking a junior role.  And honestly, if you look at their resumes, they end up being almost identical in terms of skills listed.  

I'm sympathetic to the problem of recruiters/hiring managers drowning in applicants, and it makes sense to use automation to filter.  But I think we're missing candidates who would be great DevOps engineers because we insist they know all aspects of DevOps before we even talk to them.",2024,Why is it hard to hire good Devops Experts ? 
nijave,1,"Junior DevOps is like ""Hey, I know what bash is and I've used Linux before. I spun up a VM for fun""",2024,Why is it hard to hire good Devops Experts ? 
anarchochris_yul,6,"Ooof. Here is a good example of what I'm talking about with regards to the money being a problematic mismatch:

[https://www.reddit.com/r/devopsjobs/comments/1gzf1xu/hiring\_remote\_cet\_plus\_or\_minus\_3\_hours\_senior/](https://www.reddit.com/r/devopsjobs/comments/1gzf1xu/hiring_remote_cet_plus_or_minus_3_hours_senior/)

$50k to $80k for a Senior DevOps Engineer? 

That's a joke.",2024,Why is it hard to hire good Devops Experts ? 
anarchochris_yul,7,"Yeah... this is still a relatively nacent field though. When we hire, we don't expect our juniors and mid-level hires to be ""experts"" across the stacks.

We look for:

\- Someone who is autodidactic, but also a team player and willing to learn from others.  
\- Someone who is competent with at least *some* of our stack.

The rest we fill in as they grow into the team.

IMHO, the big problem is the companies who expect ""experts"" at the junior level (or worse, try to get experts at the junior salary scales) and who don't have any seniors on the team to guide and mentor the direction of the team.

""Juniors"" should not be expected to have any deep knowledge. But they should understand the high level concepts, they should be familiar with the tools, and they should know how to learn and when to ask for help.

""Mid Level"" staff should begin to have a depth of knowledge in at last one, it not more, of the stacks

In all cases, adaptability and continuing education is a requirement for these jobs. I've met some excellent senior software engineers who can do magic with Java, but who would make terrible DevOps engineers because they never learned about DNS, networking, containers, etc. Similarly, I've met very competent sysadmins who don't know how to compile software, let alone build a container image.

I'd take a motivated Junior self-learner over either of those seniors any day, and that's what we had with our last intern, and what we currently have with our latest Junior hire. We really just have to help them to learn when to ask for help so that they aren't spinning their wheels on ""easy"" things that they aren't familiar with yet.",2024,Why is it hard to hire good Devops Experts ? 
DueAffect9000,54,"This will probably get downvoted but this was the exact same issue with sysadmin, system engineer, infrastructure analyst and whatever other titles they came up with the same role.

Basically be an expert in a wide range of potentially complex technologies which most of the time isn’t possible.

DevOps isnt all that much different than the sys admin role the skillset and mindset needed to succeed is fairly similar, there is just more of a focus on automation.

Your job ad should state which technologies are important to you, naturally with a matching salary for the skills and experience you are looking for.

Its not possible for someone to be an expert at everything so you can only really check their ability to use logic and how they approach unfamiliar technology or scenarios.

Just having a bunch of trivia questions you think someone should know is going to have very limited success. 

For example I have fairly advanced networking knowledge (in terms of of troubleshooting and RCA’s) but if you ask me some academic questions around networking there is a pretty good chance I could struggle a bit.

How ever if I was to read the theory I wouldn’t have much trouble understanding it <- this is the key part of the role to understand and apply different technologies. Not being able to remember random stuff you may not have read for a while.",2024,Why is it hard to hire good Devops Experts ? 
nijave,2,"Oh god I got asked what the max cookie size and where that limitation comes from years ago in an entry-level Google interview.

Ten years later, I still have no clue. I'm sure it's a 30 second \_Google search\_ and detailed in an RFC somewhere.",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,I completely agree and empathise with everything that you say.  upvote  ⬆️ from me.,2024,Why is it hard to hire good Devops Experts ? 
y0sh1da_23,-1,"Personally I don't agree with most of what you said, especially with ""more focus on automation"" this just proved that you don't really know what a DevOps does. 
You have to know automations but those are just a small part of it. First of all, you need to know networking, you need to know infrastructure where could be differences since it could be on premise or cloud (and not SRE or Cloud Engineer because, that's DevOps as well, just with other label), you have to know at least one programming language and database setup, and then we can talk about automation (and haven't mentioned monitoring, alerting, supporting and IaC). 

How would you like to automate something that you don't understand? In order to understand you have to have the necessary skills.
The necessity of analytic skills and the capability to continuously learn and improve is indeed a must, here you were right. 

On top of these, the salaries sometimes are just ridiculous and so are the requirements. I have seen DevOps where you had to know both React and Python (BE level not scripting) beside the ""basic"" DevOps tasks and the salaries were a joke. 

So yeah  ""sysadmin with automation skills""",2024,Why is it hard to hire good Devops Experts ? 
nijave,5,"\>First of all, you need to know networking, you need to know infrastructure where could be differences since it could be on premise or cloud (and not SRE or Cloud Engineer because, that's DevOps as well, just with other label), you have to know at least one programming language and database setup, and then we can talk about automation (and haven't mentioned monitoring, alerting, supporting and IaC).

Everything except programming knowledge I would consider sysadmin skills there. Systems administrators are usually involved in the development and operations of software.",2024,Why is it hard to hire good Devops Experts ? 
DueAffect9000,2,"So basically a sys admin? DevOps is more of a concept or mentality rather than a role. Many sys admins knew a programming language as well, typically one of Python, Perl or PowerShell.

DevOps has no real definition as people have their own opinions as to what it is or should be (again the same as a sys admin)

So yeah for the most part its just another title change, none of the stuff DevOps introduced was really new.",2024,Why is it hard to hire good Devops Experts ? 
rlnrlnrln,11,"As a ""DevOps expert"" you're expected to be a master of everything.

GitHub, GitLab, Bitbucket, Jenkins, CircleCI, Perforce, Docker, Kubernetes, Prometheus, AWS, GCP, Azure, IAM, DNS, NewRelic, Datadog, Postgres, MySQL, MongoDB, RabbitMQ, Redis,  Rancher, ArgoCD, Flux, Linkerd, Istio, Traefik, HAProxy, Envoy, Nginx, Terraform, Vault, Ansible and a hundred different older software packages. Not to mention, you're supposed to know Linux inside out from kernel to UI as well as every network related tidbit that has come out of 40 years of IP and Ethernet.

Adding to that, managers tend to not put value into DevOps because ""they don't create anything"" and ""it isn't a creative job"". Bitch, please, you haven't seen creative until you've needed a 10dB dampener for an optical cable when the stores are all closed on a Sunday. (hint: one knot on a single-mode fibre cable equals roughly 1.5dB dampening)

...but I digress.

The problem is that few people are ready to pay for a person that knows all of the above, combined with the fact that there are few people that *actually does know* all of the stuff above. Most of us just knows enough to wing it, and Google the rest.",2024,Why is it hard to hire good Devops Experts ? 
goldenmunky,22,"Fit is one thing, skill is another.  Skills can always be taught.  What is more important is if that individual can fit in your company’s culture.

Edit:  forgot to add, the interview process is a big factor imo.  Is it only targeting unicorns?  If so, that might be why it is harder to find devops “experts”.",2024,Why is it hard to hire good Devops Experts ? 
webstackbuilder,2,"I have to disagree with you:

1. Skills can't always be taught. Lots of people lack the ability to step up to the next level; this is the foundation of the Peter Principle.
2. Fit isn't as big a deal as it's made out to be, and it's certainly not the most important attribute of a candidate. Being a good ""fit"" is often a way of excluding those who aren't like us.",2024,Why is it hard to hire good Devops Experts ? 
goldenmunky,2,"I appreciate the disagreement.  I don't expect everyone to agree with me.  It's good to have a healthy discussion on this kind of topic.

In reply to your points:

1.  I disagree to a certain degree.  Every human being on this earth has the ability to learn a skill no matter how big or small.  It all comes down to how that individual overcomes that lack of ability.  It could be listening to a podcast, asking a question on Reddit, or by reading a blog post.  

2.  I totally disagree on your point of excluding those who aren't like us.  Your fit might not necessarily work from one work place but might work great on another.  Also, it's not only the employer that has to find a fit but it's the employee as well.  You might get hired and not like the team dynamics, therefore, you'll most likely try to change it or quit.",2024,Why is it hard to hire good Devops Experts ? 
webstackbuilder,2,"This is probably going way OT for this thread, but the general idea in question #1 is of pretty significant interest to me from an intellectual curiosity perspective. I think there's a cognitive bias involved that leads intelligent people to the conclusion you state (""*every human being on this earth has the ability to learn a skill no matter how big or small*""). I don't have any vested interest in the answer, and my preference would be that the answer is as you suggest.

I've had one experience on that topic that's stuck with me. In my early 20s, I attended a twelve-step group for a few years. It was convenient to attend the same meeting once a week and most of the attendees were regulars. Almost everyone in the group more or less fit the profile of posters here: college-educated (or equivalent) professionals who had a passion or two in life and intellectual curiosity. I became really good friends with people in this group over an extended period of time. We all went out to dinner afterwards and our spouses/SOs socialized together as well.

I try not to judge people, and I think I've achieved that in my life for the most part. I've never thought too much of myself to do menial jobs - construction and a commercial laundry during university, things like that. I've always liked the people I work around unless they go out of their way to prevent that.

One of the people in the group was slower than the rest and worked at a fast food restaurant cleaning in the kitchen. I learned at one point from him that he tested in the mid-70s for IQ. Someone at that level of intelligence is completely in the normal range - it's not due to a condition like trisomy-21, just a normal intelligence in the spectrum. There's as many people with an IQ of 75 as there are at 125; I personally just am not as aware of them due to my social circumstances, aptitude, etc. I'll refer to this person as ""J"".

""J"" had absolutely no intellectual curiosity, about anything. We spent a lot of time giving advice to each other; someone has some problem crop up during the week, asks for help, others chip in. There was a lot of genuine concern for each other. ""J"" just completely failed to ""connect the dots"" on things in his life - why other people behaved in certain ways, what the predictable reaction to some action of his would be, things like that. His extended family was the same as he was as far as mental acuity (I met got to know a few of them a bit when they joined us for dinner afterwards, and from him talking about them).

After I had known ""J"" for a couple of years, he decided he wanted to move up to the front line at his fast food restaurant. He had set goals and slowly progressed career wise; moving from cleaning to running the frying station was a long (six month) process and not entirely successful. But moving up to running a cash register was just completely beyond his ability, despite a supportive manager, the help of our group, and a strong motivation to achieve it.

He could manage the basics of the position - pushing the correct button with the correct picture based on what someone ordered. But he never could, for example, competently change someone's order if they decided they wanted something else - especially if they were indecisive and did it more than once. He couldn't handle and would become very confused if someone wanted something special where he had to communicate the change to the line cook during a busy lunch or dinner rush. They had very various metrics an employee had to meet to keep that job (order accuracy, register money balancing at the end of a shift, number of complaints, etc.) and he was just miles away from achieving even the minimum, even with months of training and special help.

I've always kept in mind how lucky I am to end up where I did on that cognitive spread. I did nothing to deserve it. But there are lots of normal people in society who are cognitively incapable of doing tasks that we probably take entirely for granted.

Your point on fit is probably well taken. I've worked in some very toxic environments and for various reasons lacked the ability to leave at the time. I've also worked in great places (like my last job).",2024,Why is it hard to hire good Devops Experts ? 
goldenmunky,2,This was quite a read.  Thanks!  I understand your point now.,2024,Why is it hard to hire good Devops Experts ? 
Suspicious_Selfy,1,Are you saying that every person can learn to be a good devops engineer?  That is insane.,2024,Why is it hard to hire good Devops Experts ? 
Stray_Neutrino,1,How do you determine “fit” if someone doesn’t have the initial skills to get past the screens of the Hiring Manager/Recruiter?,2024,Why is it hard to hire good Devops Experts ? 
ruby_chicken_choker,5,Screens are intended to weed help out unqualified candidates. Where many companies/recruiters go wrong is having this screen be a in depth technical interview. Screens should only cover the basic qualifications and the “fit” can be determined in subsequent interviews.,2024,Why is it hard to hire good Devops Experts ? 
danpritts,1,Problem there is that basic quals can be difficult to figure out without in depth questions.,2024,Why is it hard to hire good Devops Experts ? 
goldenmunky,2,"A few things I look for while I interview candidates is not much about skills , but more of their demeanour.  You have to work with this person so you want someone who has the same energy as you or your team. 

  
Also to keep in mind that hiring someone that has the most skills can be a negative as well.  They might have so much knowledge that they will get bored of the work they do and not stick around for too long.  Which might result in technical debt.",2024,Why is it hard to hire good Devops Experts ? 
bdzer0,17,"Some thoughts.

* Anecdotes <> evidence of fact.
* I suspect you're hearing from people who think they can hire an expert for $60k/yr or some other low ball number.
* Unrealistic expectations: ""can't find the right fit"" screams - want pay as little as possible and get a unicorn.
* 'right skills'.. see bullet just above, likely unrealistic expectations.

The tooling skills can also be simply too broad to expect to find a perfect fit always.  Ignoring the person with extensive Azure skills because you use AWS is shortsighted and misguided IMO.",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,-4,Cool. Your points are valid. The context is slightly different. I have rephrased the question to convey my thought process better. However your points about broader/unrealistic expections are still valid.,2024,Why is it hard to hire good Devops Experts ? 
_lumb3rj4ck_,16,What you think you want != what you actually need,2024,Why is it hard to hire good Devops Experts ? 
bdanmo,1,This,2024,Why is it hard to hire good Devops Experts ? 
SqlJames,8,"Devops is not a role, it’s a responsibility and a mentality. It’s the job of the company to recognize that and push forward where you hire people to be experts in technology and implement it in a way that helps the org move forward with those mentality.

Now you can hire advisors and advocates to move the idea forward but at the end of the day it’s an organizational change not a single person.",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,0,"Devops xxx as a role is certainly a reality, people who help implement Devops practices including CI/CD, IAC, Containerization, Automation etc. we are specifically talking about roles where you are hiring an expert to implement the said things.",2024,Why is it hard to hire good Devops Experts ? 
SqlJames,4,"Okay, if we are just talking about positions where they are executing a specific task like iac or gitops. The problem I always run into when hiring is that they put all the projects they worked on but when probing they don’t know much about what was done or the decisions and details. Meaning they just kind of do what they were told instead of asking questions. 

The good ones are able to say they don’t know the answers, ask why are you using x technology over another, and tend to experiment with new things when afforded the opportunity. 

I will also give them an error where it clearly states the problem something like “unable to marshal yaml, line:30” and ask them what their thoughts are and if they don’t say what’s happening on line 30 it’s usually a fail from me. You’d be surprised how many people that eliminates",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,Now we are talking about the real problems.,2024,Why is it hard to hire good Devops Experts ? 
SqlJames,3,"I wouldn’t say it’s a problem, juniors who are learning need to just follow but don’t tend to ask why. As they evolve in their careers they will need to learn about this stuff but just like electricians. When you just start out your as an apprentice and your on your journey you need to just listen and absorb the senior information and study but eventually when you do it yourself you need to see what makes sense for the situation.

The problem is recruiters putting people who have kubernetes/helm on their resume into interviews with people who need to admin a kubernetes cluster the roles are vastly different. Helm and kubernetes makes it easy to get things done but they are difficult to manage properly. Similar to networking, easy to setup easy to screw up. 

What needs to happen is push down the filtering and have better mentors in the space. I am working on mentoring people now as I am tired of this myself. I will throw people into the deep end but I won’t let them drown because we’re on the same team. 

I’m happy to have a call if you want to bounce more ideas around.",2024,Why is it hard to hire good Devops Experts ? 
dylansavage,2,I would argue that the role is understanding the DevOps methodologies and ideals and then using that knowledge to design and implement a technology stack that marries the business needs with a robust deployment strategy.,2024,Why is it hard to hire good Devops Experts ? 
jameshearttech,6,I have been contacted by recruiters a few times over the last several months. The thing I notice about these interactions is the businesses are looking to hire someone with experience in specific tools. The larger the set of tools the more difficult it is to find someone with experience in that set of tools.,2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,2,Agreed.,2024,Why is it hard to hire good Devops Experts ? 
AWSLife,6,"They don't pay enough.

There are enough amazing DevOps experts out there, they just won't work for $100K or $150K. If you want their attention, the salaries start at $250K and $300K.",2024,Why is it hard to hire good Devops Experts ? 
saggingrufus,7,"Because devops isn't a guy, it's a team of people with varying skill sets. Imagine trying to hire ""computer person"" and then being upset if you don't get the right person",2024,Why is it hard to hire good Devops Experts ? 
imnotabotareyou,12,Unicorn position that has seen declining salaries and job openings which makes it less appealing to those who want to transition into the space,2024,Why is it hard to hire good Devops Experts ? 
drakgremlin,7,These are a huge part of the problem in recruiting in tech.  Both a bad salary and a very horribly job description.  Usually put together by people who don't understand the role.,2024,Why is it hard to hire good Devops Experts ? 
Deleted Account,11,Devops deserves 2x developer pay .,2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,-1,"If you are adding 2x or more value, certainly yes !",2024,Why is it hard to hire good Devops Experts ? 
Deleted Account,8,Thank you. president Trump 😬,2024,Why is it hard to hire good Devops Experts ? 
test-user-67,4,"As a developer, you fail to understand how difficult devops is in comparison. There's a reason developers are easier to find.",2024,Why is it hard to hire good Devops Experts ? 
myrianthi,2,My dev roommate wonders why anyone with DevOps skills doesn't just become a developer and make more money.,2024,Why is it hard to hire good Devops Experts ? 
solomonsunder,0,One can. I moved from Dev to SysAdmin to DevOps to Dev and now doing all of that.,2024,Why is it hard to hire good Devops Experts ? 
ArtemZ,5,"Have they tried actually hiring people? Not through some BS recruiting agencies? 
There are so many talented people struggling with finding a job and they say they can't find anyone? They are just not looking or doing it wrong.",2024,Why is it hard to hire good Devops Experts ? 
Deleted Account,5,"It comes down to money. If you want to attract the best talent you need to have the best pay and benefits and also work culture but money talks the loudest as long as work life balance is respected. Retention is also a money game.  Make someone an offer they can't refuse with money above the standard amount and it gets really really hard to leave as long as the culture isn't toxic. Its so hard mentally to say ""Ill take that 20 or 40k pay cut to get out of here"". 

If you are looking for someone that actually knows their shit in-depth then you need to put a high salary on the job listing that you are actually able to offer, for example if other people in this role are getting paid 140k at other companies, you need to offer 180k and put that on the listing.

Once you have the good applicants you need to do an actual technical hands-on challenge and that is how you weed out the people with surface level knowledge.",2024,Why is it hard to hire good Devops Experts ? 
nonades,4,"If you put up a job listing for a ""Python Developer"" or a ""Java Developer"" you know basically what to expect.

If you take a look at 100 different ""DevOps Engineer"" jobs, you'll probably have 100 different answers. Then you start getting into what the req asks for, and what the job *actually* is.

It's also a field that has had a ton of bootcamps promising jobs of $100k+ USD where people learn the basics of Terraform and call themselves DevOps engineers",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,Yes. There is a need to standardize the definition and create different categories of devops professsiinals so that it’s easier to define the role and expectations.,2024,Why is it hard to hire good Devops Experts ? 
nonades,1,"I think it's less about standardization and more about companies needing to stop unicorn hunting and be more willing to invest in their employees.

I have a ton of Azure experience and a little bit of AWS experience. I'll absolutely get passed over on roles that I'm arguably qualified for, just because the bulk of my experience is with a different cloud",2024,Why is it hard to hire good Devops Experts ? 
redvelvet92,5,Because technology is hard,2024,Why is it hard to hire good Devops Experts ? 
LaOnionLaUnion,4,"I look at it more from the perspective of someone who did do DevOps and got tired of them disqualifying you because you knew 90% plus of what they needed but didn’t exactly match their snowflake list of requirements. 

Now I do cybersecurity.",2024,Why is it hard to hire good Devops Experts ? 
Mattijjah,5,"The problem comes from the fact that DevOps means different things in each company. It means different scopes of responsibilities, technologies, workflows, etc.

So, in simple terms, you first need to sort out this area at home - and once it is clear what exactly such people should do, then look for the right ones.

Another thing is that in many companies there is a very toxic approach, that ""DevOps"", instead of an approach and a team, functions as a ""one-man-band"". There are people who like to work like this, but from a business point of view - it's stupid.",2024,Why is it hard to hire good Devops Experts ? 
thethirdmancane,3,Lack of focus on training new talent,2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,I think you are bang on. This is the root of the problem.,2024,Why is it hard to hire good Devops Experts ? 
WarOctopus,3,"Our company can't hire good devops folks except by accident.  Management won't pay but 20% more than what a normal entry-level MS Sysadmin makes.  Meanwhile, what's really needed is that MS Sysadmin experience PLUS professional experience in Linux, development, networking, databases, cloud, security, K8s, CI/CD, as well as intimate knowledge of the company / product, and good communication skills.

The only very few folks we get that are any good are here because they didn't really have options for whatever reason.  A complete fluke hire as far as our process goes.",2024,Why is it hard to hire good Devops Experts ? 
nijave,1,"Domain knowledge (or being able to quickly learn) and communication skills are also key. Even if you're an expert on all the tech stack, finding a bug in someone's 10 year old PoC that isn't being used doesn't help anyone. You need to be able to understand the importance/context and communicate with the responsible party (which often times becomes political)",2024,Why is it hard to hire good Devops Experts ? 
Fatality,3,Just look at how few have read the Phoenix project in this sub for an idea.,2024,Why is it hard to hire good Devops Experts ? 
rstowel,2,"When I interview I always ask if they’ve read the Phoenix Project. I do this both when I’m interviewing and being interviewed. In either case if they haven’t read it, that’s a giant read flag for me.",2024,Why is it hard to hire good Devops Experts ? 
SnekyKitty,1,"Erm, have you read this obscure paid book",2024,Why is it hard to hire good Devops Experts ? 
Fatality,1,It's not obscure it's basically the founding document of DevOps. Why do you think the author is invited to pretty much every DevOps event?,2024,Why is it hard to hire good Devops Experts ? 
SnekyKitty,0,The founding document of Devops is a bash script and the word automation,2024,Why is it hard to hire good Devops Experts ? 
Fatality,1,"It's really not, if you think that it would suggest that you don't know what DevOps is.",2024,Why is it hard to hire good Devops Experts ? 
SnekyKitty,0,"Cool, Devops is a book 👍, not even the most arrogant C purist would claim the same thing with “The C programming language” book",2024,Why is it hard to hire good Devops Experts ? 
Fatality,1,To think otherwise means you have no idea what DevOps is,2024,Why is it hard to hire good Devops Experts ? 
SnekyKitty,1,"You'll be lucky if devops isn't an offshored team in India/South America who can't even manage a EC2 without screwing up an AWS environment. Great in theory, but nobody utilizes its principles, just like Agile and all other management styles. Layoff technical people every 2 years, stuff like the Phoenix Project becomes meaningless",2024,Why is it hard to hire good Devops Experts ? 
Ready-Invite-1966,3,Comment removed by user,2024,Why is it hard to hire good Devops Experts ? 
kodiashi,3,Most of the guys I know who are absolutely awesome at DevOps actually end up taking solution architect jobs.  The pay is way better and it lets them step in and out of technical problems instead of being neck deep all the time.  If the pay and opportunity is right you might be able to tempt someone with a dual role.,2024,Why is it hard to hire good Devops Experts ? 
mirageglobe,3,"It's like asking.. why is it so hard to find good plumbers. Lots of cowboys (engineers who think they know how to do infra properly). Really good ones are too busy. When you find them, they will have to rip open all the crappy pipework done over the years and build in a proper system that will run years to come without a single hiccup.",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,Nice anology!,2024,Why is it hard to hire good Devops Experts ? 
yasarfa,6,"Ambiguous roles and responsibilities 
Most companies don’t establish Centers of excellence
Very wide toolset - it’s like open playground",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,2,Exactly ! 👍,2024,Why is it hard to hire good Devops Experts ? 
Vablord,5,"I'm a job seeker and I can tell you some -
They want someone who is all rounder knows every tools and how to use it.
No fresher on the job
People 1-2 years experience should know everything that a 10years experts know.
If I can't understand whole doc in a day then I'm not fit.
Person should know how to setup to integrate to test to change the code if the developer done some mistake",2024,Why is it hard to hire good Devops Experts ? 
Sanjuakshaya,-2,He is talking about finding EXPERTS not a mere fresher.,2024,Why is it hard to hire good Devops Experts ? 
Vablord,0,Yeah I know I was just frustrated and mind went off my bad 😔,2024,Why is it hard to hire good Devops Experts ? 
Heighte,2,If you listen to Reddit a DevOps is basically the CTO of the company.,2024,Why is it hard to hire good Devops Experts ? 
Got-Dawg-In-U,2,But they aren't paid like one. Hence the problem ,2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,:),2024,Why is it hard to hire good Devops Experts ? 
solomonsunder,1,"They sort of are, especially in a smaller team. I started with Dev, moved to SysAdmin, then DevOps and now to a role where I do all the earlier ones. I am now responsible for product, IT and Engineering. And the CTO at my last company which was publicly listed did all the above. It was 500 person company in EU. In larger companies, it is at least a role just below the CTO or Program Manager.",2024,Why is it hard to hire good Devops Experts ? 
anatacj,2,Because the devs don't understand ops and the ops don't understand dev.,2024,Why is it hard to hire good Devops Experts ? 
webstackbuilder,1,And never the 'tween shall meet,2024,Why is it hard to hire good Devops Experts ? 
nitalaut,2,"This is so funny because we are on the opposite side of the spectrum. We are a team of AWS DevOps engineers and solution architects, and it is really difficult to find good clients :)",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,2,"Yup. I have run a consulting firm in past and have seen this issue. So problems  exist on both sides. Don’t worry, we will create a separate thread to discuss this 😄.",2024,Why is it hard to hire good Devops Experts ? 
dbxp,2,"DevOps can include all of Dev and all of Ops, they shouldn't be looking for an overall expert but someone which can be part of an expert team.",2024,Why is it hard to hire good Devops Experts ? 
tazer84,2,"I think there's also something weird going on with recruiters ala application floods. I've heard that people are using bots and AI to just apply en masse which makes it really hard for the recruiters to filter, I'm assuming at least.

That being said, my resume is chock full of years of ops, networking, and dev from grunt work all the way to architecture in infra/cloud automation and people are like nah we good brah. Literally had a recruiter reach out to me like hey our SRE team really liked your profile, then a week later were like they passed. And it was like what? They asked you to reach out to me and then didn't even want to interview?

Personally I like hiring into devops people that have some kind of SRE and dev background. I've personally never seen a forwarded resume from HR for a person that has the holy trinity of understanding networking, ops, and dev. Hell I've been doing this for 8 years and id still have trouble explaining the difference between an OOB and core switch 🤣. 

Life is tough out here.",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,2,Recruiters getting flooded with LinkedIn easy apply from people who have learnt to game the system to get filtered in and leaving good folks with real experience filtered out is one of the biggest problems of the day. This is one of the reasons for the complaint. And people who are doing this know they don’t qualify. They just have some unrealistic expectations/dreams.,2024,Why is it hard to hire good Devops Experts ? 
Obvious-Jacket-3770,2,"The issue is that the company requires a unicorn or isn't willing to pay for the person. Also if it's an in office job, you limit your pool hard.

What companies should do, though won't because they don't want to pay, is split the one role out to be multiple roles to cover what's needed. Have a need for a DevOps Engineer whose knows infra really well and also can code really well in multiple languages as well as knows your cloud of choice and Observability? That's at least two roles or a staff/principal engineer. 

Break the role up to multiple smaller ones to cover what's needed and teach each other or shell out the money for a higher level dedicated engineer.",2024,Why is it hard to hire good Devops Experts ? 
Livingston_Diamond,2,Have they considered taking the financial hit and choosing mainstream tech stacks. Several companies I’ve helped have used some obscure/new stacks and simply getting them onto a mainstream stack opened up the candidate pool.,2024,Why is it hard to hire good Devops Experts ? 
CapitanFlama,2,">They’re always saying things like, “It’s so tough to find someone with the right depth of skills.” What’s your take on this? Why do you think hiring DevOps experts is such a challenge? Have you faced the same issue in your own experience?

Go around this sub, on the topics where new people ask for the set of skills they might need to land a job, and see how the post gets inundated with folks saying: ""*you don't need good networking or Linux foundations. You just need Kubernetes and git*"".

Yes: the pay rate is also an issue, but using it as a blanket justification is naive, and self-validating.


The market for DevOps, SRE, CloudOps, SysOps, and cloud infrastructure-related roles surged during the pandemic, leading to a shortage of qualified professionals and substantial pay offers for (technical) entry-level positions. Then the market slowed down, with the high-salary job market shrinking, and many professionals now find themselves in a precarious position with limited technical expertise.

If it's not the case, how we conciliate the difficulties of getting professionals for the roles from the HR people and the hardships of the incoming professionals to land a job? 

It is only low salary offerings?  levels.fyi gives the median Salary for a DevOps engineer to 145K/yr for the US:  https://www.levels.fyi/t/software-engineer/title/devops-engineer/locations/united-states


What is it? just high paid engineers are reporting their salary?",2024,Why is it hard to hire good Devops Experts ? 
purpleidea,2,"A lot of people just don't have the skills. I've spent my whole career growing them, many haven't put in the time or effort yet.",2024,Why is it hard to hire good Devops Experts ? 
corgiyogi,2,"Devops has transitioned to platform engineering, which generally requires a wide range of skills including software development.  I find it harder to find good candidates than software engineers.",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,"I would say platform engineering as a specialisation where devops is when you entr as a generalist with intermediate depth. If devops folks are hard to find, forget about platform engineers with depth of knowledge 😄. I believe you have to groom existing Devops folks into platform Engg.",2024,Why is it hard to hire good Devops Experts ? 
NullVoidXNilMission,2,Over engineering devops are a dime a dozen. Most don't know how to bring costs down. Others only know one OS. Others aren't properly applying security standards.,2024,Why is it hard to hire good Devops Experts ? 
serverhorror,2,"Your question should read, from a monetary perspective:

> Why is it so hard to hire good people for the money I'm offering?

And from a skill perspective, I believe, the answer is the same as everywhere else:

* As hire As, B's hire C's

There are not a lot of As in the industry and the field is pretty big. You can be good in one corner of DevOops and completely clueless about another one, yet you have to hire for it.

In essence (a general you, not you specifically):

* You're not offering enough for the crowd you want to attract 
* You're not as good as you think you are, therefore you misjudge the people you hire in their abilities 

(Personally, I believe ""having certifications as well"" is more if a red flag than anything else. I have yet to meet someone with certifications -- from a non-accredited college or university -- worth their salt)",2024,Why is it hard to hire good Devops Experts ? 
snarkhunter,2,"Frankly it's because we're just that fucking special. And since we're in such high demand we can be really picky and choosey about where we work and who we work for and with.

Lots of recruiters are really not used to dealing with people like us.",2024,Why is it hard to hire good Devops Experts ? 
sysadmin-456,2,"IMHO it's hard to hire for because the people doing the gatekeeping are mostly clueless.  They don't know how to interview some one or they don't know what to ask.  So they start with the ""dev"" and give you a Leetcode interview.  And assuming you pass that, they ask you a bunch of trivia.  Neither of which is helpful in finding some one with talent.  At least this has been my experience interviewing a little bit over the last year.

I've been a sysadmin and developer for 25 years, so I've got a lot of experience automating things.  I can security configure an AWS environment with Terraform, monitor it with Prometheus, and configure a CI/CD pipeline to test & deploy your code using containers.  And it's all source controlled so we know who did what, when.  I can save you a ton on your cloud spend, build tools to be cloud agnostic, plus be your team lead and manager.  I'm friendly, outgoing, and enjoy explaining things to people.  And I've been using some form of \*nix since the days of SunOS in the early 90s.

None of that seems to matter these days.  If you can't write a recursive solution to backtrack over a string, then you obviously have nothing to offer.  If you've only ever used Elastic/Logstash you're not a good fit because we need some one with Splunk experience.  And if you've never configured BGP on a core router, then your networking skills aren't sharp enough.

I've interviewed a lot of people and I can figure out in about 20 minutes if some one is a good fit just by talking to them.  I ask them about their experience, give them a hypothetical scenario to solve, and maybe their opinions based on their history.  For example, if latency is spiking for certain requests to our application hosted in the cloud, how would you diagnose it?  Or how would you lock down a Linux host that's on the raw Internet?  If they've used Puppet and Ansible, why do they prefer one over the other?

No need to grind leetcode or spend weeks ""studying"".  If you're talented, your answers to these kinds of questions will make it obvious.",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,I’m not a fan of Leetcode types interviews and alto questions either. 1 . Scenario based questions 2. Live Troubleshooting is the better way to judge Devops Engineers.,2024,Why is it hard to hire good Devops Experts ? 
reikobi,2,"I don't know why more people won't acknowledge this, but many see devops as a ""step-up"" role. Even though it shouldn't be. Companies hire high-performing (or sometimes not-so-high) sysadmins and expect them to be able to IaC everything and write code. Actual developers want to be paid SDE money. Some places see DevOps as sysadmin+ and some see it as on par with SDE or even SDE+ (like a specialization). So the ranges vary really widely.

Also the work itself for many (not me, but many) is tedious. They want to (or think they want to) do ""real"" development work like adding div tags.

As someone who enjoys actual challenging ops work, I myself struggle with this. Staying in a ""devops"" job too long at the wrong place means being sysadmin+ and that's a step backwards for my career. It is seen as a support role and inferior. It puts you in a different bracket in salary, social structure, etc at work compared to ""real"" developers.

Seriously, idk why people can't acknowledge this absolute fact about this type of work. As long as the industry keeps making this the sysadmin+ role, it will always be this way. Management, recruiting, etc is never going to properly delineate terms like devops, platform engineering, SRE, etc.",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,It’s time we define the devops roles properly.,2024,Why is it hard to hire good Devops Experts ? 
thomas_grimjaw,2,"Because:

1. Unlike dev, it's tough to learn it in a vacuum. So most devops people are already really opinionated from their personal experience.


2. There is barely any skill floor. Basicaly either you're a fully functional devops, or you're not. A junior devops will always require a lot more oversight than a junior dev, making them a pure cost center if you want to train someone. 


3. Too much to know, a lot of superficial variety. Explosion of cloud services led to the state where you have to specialize in a vendor, even though they all pretty much have the same services just with a lot of different nuances between them.


4. It's exceptionally boring. If salary was the same, the average tech worker would more often pock a dev role than a devops one.


5. It's the most responsible role in tech, an a lot of people don't like that much responsibility.",2024,Why is it hard to hire good Devops Experts ? 
webstackbuilder,2,#5: Dr. Ops,2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,2,"Agree with everything except #4. It has been fascinating journey for me personally, I still love it and would love to do devopsy stuff for rest of my life too 😉.",2024,Why is it hard to hire good Devops Experts ? 
thomas_grimjaw,2,I envy you. I want to jump off a ledge the moment I have to do any devopsy yaml or cdk as a backend dev.,2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,"Backend dev explains it. I started as a open source enthusiast, learnt a lot from Linux User Groups, taught myself Linux and networking ( back in 2002) and that’s what led me to Systems, ops, techops, CloudOps and devops roles.",2024,Why is it hard to hire good Devops Experts ? 
thomas_grimjaw,2,"I can see how being in the space for that long would make it bearable, even enjoyable. You were there as eveything came out one by one.

I started around 2018 and have just been blasted with cloud information like from a hose, which is why I've grown to hate it.",2024,Why is it hard to hire good Devops Experts ? 
Playful_Secretary564,2,Just offere a remote job from all around the world and $60-70/hour and enjoy you candidates,2024,Why is it hard to hire good Devops Experts ? 
SnekyKitty,1,And the data breaches. $60-70 all around the world becomes $20/hr junior from India,2024,Why is it hard to hire good Devops Experts ? 
Playful_Secretary564,1,"I’d say a $5/h junior, lol. But that’s why we have interviews and so on.",2024,Why is it hard to hire good Devops Experts ? 
obi647,2,Seems like OP is feeling proud about himself. Good for you Mr. Know-it-all-Ops,2024,Why is it hard to hire good Devops Experts ? 
narddawgggg,2,"in all seriousness, how can there be experts in a field that is still relatively new?",2024,Why is it hard to hire good Devops Experts ? 
vsysio,2,"Because companies are uncomfortable hiring somebody who won't be able to provide value for several months as they skill up on whatever odd combination of tech somebody threw together some years prior.


And so instead of hiring somebody that will provide value in 3 months, they leave the position unfilled for a year or longer.


Or they hire somebody only to fire them 2 weeks later for poor performance when something inevitably blows up.",2024,Why is it hard to hire good Devops Experts ? 
pecheckler,2,Because companies don’t pay to train their IT staff with new skills anymore.,2024,Why is it hard to hire good Devops Experts ? 
pneRock,2,"Having interviewed a couple folks this year, it typically comes down to mismatched expectations and lack of operational experience. 

First, when we're hiring midgrade devops or higher. I expect alot from you. I have interviewed many folks from bootcamps. Reading the boto3 docs or typing a command into one of the \*clis does not a devop engineer make. It is not an entry level position. First question I ask is what happens when someone types in [google.com](http://google.com) into curl, browser, whatever. I would expected a good conversation on DNS, SSL/TLS, TCP/UDP, caching, routing, etc. If we can't probe details out, that torpedos the interview for me. I don't care that one can't configure BGP or knows how to setup a meraki mesh: your livelihood depends on bits flowing from A->B, one needs to know the concepts. Typically there is a follow up on service deployment. How you do you monitor it? What is your backup plan? How do you document so you don't hate yourself 6 months from now? The specific nauances of this/that stack, whatever is sexy at the moment, or the passing IT fad i just don't care. I expect SOLID fundementals. The rest can get picked up on the way. 

With jrs, i still expect that they know the basics. I look more at drive on this one and if I feel like we can trust the person in prod given time.



If we make it past those, the interview typically go pretty well.",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,"This would be my process to if I want to interview, along with scenario based questions, live troubleshooting.",2024,Why is it hard to hire good Devops Experts ? 
knite,2,"Every skill has a distribution curve with people between “horrible” and “amazing”. 

DevOps is often the most horizontal role/department in an org, which magnifies their impact. 

DevOps isn’t harder to hire for, you’re just experiencing more pain than you expected when hiring the “good enough” person.",2024,Why is it hard to hire good Devops Experts ? 
Jamesbarros,2,"The breadth of the field is so wide that even maintaining depth at skills you already had, but aren’t using in a particular position is a significant task. 

As someone who is interviewing right now, if you want me to be absolutely proficient during an interview on all the tech I’ve touched in the past decade, despite a long successful history with it, If I’ve not used it in the past year, I guaranty I won’t sound amazingly competent in it. 


Finding people with the breadth and depth is hard, in large part, because just communicating what real experience in it looks like is challenging.",2024,Why is it hard to hire good Devops Experts ? 
shuttervelocity,2,"Because stuff keeps changing on us. 

Once you are a puppet master, then it's chef and then it's ansible and then it's terraform and then its...",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,Crossplane and then it’s going to be …,2024,Why is it hard to hire good Devops Experts ? 
digitalknight17,2,"Depends on how you see things, but when I left one of my DevOps roles, it took 2-4 people to be able to do everything that I do. The problem with DevOps is the same with full stack engineers, they want you to be a jack of all trades and master of everything which is kinda hard to do, and takes years of experience. Not to mention the influx of people wanting to do DevOps cause its the popular things along with Data Science and ML/AI.

Also companies have to be realistic too, if you are asking for someone very senior in what they do, the more rare they will be.",2024,Why is it hard to hire good Devops Experts ? 
indigo_dt,2,"One of the things people overlook about building teams in a dynamic learning organization is that the tools we use both require and magnify intuition, and genuine intuition takes time and persistence to develop. Beyond that, it also takes active empathy and relentless curiosity, both of which tend to be thin on the ground *and* difficult to recruit for. 

Just because we use technical skills doesn't make it a job for technicians... or not *only* technicians.",2024,Why is it hard to hire good Devops Experts ? 
whitefox040,2,"From my experience, it's a problem of expectation. What I found is over time they attempt to exploit my skills. For example: I love automation and I put in significant automations, so I can delivery on SOME projects or tasks significantly ahead of time. I've had managers think I can deliver on EVERY project or task significantly ahead of time and start pushing unachievable time frames. I've found that my job cycle goes from superstar -> disappointment within about 3-4 years. As such I leave every job after about 2 years because that's the sweet spot.",2024,Why is it hard to hire good Devops Experts ? 
Deleted Account,2,"Since the number of tools and services available is very large and constantly growing, and the tools and services themselves are in constant development, it is foolish to expect there to be a large pool of workers with expert-level knowledge of 15 tools or services. The most important thing to look for in a candidate would be an eagerness to learn, adapt, and improve.",2024,Why is it hard to hire good Devops Experts ? 
Ok_Negotiation598,2,"In general, I think one of the biggest reasons hiring for DevOps is so difficult is because no one can truly define what DevOps is.

Take the NFL draft as an analogy, specifically for quarterbacks. It’s widely believed that over 50% of first-round quarterbacks don’t end up being successful. Why? It’s not because they lack skills or talent. It’s because you can’t predict how those skills or talent will translate in the real world—how they’ll fit with a specific team, a specific system, under specific coaches, and so on. You only know how well they’ll work once you put them into that unique environment.

The same principle applies to DevOps. I might be an incredibly effective DevOps resource—able to solve problems others can’t, transcending technology stacks, programming languages, operating systems, and more. But could I nail a DevOps interview? Absolutely not. Why? Because the real-world essence of DevOps isn’t about regurgitating known facts or definitions. It’s about navigating ambiguity, dealing with intangible and poorly defined challenges, and coming up with practical operational solutions for problems that don’t have clear answers in advance.

In my experience, you can’t ask highly specific, technical questions in an interview and expect that to translate into operational success on the job. The skills required in an interview are completely different from those needed in a real-world DevOps environment.

Instead, I believe hiring for DevOps should focus less on technical trivia and more on personality, adaptability, communication skills, and experience. I’d structure the process like this:
	1.	Screen candidates based on a basic skill set, but focus primarily on their personality, how they communicate, and how they interact with others.
	2.	Hire with a probationary period (e.g., 60-90 days) to see how they perform in the real-world environment.
	3.	During this probation, assess how well they collaborate, learn, and adapt—key traits that matter far more than their ability to recite the differences between C++ and C#, configure a switch, or write a Python script off the top of their head.

The reality is that DevOps is about working across teams, disciplines, and technologies. It’s not about knowing everything but about knowing how to navigate and integrate everything. An individual’s ability to collaborate, think critically, and communicate effectively with diverse groups is far more valuable than their ability to answer isolated technical questions.

To summarize, hiring for DevOps isn’t about screening people out—it’s about screening a few people in and observing how they perform in practice. The goal should be to identify individuals who fit well within your team and have the mindset to thrive in the collaborative, unpredictable world of DevOps. Everything else—tools, processes, languages—can be learned if the person has the right foundation.",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,💯 agreed. The interview process for devops need to be changed. Good NFL anology.,2024,Why is it hard to hire good Devops Experts ? 
Ok_Negotiation598,1,"It’s always great when you can offer a solution rather than just identifying a problem. I’m not sure I can do that here, but it would be incredible to come up with a better approach to interviews or evaluations that actually works.

I’ve taken online coding tests—some went great, some not so much. I’ve interviewed with Google and Microsoft, and while some of those interviews went exceptionally well, others didn’t. The biggest flaw in these testing processes, in my opinion, is that they tend to focus on measuring very specific technical skills or quantifiable knowledge. But in reality, neither of those are strong indicators of success.

Where I truly excel—potentially more than most, based on my experience—is bridging the gap between technical teams and business or operational groups. I absolutely love helping people find solutions. Because I’m so passionate about technology, I enjoy finding ways to make it easier for developers to meet business goals. It’s genuinely one of my favorite things to do.

Now that I think about it, that’s probably how I should lead in interviews, resumes, and everything else. If I presented myself that way from the start, I’d probably land more roles that align with my strengths rather than working my way into those positions over time as gaps or challenges arise within a team.",2024,Why is it hard to hire good Devops Experts ? 
jasmith_79,2,"Why would it *not* be?

Seriously, you have to have the right blend of system and programming skills, the right personality/attitude, plus all the usual employee stuff (easy to work with, responsible, reliable, etc). 

Then there's the added wrinkle that people capable of doing that are frequently happier/more valuable in another specialty (programming, architecture, security, SRE, etc).

I'm always amazed when I meet a true devops expert, because per the reasoning above I am surprised that they exist at all.",2024,Why is it hard to hire good Devops Experts ? 
Muted_Cockroach3270,2,"Lol because devops is a bs blanket term to mean everything that is operational..you have to be a cloud network engineer,developer, k8 engineer,cloud systems engineer. Incident response,cloud security engineer.all at once",2024,Why is it hard to hire good Devops Experts ? 
1nt3rn3tC0wb0y,2,"I mean.. most of the recruiters spamming me these days want me to relocate to somewhere incredibly boring and take a $100k+ pay cut (no joke, just got one of those an hour ago). 


Assuming the pay is actually good, something I notice is that the sysadmin track generally favors a depth of knowledge in specific tools, whereas a dev track generally favors the ability to learn new things quickly. Basically, crystalized knowledge vs fluid knowledge. I'm most places I've worked and interviewed at, devops-type jobs were generally under an operations org, and often just rebranded ops. As such, the hiring managers wanted someone highly experienced in a very specific combination of tools, which is going to be hard to find. Find someone who knows how to learn (and how to code!) and you'll probably have better luck. ",2024,Why is it hard to hire good Devops Experts ? 
Studnicky,2,"Now ask them all what they think a good DevOps engineer should know - you're going to get a completely different answer from every single one, ranging from things like platform architecture & cyber security to sales and project management 💀",2024,Why is it hard to hire good Devops Experts ? 
mws-11,2,System admins with a diva complex == dev ops,2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,😀,2024,Why is it hard to hire good Devops Experts ? 
senaint,2,Hiring a good DevOps engineer is like hiring a well-rounded specialist. It is an inherently unnatural proposition.,2024,Why is it hard to hire good Devops Experts ? 
liveprgrmclimb,2,I am a DevOps manager. I have no problem hiring. People don’t want to work on crappy teams anymore. They want to be respected and for the team to have a good collaborative vibe. I manage 10 engineers. It helps to offer 100 percent remote position.,2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,We need more folks like you who building and nurturing the teams the right way  👍🏼,2024,Why is it hard to hire good Devops Experts ? 
throwaway0134hdj,2,"DevOps is basically a jack of all trades type position. You have the basic setting up CICD pipelines, docker/k8s, monitoring and logging — but it’s never just that… they have you doing full-stack development, testing/QA, networking, security, SQL/NoSQL databases, diagramming, caches, queues, cost estimates, servers, sysadmin, managing cloud accounts and resources and all the troubleshooting/debugging that goes along with that. And anytime something breaks everyone is looking at you. You become the scapegoat. You’re managing all points in the development process… it’s exhausting, too many roles for a single person. And the pay feels like it should be MUCH higher.

TLDR; DevOps is just a title they give folks who they expect to do everything under the sun.

Just know everything bro",2024,Why is it hard to hire good Devops Experts ? 
Zaitton,10,Because 90% of DevOps engineers don't understand the bare minimum of networking & system design. They're basically failed devs/sys-admins that watched a udemy course lol.,2024,Why is it hard to hire good Devops Experts ? 
mimic751,14,Or devops is too broad of a term and if people are looking for it then they've already lost the game they don't know what they need. I'm a former on-premise systems administrator who got really good at automation I'm in a devops role and I don't know very much about the cloud but you would probably consider me failed,2024,Why is it hard to hire good Devops Experts ? 
Zaitton,4,"Hence why we say that DevOps is the culture, tools and mentality behind DEVELOPMENT OPERATIONS and not an umbrella term to say ""cloud"". 

DevOps roles are trash. What people usually need is either plain Ops for X system, or Cloud Engineers (or sysadmins).

With that being said, if your fundamentals are sturdy, there shouldn't be anything cloud-wise that should confuse you.",2024,Why is it hard to hire good Devops Experts ? 
mimic751,1,It is not particularly confusing I just have never had the opportunity. I've used Azure AWS and gcp but in very limited use cases. I think the hardest part about the cloud is setting up,2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,2,Setting up ( in case if you refer to setting up a learning environment) is not hard with free tier and trial access to all major clouds.,2024,Why is it hard to hire good Devops Experts ? 
mimic751,2,I'll be honest I really don't want to learn it unless I need to. At my point of the career if they want me on a project they send me to training,2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,No. Not unless you can’t answer question on the topics you would put/highlight in your resume but can not take questions beyond surface level.,2024,Why is it hard to hire good Devops Experts ? 
mimic751,3,I suppose. But not everybody's in every technology all the time. I spent a significant amount of time setting up Jenkins automation but if somebody were asking me Jenkins specific questions I would honestly need to read a refresher. I think this expectation that everybody knows everything all the time isn't necessarily realistic. When I do interviews if they say I would have to research it but this is my general process and they get to workflow correct I would consider that a success,2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,0,"By the way, I have hired a Civil Engineer  for my devops team in past because 1. He had made efforts to learn Linux on his own. 2. Could answer questions beyond surface level. 3. Did not fake when he did not know the answer and was honest enough, at the same time showed curiosity to learn and logical thinking to attempt to find the answers.",2024,Why is it hard to hire good Devops Experts ? 
dylansavage,1,"One of the underlying tenants of DevOps is programmatically defining infrastructure to keep things elastic and modularising components to keep the code based dry.

A lot of that is made possible by leveraging cloud APIs.

You can automate a lot on prem but open box, install server on rack, etc are a few years away at least.",2024,Why is it hard to hire good Devops Experts ? 
webstackbuilder,1,I hope this isn't true.,2024,Why is it hard to hire good Devops Experts ? 
ifoundmyselfheadless,0,Meaning that it is easy to land into devops role?,2024,Why is it hard to hire good Devops Experts ? 
Zaitton,7,"Certainly was at some point. Not sure anymore.

Companies that were early adopters of DevOps/Cloud Engineering already hired/trained their talent and are holding onto them. Then the bottom feeders of software engineering got whiff of how good they have it and decided to do a career pivot. I can't even tell you how many BAD software engineers have come to me asking for help to get into devops.

I've interviewed so many ""DevOps"" engineers who had absolutely no clue how to do anything beyond create an ec2 instance (clickops ofc). Hell, one had his github profile on the resume, so I went to check it out and he'd forked a repo called ""Top 100 DevOps interview questions"". I asked him like 10 of those, he aced them. Then asked him to design a very basic web-app (CDN, loadbalancer, EKS kinda thing) and he didn't even know where to start, despite knowing all the theory behind cloudfront & eks lol.

Another guy pawned himself as a Terraform expert, knew all sorts of Terraform Cloud niche garbage (whatever was taught to him in his bootcamp) but couldn't answer ""what's a Terraform provider?"" in plain English.",2024,Why is it hard to hire good Devops Experts ? 
ifoundmyselfheadless,2,"Maan, if that the case, I feel that I am far away to becoming devops engineer. Currently trying making my way to there, but with very limited experience, it is hard for me to even land as cloud engineer.",2024,Why is it hard to hire good Devops Experts ? 
beliefinphilosophy,3,"Happy to chat offline about this with you. 


Some things to help you:

* Read Google's SRE book, Building Secure and Reliable Systems is great too

* Study Non-Abstract Large System Design 

* Check out talks from conferences like O'Reilly's Velocity 


If you are looking for experience in the field but don't have a ton of it, joining a consultancy company is also a great alternative to cut your teeth on, and are usually pretty open as long as you can talk the talk at the interview. Startups are good too.  You also may have a resume problem, since most people look for buzzwords, and headhunters/ 


syncing up with recruiters on LinkedIn is great too.  I.e. 

* put a bunch of buzzwords in your LinkedIn profile 

* update it frequently even just adding and removing a period to keep you at the top of the algorithm.  

* Add whoever sends you a connection request, LinkedIn is about finding jobs, and the job game is a lot about connections 

* A bunch of recruiters will contact you via messages, start working them for intros to other jobs if the job they have doesn't work for you.  ""Hey, thanks for contacting me, happy to talk about this job but I'm actually looking for jobs like Y to fit my skillset, can you help me find those? 


They work off commission and they're desperate, so it's free labor for you in job hunting.",2024,Why is it hard to hire good Devops Experts ? 
Zaitton,2,"Those that want it, get it. That's always been a fact. Study, do projects, become an expert, and there's no way you aren't getting your shot.",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,2,"Good. Atleast you are honest about what you know and what you don’t. That’s the perfect start. My mission is to get to the bottom of this and solve it, for both sides. Companies who are struggling to hire and on the other hand, folks like you who want to get there but are struggling too. What is/are  your biggest struggle(s)?",2024,Why is it hard to hire good Devops Experts ? 
ifoundmyselfheadless,1,"For me, trying to penetrate into the job without any relevant experience prior to devops / SRE. Having relevant certificate did not help me to land into the job, if the certificate does not allign with my professional experience.",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,2,"This is exactly what I was expecting. I believe the biggest problem is this vicious cycle, companies are not willing to hire you because you don’t have the right to experience. On the other hand , you are struggling to get into devops role due to the lack of the same, real world experience. I have been working on solving this problem for years. This is actually my life  mission. Tell me , 

Would it help if there are  companies who would give you one project that they want to build , resources needed to complete those, access to mentors and 2/3 months to complete that depending on the scope. You are not getting paid during this time but if you do really well they would hire you. If not someone else will as you have demonstrated. 


Does this model have a potential to offer you opportunity to learn at the same time at the same time provide companies a better way to hire ?",2024,Why is it hard to hire good Devops Experts ? 
ifoundmyselfheadless,2,"I think this model help if people:

1. Fresh graduate and seeking into landing on devops jobs

2. People who are looking into another jobs and have enough saving to survive these 2/3 months.

These are thinks that I can think of.",2024,Why is it hard to hire good Devops Experts ? 
beliefinphilosophy,1,I'm going to partially blame this on alternatives to stack overflow becoming more popular and the lack of good conferences and talks available. At least when you were reliant on stack overflow you had to 1.) know the right questions to ask and 2.) sort through 20 different answers to find the one that works.  It taught way better problem solving and knowledge skills.,2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,"Now we are scratching the surface and talking about the real problems. This is real, and this is what we are talking about when I say difficult to hire good devops folks. Now we have to keep asking why this is happening to get to the bottom of this all and see if we can solve it. That’s the mission I have set myself on.",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,0,"Exactly. It’s like building a skyscraper with shiny glass facade , without the right  foundations. It’s bound to shake, struggle , if not collapse. The emphasis should be put on the Ops foundations like systems engineering, Linux, troubleshooting.",2024,Why is it hard to hire good Devops Experts ? 
mint-parfait,2,"because they want ""software engineers"" to do devops, and ask them leetcode questions, which makes no sense. the best devops people I know come from data center and physical networking backgrounds, and spend their time learning cloud services and not programming language stuff",2024,Why is it hard to hire good Devops Experts ? 
hacksnake,1,How much are you paying and what's your tech stack? Are you looking for a unicorn who knows literally everything right away?,2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,Interestingly this includes range of people who are willing to pay below as well as well above industry standards. The complaint remains same.,2024,Why is it hard to hire good Devops Experts ? 
Obvious-Jacket-3770,1,"Honestly you can write-off the ones who want to pay below. Those ones have other issues, main being that people won't work for low salaries. The ones who are paying the average or above are the ones to focus on.",2024,Why is it hard to hire good Devops Experts ? 
Ok_Ordinary6460,1,Now ask these same people what they’re offering after 8 interviews. “You get what you pay for”,2024,Why is it hard to hire good Devops Experts ? 
No_Diver3540,1,"First of all, the question many leading roles have to answers, is not finding a good dev engineer. The question is what is the cheapest I can get. So sure they will complain that they can't find one that fits. Because they do not want to pay the price tag that comes with a good dev engineer. 


So the answer to your question is, it is quite easy to get the people the apply for your job openings, if the payment is right. Otherwise you have to take what is left and hope one might be a talent. Chances are very slim. 


Adding to that, a dev is a not so easy to define as a role because you have to have a huge skill set and one will have some weaknesses, no matter what. ",2024,Why is it hard to hire good Devops Experts ? 
lurkinggorilla,1,"Because they just don't understand that experts will quickly learn other tools doing the same as they are used to... Argo vs Flux, gitlab vs git, Lori vs elk,...... same for all the k8s distributions.
Etc etc",2024,Why is it hard to hire good Devops Experts ? 
beliefinphilosophy,1,"Because they confuse knowledge for skill. 


**Knowledge** is knowing everything about their existing stack and existing tech problems.


**Skill** is having the ability to understand/learn a system or new technology quickly, solve complex problems, reduce toil, and apply best complex systems design practices. 


Having a base level of knowledge is fine in the short term, but the skills are required long term. When I interview people I focus mostly on skills. 


Additionally, I think many startups think more highly of themselves than they deserve.  A Devops job at a startup is **BRUTAL** but a beautiful learning environment.  


Having worked at several startups, and being a M&A SRE at a big company I can tell you, At a startup you have:   


* Devs that love having many flavor of the week/new hotness technologies complicating the stack

* A fragile system that typically can have a lot of outages

* Founders who want to skimp on costs affecting architecture, staffing resources, and monitoring/diagnosing tools.

* Founders who won't stop overriding things or sticking their hands in the pot unnecessarily


* People pitching things on PowerPoints that may not be actually possible


* Move fast and break things attitude where teams don't really own their own breakages, and there's a lack of documentation and they don't hold the pagers for the site being down


* A lack of testing environment so you get a lot of ""well it worked on my laptop"" 


* Scaling issues if the company grows quickly either resulting in load breakages or developers using the original prototype monoliths as opposed to micro services and have difficulty applying large system design principles like globally unique IDs, back off code, or foreign key constraints. 


* Crap pay compared to what you could get at a big company, and usually not great equity / equity doesn't pay off because they're not one of the first engineers or seen as vital because they're not building sexy features. 


Startup founders need to recognize the job they're asking people to do, and be open to people less ""senior"" than they think they deserve.


**That being said** I heard that Google's SRE acceptance rate is 2% so it may be more indication of the space as a whole, I don't know how true that is because my interview there was the easiest and most enjoyable interviewing experience I've ever had, but I did study for a month or more before my onsite, had been in the industry for awhile, and had the benefit of their SRE book being available at that time.",2024,Why is it hard to hire good Devops Experts ? 
BrocoLeeOnReddit,1,"Recruiters and managers are idiots most of the time. There, I said it. In my opinion the main issue is that there's concept knowledge and specific tool knowledge. Recruiters most of the time search for the stuff managers give them. And managers tend to give recruiters specific tools a candidate should know.

They don't say ""We're looking for someone with experience in observability solutions."", they say ""We need someone who knows Grafana, Loki and Prometheus/ELK/Data Dog/Dynatrace/Splunk."".

They don't say ""We need someone who knows CI/CD Pipelines."", they say ""We need someone who knows GitHub Actions/GitLab Runners/Azure DevOps Pipelines.""

They don't say ""We need someone with experience in Container Orchestration."", they say ""We need someone with experience in Rancher/OpenShift/Tanzu."".

And in the end they look for a candidate who knows Azure DevOps Pipelines, the ELK stack, Jira+Confluence, Tanzu, RedHat, GlusterFS and Rust, wears pink pants and can recite Goethe's Erlkönig while juggling a bunch of live lynxes and if a candidate doesn't check all boxes, they are discarded and the recruiter and manager cry about how they can't find suitable candidates.",2024,Why is it hard to hire good Devops Experts ? 
Le_Vagabond,1,"a lot of them restrict their recruitment to local or relocation candidates. as a senior infrastructure engineer I can't gamble on a job and move halfway across the world for a position that might go poof at any time. I'm employed at the moment, which makes the risk/reward ratio very skewed.

on the other hand, as someone who's recognized as ""subject matter expert"" in almost everything devops (including kubernetes, CI/CD architecture and pretty much anything you could want), my résumé tends to not go through ATS filters so applying to fully remote positions doesn't work that well either :)

if the ""people you've talked to"" have fully remote positions open to EU/FR engineers, I can always send you my profile!",2024,Why is it hard to hire good Devops Experts ? 
Additional_Abies9192,1,"Because 99% of the requirements they write are impossible. Is not unusual to find job description where they ask for AWS+GPC, K8s, Openshift, IBM Cloud, Kafka, CI/CD, Network, IAM etc all together. Useless to say that you'd need a whole lifetime to master all of these",2024,Why is it hard to hire good Devops Experts ? 
Long-Ad226,1,"I mastered all of those, senior devops engineer, 27 years old. + many more, to concretise: [https://www.reddit.com/r/devops/comments/1ghwmj3/comment/lv0l6rq/?utm\_source=share&utm\_medium=web3x&utm\_name=web3xcss&utm\_term=1&utm\_content=share\_button](https://www.reddit.com/r/devops/comments/1ghwmj3/comment/lv0l6rq/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button)",2024,Why is it hard to hire good Devops Experts ? 
Ok_Giraffe1141,1,"Speed of born of a new technology is higher than the speed of people who are willing to take that responsibility. I worked in many places that they want latest shit but are not willing to walk the walk. So, in the end, “we can’t find qualified people” is the only excuse they present to upper management.",2024,Why is it hard to hire good Devops Experts ? 
nucc4h,1,"Because DevOps is impossible without supporting roles across the board. There are too many technologies involved with differing variables across units. 

I look at the role like that of an AWS Solutions Architect. You need to have a good grasp of all the principles involved, but you cannot be asked to build the framework from A to Z. 

You design the high level flow, you enforce the flow, collaborate to implement it, and you work on what you grow proficient at doing.",2024,Why is it hard to hire good Devops Experts ? 
JackfruitJolly4794,1,Devops is a fairly new concept in relation to other IT functions. Most good implementers of Devops concepts need a lot of experience across multiple disciplines. Those two things don’t create a large candidate pool.,2024,Why is it hard to hire good Devops Experts ? 
Deleted Account,1,DevOps means different things to different people. Ask all those people you listed and you will get wildly different answers.,2024,Why is it hard to hire good Devops Experts ? 
funky--chunky,1,"Anyone who knows how to do devops well will probably just want to be a developer and not have to worry about devops

You have to pay them similar, or offload a lot of the harder devops works to devs",2024,Why is it hard to hire good Devops Experts ? 
xtreampb,1,"I think people should first understand the role of DevOps. A devops engineer is first meant to ensure a company culture that turkey adopts an agile culture. That teams are built and structured to ensure that there is no dependencies on any role that falls outside the team.

They also bootstrap the dev team and start introducing roles that are outside of dev that the new product team will be responsible for. Things like IaC, ci/cd pipelines, observability/monitoring, user feedback and usage statistics.

DevOps is about fixing culture first and bootstrapping the devs with processes second. It’s about building functional, cohesive teams (not training your devs to do everything).",2024,Why is it hard to hire good Devops Experts ? 
Agreeable-Archer-461,1,Because devops isn't a person. /thread,2024,Why is it hard to hire good Devops Experts ? 
balalaikaboss,1,"Ever since the Phoneticians invented money, there has only ever been one answer to that question.",2024,Why is it hard to hire good Devops Experts ? 
Bluemoo25,1,"It's a mid level career that requires a lot of hands on experience, it's also usually support facing or customer facing and that adds pressure and burnout. The people who get the experience and are smart decide long term they want to manage people since they understand what's going on. Hence the gap. There's no school I'm aware of that can teach you what you need to know to do the job, it's all experience.",2024,Why is it hard to hire good Devops Experts ? 
cocacola999,1,"Unsure on which country or market you work in, but the general state I see is due to the following: 1) not actually good pay, 2) they don't know what they want, 3) the organisation isnt setup to enable the most out of DevOps culture, 4) physical office requirements.


If you work in the UK market, happy to link up ;)",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,"India, but situation is same more or less.",2024,Why is it hard to hire good Devops Experts ? 
HayabusaJack,1,"The positions just don’t pop up in my searches for me. I have a ton of sysops experience along with engineering, automation, security, platforms.

I have some production experience with CI/CD tools because I started out years ago as a hobby programmer then part time, then full time before transitioning into systems. But I enjoy programming and have dozens of personal projects including using jira and confluence (and a wiki) to manage my projects.

But I only get short contract positions or hybrid in any state but where I am.

I’ll continue with what I enjoy (I have a 300 server homelab) and perhaps, one of these unicorn jobs will pop up.",2024,Why is it hard to hire good Devops Experts ? 
webstackbuilder,1,300 server homelab? Is that physical servers?,2024,Why is it hard to hire good Devops Experts ? 
HayabusaJack,1,"Hah! No, I have 3 Dell R720XDs for a vCenter cluster and a single R710 for the KVM environment. I duplicate much of what’s on the vCenter cluster on the KVM box. The only real difference is I have an Openshift Cluster on the KVM box. I keep trying with the vCenter one, it builds the boxes, but doesn’t let me connect. I’m poking at ArgoCD and AWX for now so that’s kind of sidelined right now. :)",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,You seem to be great fit for a devops role.,2024,Why is it hard to hire good Devops Experts ? 
HayabusaJack,1,"I appreciate that. I did get an interesting role pop up a couple of weeks back but other than a text that the recruiter hasn’t heard anything, there’s been no further response. And they’re offering 120k-140k for a Senior Engineer managing 5,000 onprem servers.

Yesterday I did get this though:

    AWS Automation Engineer
    
    JOB DESCRIPTION:
    
    Experience with:
    
    * Routing and switching protocols, network architecture, 
      TCP/IP, and OSI model.
    * Industry specifications and standards IEEE, ANSI, Fiber 
      (Multimode, Single mode, UTP, etc.), Bridging, Switching, 
      Routing, Ethernet and Transport technologies and protocols.
    * Scripting/Coding with Python or similar.
    * Modeling and markup languages such as YANG, XML, and 
      JSON.
    * Network automation related frameworks (Ansible, Napalm, 
      Nornir, Netmiko, or Paramiko)

It was certainly interesting reading about YANG, Napalm, and Nornir. :) And it was a “hybrid” position, 4/5 and 5/5 Jan 1st.

But nothing to do with AWS that I could see.",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,Looks like they need you to automate AWS networking stack with Ansible and Python for when Ansible does not have a supported module. Maybe a very niche position. Give it a try.,2024,Why is it hard to hire good Devops Experts ? 
HayabusaJack,1,"Unfortunately as noted, it’s hybrid and moving really isn’t something I want to do. I certainly don’t want to move to Austin (or Arizona or Maryland or Florida or Georgia :) ).",2024,Why is it hard to hire good Devops Experts ? 
modern_medicine_isnt,1,"People who can retain depth in lots of areas and have communication skills, plus have organizational skills, are just rare.  Most people are just not capable of all that.  I know I can't retain the depth unless I am constantly working with a tech.  The coworkers I have that can retain the depth, lack the communications and organizational skills.  I know such people exist, but there just aren't enough capable to fill the demand.

I preach to the devops engineers all the time, write your code so someone less skilled can work with it.  Then we can farm some of the work to like SREs or what not (just picked a title cause every company defines them differently)",2024,Why is it hard to hire good Devops Experts ? 
bdog76,1,"Hire for skill and talent not product.  You are never going to find the exact match but anyone good will pick them up.

Sadly recruiters don't know how to filter like that.  Finding a good recruiter in the space is huge.

Then of course as others have mentioned the word devops has become completely over used, and candidates throw it on their resume just because they heard the word git onetime.",2024,Why is it hard to hire good Devops Experts ? 
Deleted Account,1,"If they're looking for a ""DevOps"" engineer, they're the problem. DevOps is not a department or a role. It has no defined boundaries as such. If they're having trouble finding someone that fits in that box, it's because they don't understand that they made the box up.

DevOps means developers owning their services in production and operators figuring out how to help them get there. There are roles that are better defined that take part in making that happen. SRE, Infrastructure Engineer, Automation Engineer, DevEx, and Platform Engineer all have specific connotations about what they're specifically good at because these are actual roles that people understand the general bounds of. Because they have known bounds, you know what to get better at. Because they have known bounds, people know what they want when they hire them.

We live in a world where we lost the war to have people understand what DevOps is, but it was never replaced with a clear job description and only serves as a mark on a company showing its ignorance outwardly.

Edit: you've mentioned elsewhere in the comments that it's a role for practical purposes. The ""practical purposes"" concession is the issue in itself.

If a company was constituted of a single developer, they would be practicing DevOps.

Now let's say that the developer is having a hard time understanding why a bug is biting them in the ass over and over. Time to hire someone to come help.

What skills should this person have? Most of the big roles are overkill at that scale. We know see that bugs making it out into production is alleviated by pushing the problem to the left. This means better testing and better pipelines. An automation or release engineer may be appropriate.

The issue is that being able to pick the appropriate role requires knowledge of what the problem actually is. This is why the ""practical"" component is thinly veiled incompetence on the hiring manager's part.",2024,Why is it hard to hire good Devops Experts ? 
nijave,1,"Don't forget about the O.G. DBAs, technical writers, QA specialists, performance engineers, storage engineers, release engineers, network engineers, operational specialists, systems engineers

Then there's also everything that falls under IT and IT service management...

\>""practical purposes""

Sounds like a euphemism for saving money/cutting costs",2024,Why is it hard to hire good Devops Experts ? 
NeuralNexus,1,"Everyone wants to pay the same rate bands, so the good people have no incentive to work for you. It's not all that hard to find qualified people. It's much more difficult to do so when you have to run an 'open' process via HR and you have major constraints on the compensation.",2024,Why is it hard to hire good Devops Experts ? 
nomadProgrammer,1,companies not willing to pay the money to get what they want,2024,Why is it hard to hire good Devops Experts ? 
sionescu,1,"How much are you willing to pay for a ""good Devops expert"" ?",2024,Why is it hard to hire good Devops Experts ? 
WiseassWolfOfYoitsu,1,"DevOps is essentially asking for a jack of all trades, master... of all of them. There aren't that many people who are capable of being a legitimate expert in that kind of thing. Especially when no company wants to deal with building up the expertise and finding internal talent and just want to buy away the problem (for what they think is a lot of money but is probably still less than a genuine expert in the area is worth).",2024,Why is it hard to hire good Devops Experts ? 
webstackbuilder,1,"I'd be interested if OP has any sense of whether what they mention is a U.S.-centric problem, or an everywhere-problem.

One issue that comes to my mind is that, if a DevOps workflow is set up properly, you can hire labor from anywhere for app development even if the deployment is within a protected network (e.g. SOC-2 / HIPAA). Compliance plans specify procedures for vetting app dependencies - and there's no difference between a feature PR and pulling in a third-party dependency in principal (given the feature PR may have some additional constraints imposed, in line with the same constraints for any other external dependency).

Infrastructure work in a protected network is going to require a U.S.-based developer who has been vetted. Those vetting requirements can be stiff, as well: clean background check, no instances of fired for cause, good credit report, etc.

I'm in the process of shifting to platform engineering / DevOps work. It's challenging and I enjoy the mental stimulation. I spent ten years in networking / sysadmin (partly in a F100 environment) and then ten years as a developer (mobile / web app / middleware). I've decided I will not work with protected networks after spending time in a devops/platform role (my first) for a company that has that constraint. I want to live as a digital nomad, planting my flag where I choose but retaining a U.S. presence (my incorporated freelance business). I could not do this in the role I just mentioned. Our hiring base for additional talent to augment the team was also seriously restricted. We had several good developers we could have brought in, but because they were based in Africa, or Europe, or China, it was a no-go.

I still haven't figured out how to move into the field fully given that constraint (no SOC / HIPAA work) and would appreciate any suggestions anyone has.",2024,Why is it hard to hire good Devops Experts ? 
TenchiSaWaDa,1,"The field is massive. Skills and experience in that wide field are hard to gauge, train, and weigh.

Every company does devops differently.",2024,Why is it hard to hire good Devops Experts ? 
Live-Box-5048,1,"In my opinion the skillset required for this role is insanely broad and companies are expecting a unicorn. That, and also there isn't that many people with deep skills in infra and SWE.",2024,Why is it hard to hire good Devops Experts ? 
myrianthi,1,"Because the offer is probably only $120k when it should be closer to $200k. But if one has expert DevOps skills, why would they accept such a salary or position when they could make more as a dev or even CISO?",2024,Why is it hard to hire good Devops Experts ? 
115v,1,"We need to know it all but yet get paid less than a SWE in most cases. Not only that, in the interview process it’s exactly the same as a SWE role with leetcode & system design questions..",2024,Why is it hard to hire good Devops Experts ? 
d3nika,1,"Many look just at the amount of papers(aka certifications) that a person has and that is easily exploitable as it seems. Others give you home assignments which again can be easily cheated. The only way I found is to actually talk to the candidate and listed and talk based on their experience and how they solved problems. That is hard, but it does make it very to cheat.",2024,Why is it hard to hire good Devops Experts ? 
DevoplerResearch,1,I imagine they have tried everything except paying more $$$,2024,Why is it hard to hire good Devops Experts ? 
stocktaurus,1,Every company is different! Are they paying enough to devop engineers? Do they have good trainers who are well versed in the subject matter. Salary needs to be fair. Don’t dump everything on that one dude!,2024,Why is it hard to hire good Devops Experts ? 
No_Bee_4979,1,"DevOps Engineers could ask the same question: why is it so hard to find a good DevOps role?  

So many toxic traits I have to look out for it makes it hard to find a sane role",2024,Why is it hard to hire good Devops Experts ? 
Signal_Lamp,1,"Because every company has a different definition of what ""Devops"" means. 

Even further down, when you meet someone that may fit your definition of Devops, they may not have enough depth in one or two specific tools that you need them to know about.

Pay may also not reflect the amount of technical knowledge that person is bringing too the table. It's very often the case a good devops guy will understand the entire stack front to back as well as all of the operational tools and cloud solutions that you're company is using, while also at the same time having an expectation to be able to pickup new tools to add into the stack relatively quickly.

For some companies the devops guy may even be serving on several teams as a SME to give architecture decisions to teams that may be looking to adopt a service/platform they provide.

Probably aren't going to get a magical unicorn that knows every single piece, but you can probably get someone that's good at being able to learn new stuff and has an excellent foundation on the overall principals over the tech.",2024,Why is it hard to hire good Devops Experts ? 
Fragrant-Fox-825,1,If you ask ten people what a devops engineer will do you'll get 6+ different answers. Aligning on the role and it's expectations is hard.,2024,Why is it hard to hire good Devops Experts ? 
mpvanwinkle,1,"If it’s hard to find the right fit, that’s a smell that you haven’t clearly defined the role. Which is the norm in DevOps.",2024,Why is it hard to hire good Devops Experts ? 
Ayushrmaaa,1,Why do you even have to hire a devops manager? Use deployment tools like toystack.ai or something else and get their help. You’ll save money by not hiring a devops guy and automating all of their work and if there’s something that can’t be automated. They’ll take care of it.,2024,Why is it hard to hire good Devops Experts ? 
BowlScared,1,"That would mean firing CTO and replacing him with a skilled manager with DevOps wizard at their side.
Companies look for person that would accept not solving the obvious problems and only work on problems company put in job description.",2024,Why is it hard to hire good Devops Experts ? 
divad1196,1,"For your edits:

- you are not provoking anything with a reddit post
- as I said in another post: certification means nothing. Some are easy to obtain, most people will just learn for the exam and then forget everything. If you don't practice, you forget. Also, we tend to expeft too much from someone with certificates, even if applicants are decently good, recruiters will expect more and be deceived

For the question itself:
It's as hard to hire a good devops as to hire a good project manager. There are multiple factors.

Many people invent themselves ""devops engineer""/manager without knowing what it actually means. I worked many years as a lead developer in charge of the recruitment and enforced DevOps mentality. Issue is: people think this is all about the tools when it is not. There are just tools.

Now, when some applies, he will put ""devops engineer"", okay, why not. Then in the interview, when you ask about what devops is he will respond ""I use docker and CI"": CI is also a concept and they meant they use the Github Actions/Gitlab CI tools. For docker, they don't even know the role it plays and barely know a few commands.

On the recruitment side, many don't know better.
That's why I recently made a post about what DevOps is and isn't.

I would say: stop searching for a ""DevOps"" or ""DevOps expert"" as everyone think it's the new word for ""Developer"" or for anyone that used docker/ansible/terraform once. Instead, search for an experienced Developer and mention ""experience with product maintenance, delivery and lifecycle management"". You should then be able to filter from the motivation letter when they describe why they fit for the position. That's also how the question should be asked during an interview and not ""I see you have DevOps/Docker experience. Tell me more about it"" which misslead the applicant.",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,"About your comment on my edit, it’s definitely touched the chord for many as a lot of people are already passionate about, have things to say based  on their first hand experiences. Besides, I am not here just to start some reddit, sit back and have fun thinking I am doing a great job. I am already working on things that would make a difference to the world, both to the way the recruitment is done, as well as to the people who want to get into devops but are not able to due to lack of depth ( certification is not depth) , lack exposure to real world projects etc. and all these conversations including your inputs are valuable to me.",2024,Why is it hard to hire good Devops Experts ? 
divad1196,1,"We are millions in the field. With different scale and experience. Influent people have spoken on the matter.

Honestly, only a few people had impact on the world in general, only a small portion of it comes from IT field. I don't think that you are one of them. The more you think about the influemce you think you will have, the less you actually work on your change. At the end, you will probably miss the practical side.
Short: we are too many, don't get too excited thinking you will have a significant impact. But keep working for it.

Have a nice day",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,0,"Thanks for showing the mirror 🪞. I am working on this, one small step at a time !",2024,Why is it hard to hire good Devops Experts ? 
notrufus,1,I have yet to find a company that understands the role they’re hiring for or at least how to interview for it.,2024,Why is it hard to hire good Devops Experts ? 
joe190735-on-reddit,1,"in a class, there are A students and B students obviously, experts are of course harder to find than average engineers, it's the same for every profession",2024,Why is it hard to hire good Devops Experts ? 
pronik,1,"Others have all given good points, I'd like to extend on the money argument.

A person doing DevOps needs to have a solid understanding of both fields (Dev and Ops), which are vast by themselves already. Whatever definition of Devops you are using (apart from ""we need someone to click on AWS resources""), you'll be looking for a good developer first and hope he has a deeper understanding of the Ops problem field (there are quite some ops engineers out there who a trying to do DevOps, but fail at basic software engineering).

The problem is, a good developer will probably want to keep developing and not fiddling around with Grafana dashboards for 30% less money. The non-classic definition of DevOps as a commucation position between development and operations, which tends to include CI/CD, deployment, networking and security, drives this point home, since it's even harder to find someone willing to do all of this. Considering their necessary competence field, they should be paid at least comparable to a software engineer, which is not in any way close to being the case in 80% of their companies, since most decision makers don't have any idea what DevOps actually do.",2024,Why is it hard to hire good Devops Experts ? 
siddharthnibjiya,1,"I think what I've seen is it's still fairly possible to get someone who can spin up and manage infrastructure but in the current ecosystem, it's really hard to get someone who can enable self-service for rest of the team for this. And then when production issues arise, jump in to help resolve infrastructure challenges on infra that's not even owned by them.

  
Now if you hire someone of the former type, there are bunch of challenges: you need to hire relatively more people, your development cycle might slow down a tad bit because of cross-ownership and dependencies. Getting the latter is hard because it's almost like a PM+engineer kind of role for the infrastructure stack, which is fairly hard combo + if even someone has the capability, how ready are they to go in for the hard work and burn?",2024,Why is it hard to hire good Devops Experts ? 
pivovarit,1,"\> even from some of the top product companies who are willing to pay higher than industry average

*narrator: they weren't*",2024,Why is it hard to hire good Devops Experts ? 
marksweb,1,"Being good at devops is a journey.

I've been on that for about 10 years. Technology moves so fast that you're always learning, trying new things out to improve services. So maybe part of the problem is that expectation is too high from people looking at what we do.",2024,Why is it hard to hire good Devops Experts ? 
Aremon1234,1,"If you’re not willing to pay $200k+ minimum (expensive states way more) then you’re not going to get experts. 

I’m a contractor and I’ve worked at big coast companies that are only offering $160k and wondering why they are not getting anyone good. The experts you’re looking for aren’t dumb outside of IT and know their value.

One company I contracted at wanted me to move to Seattle. I live in the Midwest, for a LATERAL move, no raise, I told them I would need $400k minimum and they wouldn’t do it. That would be my cost of living not changing but even if I bought a house it would be like a 1 car garage at best. I have a 3 car garage in the Midwest. So even at $400k my house size significantly less and everything is more expensive. No thanks",2024,Why is it hard to hire good Devops Experts ? 
SteveTses,1,"Because most DevOps engineers do not entirely understand the development cycle.

I was a Software Engineer for 25 years and a Software Development Manager before I became an excellent DevOps Admin.",2024,Why is it hard to hire good Devops Experts ? 
InvestmentLoose5714,1,It’s a role requiring in depth knowledge of what are usually multiple roles in parts of it that usually people don’t overlap.,2024,Why is it hard to hire good Devops Experts ? 
britzens,1,"Could it be because each company has its own definition of what a DevOps engineer even does? 

DevOps is like agile - it's a methodology. I've never understood why companies hire DevOps engineers when they wouldnt ever hire an agile engineer. It's assumed that you understand the methodology and should be able to work using it effectively. 

DevOps roles often times are just another way of saying platform engineer. But some companies use it for SREs. Others use it for actual software Devs as well. When you've got such a varying range, it's inevitable you'll get people who'll have done DevOps engineering roles at one company and completely bomb the interview at another since they might be looking for a completely different skillset. 

I have now started to ask more about what exactly the company is wanting out of a DevOps engineer and often times they are looking for either an SRE or a pure platforms engineer. I've had some instances where the company is actually looking for a software engineer with infra experience. 

This, I feel, is the crux of the issue. There's no set definition of a DevOps engineer. So you get people who might be great in one role but not for another. For a software engineer, the definitions are clear. You need to know data structures, algos, and designing large and distributed software. DevOps tho. You need CICD, cloud, containers, scripting, Unix, python/Go, kubernetes, and some other stuff. People will have experience but one job may require an expert in UNIX and not have much python but another will be the opposite. So it's not really the candidate pool is bad but the way to industry has decided to approach this specific role is resulting in the current issues.",2024,Why is it hard to hire good Devops Experts ? 
ProstheticAttitude,1,"i did devops for nearly a decade at a place (no names) with nontrivial scale. i came into this scene from the perspective of a C++ systems programmer with a lot of networking and storage experience

it was fun learning how to do distributed systems for reals, building-out racks of servers and SANs and turning them into millions of happy customer sessions, but in the end it was being on-call that absolutely killed me

don't regret it, won't do it again

\[also, do not talk to me about SuperMicro, ever :-) \]",2024,Why is it hard to hire good Devops Experts ? 
human-google-proxy,1,"Lack of willingness to pay for the skillsets. If you offer enough money, they will come.",2024,Why is it hard to hire good Devops Experts ? 
SnekyKitty,1,If you do any leetcode filtering don’t expect to find a good Devops person,2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,💯agreed. It’s a nonsense to have leetcode as a screening/qualifier for a real devops expert.,2024,Why is it hard to hire good Devops Experts ? 
Shichroron,1,"There are a lot of reasons. Typically the reason is that mindset >> skill , and a lot of hiring managers focus on skill and end up hiring C players",2024,Why is it hard to hire good Devops Experts ? 
ConstructionInside27,1,"Because it's high wire walking without a safety harness but the few seriously skilled leotard wearers mostly write core systems instead.

IaC and other good practices will help but whereas I'm safely tinkering on the perfectly coded feature with unit tests in a sandbox, devops often have to carry out high risk procedures on production.

The right profile is someone highly fastidious with rock-solid attention and working memory as well as deep knowledge and almost infallible reasoning skills.

That's a true all-rounder who's rare in any setting.",2024,Why is it hard to hire good Devops Experts ? 
thomsterm,1,"HR's that don't know a thing about tech, and the best DevOps engineers don't want to deal with recruiters and the long and nonsensical interview processes that companies are giving out.",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,I agree ok non sensical ii nterview process.,2024,Why is it hard to hire good Devops Experts ? 
26J-stroke-6,1,"There is a wide variety of tools for each function of DevOps, even ignoring the troves of nuanced knowledge you need to investigate, debug, mitigate, and remediate a failure situation.

With so many tools, yet job roles being fairly specific but often similar (need to know k8s not EKS; need gitlab, circleCI, and Jenkins, but your GitHub, Bazel, Buck, TeamCity, are completely useless) we get compared on half or less of the tools we’ve used.

Finally, with a role as removed from sales and quotas as DevOps/SRE, the next resume coach who wants me to derive the percentage lift of income directly attributed to the autoscaling ephemeral build clusters I deployed for a few pipelines is going to force me to ragequit the industry.",2024,Why is it hard to hire good Devops Experts ? 
ohcibi,1,"Expectation management. CEOs don’t accept when someone tells them „it’s not possible“ or „we can’t save money without….“ which devops have to do pretty often. Instead of being reasonable the devops guys get fired and replaced. And then the story repeats.

Basically the idiocy of CEOs thinking single developers can create new twitter while taking a shit (well……………) shifted to single devops engineers who are expected to run a clone of AWS on a raspberry pi.

Humanity is doomed basically.",2024,Why is it hard to hire good Devops Experts ? 
NewPresWhoDis,1,"DevOps personnel development is a lot of trial by fire, blood, sweat and tears that you simply can't just plop in a classroom or textbook. Companies stopped internal development back in the 90s because cost and first wave offshored some of it because it's just keeps things working and doesn't generate sexy shareholder value until it all goes tits up. Then you're back to the blood, sweat and tears.",2024,Why is it hard to hire good Devops Experts ? 
HJForsythe,1,Because the word devops doesnt mean anything.,2024,Why is it hard to hire good Devops Experts ? 
ssssssddh,1,"At my job, ""devops"" means ""full-stack, architect, and keeper-of-the-iac"". I really don't know what ""devops"" is supposed to mean, and I'm the one in this role. Back when I first heard the term, it meant something like a combination of dev and ops culture to facilitate developers owning and managing their own infra. But now it's a separate role, so many devs just throw their hands up and say ""I don't know AWS"". So instead of a dev culture, it's just a team within a team that does both dev and ops.

I expect ""devops"" at most companies is similar. They want a full stack dev that can work on anything and has deep knowledge about every cloud provider and niche service. AKA someone that either doesn't exist or has decades of experience and wants to be paid accordingly.",2024,Why is it hard to hire good Devops Experts ? 
bonlow,1,"Because most companies have their own set of weird tools, and they want to find someone who knows them all. But DevOps  is not about tools.",2024,Why is it hard to hire good Devops Experts ? 
FrostyCriticism0,1,I feel the problem is a lot of hiring managers and recruiters get bogged down on the specific technologies and are looking for a needle in a haystack. This is mainly because they don't understand the similarities between technologies (CloudFormation/Terraform/Pulumi) or are expecting someone to be an expert at everything.,2024,Why is it hard to hire good Devops Experts ? 
SuperLeroy,1,"Given enough time and the right amount of pay, I can do anything devops related you want.

The problem is, you won't give me enough time, or enough pay to prove that to you.

Or the amount of time it takes me isn't acceptable to you, or the pay isn't acceptable to me.

That pretty much sums it up as to why it's so hard to find good devops experts.",2024,Why is it hard to hire good Devops Experts ? 
shadowh511,1,You're probably not paying enough. Try paying more. ,2024,Why is it hard to hire good Devops Experts ? 
eazolan,1,Because everyone wants the market to provide a unicorn. No one wants to train up level 1 people.,2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,True that . How do we solve it ?,2024,Why is it hard to hire good Devops Experts ? 
eazolan,1,"Always hire interns. At worst, you have rubber ducks.",2024,Why is it hard to hire good Devops Experts ? 
thinkscience,1,Pay pennies ! Expect mediocre results,2024,Why is it hard to hire good Devops Experts ? 
Striking-Database301,1,"Hire me. I'm quite good with eks, ecs, Terraform, Github actions, nginx and various monitoring tools. i have near 5 years of experience in DevSecOps",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,"Sure, Will refer 😀",2024,Why is it hard to hire good Devops Experts ? 
Deleted Account,1,[removed],2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,3,Thanks for judging me without the context and knowing my body of work.,2024,Why is it hard to hire good Devops Experts ? 
iAmBalfrog,1,"The main issue is the definition of DevOps, it's a mindset, not a role, so when you see it as a role what does it mean

\- You're a SysAdmin who's going to be dealing with the toil of legacy servers

\- You're an Ops engineer who may have some fun with CI/CD

\- You're a kubernetes fire fighter

I've met 0 engineers who are a \~even split of development & operations, it just doesn't exist today, if you want me to dig you out of a terragrunt hole, fine, if you want me to help maintain a legacy jenkins server, fine, if you want me to help build out your infra monitoring stack and you can't afford an SRE team, fine. But calling it DevOps Engineering is a little disingenuous.",2024,Why is it hard to hire good Devops Experts ? 
Wooden_Excitement554,1,"While I agree with you at the phisoplical level, reality is 0% companies are hiring a mindset guru. When they say they are hiring for devops, it always (not even almost always) means they are hiring a xxxOps guy/gal who can help them implement stuff. This is the reason when I was associated with Linux Foundation , we kind of always referred to these roles as SRE. However, in my opinion SRE is not always the right reference either. So I would accept Devops Engineer/Expert as the role.",2024,Why is it hard to hire good Devops Experts ? 
iAmBalfrog,1,"Fundamentally, you wouldn't hire a ""test driven developer"", despite wanting a developer who practices TDD. If you want someone who knows github actions/argo/jenkins, automation engineer, if you want someone who maintains platforms/systems, platform/systems engineer, if you want someone focussed on reliability, SRE exists. 

As someone who used to work as a DevOps engineer, I called myself a systems engineer as it wasn't really showcasing what I was doing day to day, everytime a recruiter poked me I'd ask what maturity they are, is it a platform or embedded model, is there on call, is there a dedicated support team etc.

Most recruiters would ask to book a call where they still wouldn't know, and I decided I didn't like the way they operated, but I feel that way about 99% of recruiters who have an exciting opportunity with an industry leader who cannot be named, if you're worried I could apply direct, you're admitting you're not providing anything as a recruiter.",2024,Why is it hard to hire good Devops Experts ? 
0ctal,340,"Hey where I am companies pay through the teeth for ""DevOps"" personnel, so please stop trying to destroy the gravy train!",2022,"DevOps is dead, long live DevOps"
Deleted Account,102,"This.

As long as I get that ""DevOps"" salary, I could be called Junior Janitor for all I care.",2022,"DevOps is dead, long live DevOps"
donjulioanejo,10,"Sorry, at our company we have strictly defined ranks.  It's Sanitation Engineer II - Floor Maintenance.",2022,"DevOps is dead, long live DevOps"
nashdiesel,1,At my last company I didn’t let my engineers put DevOps in their title and I refused to name any of my teams using that name.  They were “Techops” or “systems” or “cloud” or whatever was appropriate.  I did tell them they were welcome to use the title on their LinkedIn for their next job however.,2022,"DevOps is dead, long live DevOps"
nskaraga,4,"Seriously? Tech ops? 
Once they leave and someone calls HR to confirm their title, HR will say tech ops. 

The person calling is going to be confused.",2022,"DevOps is dead, long live DevOps"
nashdiesel,2,HR doesn’t exist anymore since the company folded due to covid.    If they reference me I’ll call them whatever they want.,2022,"DevOps is dead, long live DevOps"
nskaraga,1,If they ever get a new HR person which they probably will their title will be important. The title opened doors for me.,2022,"DevOps is dead, long live DevOps"
Unlucky-Switch-7401,1,"It's a valid point. DevOps is not a title, it's a methodology your follow to get working done. So many people miss this point. Same with Agile and Scrum.",2022,"DevOps is dead, long live DevOps"
Merejo,48,"my first thought, I am getting paid well to be a ""DevOps engineer"" so stop this nonsense LOL",2022,"DevOps is dead, long live DevOps"
CuntWizard,30,"Right - and there’s a reason the title exists. Because SRE doesn’t quite cover it but it’s sort of like saying “Scrum Master” is too vague because the duties thereof are different project to project, company to company. 

It’s a catch all for a **reason**; because we embody ideals that we espouse to others. We are the rising tide that lifts all boats on our team by not only gate keeping the IAM permissions/VPCs/etc but enabling them to do everything aside from that themselves. 

DevOps is basically like being called a “teacher”. We want all the people doing it with us to learn and function with our ideals in mind, but we’re still the ones grading the tests.",2022,"DevOps is dead, long live DevOps"
drakk0n,30,"I'm envisioning a Spartacus moment here - ""I am a DevOps Engineer""",2022,"DevOps is dead, long live DevOps"
xrayrocketship,9,"You know what happened to Spartacus and all his friends, ja.?",2022,"DevOps is dead, long live DevOps"
IndieDiscovery,10,They put down their sticks and stones and retired happily ever after?,2022,"DevOps is dead, long live DevOps"
hatchikyu,8,"Be careful what you wish for.

I joined a non-tech field in the mid-2000s that was hot like what tech and DevOps in particular is right now. It had the same markers DevOps has: well-respected, high-growth market, ambiguous work patterns, perceived mission-criticality, scarce talent pool etc.

Powers that be will always try to find ways to get workers for less cost i.e. moving the gravy train in their direction.  And it will happen at some point.

That non-tech professional field I mentioned earlier is now a husk of what it was in the late 2000s. Weak pay relative to less skilled jobs and more work without any of the integrity and culture refinements that OP is pushing for.

Because nobody bothered. Because the money was good. At the time.",2022,"DevOps is dead, long live DevOps"
techworkreddit3,14,"Yepp, I don't care what you need to call it, just keep paying me this rate.",2022,"DevOps is dead, long live DevOps"
Neil_Fallons_Ghost,6,Honest question as someone in lead devops role. What’s the pay packages youre seeing?,2022,"DevOps is dead, long live DevOps"
Sinnedangel8027,13,"Senior here in LCOL midwest. I work remote and just switched jobs. Last one was 160k + 10% bonus with a possible additional up to 5% based on profits. Insurance cost $300/mo for employee + children and it was fairly decent. I got fucked on the bonuses though and didn't get a raise for 3 years.

I just left that job for a remote startup. 210k + 20% bonus per year and able to purchase 25,000 shares after 1 year. Its private so I'm not sure how that works but whatever. Insurance shot up though, $798/mo for employee + children. Its copays and deductible stuff is a lot lower although I'm still spending more for it than I'm getting back on those copays. 

Both jobs were unlimited PTO and 12 holidays. This new one is a straight 9 to 5 with no oncall though. That was the biggest selling point. So now I'm contracting during off hours at $80/hr. And that's working out nicely so far.",2022,"DevOps is dead, long live DevOps"
Neil_Fallons_Ghost,2,"Thank you for answering. I’m at $145 with a 10% bonus. I dont count on that. Insurance has gotten worse for me too. 

I’m the only devops and wearing a few hats at this startup. It’s good work and a good team but if I can do better for my family I should. 

What’s your team look like? Is it a decent size devops team or just you?",2022,"DevOps is dead, long live DevOps"
Sinnedangel8027,1,"Last place I was at, I was the only devops engineer for the company and it was by absolutely no means a startup. I supported a ridiculous amount of infrastructure and pipelines. It was a company that was like this software hoarding dragon, rather than produce software they just bought out other companies and incorpated them very shittily. It was a nightmare.

But then I move over to this one and its more a consultant sort of company. I don't actually support anything so much as offer assistance, work on straight project work, etc. I am once again the lone devops engineer but I'm also the 8th employee that's been hired. 

Quite honestly, I do prefer it this way. I'm an oddball sort of person and I really don't like people in general. So this position is working out pretty well so far.

As for your compensation, its pretty good depending on where you live. If you were at 145k in the bay area or nyc, then I'd 100% be looking elsewhere. But if you're in like, Ohio, I wouldn't expect much more especially if its not remote.",2022,"DevOps is dead, long live DevOps"
Merkilo,2,Just curious how do you find contracting work leads?,2022,"DevOps is dead, long live DevOps"
Sinnedangel8027,1,"So a couple of things, what are you actually looking to do and what are you able to offer under pressure? If you're looking for just contracted projects then you could probably just go with any of the bigger names, Apex, Tek Systems, Robert Half, blah blah. If you're looking for gig work, then you'll need to market yourself. Make a website, show case your skills to an extent, public github contributions or your own repos, etc. You could look at Fiverr, freelancer, upwork, guru, toptal, etc. Taskrabbit is a personal favorite during the spring and fall months for yard work and whatnot. It's entirely unrelated to tech, but I figured I'd mention it if you need quick-ish money and have an able back lol",2022,"DevOps is dead, long live DevOps"
SexyMonad,328,"> They all think the word means somebody who writes Terraform and gate-keeps the AWS IAM Administrator role.

And I took that personally.",2022,"DevOps is dead, long live DevOps"
royalme,150,"Consider, if only for a fleeting moment, if you are the one who doesn't get something.

Devops is only a term, an idea, that someone created. It's not a mandate from heaven. People (or companies) can pick parts of the idea they like and want to follow. And they're not wrong for only following parts of it if it fits their goals.

In fact it's an idea that's well known to partly overlap with concerns of an SRE. Both deal with concerns of managing technology operations.

There's lots of ideas in the industry. There's Agile, there's Scrum, there's OOP, and functional. There's TDD, pair programming, domain driven development. We can't even agree on the definition of a unit test vs an integration test.

Practically nobody is doing any of it correctly, and nobody is doing all of it. They are not mandates, they are just ideas. Don't get hung up on one and live in the woods and write a manifesto or anything.",2022,"DevOps is dead, long live DevOps"
Deleted Account,27,"I agree with you, but I think what OP is saying is that most of the industry is doing it consistently and systematically wrong. It's not just that they're doing DevOps wrong, but they're doing it wrong the way everyone else is doing it wrong and not asking the right questions. 

Doing DevOps the wrong way has become industry standard, which means of course the reality of devops is divorced from the theory of devops, meaning all of our jobs are that much harder.

I'm constantly facing this problem where customers are implementing CodeDeploy/IaC to ""do devops"" and then wonder why 7 people from different silos need show up to a meeting to decide how the infrastructure should work which inevitably causes delays and friction. It's hard to explain the culture/Conway's Law angle of devops to them because they've never heard about it before from anyone else.",2022,"DevOps is dead, long live DevOps"
Aremon1234,14,"I mean what about Agile, every company Ive worked at is doing it wrong",2022,"DevOps is dead, long live DevOps"
CuntWizard,2,"Agile is pageantry around work units assigned to people - there’s no “correct” way to implement it that will ever square perfectly with the holy texts thereof. 

Like democracy, it sucks but it’s still better than most of what we’ve come up with.",2022,"DevOps is dead, long live DevOps"
MrMunchkin,6,"I get that this is the common troupe to avoid doing Agile correctly, but it is patently false that there's no ""right"" way to do Agile.

There is absolutely a right way to do Agile. And it's been proven over DECADES of research using the scientific method.

But, like most scientifically backed research, that shit is ignored because ""I'm an expert and know how to do Agile"" will override facts.",2022,"DevOps is dead, long live DevOps"
CuntWizard,1,"I disagree; it’s very simple to embody the principals of agile. 

Not unlike socialism, the practice is always sloppier than the initial theory. Concessions are made on the road and often due to mandate well beyond the reach of the people tasked to keep agile sacred.",2022,"DevOps is dead, long live DevOps"
Deleted Account,1,"The thing with Agile is that it has a well-structured and documented way to go about it. What this means is that most companies end up getting the first 20% of Agile more or less right even if they don't mean to. So, most companies will have a fairly decent cross-functional team, they will do daily standups even if pointlessly, and the scrum master will more or less speak to external stakeholders and free up the team to do the actual work.

Beyond that it's anyone's guess. A lot of companies don't have product owners, or retrospectives, or have all the artifacts, but the point is that with devops there isn't even the first 20% that is done correctly. I've rarely seen a proper 2-pizza team with developers and infrastructure engineers as part of the same team. 90% of the time, DevOps is a separate team which manages the cloud. I've also rarely seen devops engineers participate in the sprint planning or product design process, meaning their expertise is left for the end when things need to be ""deployed"".

I think the main problem might be that while Agile is marketed to non-technical product managers and senior leaders, devops is still very much a tech thing and a sysadmin thing which most people don't care about. Meaning you can expect most people, technical and non-technical, in your org to know about Agile and what it can do, but devops will still be relegated to its own team, which defeats the whole purpose of devops.",2022,"DevOps is dead, long live DevOps"
svurre,1,"Totally agree with you. My perception is that often when concepts or ideas make a break through, it is because the idea/concept was implemented from the top down, instead of from down up (where up is management and down are the technicians). Perhaps this is a bit naive, but that's the feeling I got from the companies I've worked at.",2022,"DevOps is dead, long live DevOps"
Deleted Account,2,"You're absolutely correct. Having worked as a dev and then a devops and now an architect, I've learned that senior leadership buy-in is the most important factor that predicts success. Without that, implementing anything is difficult if not impossible, especially cultural changes.",2022,"DevOps is dead, long live DevOps"
Obsidian743,1,"What you're describing is exactly what happened to ""agile"" and I agree it's exactly what's happened to dev ops. Most people had a difficult time understanding what it really meant but wanted to jump on the train anyway. Before long everyone is co-opting a bad version of it that no one intended and now here we are.",2022,"DevOps is dead, long live DevOps"
Neil_Fallons_Ghost,0,"Consider how many were already doing it wrong, wether that be VMware, or a Colo, the utility closet, or whatever. 

Companies come in all shapes and sizes and certainly budgets. Don’t expect any of them to operate similarly or have trodden similar paths. It’s always completely different in how they got there.",2022,"DevOps is dead, long live DevOps"
qub3r,5,"A couple views I would add are: 1. DevOps will inherently look or be implemented differently across organizations. 2. DevOps describes a path/journey where the tools, processes, and culture will be more or less mature depending on where they are.

For example, a single person doesn't wake up one morning, decide they are now going to follow a minimalist lifestyle, and have that be the start and end of it. It happens over a long period of time. This is even more so the case when you're talking about a larger group of people.

One can look at a static snapshot of an organization and be able to point out a lot of things that could be improved, but it's imperative to understand: what's the focus and how do the decisions being made in the areas of focus line up with the commitment to DevOps?",2022,"DevOps is dead, long live DevOps"
rcls0053,80,"Nice rant, but not very new. The same thing has happened with many other concepts, like agile. Some people take up their torches and start spouting how we need to kill this and that to get a fresh start. It's not gonna work. It's the nature of the business. However, us people who understand how wrong they are can educate them. Even now I'm teaching DevOps principles and culture to a customer who already set up a team to experiment with, to use those practices and see it's outcomes. They've embraced continuous learning and are moving in the right direction.",2022,"DevOps is dead, long live DevOps"
OlandoSC,3,"It can be more impactful to lead by example! I am in a similar position where I am helping an organization shift toward what you may call a 'devops culture', enabling teams to deliver their product more effectively, creating meaningful feedback loops to quickly integrate changes etc.

This org isn't in the software development space and they aren't using a ton of tools one might call 'devops' tools, but they have begun to embrace the ideas that enable the team to affect change.",2022,"DevOps is dead, long live DevOps"
smcarre,2,"I think one key difference between this and agile is that agile is an actual working framework set up by a specific group of people that defined what is and what isn't agile, DevOps isn't.",2022,"DevOps is dead, long live DevOps"
DeusExMagikarpa,1,Isn’t agile the ideology? Whereas safe and scrum are implementations of it (or so they say),2022,"DevOps is dead, long live DevOps"
PartemConsilio,41,"I have been hired as a “DevOps engineer” and when I was hired I even explained to my current employer this isn’t really a “thing”. But you know what? I decided that I’m going to own it and I believe part of my role is consulting on design and methodology. So far, I have been received well for that. I often tell people my basic role is “I remove bottlenecks for development so devs can focus more on building shit and ops can focus more on automating shit.”",2022,"DevOps is dead, long live DevOps"
zhynn,10,"This is what DevOps is, and it is not an illusion. 

I see it as automation between code and infrastructure. It can touch lots of different specializations, but it is really just implementation of automation between software engineer and infrastructure. That infra may be cloud, but it could also be on-prem.  

Good DevOps ends up being a force multiplier for the other more specialized roles (software engineers, SREs, technical admins, customer service... even sales in some cases).  And it's also a role that bridges worlds, so it works well in a consultancy role as well (as you mentioned).

We are ""doing it wrong"" in that we used the term to be a placeholder for those responsible for the infrastructure and CI/CD instead of the application code itself.  But the management of the infra is mostly irrelevant, it's the automation tooling that we build that really adds value.",2022,"DevOps is dead, long live DevOps"
Deleted Account,122,"You are trying to change the world. Does nothappen.
Right or wrong doesn't even matter
You will.keep.wasting your energy on things you can't control. Best wishes",2022,"DevOps is dead, long live DevOps"
ThoseeWereTheDays,4,This +++,2022,"DevOps is dead, long live DevOps"
rickerdoski,-2,...says the million lemmings that are supposed to never be wrong.,2022,"DevOps is dead, long live DevOps"
NormalUserThirty,1,wise,2022,"DevOps is dead, long live DevOps"
luenix,35,"\> new terms that speak to more specific aspects of DevOps can arise

Leaving out programming and infosec for a moment and just rattling off a few:

\- SDET

\- SRE

\- DBA

\- Systems Integrator

\- Systems Engineer

\- Product Manager

\- Systems Analyst",2022,"DevOps is dead, long live DevOps"
Abhir-86,25,Release engineer,2022,"DevOps is dead, long live DevOps"
fauxpasgrapher,7,"This is the official ""we don't want to embrace DevOps"" position in my experience. Devs throw anything they don't want to do over the wall to the RE.",2022,"DevOps is dead, long live DevOps"
Abhir-86,1,Haha very true. I started my first job in IT as RE a few months ago and am enjoying it so far. After changing fields I am now satisfied with my career choice and motivated to grow. I still have many things to learn and am slowly getting out of my comfort zone.,2022,"DevOps is dead, long live DevOps"
fauxpasgrapher,0,"If they're giving you manual work, try to automate it or learn how.",2022,"DevOps is dead, long live DevOps"
Abhir-86,1,Not much manual work but yeah I am gonna automate some boring stuff after I learn.,2022,"DevOps is dead, long live DevOps"
Robert_Arctor,12,"Platform engineer here - I like it better because it describes the role much more clearly. I work on the scaling, monitoring and upkeep of our cloud platforms.",2022,"DevOps is dead, long live DevOps"
smcarre,5,YAML developer,2022,"DevOps is dead, long live DevOps"
luenix,1,"Have fun with this :D

https://github.com/kylepls/YamlLang",2022,"DevOps is dead, long live DevOps"
ikkkkkkkky,4,Build Engineer,2022,"DevOps is dead, long live DevOps"
melisargh,0,"“SRE” here I’m like a third level of incident escalation? Also automate some stuff, honestly I’m not happy here so I’m migrating to pre sales, at least if I’m a lie I get to make a profit about it",2022,"DevOps is dead, long live DevOps"
FreeYellow6768,1,destroyer,2022,"DevOps is dead, long live DevOps"
Dr_Pills,1,Add cloud engineer,2022,"DevOps is dead, long live DevOps"
EiKall,18,"Bad rant, not enough shouting. 3/10.

Also Gartner told us that DevOps is dead years ago. Now you have to buy at least BizDevNetSecOps to stay ahead of the hype cycle. /s

At the end of the day good workers want to work better instead of harder, so they look for relevant keywords in job offers. So now every HR SEO slaps a DevOps on their job offer, no matter what they want you to do.",2022,"DevOps is dead, long live DevOps"
t_go_rust_flutter,28,"The management in my old company thinks DevOps means: all software engineers know *everything* about development, testing, producing and deploying software. Including setting up and maintainig a complete CI/CD pipeline.

Heck, Microsoft teaches that this is what DevOps is for Azure. The AZ-204 certification assumes (or at least implies) one person should do everything from developing C# to maintaining the CI/CD pipeline.",2022,"DevOps is dead, long live DevOps"
lorarc,30,"What is wrong with devs maintaining the CI/CD pipeline? I don't write the tests for them, why would I care about how the tests are run?

CI/CD pipeline should only be concern to the ops/devops when it comes to maintaining the servers it runs on but we should aim for having it as PaaS.",2022,"DevOps is dead, long live DevOps"
killz111,7,"Nothing is wrong. Until it is. The problem is scaling complexity. Devs can easily maintain a handful of Jenkins jobs. But the whole point of CI/CD is that it enables you to do more and quicker. After a while your CI/CD becomes a stack of its own and since devs really should focus on mastery of their code (yes languages are fast changing now) they got no time or headspace to deal with all that complexity. Enter the permanently stressed DevOps.

Before someone jumps up and says automation is the answer. My question is who maintains the automation in a tech world that's speeding up?",2022,"DevOps is dead, long live DevOps"
lorarc,3,"But what does CI/CD do?

\- run tests (which dev have written)

\- run code quality

\- build application

\- run security tests

\- run complaince like licenses

\- deploy to various environments

Out of those only deploy is my concern and maybe the performance of the whole thing if I'm hosting it. Security is shared burden but it's probably devs that will deal with stuff like updating containers.

Unless that CI/CD pipeline is doing a lot of crazy things (I once had to setup mac cluster to build hundreds of ios apps) devs can deal with it.",2022,"DevOps is dead, long live DevOps"
killz111,1,"Read my comment at the top. I didn't say devs can't deal with it. But once CI/CD get complicated enough it becomes not feasible for most devs because their core job is building software. Think

\- segmented network zones and hybrid networks

\- retrieval of secrets and config from multiple sources

\- pre deployment checks

\- post deployment checks

\- blue green deployments

\- zero down time deployments

\- migration of assets

\- keeping code reusable and dry across multiple tasks

\- common storage mounting across multiple private agents

\- caching of large intermediate builds

\- cost management for VM runner pools

\- adding resiliency to all of the above so your CI/CD isn't failing every second day

\- dashboards for everything

And regardless of the title of the person who does the work, most of CI/CD falls under DevOps. So if your team's devs maintain builds and automated tests then great but they're not cutting code for features and there are plenty of devs who just lack the experience or curiosity to deal with CI/CD problems.",2022,"DevOps is dead, long live DevOps"
gex80,2,"The answer isn't supposed to be a black and white you do this and you do that. The simple answer is OPs defines what the CI/CD process looks like and implements guard rails, and the devs do what they need. We build out the CI/CD cluster, the agents, the jenkins config, etc. The actual pipelines themselves, the devs can do whatever they feel is right or they can ask for assistance. If they have an issue we will assist. Regardless of how highly paid you are, ocean of knowledge of tech you may have, etc, at the end of the day, we are a ""supporting"" position unless you're the one actaully banging out the code that makes it to end front face (you can point to the asset on the site/app you made).",2022,"DevOps is dead, long live DevOps"
killz111,0,"We are absolutely not a support position for devs. That's the kind of thinking that betrays the traditional ops side of DevOps. Our job is to get code and infrastructure into prod and make it run in a stable environment. Most devs don't and can't realistically be expected to care about load balancers, DNS routing, VM scaling etc. There are plenty who do but it requires intelligence, care, curiosity and experience to come together to make someone like that and the general population just want a pay check.",2022,"DevOps is dead, long live DevOps"
Ordinary-Medicine-35,4,So by alleviating the pressure of knowing about those things you said is not considered supporting?,2022,"DevOps is dead, long live DevOps"
killz111,0,Just like Devs alleviate the pressure of knowing about JavaScript or go or java in depth. It's called helping your team mate to get features shipper to prod. We all support the software. But not one discipline or role is subordinated to another. BAs and QAs are just as important. Why don't we say we support those guys?,2022,"DevOps is dead, long live DevOps"
Deleted Account,1,[deleted],2022,"DevOps is dead, long live DevOps"
killz111,1,What is the whole point of software development?,2022,"DevOps is dead, long live DevOps"
t_go_rust_flutter,1,Go check the curriculum for AZ-204 to see what I am talking about.,2022,"DevOps is dead, long live DevOps"
No-Safety-4715,11,"This *is* the core goal of DevOps: that everyone is both a full fledged developer and knows operations. There is no other way to reach the DevOps ideal without this concept. *BUT* that's simply not possible in today's world. There is too much overhead for any single individual to master all those skillsets *and* be able to maintain them. Some day, cloud and automation may become so refined it's achievable, but right now, it's simply too much work.",2022,"DevOps is dead, long live DevOps"
MrScotchyScotch,2,"My experience with the theory and practice of DevOps conflicts with your proposal. At a large enough scale, humans can only do so much, so we specialize. There's nothing wrong with that. The developer doesn't need to be experienced at operations.

But the developer can know how to *integrate with operations* to ensure their application works as intended, that they can troubleshoot it easily, that it is monitored properly, etc. *That's* what DevOps is intended to achieve - finding the balance where the developer knows enough about the system that they can be assured of how their app will run, without needing to know personally how to make it run that way. This is the Dev <-> Ops connection. Two different specialties, two different roles, but a shared understanding and cooperation to make it all work.",2022,"DevOps is dead, long live DevOps"
No-Safety-4715,2,"Do you not understand how that's contradictory at its core and creates the problem I describe? 

You acknowledge the human limitation and the requirement of specialization. DevOps philosophy would have an *ideal* which would be a team of people who not only master development but also master operations. Clearly too rare and nearly impossible in real life to have people like that. 

The reality is more like what you describe: a dev having a cursory understanding of the systems and tools their app runs on while there still has to be those who specialize more in operations because the tools and systems get too deep. Ops having a cursory understanding of how Devs work and how the application runs so they supply the systems without much thought to advanced programming.

The catch is, that's how it's always been. That's not a new thing. Ops has been setting up systems knowing the general fundamentals of  software development all along. How do you think they built systems to begin with before the term ""DevOps""? Same from the other end. Most programmers have always known the general concepts how and what their apps run on. 

So we're back to this thing of what does DevOps really keep asking us to create? Well your original post says you're pissed because teams have people with ""DevOps"" titles, but to me, that's the generalists who walk the line between the two helping the teams communicate while others on each side remain specialists because, as we've established, everyone can't achieve that DevOps ideal of mastering both. 

If we're sticking with cursory understanding of each others roles then, well, we're just back where we were before DevOps was coined. At least having DevOps in people's titles should be useful for letting other folks know that this person is the go between. If they have questions or want to learn more about one side or the other, this person should be a great first step.",2022,"DevOps is dead, long live DevOps"
MrScotchyScotch,1,"> DevOps philosophy would have an ideal which would be a team of people who not only master development but also master operations

No, I don't believe DevOps has that philosophy. I haven't seen it in any writings from any of the people who first created the term nor espoused the practices or culture of DevOps.

I believe the aim is for everyone to understand the various problems that can happen along each step of a software development lifecycle, and for each role to understand what they each need to do to prevent those problems. That involves learning new ways of working, and new ways of collaborating. But it doesn't require anybody learning anybody else's job.

It's like home construction. A framer doesn't need to know how to be a plumber. But they do need to understand how to frame in such a way that they're not making the plumber's life worse. And the plumber needs to know how to plumb in such a way to prevent problems for other tradesmen. Otherwise, the end result could be a real mess of a house. If everyone works together well, the house gets done faster and cheaper and better.",2022,"DevOps is dead, long live DevOps"
No-Safety-4715,1,">I believe the aim is for everyone to understand the various problems that can happen along each step of a software development lifecycle, and for each role to understand what they each need to do to prevent those problems

No, that requires people to know other people's jobs. No way around it. For someone to be skilled and qualified enough to *understand* the various problems *and* how to prevent them is knowing other people's jobs. You can't understand problems and know how to fix/prevent them without intimate knowledge that comes from knowing the tools, systems, techniques, etc. very well in the majority of cases. And if you know them that well, you could likely work that job that uses them. 

&#x200B;

>A framer doesn't need to know how to be a plumber. But they do need to understand how to frame in such a way that they're not making the plumber's life worse.

Not really a good analogy as a framer can frame a house and never ever have to think about plumbing or what a plumber needs or will do. (I know, I was a framer when I was a teenager). This analogy is actually more akin to how things were always done prior to the DevOps philosophy. A framer would frame up a house and walk away without ever thinking about what a plumber was going to do or need, they just knew the plumber would come in and do their part next, aka devs did their part and handed off to operations.

You can think DevOps doesn't have the philosophy of an ideal where people are masters of both, but its principles absolutely lead to that. If you were to follow all the written out principles to their ultimate *best possible* outcome...that would be it. Master devs who were masters of Ops too so they understood all the various problems from both sides of the SDLC and could prevent those problems. 

But reality doesn't allow for that. Those unicorns are too rare so the compromise is DevOps teams where some cross the gap to a more limited degree and others remain masters of their areas.",2022,"DevOps is dead, long live DevOps"
rcls0053,16,"I'm a developer and I can do this, no problem. Even now I'm setting up automated tests in a customer's pipeline. 

You don't need to know everything. Even I have no idea how to do networking in the cloud or off the top of my head set up a load balancer in front of multiple servers. There are three major cloud platforms, and also PaaS services,  so it's kind of difficult to know ""everything"". But it's really recommended that developers start to get to know these things to and understand their value. It also helps to embed Ops people into teams to introduce developers to these things so they start learning how to use those tools.",2022,"DevOps is dead, long live DevOps"
elbento,12,Herein lies the problem: after 14 years of DevOps most developers still don't want the responsibility of learning the value of Ops and maintaining Cloud and PaaS architectures.,2022,"DevOps is dead, long live DevOps"
No-Safety-4715,6,"At this time, it's still asking too much of single individuals to handle both to a high enough level. Yeah, people can do both but will they be *really good* at either? How beneficial is it to have devs spending so much more time trying to keep a perfectly working infrastructure vs having them spend that same effort being better devs for the applications? There's a balancing act there where people can't be masters of everything so how much give and take is acceptable? Is it not better to let some folks be more generalists in both and have some specialists for each side as well?",2022,"DevOps is dead, long live DevOps"
elbento,2,"Yes, ultimately not every developer needs to be full-stack, but every (DevOps) team should have the collective ability to build and operate.

But it still seems most teams are disproportionately skilled in development over Ops (anecdotally).",2022,"DevOps is dead, long live DevOps"
Deleted Account,1,i think that’s just the difference between a “developer” and “software engineer”,2022,"DevOps is dead, long live DevOps"
PenisDetectorBot,52,"> **p**roblem. **E**ven **n**ow **I**'m **s**etting

 Hidden penis detected!

I've scanned through 319593 comments (approximately 1698144 average penis lengths worth of text) in order to find this secret penis message.

*Beep, boop, I'm a bot*",2022,"DevOps is dead, long live DevOps"
lungdart,11,"u/spez is a cuck!

I was a redditor for 15 years before the platform turned it's back on it's users. Just like I left digg, I left reddit too. See you all in the fediverse! https://join-lemmy.org/",2022,"DevOps is dead, long live DevOps"
B0tRank,0,"Thank you, lungdart, for voting on PenisDetectorBot.

This bot wants to find the best and worst bots on Reddit. [You can view results here](https://botrank.pastimes.eu/).

***

^(Even if I don't reply to your comment, I'm still listening for votes. Check the webpage to see if your vote registered!)",2022,"DevOps is dead, long live DevOps"
coinclink,3,"Honestly, as long as you have a good template for new projects as they arise, the developers \*should\* manage the CI/CD pipeline. With CodePipeline, it's even possible to manage the code for the pipeline right in the same repo as the application code.

I mean, what is it other than some YAML and basic shell scripts defining a workflow? Should a C# dev not be able to do that??",2022,"DevOps is dead, long live DevOps"
GeorgeRNorfolk,2,"Software engineers should know *a bit* of everything, that's what being T-shaped means. We should all have a base knowledge set of how everything works, and then a specialism in one of the areas. A software engineer specialising in DevOps should know a bit about how to write javascript (assuming the app is JS based) and automated tests.",2022,"DevOps is dead, long live DevOps"
t_go_rust_flutter,0,"I agree. My previous company expected every single ""team"" (of one) to know everything. How to configure Azure Identity Manager, setting up everything for Azure Kubernetes, developing and maintaining Azure DevOps pipelines for both cloud and on-prem depooyment, yaddada, yaddada in addition to being expert full-stack developers.",2022,"DevOps is dead, long live DevOps"
Obsidian743,0,"Yes...and?

It's the next evolution of the ""full-stack"" engineer. That's why we are in high demand and get paid a lot of money.",2022,"DevOps is dead, long live DevOps"
chuchodavids,21,"DevOps is a word; in linguistics, a word evolves. Just like the word **bizarre** was misused so bad that it had to be redefined, the DevOps word is going to be redefined too. 
Words mean what the people that use them makes them to mean. 
You can fight back and complain, yes. But that ship is long gone baby.",2022,"DevOps is dead, long live DevOps"
Acelection,11,"Thank you, this is the comment I was looking for. Language is not a static thing and fighting this will only make you miserable",2022,"DevOps is dead, long live DevOps"
MrScotchyScotch,1,"I agree that we can't change the shifting meaning of a word. That's why I want people to stop using the word, and for us to find new ones to express what we actually mean. If we don't, then we will never get across the new ideas. We need specific words to understand ideas clearly.",2022,"DevOps is dead, long live DevOps"
forsgren123,18,"I think the largest issue is that most DevOps guys are just hands-on implementors (ICs) who are mainly interested in writing app/infra code, working with cloud platforms and Linux administration. Whereas teaching and implementing DevOps culture would require a senior consultant with good influencing and leadership skills (what many here would call hand waving) or alternatively you would need to be CTO at the company to have mandate to change things.

But I do see Platform Engineering coming up more and more, and I think that is eating away at the whole DevOps concept. Atleat then we shouldn't have these reoccurring rants anymore? :)",2022,"DevOps is dead, long live DevOps"
killz111,2,"Platform engineers are second degree gate keepers for DevOps. Increasing I see the market of DevOps that don't want to know networking, change management, WAF, etc. So now we got opinionated stacks write yaml for you base on slightly leaner yaml.

It's just shifting the problem to a different group.",2022,"DevOps is dead, long live DevOps"
Deleted Account,9,"Well, if 99,99% of people do something the same way, it becomes the normality, so you are wrong now.",2022,"DevOps is dead, long live DevOps"
moduspol,1,This is *literally* the case.,2022,"DevOps is dead, long live DevOps"
hugthemachines,6,"First you have to ask yourself: ""Do I prefer banging my head against a wall or do I prefer doing something constructive.""

when you have worked in this business for a bunch of years you will notice you should pick your battles.",2022,"DevOps is dead, long live DevOps"
thinkmassive,5,"Check out the book “Team Topologies”

It describes exactly what’s encompassed by DevOps without ever needing to say it outright. It also provides high level descriptions of “platform” and SRE, in a way that makes them much easier to discuss.

Convince others in your org to read the book and you’ll establish a common vocabulary, so everyone can concentrate on efficiently shipping software instead of throwing crap over walls and waiting for the next fire.

Follow-up: They have a website too, although it has “bonus” content like $$ video courses and stuff. I haven’t tried it because it’s expensive, and the book is plenty descriptive for teams that are already successfully practicing DevOps methodologies. If you’re struggling in a larger org or have a lot of clueless coworkers I could see the value though.
https://teamtopologies.com/",2022,"DevOps is dead, long live DevOps"
Deleted Account,8,"What is the point of this post? DevOps is developer operations, we don't need some pretentious monologue about how you're changing culture or changing the world or who knows what.",2022,"DevOps is dead, long live DevOps"
duebina,6,"DevOps today is synonymous with the old school notion of combining a system with a developer and then only offering enough pay for the lower paying title.

Except the market pays.  As it should.",2022,"DevOps is dead, long live DevOps"
ptownb,8,You sound salty,2022,"DevOps is dead, long live DevOps"
Deleted Account,3,Really doesn’t help when Microsoft release a product called DevOps either.,2022,"DevOps is dead, long live DevOps"
BeaconRadar,1,Read Donovan Brown's definition of DevOps,2022,"DevOps is dead, long live DevOps"
No-Safety-4715,3,"The core reality of your complaint stems from the fact no matter how nice the ideal of true DevOps philosophy is, in the real world, everyone doesn't have time to perform all the tasks that would be required of them and the work keeps getting split up.

A lot of DevOps is aimed at removing the silos of devs and ops and trying to, essentially, give devs the keys to the infrastructure and pipeline so they can be more efficient. The cold reality is that's not really possible to fully do in most situations. The old Ops roles like sysadmins existed because there is simply *so much* overhead involved. Knowing the tools, maintaining the systems, monitoring, etc. it all takes time.

DevOps philosophy is in some ways looking for unicorns. As automation improves and cloud has grown, its core goal seems near achievable and maybe in the near future it will be as more things integrate, but for now, it still takes specialized focus to roll out infrastructure. That means asking developers to be masters of so much software and skillsets that it's just not realistic for them to fully do both Dev and Ops at high level.

So, my point is, you have to come to terms with *why* DevOps as an ideal is not really being achieved by companies. The workloads to reach the ideal are still too high, but that might not be the case in another five years.",2022,"DevOps is dead, long live DevOps"
Obsidian743,3,"A-fucking-men!

I've been preaching this over and over on this sub. Sadly, most of the people here are just ops people who think ""dev ops"" is them being embedded on a cross-functional team instead of a separate ops teams. 

If you're an ops person who isn't in the application code or an app developer who isn't in the pipeline you're *likely* not dev ops.",2022,"DevOps is dead, long live DevOps"
Fodagus,3,"I do and don't agree.  I have a title of ""DevOps Engineer"", and what I see my role as is to ""engineer"" the ""DevOps"" at my org. This means,  yes, being the team bitch sometimes, but also thinking about how we can improve developer workflows, advocating for better practices,  and writing the automation that powers it all. And yes,  a huge helping of SysOps albeit abstracted into Kubernetes and Ansible. This is a full time job. Sure,  if my devs were better at writing Dockerfiles and understood Kubernetes, there'd be less to do, but if just do more projects around improving security scanning, adding better runtime metrics, etc.

Beyond this,  my team's long range vision includes making improvements to standard packages that our dev teams would use to cut down boilerplate, and keeping a mind more in the game on how these services will scale and what we need to enable that. 

 My experience has shown me that a shockingly few number of Devs care at all about the infrastructure. I don't mean the servers,  I mean all of it.  They want better development environments, automation, and durable deployments,  but they don't really want to *do* it. Maybe that speaks to the quality of devs I've worked with some, but I definitely knew a few very good architects who hate doing anything that's not writing their software. 

tl;dr. As a DevOps Engineer I don't "" do DevOps,"" I advocate for DevOps and drive the vision behind our take.  Kinda like how a Release Train engineer didn't do releases,  but sets the culture and improves the process.",2022,"DevOps is dead, long live DevOps"
Deleted Account,3,"I think platform engineer is a better catch all term for what we do.

under Software Engineer:

- product engineer
-- mobile, web, backend, frontend etc.
- platform engineer
-- cloud infra, sre, security, release, etc.",2022,"DevOps is dead, long live DevOps"
BeaconRadar,3,The responses in this thread just confirm your point OP. This is a sub mostly frequented by ops(role) turned DevOps (Role) when their company moved to the cloud. We might need a new sub r/DevOps2,2022,"DevOps is dead, long live DevOps"
Deleted Account,4,"If everyone is an asshole, you’re the asshole",2022,"DevOps is dead, long live DevOps"
killz111,6,"LoL the funny thing is DevOps engineers can't change culture. Only management can.

If you go back and read the Phoenix project what was the single most important change that put the team back on track for success? It's none of the fancy concepts. It was the fact that they put an ops guy that was not ambitious, genuinely cares about delivering the right outcomes and willing to stand up to make things better.

A bunch of overpaid engineers aren't gonna change a company culture. Only changing management culture can do that. This is why Toyota succeeds but the Toyota way gets killed when they tried to bring it to GM.

So stop focussing on the term and start holding your management to account.",2022,"DevOps is dead, long live DevOps"
jona187bx,1,Yep.  Change always has to come from the top or you are just skating up hill.,2022,"DevOps is dead, long live DevOps"
attitudehigher,8,Hey bro... do you even DevOps?,2022,"DevOps is dead, long live DevOps"
Deleted Account,4,[deleted],2022,"DevOps is dead, long live DevOps"
zpallin,1,"The whole point of the title SRE was to create a specific methodology behind that role versus the DevOps engineer whose purpose is entirely nebulous. I’ve had to argue endlessly with upper management to make it clear that you cannot hire an SRE. You have to create an SRE team and then hire people for that, otherwise SRE just becomes a synonym for DevOps Engineer.",2022,"DevOps is dead, long live DevOps"
hatchikyu,1,"Why do you need a whole SRE team? Curious, not arguing.",2022,"DevOps is dead, long live DevOps"
zpallin,2,I mean you don’t always need more than one. Sometimes you don’t need any. But I guess I haven’t dealt with many situations where you only need just one SRE although I assume it’s possible.,2022,"DevOps is dead, long live DevOps"
daedalus_structure,3,">It is so completely misunderstood by 99.99% of people that almost nobody uses it in the proper context. 

The concept is so ill defined that nobody understands it. 

Also, as a general rule, when someone tells you they are one of the chosen few who understand something it is always more likely that they don't understand it either. 

>We need to remove the DevOps role and replace it with multiple bodies of knowledge aimed at different existing tech roles.

Why do none of these long winded manifestos ever address the realities of managing cognitive load for development teams that are already stretched thin? 

>We need a manifesto

Please god no more manifestos about the one true way.",2022,"DevOps is dead, long live DevOps"
hatchikyu,1,"True. Manifestos don't have as much impact to change the wider market.

If you ask an exec at a non-tech company about their inspiration for adopting Agile, they'd mention ""that Spotify video from 2014"". 

Agile didn't really take off beyond early adopters until Henrik Kniberg made that Spotify agile video.",2022,"DevOps is dead, long live DevOps"
Putrid_Acanthaceae,5,I just spoke to my devops secretary and she said you’re wrong op.,2022,"DevOps is dead, long live DevOps"
DirtyDizzal19,5,"I'm a software engineer who does devops. Devops is developer operations, like any other operation role I'm here to support the developers/engineers make their day-to-day lives easier. Typically that is through setting up pipelines, building out infrastructure as code, building better local development environments, documentation, SDLC improvements, building internal services/apis, and general automation. I have held four different devops positions and this is how I explain it every time to the team.",2022,"DevOps is dead, long live DevOps"
Zauxst,3,"I started as a system administrator that was highly interested in scripting and automation... 

I guess that was enough to qualify myself for devops. 

This came with a huge pay increase and I'll take it... But god damn I hate it whenever I talk to people and have to explain that devops as a title is stupid.",2022,"DevOps is dead, long live DevOps"
jeerabiscuit,6,How about system engineering? It already is a concept,2022,"DevOps is dead, long live DevOps"
MrScotchyScotch,1,"Sure, I think Systems Engineering is a great discipline to focus on. But I'm looking for a way to say, ""this is the DevOps way to do Systems Engineering"", and mark out those specific differences, and how other roles can/should interface with SysEng in a DevOps way. Some word(s) to express a specific *way* to do that traditional role. Almost like, a ""DO Systems Engineer"", a ""DO Developer"", ""DO QE"", etc.",2022,"DevOps is dead, long live DevOps"
Mentals__,2,"This is a pretty solid, laid out video on the term and it's evolution

https://youtu.be/0yWAtQ6wYNM",2022,"DevOps is dead, long live DevOps"
slowclicker,2,"Not the first or last time this will happen.
Not the first or last post annoyed about it.",2022,"DevOps is dead, long live DevOps"
Deleted Account,2,"Honestly this ship has sailed. Like Agile before it, which was a set of practices and beliefs focused on making software developers being more involved with the business so that together they could deliver better solutions, but instead was co-opted by managers (all those stupid certifications and scaled agile frameworks is one example) as a way of controlling all the tiny steps involved in delivering value with software.

DevOps now is mostly a very poorly defined role that means more or less System Administrator but now with more fancy tools and lots of automation.

There are plenty of success cases of DevOps practices being properly adopted in companies and where People > Processes > Tools actually means something. But in a lot of places, DevOps is seen as a magic bullet just like Scrum was, where people think that if you adopt the processes and tools things will magically fix themselves. The most important part, which is having the right people with the right mindset of continuous feedback, self-improvement and that create and foster an culture of openness, well… that’s just too damn hard work, so go back to your Jenkins and fix that pipeline ASAP, some manager just promised something unrealistic to someone and now it’s up to you to deliver.",2022,"DevOps is dead, long live DevOps"
Relevant_Pause_7593,2,Why do you think a manifesto will help? No one reads the agile one and look at what a dumpster fire that is in many places.,2022,"DevOps is dead, long live DevOps"
dataxxx555,2,"While you wrote this, one of the Terraform-using IAM gatekeepers wrote a new CI yaml and provided value to their internal teams, thus radiating value to customer. 

&#x200B;

\>> We need a manifesto (akin to the 12 Factor App) with a set of rules for how to adopt DevOps into a team and design a system with it in mind.

I think there was a manifesto that was written and updated since 2002 on this precise subject :) Do note, that if you wrote a descriptive manifesto on applying behavioral practices to tech, people will take it as prescriptive and there will be a thread against your manifesto with many of these points in \~14 months",2022,"DevOps is dead, long live DevOps"
homelaberator,2,"It's the same inevitable problem over and over.

Someone comes up with a new abstract system or conceptualisation that they hope can be applied en masse, but there is an ever shrinking number of people who have the capacity or inclination to understand these new abstractions.

Marketing and grasping managers glob onto the latest buzzwords without knowing what they mean, just knowing that by ""embracing"" them, they will progress their career or sell more shit or whatever tangential thing they are into.

The regular worker has this ""thing"" foisted on them by managers who don't know what it is or what they are doing and resist the change which makes no sense.

The manager claims transformative renovation and moves on to greener pastures (or else lets the whole thing die on the vine) and moves onto the next buzzword.

The ""one big idea"" that DevOps, Agile, Scrum and the broader group offer is to found practice in empiricism, to constantly evaluate and adjust. That way *whatever* brand new idea you adopt, you'll at least know if it's doing *something.* 

Naturally, a clever manager might resist measuring and evaluating since they will realise it could show them in a bad light. But, hey, that's just the cost of hierarchical, top down management... but that's a different problem.",2022,"DevOps is dead, long live DevOps"
dossier,2,"For OP, what's your opinion of The Phoenix Project book? I was considering reading that ti better understand ""real"" DevOps",2022,"DevOps is dead, long live DevOps"
thinkmassive,2,"Not OP, but I read a fair amount of books in our field. The Phoenix Project provides a very basic concept of DevOps principles. It's a relatively quick and easy read, so it probably won't hurt to start there. Keep in mind it will show its age a bit by now.

For someone who's been working in the industry a couple years, especially if your organization is already practicing DevOps and Agile methodologies (or at least attempting to) then I highly recommend Team Topologies, as I mentioned in [another comment](https://www.reddit.com/r/devops/comments/u0yo1h/comment/i4d15t7)",2022,"DevOps is dead, long live DevOps"
dossier,1,Thank you!,2022,"DevOps is dead, long live DevOps"
exclaim_bot,2,">Thank you!

You're welcome!",2022,"DevOps is dead, long live DevOps"
dossier,1,Thank you!,2022,"DevOps is dead, long live DevOps"
exclaim_bot,1,">Thank you!

You're welcome!",2022,"DevOps is dead, long live DevOps"
MrScotchyScotch,2,"Honestly? I'm not a big reader, so I put it down after 10 pages and went and looked up blog posts, conferences talks, podcasts, etc, and cobbled together my own notes. There's a huge swath of different concepts that aren't named or explained in the book, and inter-related fields like Lean Manufacturing (DevOps tends borrow a lot from Lean).",2022,"DevOps is dead, long live DevOps"
smcarre,2,"> People don't get the term

It seems you don't get that term's meanings can change. Welcome to the future, here DevOps stopped being something mentioned by manager books of 2013 and is now an actual thing used by thousands of tech companies.

> and getting in the way of progress

How?

> I think it's time for it to die.

And then proceeds to defend the ""original"" meaning of the term. How is it wanting it to die?

> We know DevOps is not a role. But of course there are thousands of roles with ""DevOps"" in the title. 

No, we don't. I **know** it's a role, I can check it in my own job description, it says it right there ""DevOps Engineer"". It seems you are wrong, DevOps is a role.

> We know DevOps is not one thing you ""do"". But people are constantly asking - or telling - how they ""Do DevOps"" or ""Get Into DevOps"" or ""Become A DevOps"".

Again, we don't. If so many people claim to be doing DevOps, have you considered that **maybe** it is you the one who isn't doing DevOps?

> They all think the word means somebody who writes Terraform and gate-keeps the AWS IAM Administrator role. Common use of the term implies it means ""setting up server software in Linux"".

That's like saying that people think that ""Developer"" means someone who writes Python and reviews merge requests. Is being a Developer equivalent to writing Python and reviewing merge requests? No. Can writing Python and reviewing merge requests be specific tasks performed by someone that fills the role of a ""Developer""? Of course it can, same goes for writing Terraform and gate-keeping AWS IAM Admin roles for a ""DevOps"" role.

> Add in a few buzzwords like IaC and Immutable Infrastructure, and that's all there is to it.

It seems you also don't know what the term ""buzzword"" is if you think IaC or Immutable Infrastructure are ""buzzwords"". What are other ""buzzwords""? JavaScript? AWS? Git?

> It is so completely misunderstood by 99.99% of people that almost nobody uses it in the proper context

At what point does a word stop being ""misunderstood"" by the majority that understands A and starts being misunderstood by the minority that understands B? Pretty sure it is considerably below 99.99%. ""Gay"" used to mean ""happy"" 70 years ago and now 99.99% will understand first ""homosexual"". Is the 0.01% wrong? Not necessarily but if they are talking with anyone in the other 99.99% of the people and use the term ""gay"" and understand ""happy"" they likely are.

> The only people that do are the tiny, tiny few that have actually read all the books and blog posts and gone to the conferences

Ah yes, the actual people with the highest authority to say what a tech term means: people whose work is writing books and blogs.

If 9999 actual engineers say that DevOps is writing Terraform and 1 blogger says it's shortening the lifecycle and whatnot, then I'm sorry but in the tech industry DevOps means writing Terraform.

> Of course, a select few know DevOps' real definition

Ah yes, a select few who can Google ""DevOps"" and enter the first link. That's a really select group I wish I was part of... oh wait, I was part of that group before I even worked in tech...

> Unless you are a consultant working on Digital Transformation, you won't learn what DevOps actually encompasses, and probably will never work on all aspects of it as an IC.

What even entails being ""a consultant working on Digital Transformation""? Is a developer writing a test case working in digital transformation (assuming there wasn't a test case before)? You are just replacing a vague term with another vague term.

> This perpetually-misunderstood nonsense word will continue to be a blight on the practices it is intended to push

How is this ""a blight""? Who suffers from it? Noisy gate-keeping blogging experts? I'm a DevOps engineer and I don't suffer from this ""blight"", I even profit from it, I got from a position mostly writing Terraform templates to a position managing pipelines (with a nice pay rise in between) thanks to both being ""DevOps"" roles.

> We need to kill the term, so that new terms that speak to more specific aspects of DevOps can arise. Then it will be easier for people to be aware of them, learn how they work, and try to implement them.

How do you propose to kill the term? What do we win from it? You think people won't start using your new DevOps term for what DevOps means today?

> We need to remove the DevOps role and replace it with multiple bodies of knowledge aimed at different existing tech roles.

How do you propose to remove the role? Will you convince the thousands of companies that use the term for their roles?

> We also need to avoid roles that merely gatekeep access to production services/accounts, and focus on building the platforms that enable multiple roles to achieve system-level functionality without becoming systems experts.

No, we don't. Gatekeeping is a useful thing in some contexts, managing systems is one of them as it allows some users that lack the knowledge, trust or diligence to work on them without the ability to disrupt them in any significant way. From this sentence alone I'm convinced this rant was sparked because someone denied you a request for an admin access in your work AWS account.

> We need to remove the cargo-cult aspects of DevOps buzzwords and develop real engineering disciplines based on DevOps practices

Yes, that's exactly what already happened and you are complaining about. A blogger came and said ""DevOps is shortening lifecycles"" to an actual engineer, the engineer found out that using GitLab CI shortened the lifecycles so to him writing GitLab pipelines is ""doing DevOps"" and now you are complaining that the engineer removed his cargo-cult about the term.

> We need to show teams real world examples of DevOps culture that achieve both trust and excellence in the production and operation of software systems.

Internet is full of them. Guess what the real world examples are? Writing Terraform and gate keeping AWS roles.

> We need a manifesto (akin to the 12 Factor App) with a set of rules for how to adopt DevOps into a team and design a system with it in mind.

They already exist in your myriad of blogs, books and conferences. Nobody gives a damn because they are either worthless or too vague and apply to everything that is already DevOps.

> We've gotta stop calling it DevOps first, though... so we need new ways to refer to those specific components of DevOps without using the word ""DevOps"".

You haven't addressed a single reason to do any of that beyond you not liking people referring to DevOps as a role. What do we achieve with that? What problems do we avoid?

0/10, this post fell right in the fence between ""this has to be pasta"" and ""this isn't pasta"". BRB, gonna change my LinkedIn title to ""YAML developer"".",2022,"DevOps is dead, long live DevOps"
darkn3rd,2,"This is not just DevOps, but other domains in tech this happens as well.  At first you get the practitioners that use it and embrace it, but then comes people outside of technology writing about DevOps, then there comes the marketing that tries to ""sell"" DevOps, then there comes the textbook writers that use the marketing to document what DevOps is, and next thing you have students in colleges reading about DevOps in these textbooks and proud professors talking about it with authority as if they were the implementer of DevOps.

&#x200B;

There has been efforts like CALM, CALMS, and CALMR:
  * https://blog.sonatype.com/principle-based-devops-frameworks-calms
  * https://www.atlassian.com/devops/frameworks/calms-framework
  * https://www.scaledagileframework.com/calmr/


There's also inititives to create a DevOps Maturity Model.  
  * https://newrelic.com/resources/ebooks/devops-maturity-phases
  * https://github.com/joelparkerhenderson/maturity-models/blob/main/examples/agile/agile-devops-maturity-model-by-hewlett-packard-enterprise-hpe/index.md
  * https://github.com/adidas/adidas-devops-maturity-framework/blob/master/framework/devops_maturity_framework.md


Atlassian used to have some good material, but now searches lead to popup surveys without literature.

Searching for information is really hard, as results are heavily marketing-sales laden with sources attempting to SELL you something, rather than real practitioners. I think this domain would benefit to a DevOps Book of Knowledge, similar to [PMBoK](https://www.pmi.org/pmbok-guide-standards/foundational/PMBOK) and [BABoK](https://www.iiba.org/career-resources/a-business-analysis-professionals-foundation-for-success/babok/).

A good source of knowledge on state of Devops is DORA - https://www.devops-research.com/research.html",2022,"DevOps is dead, long live DevOps"
Deleted Account,4,"I think it's the term's ""fault"": DevOps...? Aaaah, so Dev + Ops in one person, gotcha! Also I applied to a few ""devops"" positions, and I can safely say nobody even agrees on the misunderstood definition either :D",2022,"DevOps is dead, long live DevOps"
GeorgeRNorfolk,2,">a combination of specific practices, culture change, and tools intended to shorten SDLC by reducing the time between committing a change to a system and it being continuously delivered into normal production while ensuring high quality and reliability

Where did this definition come from?",2022,"DevOps is dead, long live DevOps"
MrScotchyScotch,1,Honestly I cribbed it from [Wikipedia](https://en.wikipedia.org/wiki/DevOps). It's a mashup of two similar definitions that encompasses most of the concept of DevOps.,2022,"DevOps is dead, long live DevOps"
ipaqmaster,2,Uh... yeah what's the point of this post? This hasn't taught me how to be 1x debops at all. ^^^^^^/s,2022,"DevOps is dead, long live DevOps"
scooter-maniac,2,Developer engagement engineer. I make developers the best that they can be. WhoooA!,2022,"DevOps is dead, long live DevOps"
TowARow,2,"DevOps was created because Development and Operations core competency (devs and sysadmins) didn't cover this area.  

So DevOps is a hybrid of Dev and Ops, could be defined as ""NOT dev AND NOT Ops"" but may overlap with these when you look at granular skillsets.  

It is still a pretty good definition if you want to have 10 or 20 job titles, and not 100 or 200.",2022,"DevOps is dead, long live DevOps"
Relevant_Pause_7593,2,"I think the main problem is that devops explains a nirvana state that most projects don’t need. Most projects are ok with a little ci/cd and automation. 

Only a few strategic projects need full devops with sre teams, feature flags, chaos engineering, etc etc.",2022,"DevOps is dead, long live DevOps"
majky358,1,"Yes, you don't need DevOps, one full-stack developer nowadays can cover backend, frontend, CI/CD, systems administration, UX...

I don't mind how it's called, just need a reliable person who can manage environment - infrastructure, monitor... so me as a developer can focus on my work.",2022,"DevOps is dead, long live DevOps"
MrLewArcher,0,PREACH!!!!,2022,"DevOps is dead, long live DevOps"
kicktheshin,0,"Wrong.

DevOps is pretty clear cut at this point.",2022,"DevOps is dead, long live DevOps"
Dr_Pills,1,I wish I had chosen oop at college. Jeez,2022,"DevOps is dead, long live DevOps"
lorarc,1,"Software engineering: it's the whole domain of software development, maintain and design. And yet there are multiple positions named ""Software Engineer"" which is meant like just another name for the programmer.

At least with devops we are lucky that only half time it's a rebranding of sysyop or tech support.",2022,"DevOps is dead, long live DevOps"
extra_rice,1,"When I'm not talking about the general practices, and more about the roles/goals, I find it useful to split the term as development or operation. In most cases, that solves any ambiguity.",2022,"DevOps is dead, long live DevOps"
needssleep,1,"""A  combination of specific practices, culture change, and tools intended to shorten SDLC by reducing the time between committing a change to a system and it being continuously delivered into normal production while ensuring high quality and reliability""


Reads like most job descriptions. If you want to complain about job misnomers, theres a whole host of System Administrators and anything with 'Engineer' in the name that are at the front of the queue.

tl;dr job titles don't mean anything",2022,"DevOps is dead, long live DevOps"
duebina,1,"My job my title is staff cloud engineer. Yet we try to practice devops, it's always an uphill battle to get people consistently on board.

I think that my title doesn't give me justice on what I actually do for the company.  People who do our type of work are often misunderstood to the point that you could be completely horrible at your job and no one's going to have an acceptable kpi to understand if you're good or not.  Easy money.",2022,"DevOps is dead, long live DevOps"
creativefisher,1,"Is it a little bit like ""cloud native""? Everyone defines it differently.

Is it a little bit like ""cloud-native""? Everyone defines it differently.

https://www.reddit.com/r/kubernetes/comments/u0mx91/what\_does\_cloud\_native\_really\_mean/?utm\_source=share&utm\_medium=web2x&context=3",2022,"DevOps is dead, long live DevOps"
_____fool____,1,That’s literally true of every posting.,2022,"DevOps is dead, long live DevOps"
punkwalrus,1,"I found the same thing with ""Systems administration"" to the point that I started ignoring job descriptions to find out what they ""really need."" I found HR descriptions and what the interviewing manager wanted were often mildly to vastly different. I had an interview last month where their ""Devops Engineer"" was really ""python/django application programmer with DBA experience."" Many of the ""DevOps"" positions are mostly systems administration with some CI/CD and Cloud Engineer support.

I have been so jaded that I kind of feel, ""Nobody knows what DevOps really means"" and it varies even more widely.",2022,"DevOps is dead, long live DevOps"
zpallin,1,"The idea that DevOps is only a philosophy is simply a misunderstanding. Both the philosophy and the role exist. DevOps is and will always be an IT professional’s workload, even when all of the practices of DevOps are followed by all of the employees of a company.",2022,"DevOps is dead, long live DevOps"
good4y0u,1,"DevOps is a mentality not a job role. 
The job is usually a sysadmin role with developer friends. Modern sysadmin includes cloud admin and deployment skills.",2022,"DevOps is dead, long live DevOps"
lazyant,1,"
Just break down the term or position in three:  
  - Dev tooling and CI/CD pipelines 
  - cloud infrastructure 
  - SRE (prod incidents, o11y). 

All devops work/positions I’ve seen do a combination (one, two or all three) of those left, middle and right sides of a deployment so we may as well just use titles based on those. I know, a bit longer etc",2022,"DevOps is dead, long live DevOps"
Special_Rice9539,1,People get hung up on words.,2022,"DevOps is dead, long live DevOps"
sup__bruh,1,"this is a topic that i can relate with. but to change the idea of dev ops is going to be difficult and would probably just make it more confusing if it were more ""regulated"". i feel the pain. i have worked in a physical data center for the past few years now with my title being system engineer. i am currently in search of a new job and while talking to tech recruiters has been difficult in general for any tech job, i've had the most difficulty with a devops role. my responsibilities in the physical data center are largely the same concepts as a cloud platform and i am definitely more hands on while using most of the same tools as my counterparts who work strictly in a cloud infrastructure role. however, this is not seen as having experience in the eyes of many recruiters and i have hit a huge wall. seems the only way around this for me is to get some certifications and make some bogus script projects to prove my worth. there is a definite disconnect on what working in a devops environment is but will probably not ever be fixed unless people are more educated on it.",2022,"DevOps is dead, long live DevOps"
pigmy_mongoose,2,"As an former Ops / sys admin what i did was just reframe the things that I did into more buzz word friendly devops practices. For example instead of patch management you can say you implemented a service update pipeline for a user desktop environment. 

Apply that to other places you created automation, maybe a prod to dev clone of a database, becomes ""Used scripts to automate the rollout of different test environments for various user groups""",2022,"DevOps is dead, long live DevOps"
Deleted Account,1,"To every single manager who has ever hired me as a "" DevOps Engineer"", I've told ""I'm just a Build and Release Engineer"". They don't agree ...",2022,"DevOps is dead, long live DevOps"
Schreibtisch69,1,"Not sure on the solutions but yeah, too many people think devops is just ops with dev skills and cloud.

Or yeah we have a team of devops engineers… who work in isolation without the other teams. Like, how does that help to implement devops culture. It's just a more modern ops team.",2022,"DevOps is dead, long live DevOps"
fergoid2511,1,There's never been anything good in I.T. that a combination of vendors and analysts couldn't spoil.,2022,"DevOps is dead, long live DevOps"
fergoid2511,1,There's never been anything good in I.T. that a combination of vendors and analysts couldn't spoil.,2022,"DevOps is dead, long live DevOps"
skilledpigeon,1,"To me, there is absolutely a DevSecOps role but it's a mentoring and supporting role which is aimed at increasing the knowledge and capability of teams as a whole.",2022,"DevOps is dead, long live DevOps"
Rorasaurus_Prime,1,"Honestly? We’re way past that point. DevOps was never intended to be a job title, but the fact of the matter is that it is because SO many companies have DevOps engineers and a DevOps department. Do I like it? Not particularly. But I think it’s time to accept that we’ve lost that particular fight and DevOps is now a role.

Plus it pays great. Leave things be.",2022,"DevOps is dead, long live DevOps"
Deleted Account,1,r/gatekeeping,2022,"DevOps is dead, long live DevOps"
Sinnedangel8027,1,"1: shush - don't tell the HR and hiring departments this. I like easy street with the cash money

2: Of course nobody understands DevOps. We do everything from end user support to CI/CD improvements and additional automation. I built and automated an entire enterpise cloud by myself last year, I ended up sleeping around 3 or 4 hours a day during the weekdays but worked 7 days a week. It was hell. But while doing that I had to help with mundane stuff like how to set IAM permissions because that's super difficult or to download, install, and set up the openvpn client in someone's personal linux workstation.

3: The culture mindset I'm finding is becoming increasingly hard to push for even when advocating for the dev and engineering teams and showcasing improvement. Nobody likes auto-deploying to prod for some reason despite blue-green - automated smoke testing - easy roll backs - etc. Hell, last job I had the dev team was pushing back on me despite demonstrating the process in a staging environment mirroring prod.

So fuck it. Let them pay me out the ass to watch youtube. I'll work for my money when there isn't a shit ton of red tape and stupid in the way. I get the apprehension but if it isn't mission critical or life and death software, it can tolerate a couple of small outages every now and then during the cultural change and growing pains.",2022,"DevOps is dead, long live DevOps"
rickerdoski,1,"Just about every CLI tool that ships with every Linux distro was written by a sysadmin.  Writing code just came with the territory. It's nothing new.

Spend enough time in IT and you'll notice a lot of patterns tend to repeat... 

Cloud just means someone else's leased infra. This was how mainframes were used - leased computing power and storage. My first IT job was to ship tape reals to EDS for someone to mount them on a mainframe tape drive. I then had to submit jobs to run against those tapes that then printed reports on an on-prem band printer that I then had to deliver. Just remove the paper and the manual shipping of tapes and you have something very similar to ""cloud"".

Serial protocols  were replaced by parallel protocols only to be replaced by newer serial protocols.

BSD jails and the like were replaced with VMs which are now replaced with ""containers"".

Someone always finds a ""new"" way to complicate something simple until the simple things makes a comeback in order to simplify the previous complication. Why? Because the new guy always ""knows better"". Sometimes though, ""better"" does happen.",2022,"DevOps is dead, long live DevOps"
shoe788,1,great post,2022,"DevOps is dead, long live DevOps"
Phi-Cipher,1,Amen brother couldn't be more accurate on how miss understood DevOps has become.,2022,"DevOps is dead, long live DevOps"
jetbent,1,This reads like copypasta,2022,"DevOps is dead, long live DevOps"
WilliamMButtlickerIV,1,"The same thing happened with agile. I blame it on attempts to productize methodologies, mainly by consulting firms. This is coming from someone who works in consulting and has helped drive digital transformations.

The interesting thing is most orgs bring us in wanting to improve things, yet they never want to actually change their ways. A lot of customers look to tools to solve their problems.

Another interesting thing is I've come across other consultants who claimed to be a part of successful transformations, and I honestly don't buy it. The premise of DevOps is in the journey. You never really reach the finish line. So I'm still scratching my head on what constitutes success for these people. Some arbitrary roadmap with check boxes, most likely.",2022,"DevOps is dead, long live DevOps"
luckyincode,1,"It’s complicated. 

You can’t keep moving left without someone being dedicated to a large portion of the work. There is a limit to what actual breathing and living humans are willing to know. 

I’ve never heard a reasonable solution to this other than lip service.",2022,"DevOps is dead, long live DevOps"
Deleted Account,1,Unfortunately people hired with a DevOps title rarely have the power and influence in an organization to have a cultural impact to actually implement “devops culture”,2022,"DevOps is dead, long live DevOps"
Previous_Ad_9596,1,"This is from ops comment on another post titled ***what do you do at work***......dude is probably a 55-year-old tech support guy that has never done anything else of value.

&#x200B;

>""I plug together pieces that make servers run. I fix the servers and programs that the software developers break. I go to meetings and listen for developers making bad decisions so I can stop them.  
>  
>  
>  
>I'm basically a digital plumber dad.""",2022,"DevOps is dead, long live DevOps"
Jupiter-Tank,1,"The play on ""Agile is dead, long live agility"" is palpable",2022,"DevOps is dead, long live DevOps"
Atari__Safari,1,"I’ve been writing code in some form or another since I was 10, which is a few decades ago. And I know what DevOos means, as do those in the companies I have worked for. I have hired DevOps. I have worked hand-in-hand with DevOps. And in all cases, my directs and my managers all understood the role. I could not disagree with the OP more. Clearly their experience has been different. Sorry to hear that. But please know that many, many people understand it.",2022,"DevOps is dead, long live DevOps"
KakosNikos,1,"I came here to, finally, find out what devops is. Still, no clue.",2022,"DevOps is dead, long live DevOps"
cugrad16,1,"Well here or there, what else are common users supposed to do when a server or platform isn't functioning right, and they're stuck left having to file a lame ticket that goes nowhere. Just their email spammed with fake bot responses, and whatever Tech help places do have, taking a week or longer to respond? It's all BS... no one wants to chat with a BOT.",2023,"DevOps is dead, long live DevOps"
Deleted Account,303,"Glad I’m not crazy. 

The early days seemed promising. It was like a whole new world where companies seemed to want to get better. 

Now it just seems like DevOps means “we can pay this guy the salary of one person and expect them to do the work of 5 different teams”.",2024,Is the state of DevOps getting worse?
Aremon1234,143,"especially with the breadth of knowledge devops engineers are supposed to know which is just getting larger. Just in my role right now, expected to know AWS (A lot of the services), How Networking works between everything, K8s, Terraform, Argo, Jenkins, Akamai, Splunk, Dynatrace, Helm, Service Mesh, Vault, Harness, as well as helping app teams troubleshoot whatever application language they are using",2024,Is the state of DevOps getting worse?
Deleted Account,60,"Quite literally where I’m at. 

As well as managing a thousand service principals, tenant permissions, CI/CD pipelines, cloud security….the list goes on lmao.",2024,Is the state of DevOps getting worse?
Martin8412,53,"NOBODY knows AWS if you include all the services. I doubt AWS engineers even know. Asking people to know AWS is a huge red flag in my book, unless they mention the services they use. 

Networking is the reason I prefer kube-router in K8S because it's all just standard networking which I know. You can use all the same tools. 

I don't think you're supposed to know everything, just have the ability to rapidly pick up new things. ",2024,Is the state of DevOps getting worse?
Special_Rice9539,20,You're also supposed to be a skilled software developer on top of that.,2024,Is the state of DevOps getting worse?
senaint,3,Yeah this is what gets me...I spend more time on leetcode than k8s these days.,2024,Is the state of DevOps getting worse?
KhaosPT,17,"You doing devsecops? Because I just got handed security and compliance on top of all the shaite. Don't get me started on AI. Somehow I'm still checking people's code and telling them where they screwed it. Honestly, it's not worth the money at this stage.",2024,Is the state of DevOps getting worse?
HugeRoof,3,"Don't worry. Once you go multicloud it just multiplies. 

I have all that, and I'm doing Azure, AWS, GCP, Oracle Cloud, Colo, and on-prem. ",2024,Is the state of DevOps getting worse?
pabskamai,13,"I’ve always wondered that, how do people expect others to know these ever evolving platforms, frameworks, languages, and even worse, at a Sr level",2024,Is the state of DevOps getting worse?
Attila_22,21,"Learn how to learn. Company mandates a switch to Dynatrace? Start reading documentation and learn on the job.

Haven’t worked in a framework for a while? Watch a video on the changes since then and try to test it out with a sample project.

It’s not a big deal as long as you have a reasonable boss that gives you a few weeks to skill up.",2024,Is the state of DevOps getting worse?
Aremon1234,4,I agree this is the main skill of a devops person and when I interview I try to determine if that person can skill up quickly. that doesn’t mean it’s not exhausting to constantly doing that,2024,Is the state of DevOps getting worse?
Attila_22,0,That’s true. It can be very tiring to keep going through this process but you usually come out on the other side with a ton of knowledge so there’s a decent return.,2024,Is the state of DevOps getting worse?
SystemsSurgeon,3,"Some people are built for it, some aren’t.

Not everyone is meant to be “Steve jobs”

My strategy is just making sure I’m still having fun, playing around with new things, listening to podcasts, keeping up with tech news (relevant to my job focus).

A lot of people literally just look, find something interesting, try it out in a pet project. If it looks neat, start proposing it to leadership, complete the project, move on. Some things will stick, some mistakes will be made, and you just keep moving.

You can stagnate for a little bit, but really you just gotta keep moving.",2024,Is the state of DevOps getting worse?
pabskamai,1,"That’s what I mean, I’m a technologist of sorts, I love new a better ways of doing things, it also gets to a point that I just call things for what they are, fads or “hypster IT” yeah very cool… but, come on son!!",2024,Is the state of DevOps getting worse?
SystemsSurgeon,2,"Some of it is definitely fads, but we do want to continually be aware of them and evaluate them honestly prior to some of these fads getting forced on us because they’re more than just a fad.

Idk, it’s fun to me. Like me and colleague continually debate whether Microsoft is dumping powershell for python. Neither of us know for a fact anything, but you can watch and observe things and recognize patterns and try to make your best movements amongst those patterns.",2024,Is the state of DevOps getting worse?
pabskamai,1,Yup,2024,Is the state of DevOps getting worse?
AsishPC,2,"Finally someone pointed this out. I am working for such a company, and I am supposed to know everything. Thankfully, company hired some specialists recently.",2024,Is the state of DevOps getting worse?
Leshot,2,Id imagine though that knowing all of these things raises your stock if you were laid off for example?,2024,Is the state of DevOps getting worse?
gqtrees,1,hey man i can't complain about that. In this economy if it means i have to constantly learn new things to keep the finances secure. so be it...at least iam enjoying doing it,2024,Is the state of DevOps getting worse?
muytrident,28,"It all comes down to Money, the overarching problem Is that Money Is drying up in tech, that should answer OPs question.

And the question OP should be asking is actually

Is the state of tech getting worse?",2024,Is the state of DevOps getting worse?
Apheun,7,Underrated comment. Spot on.,2024,Is the state of DevOps getting worse?
JetreL,4,"Cheaper… Better… Faster

Pick two - in a free market downtrodden economy cheaper is always the first choice the same way a drowning person will pull you under.",2024,Is the state of DevOps getting worse?
foffen,2,"exactly, this is not a devops problem it's a sign of organizations struggling to cope and manage expectations, and even more so when ppl want to se ROI for alla the features they have spent money on developing.",2024,Is the state of DevOps getting worse?
Deleted Account,1,"Im reading it 10 months later and its getting really bad..

Im a senior DevOps with abundance of knowledge but it slowly does not matter its just a game of numbers at this point.

Im slowly considering respecing into something else.",2024,Is the state of DevOps getting worse?
cocacola999,14,Aww how I laughed and cried reading this... Current role was supposed to be head of DevOps. I'm currently trying to sift thru ITIL L1-3 support processes as Im expected to be handing up to all of that too,2024,Is the state of DevOps getting worse?
adappergentlefolk,8,same ish but no such horrid big processes here just a pile of informal mess. my advice: learn to say no a lot. not every mess is yours to clean up,2024,Is the state of DevOps getting worse?
Flat_Ad_2507,9,and expect acceleration :) with iteration ....,2024,Is the state of DevOps getting worse?
sublimegeek,1,Oh yeah because they put 2 words together Dev and Ops and made it a thing.,2024,Is the state of DevOps getting worse?
Saetia_V_Neck,1,"I’m a data engineer who’s gotten into doing a lot of devops work self-service and it’s continual frustration of mine how little ownership people take over the devops side of the code we write, like asking them to learn some basic Kubernetes stuff is the equivalent of quantum physics.",2024,Is the state of DevOps getting worse?
Deleted Account,243,[deleted],2024,Is the state of DevOps getting worse?
lucidguppy,100,"I agree.  The OP shows that ""devops"" is just ""ops"" in reality with some really good tech added to it.

In a DevOps orgainization - the team searches for constraints to get value to the customer.

* Paved paths (usually ""platform engineering"")
* Security and quality baked into the design - push that left.  If there's a security review at the end of the process it's too late.
* CICD pipelines that help eliminate manual QA
* Continuous improvement - helping developers learn tools 

In a devops organization - the devs are the customers.  Companies can only deliver value to the customer through change.  Embed ops expertise into the teams and make their lives easier.",2024,Is the state of DevOps getting worse?
ghostsquad4,50,"> the devs are the customers

This feels like one of those things that makes sense in theory, but doesn't work in practice. The reason being is that the devs don't have incentives to adopt anything. There's no money transfer. There's maybe time saving, but as we all know, efficient work is rewarded with more work. Incentives many times come down as orders from above.",2024,Is the state of DevOps getting worse?
lucidguppy,28,I like eliminating repetitive drudgery in my work.,2024,Is the state of DevOps getting worse?
donjulioanejo,18,"Except for 1-2 stubborn devs, that's rarely been a problem for me.

They will happily adopt changes that make their life easier.  IE better CI, better deploys, better visibility/observability.

Once you or the team develops a reputation for making good improvements, it's much easier to push through the less popular changes (i.e. more restricted permissions).",2024,Is the state of DevOps getting worse?
lksnyder0,2,"This has been my experience at a Sagas company. I'm on a team we call infrastructure and developer experience. Our main goal is to reduce the time from code commit to deployment to production while also ensuring QA, testing eetc.We don't always get it right but we earned a crazy amount of respect from our devs when we improved the deployment schedule from twice per week to twice per day. We now have their attention that we can actually make their life easier instead of harder.",2024,Is the state of DevOps getting worse?
jmreicha,9,"The incentive and value proposition would be to do stuff faster and reduce the amount of friction they run into. You're right though, most people just do what they're asked.",2024,Is the state of DevOps getting worse?
ghostsquad4,3,"Either you move onto the next task that has friction, or you are let go, as all tasks are automated and don't require manual intervention.",2024,Is the state of DevOps getting worse?
Masterzjg,2,"I may get more work as a result, but I'd rather be doing more dev work than running a 20 step manual build every time we need to deploy code. People don't like drudgery, this comment is wrong.",2024,Is the state of DevOps getting worse?
nickelickelmouse,1,"Generally agreed, but I’ll add that if there’s drudgery either way, people prefer their own drudgery over the new path of drudgery an outside team foisted on them. Too many solutions created by the DevOps team at my current company just don’t work and are incredibly hard to get changed once you’re locked into them.",2024,Is the state of DevOps getting worse?
sharpie-installer,2,"Realization about Kube deployments: it forces the devs to act as their own infrastructure engineers. Company saves money! Devs realize that more is being asked of them.

 I have seen too many infrastructure and devops folks cut so that uppermanagement can show cost savings. If the devs don’t want to do it, the company can try and offshore to 3rd party contractors or the Philippines. Reducing costs! If you’re not an infrastructure company, you are not working on the primary product. You are attached to a cost center.",2024,Is the state of DevOps getting worse?
ghostsquad4,2,Oh the beautiful cycle of capitalism /s,2024,Is the state of DevOps getting worse?
SFauconnier,1,"I dnno. Has been working for me since 2009, and I wouldn’t want it any other way.",2024,Is the state of DevOps getting worse?
xpositivityx,1,This was the major failure of SRE. The Google book outlines how budgeting works for SRE resources. Teams use their budget to invest in useful projects. Everyone threw that out and SRE is just another version of operations in most organizations.,2024,Is the state of DevOps getting worse?
gex80,2,"But that just enforces their point in another way. Even if you embed devops into the team, it doesn't matter if they think you're a blocker. I've 100% been on design calls where I suggested say getting the logging and APM libraries in place while you build the app and add trace IDs. Small. Not a huge ask. 

That's going to delay things and we want to focus our time else where.",2024,Is the state of DevOps getting worse?
dablya,1,"The DevOps solution to this problem would be not to just embed a ""DevOps engineer"", but to form a ""cross-functional"" team. Where the on-call and support rotation includes everybody on the team. This way you're not begging ""them"" to include logging while the app is being built, ""they"" are eager to include it because they don't want to be on-call trying to figure wtf is going on without the benefit of logs.",2024,Is the state of DevOps getting worse?
gex80,1,Except in my org teams are ran by devs.,2024,Is the state of DevOps getting worse?
theprodboxistoast,36,"Yes. I have found that the most effective DevOps implementation is when the DevOps person is embedded in the software engineering team. They are able to help with the code when needed and know their way around the service, but they focus primarily on building helm charts and setting up pipelines.",2024,Is the state of DevOps getting worse?
yuriydee,31,"> I have found that the most effective DevOps implementation is when the DevOps person is embedded in the software engineering team.

I partially disagree. Ive been both an embedded and a central engineer before and I think both are important. If you are solely embedded to a single team, you start to become a little silo'ed with their work and requirements. Its okay for teams to do some things their own way but some basic sort of standardization is needed. An embedded engineer does not have the time to figure out the underlying lets say TF or K8s pipelines that should be used across the org. 

I personally prefer working on a central DevOps team and having more input on the foundations of infra as well as getting to work with various dev teams on projects and learning about how they do things (rather than within a single team). But thats just me. I think embedded engineers are also needed so they can deep dive into the requirements for specific dev teams AND also work alongside the central team to figure out the best practices.",2024,Is the state of DevOps getting worse?
blyry,10,"This is where we landed -- a core infra/platform team and 'liasons' embedded in the dev teams -- fully meshed in an application teams standups, light feature work, and empowered to use admin powers to just take care of things as long as it's mostly consistent across the org. Weekly roundup meeting with the entire devops group. It sorta works? The problem is that a team like that needs to be pretty experienced devs for it to work, and our devops group is a mix of devs and cloud / sysadmin types. It's an okay compromise. I'm not sure if there actually is a best way to do it, just lots of different models with different tradeoffs and different company sizes / platforms. I think the core trade off is chaos (anybody can do anything in the cloud) and consistency (the one true platform!) As long as the tooling is consistent, so teams can collaborate and understand what's going on, and core shared things are enforced (sre type stuff, like maturity models for external facing, pii data, secrets management etc) I think is the best you can do as a place grows.",2024,Is the state of DevOps getting worse?
theprodboxistoast,10,"The ideal “location” of the DevOps team is probably flexible. I would love to see a DevOps team that rotates their people through various embedded or standardization focused positions. Kind of like a formal project management office in a big org would provide support to projects from various teams, DevOps engineers could go in and out of services and other standardization projects as needed. But that does sound like a lot of work 🤣",2024,Is the state of DevOps getting worse?
Deleted Account,8,">I would love to see a DevOps team that rotates their people through various embedded or standardization focused positions.

This is a lot like how Spotify (allegedly) operate their development groupings. Lots of cross-functional teams that rotate through blocs of work.

A team working on one epic might be made up of a frontend dev, backend dev, QA, SRE and product manager. A second team working on another epic would have their own developers, QA, etc.

All the SREs belong to the ""SRE Guild"" and will work together to discuss common infrastructure policies, whereas the UI developers will belong to their own guild and decide on Javascript stuff or whatever.",2024,Is the state of DevOps getting worse?
mullingitover,7,"You can definitely have both, I like the model where devops attends team sprint planning (or even daily standups if necessary) to scope out needs for the coming cycle, and then the devops team has its own kanban board for its own projects.",2024,Is the state of DevOps getting worse?
halos1518,3,I think you can have both. Be embedded in a project team but managed under a DevOps department. Enable that cross communication and learning between fellow DevOps engineers while also remaining close to devs and the product/project you're working on. I think Chapter 16 in Accelerate gives a good example with the company ING.,2024,Is the state of DevOps getting worse?
zylonenoger,3,"that kind of standardization should be used for all aspects of the product

i like to call then horizontal concerns and it impacts FE, BE, QA and even product management and the design process.
of course you want to allow a bit of diviation to cater to a specific teams needs, but you also don‘t want to solve the same problem multiple times and in the worst case: differently.

in small squads it‘s also not really feasible to have a full time devops person - what i did in the past is having a centralized platform team and then „devops ambasadors“ who have enough devops knowledge to solve the most common issues themselves and call in the cavalry in case of emergency.
in combination with the right tooling and automation it worked really well for me.",2024,Is the state of DevOps getting worse?
ClikeX,2,"You can have a DevOps team (committee/guild, whatever). You can discuss the overarching practices and standards for everyone to follow. This doesn't really require daily effort. And then just have everyone be a part of a Dev team to implement those concepts. 

It's really not uncommon to have secondary teams to discuss specific topics.",2024,Is the state of DevOps getting worse?
hkeyplay16,7,"I went from being DevOps in a small company and embedded in a Dev team and feeling like I was making a great impact, to working at a large corporation and being a small drop in a very large ""DevOps"" bucket.  My department is actually called what it is - DevOps Enablement.  We now work on tools and automation/standardization/observability tools that the people embedded into the dev teams use.

Part of the problem in fully integrating is that for audit/security purposes you can either have access to the source code or access to the infra, but not both.  At smaller companies I had both out of necessity, but it wasn't necessarily right from a security standpoint.",2024,Is the state of DevOps getting worse?
rupert20201,12,"This! 
And the below post highlighted DevOps is not a team. Otherwise it’s just OPs.
Pretty sure DevOps as a concept didn’t really kick in until til 2014 ish. So OP is really just talking about Ops",2024,Is the state of DevOps getting worse?
Dylnuge,6,"In fairness to OP, I think the term has unfortunately become somewhat meaningless. It happens to pretty much every term that becomes a management buzzword: ""observability"" to refer to standard logging, ""blameless postmortem"" cultures that use human error as a root cause, ""agile"" meaning every project management system under the sun (including waterfall and chaos mode/no project management whatsoever), etc.",2024,Is the state of DevOps getting worse?
UnC0mfortablyNum,4,"100%

Writing application code is one thing but knowing when/how to use lambda/step/EC2 and anything servereless is another.",2024,Is the state of DevOps getting worse?
Venthe,6,"In other words, reminding us yet again that DevOps cannot be a separate team. Hell, DevOps shouldn't be a title. It's just ops, with different name.",2024,Is the state of DevOps getting worse?
moduspol,3,"100% this. It's like they heard the mantra, ""you build it, you run it"" and decided to just throw it out the window. But it's everywhere now.

I blame devs more than anyone. Orgs are just trying to manage around the reality, which is that most devs explicitly do not want to learn anything related to DevOps. They don't want to know AWS. They don't want to know Kubernetes. They want to write something that runs on their machine, and then everything else can be someone else's problem.

I just don't see (and haven't seen) how it works well in anything other than maybe a megacorp where you've got tons of money and infra teams mature enough to essentially act as the company's own private cloud provider.",2024,Is the state of DevOps getting worse?
stumptruck,0,I've never worked anywhere that did embedded teams and I've never had OPs experience. It sounds like the places they've worked the DevOps/Security team has put up roadblocks that make the devs' day to day work harder rather than streamline things.,2024,Is the state of DevOps getting worse?
bjb399,1,"I don't know. I'm not a DevOps engineer, I'm more of a ""product engineer"". The DevOps team at my organization asks us to use Terraform in a central repository to provision the resources we need. Our non-DevOps engineers are all able to do this quite easily after learning a bit of Terraform syntax.

Our teams don't need an embedded DevOps resource because the DevOps team manages the Terraform/Atlantis/AWS infrastructure quite well. They also help us when we have basic Terraform questions.

This all feels very frictionless to me, and I've never thought to myself ""damn I wish I had a DevOps person on my team full time.""",2024,Is the state of DevOps getting worse?
homelaberator,1,"Yeah, people complaining about the problems DevOps is meant to solve simply because they aren't doing DevOps in the way it was intended.

Plus ça change.",2024,Is the state of DevOps getting worse?
godot_or_not,38,"having worked in IT for well over 10 years (last 5 as a DevOps guy), I'm still shocked and surprised how literally anything is working at all. 
I mean like right now I'm tasked with building a sort of parallel/alternative infra for GKE-based series of apps and while it's all good and interesting, every time I need to look at the existing production setup I'm just speechless at how terrible it's designed, some devs at some point just made everything by ugly mediocre clickops standards, then they left and others inherited that hot garbage and managed to made it even worse... and so it goes",2024,Is the state of DevOps getting worse?
robkwittman,32,"Given my experience thus far; it’s all rubber bands, duct tape, and super glue. It doesn’t matter how “important” the system is, it marches indefinitely towards catastrophe.",2024,Is the state of DevOps getting worse?
slide2k,13,"The trick is to have a new sandcastle ready, before you push your current one of the cliff.",2024,Is the state of DevOps getting worse?
Flat_Ad_2507,3,i\`m thinking we have to add next layer :). it will be better isn\`t?,2024,Is the state of DevOps getting worse?
Deleted Account,5,">then they left and others inherited 

This is one of the massive problems in IT; people are so mobile. Everyone is constantly inheriting someone else's oderous pile of crap and trying to fix it or rewritting it yet again. A more stable workforce would certainly help the state of things in IT. How to achieve that? I have no idea.",2024,Is the state of DevOps getting worse?
phazer193,5,"Companies need to compensate their employees what they're worth or more, else they move elsewhere. Companies don't want to do that for the most part though.",2024,Is the state of DevOps getting worse?
Deleted Account,3,"I think, in general, DevOps people in the US are getting hired at attractive salaries. The trouble begins after you are hired if your company starts taking existing employees for granted and gives paltry annual raises but is aggresively hiring new people an inflated rates. In that scenario you feel like you need to leave to another company and try to catch up to the current market rate.",2024,Is the state of DevOps getting worse?
phazer193,3,"Yup, that’s exactly what my comment was aimed at.",2024,Is the state of DevOps getting worse?
Intrepid-Stand-8540,3,"> How to achieve that?

Don't give a 2% raise in a year with 8% inflation to your loyal workers, and then hire someone and give them a signing bonus and a 40% paycheck increase. 

The companies themselves are causing this issue. 

I'd love to stay at one company for 10+ years, but the monetary incentive is in jumping every 2 years.

They need to switch the incentives around.",2024,Is the state of DevOps getting worse?
denisgap,3,"This. It seems like most projects I encountered are working by some kind of miracle. 
That's why I'm not surprised people need security trainings..",2024,Is the state of DevOps getting worse?
AlexMattoni,2,It's really crazy - I keep telling people the internet is basically held up by toothpicks balanced on top of each other.,2024,Is the state of DevOps getting worse?
seuramon,62,">Developers were trying to move apps to heroku to avoid working with the DevOps and Security teams. PMs were using external DevOps consulting teams to build out new projects so they could manage the team directly.

&#x200B;

Do the developers call the shots themselves? who makes the decisions? don't they have a CTO?",2024,Is the state of DevOps getting worse?
Zebranoodles,31,">Do the developers call the shots themselves? who makes the decisions? don't they have a CTO?

OP here. CTO is very new the org. The devs basically pitch something to leadership and leadership says make it so.",2024,Is the state of DevOps getting worse?
Pyropiro,6,The tail wagging the dog...,2024,Is the state of DevOps getting worse?
Mecamaru,12,The real questions,2024,Is the state of DevOps getting worse?
slide2k,7,"We have teams doing some shadow IT, but we just make them feel the pain. You want this thing? We can provision it for you. Just tell us where to map the rights onto. O this needs to call from Github actions? Sorry we don’t provision that for this. Good luck!",2024,Is the state of DevOps getting worse?
Deleted Account,16,This shit wouldn’t fly in a million years where I work or any serious place.,2024,Is the state of DevOps getting worse?
Deleted Account,20,"Would a fortune 10 company be considered a serious place? Cuz that type of stuff is so common.

The business controls the purse strings and they cut corners to have more control all the time. ",2024,Is the state of DevOps getting worse?
Deleted Account,11,It does fly in a places with serious revenue.,2024,Is the state of DevOps getting worse?
Pyroechidna1,3,Like mine lol,2024,Is the state of DevOps getting worse?
ErenPhayte,4,Some CTOs are just Engineers thrown into a position they know nothing about and have no clear vision for their teams.,2024,Is the state of DevOps getting worse?
RFC2516,3,[The Peter Principle](https://en.m.wikipedia.org/wiki/Peter_principle),2024,Is the state of DevOps getting worse?
Alphasite,76,Isn’t Devops team an oxymoron? At that point aren’t you just an ops team? Or an SRE team?,2024,Is the state of DevOps getting worse?
Deleted Account,62,"Yes, it sounds like in these companies mindsets DevOps is just sysadmin in the cloud. The fences are still there.",2024,Is the state of DevOps getting worse?
SadisticTeddy,17,"There's quite a few common ""DevOps"" topologies that may or may not be antipatterns. Probably a bit obvious or trivial for most people here, but I quite like https://web.devopstopologies.com/ for the visualisations and explaining to management what might or might not work in their situations",2024,Is the state of DevOps getting worse?
Eridrus,11,"My takeaway from this page is ""here are a bunch of the same typologies, you can do them well or do them badly and the devil is completely in the details we ignore""",2024,Is the state of DevOps getting worse?
ninetofivedev,-2,"That website is fucking hideous. It just screams ""Hi. We would like your data, or money. Please and thank you!""",2024,Is the state of DevOps getting worse?
SadisticTeddy,3,"I think we're seeing different sites... There's a small header saying who made it and linking to prints if you want them, then the rest is just diagrams and info?  It's pretty much an infographic",2024,Is the state of DevOps getting worse?
Bent_finger,1,This!!!!,2024,Is the state of DevOps getting worse?
ninetofivedev,9,"When you tell management that you should put an automation engineer on every team to help with QA. They agree that seems like a good idea.

When you tell management that your teams should be cross functional and consist of both frontend/backend engineers. They agree that seems like a good idea.

When you tell management that you should put a devops engineer on every team so that they can help with builds, tooling, deployments, etc. No...no. We'll create a separate team for that.

Make it make sense.",2024,Is the state of DevOps getting worse?
Sheepza,0,DevOps cost a lot,2024,Is the state of DevOps getting worse?
ninetofivedev,8,Compared to what?,2024,Is the state of DevOps getting worse?
Raz0r54,28,they want you to make a sand castle when there is a tsunami headed to the beach.,2024,Is the state of DevOps getting worse?
Deleted Account,20,[deleted],2024,Is the state of DevOps getting worse?
Zebranoodles,3,Total agree. But this seems to be pretty common.,2024,Is the state of DevOps getting worse?
wickler02,12,"I don't think it's getting worse, it just depends on who is making the shots and who knows how to implement it well.

You're just now getting companies and leadership not fully understanding how it works.  They implement bad devops philosophies, silo people, no accountability because the name of the game is ""speed speed speed."" Get it done quick or don't get it done at all. 

So this generally means adhoc design, clickops and lots of bad implementation because no one went back and fixed all the work.

The source of the problem is not having a good leadership position like a director or VP in the same room as the people calling the shots and not explaining how those philosophies work. 

You're on a state of a moving train headed towards many bridges that have not been built out. Instead of stopping the train, you gotta figure out a way to make the bridges because it'll be nearly impossible to stop that train. 

Unless you have a good conductor and understanding the entire map and could actually make that call... you're gonna have to build those bridges fast...",2024,Is the state of DevOps getting worse?
EmergencyAd2302,3,"It’s so difficult to try and get a voice going for you in leadership with everything going on. No one wants to call the shots or say anything to push back in fear of losing their jobs. 

Since I’ve gone back to the office, I’ve noticed colleagues are a lot more emotionally distant. 

And if you want to wait around and do things “professionally”, they’ll just hire consultants and get it done anyway. Because they’re “efficient”. Then they build it and leave the mess for me to clean after… lol.",2024,Is the state of DevOps getting worse?
WorriedTeam7316,10,I moved from DevOps to cybersecurity for many reasons you described. Tired of needing to do hero work or clean up after rogue devs / shadow it that didn’t use the internal platform that had all the security built in that we built and maintained… cyber has its own issues but I don’t miss being on call at all and don’t miss being thrown under the bus for delays to launch…,2024,Is the state of DevOps getting worse?
edgan,4,"What exactly do you do in cybersecurity?

My brushes with cybersecurity seem to be way too focused on box checking and compliance.",2024,Is the state of DevOps getting worse?
WorriedTeam7316,6,So I’m application security / infra vulnerability management. We have tools they generate alerts we triage then contact devs / infra people to add more security to their things. For devs think things like finding credentials in code or SQLi issues. For infra think something as dumb as db reachable on the internet or VMs running EOL OSs. Most of my job is calling BS on the excuses teams try to make as to why they can’t or won’t fix it.,2024,Is the state of DevOps getting worse?
wil169,1,I work with a team like you regularly and thinking of making that transition. I'm really more of an ops guy with aolid security background that got shoved in a shitty devops shoe I don't really fit. How's the pay?,2024,Is the state of DevOps getting worse?
badguy84,10,"Any IT function, not just DevOps and including business functions that rely heavily on IT will have this problem due to reasons that will (in my opinion) never get fixed.

Here are a few common scenarios that cause/effect an organization in to different levels of disfunction:

Any decision made regarding tech will nearly always be a compromise, there are so many choices that any choice will have a pretty significant change management issue JUST by picking one choice over another.

Adoption and change management is forever underrated, stakeholders are not properly identified and some will feel like they should have a loud voice even though it doesn't matter making them feel bad.

The day you pick any technology/platform: that's the day you got an outdated piece of technology/platform. There is always something newer/better/more fantastical and engineers/business users will forever think the wrong choice was made due to something else being either newer or potentially more mature or just more better in solving the problem that they think is the most important.

Overall there is an idea of ""I made the choice and told people what the choice was"" being the way to implement anything. It isn't once you adopt any process/application/platform it is a constant cycle of adoption improvement communication etc. If you stop with any of these at any time your program will fail to some degree.

Honestly thinking that the field is greener anywhere else if the above things bother you: good luck, it isn't greener. This is a fact of life and it's really no one's fault even if we like to blame the users (be they devs or business users) it really isn't all on them. I am not saying ignore the problem or stop caring, but it's important to realize what scope of change you can affect AND that this is the same across the board everywhere. There are simply other things that soften the blow like orgs that do take adoption seriously, allow for transparency and openness, get the right people involved and attempt to tear down the silos. Even there people will grump about poor choices/architectures whatever either now, tomorrow or a year from now.

Sorry about the mild rant :) but yes ""it is getting worse"" and also ""it always has been this way from the moment humans started roaming the earth.""",2024,Is the state of DevOps getting worse?
ErenPhayte,7,"I see this happen in companies who claim they are mature but anything but that. I currently work in an organisation where PMs think they run the engineering teams but have no clue how to write business requirements, then completely undermines the technical design process because ""they don't need it"" ... then complain that products deployed to production are subpar and unable to scale at all.",2024,Is the state of DevOps getting worse?
EmergencyAd2302,3,These people are such a pain in the ass. I’m dealing with a PM who’s exactly like this and playing against their ego is tiring.,2024,Is the state of DevOps getting worse?
Fearless_Weather_206,8,Time to remove oneself from the unchangeable situation,2024,Is the state of DevOps getting worse?
Zebranoodles,6,I have done this many times. Every company I go to is basically the same thing with different people which basically is making me rethink my career. I ask a lot of questions during interviews to get understanding how messed up the company is and never seem to get to the bottom of it.,2024,Is the state of DevOps getting worse?
edgan,9,"Most prospective employers don't give you enough time to answer enough questions, and even if you do they will glaze over them without any real detail. In bad cases they will describe a vision of what they want, and then do the exact opposite after you start.",2024,Is the state of DevOps getting worse?
DustOk6712,7,Have a platform team and put a DevOps engineer into the development team. What you describe is not DevOps - it's a cultural and technical change where a team is responsible for everything they use.,2024,Is the state of DevOps getting worse?
flanconleche,6,"Most Developers are Idiots, this is why Platform teams are needed and the concept is growing, because if you don't hand the platform to a dev on a silver platter they do stupid shit like what you put in this post. 

Sorry you gotta deal with this BS.",2024,Is the state of DevOps getting worse?
ub3rh4x0rz,4,"Most Ops people have no idea how modern development works, this is why PaaS is growing, because if you don't use their weird bespoke tooling that's completely incompatible with regular commodity tooling, you can't ship, if you do, you can't be productive.

Jk just giving the equivalently cynical and dismissive assessment from the dev perspective",2024,Is the state of DevOps getting worse?
ExtremeAlbatross6680,4,"I’m a software developer that does a lot of infrastructure work and I think everyone should learn DevOps to some level. 

At least to be able to go from
1. Docker compose file
2. Kubernetes manifests
3. Helm 

This helps with a lot of integration issues and vice versa with DevOps engineers learning the application a bit. It’s the only way for both sides to mesh well.",2024,Is the state of DevOps getting worse?
ub3rh4x0rz,1,"Half the seniors in the game these days can't be bothered to learn bash let alone declarative IaC, it's a nice thought though. PaaS is going to take over for smaller orgs that don't have above average compliance considerations",2024,Is the state of DevOps getting worse?
ExtremeAlbatross6680,1,Yea I feel that but you eventually need to know it along with a bit of bash. It is inevitable that as a developer you are assigned a task on it,2024,Is the state of DevOps getting worse?
ub3rh4x0rz,1,Preaching to the choir. Kind of got into platform engineering before it was called that by default because people around me wouldn't do it.,2024,Is the state of DevOps getting worse?
ExtremeAlbatross6680,1,Yea I’m in the same boat,2024,Is the state of DevOps getting worse?
ReditUserWhatever,8,"Have you been working for businesses on the east coast in your recent contracts? (I know it's a weird question to ask)

In my experience, almost every businesses I worked for that were based on the east coast were having a complete mental breakdown when it came to management which led to toxic performance culture with blame and other bullshit. Too much MBA in the management (nothing against MBAs, I just think you also need a good % of technical management), performance metrics, not enough passion and not enough fun.

Maybe my statistical pool is not big enough or that I care about things people don't care about.",2024,Is the state of DevOps getting worse?
Zebranoodles,1,Worked for startups all over and basically had the same experience.,2024,Is the state of DevOps getting worse?
spiralenator,5,"It's so bad, and a lot of it is because there's often a lack of executive support getting the correct processes in place to deal with these sorts of issues. DevOps doesn't work when there is no involvement of operations until its time to deploy an app. We need to be involved from the start of a project.   
The general dynamic tends to be one where executive support goes towards anything that increases dev velocity. Unfortunately there is a perception that things like processes and security controls, etc just slow devs down.   


And they're not wrong. But we're ultimately saving them time dealing with critical bugs, security breaches, and failed projects. Going fast in the wrong direction doesn't help anyone. We force you to slow down, so you can go faster. 

The earlier we're involved, the sooner we can identify and correct issues before they happen, before a lot of time and money has been invested in suboptimal approaches, etc.",2024,Is the state of DevOps getting worse?
well-now,4,"> This is the usual avoid the DevOps team at all costs because they will try to do things the professional way rather than just getting it to work as quickly as possible.

If everyone is trying to avoid your team then maybe you've become a blocker.  

Honestly the best use for folks with DevOps capabilities is to build platforms that allow development teams to self-service to the greatest amount possible.  

Make secrets easy to work with, the documentation readily available and spread institutional knowledge and you won't have teams checking keys into code.  

Don't give folks write access to the AWS console.  Force them to commit infrastructure as code and deploy via pipelines.  Make it easy for the team to deliver value but also create controls that enforce security policies.  

As a senior staff engineer, if you are spending your time writing terraform code for one-off projects you're doing the wrong thing.",2024,Is the state of DevOps getting worse?
Key-Window3585,8,"Hint hint no one wants yet another silo. Devops made sense in 2010s because it was its infancy. Now people realize how much work it is and it does not really solve the big problems. 

One of the big problems being security. Automating server provisioning, configuration management, application deployment, software lifecycle, are all great things but not much thought went into how to secure these new systems. 

I can’t tell you how many times I have seen clear text  creds in repos, api keys not being rotated, and two factor not being implemented.

Yes things are more efficient and teams can go faster but at what cost??

The way to secure these issues often is more approval, silos, and bureaucracy. Teams are forced to slow down because there whole company is in risk of a cyber attack that can be reputation damaging. Companies need to go fast to be competitive. Look at the game Palworld with a budget of 10,000 that did not follow any industry best practices and are eating nintendos lunch right now. 

No one organization has the one tool that can achieve centralization to full automate the stack. Often it a barrage of tools that do similar things that “devops” team argue about religiously and change to different tool set or develop their own tools. You cannot centralize your team if there are all these different tools and no standardization. I think this is the biggest problem. Now instead of one Brent there are several.

Back to palworld you have a team that used usb drives for their builds. End of the day nothing matters but going fast and giving the consumer what they want. A lot of the software development world scratching their head right now.",2024,Is the state of DevOps getting worse?
Flat_Ad_2507,4,"that is answer ""Yes things are more efficient and teams can go faster but at what cost??- Develop and test code """,2024,Is the state of DevOps getting worse?
Key-Window3585,2,"Automated testing but yes simple answer for a complex issue. There is always a tradeoff. Address only core functionality bugs or deliver a product that is highly polished and possibly late to market at the expense of burnout for your devops teams…

There is no right or wrong answer. Depends on companies vision and market conditions.

Give you another example. You have a whole slew of engineers working at google on search with his google main cash cow and now a small team at OpenAI and in tantim google response bard come along and eat your lunch. No devops approach is going to eclipse a whole paradigm change. Devops needs to be adapted to the current market the same way people who first were provisioning machines via gui utilized infrastructure as code. 

The next shift will be using natural language and prompt engineering to accelerate the software lifecycle and develop features faster and more efficiently. Currently now your git/version control system is the source of truth. Soon it will be your ai bot. You will need to version control your bot like any other piece of software. With this a whole new era of bugs and security incidents or ai until it is sentient. Right now it is simply a copycat and a damn good one at that. Being able to clone Brent’s at a global scale.",2024,Is the state of DevOps getting worse?
Flat_Ad_2507,2,"i get answer. It is too fast for our mental health. Business expectation are unrealistic, and some times you got meet rockstar (really genius person from devops) and it will be proof for managers that is possible. But those guys are one for one 1k devops. The others have to run or die or burnout. This process is killing.",2024,Is the state of DevOps getting worse?
Key-Window3585,2,"I think you are seeing the way. All eyes or on the rockstar because they want ai to webscrape and duplicated his work. 

The same way ai companies like midjourney scrape  the best artists to clone their work, this what they want to use ai to do. Train models to duplicates the rockstars so they can hire some low level engineer that just need to understand how to prompt the ai to generate was the company needs.",2024,Is the state of DevOps getting worse?
Flat_Ad_2507,1,But it is one tinny little problem - where is decision person? If you do not understand rock star (aka AI) - how to take responsibility? When do you not take it then why you are working what you are doing;)?,2024,Is the state of DevOps getting worse?
Stoomba,8,"The state of your devops is bad because you're not devops. You have a dev team, and you're on the ops team, regardless of what they want to label your team.

If you were on the dev team, then you would be more inline with devops because devs and ops are on the same team.",2024,Is the state of DevOps getting worse?
Deleted Account,1,"This can be True - DevOps in name only, but really viewed as ""The Ops team"" and treated as the group who does the grunt work of dealing with the shortcomings of the product and buffer between Dev and the customer. Leave if this is where you find yourself.",2024,Is the state of DevOps getting worse?
viper233,3,"You have to learn to be an operator, I saw this back in a role in 2021 with a C level that liked to micro mange everyone in the entire (~50) company.


Let them ask for what they want, agree on objectives and time lines, other deliverables. When they ask for extra things ask what they are willing to give up.


The other problem is you, you've got 10-15 years of experience working with in infrastructure, deployments, running systems and keeping the lights on, you've built resilient systems and know what it takes to make a resilient agile environment to get the most out of your cloud spending and devs. Most other people don't and they just want shit that's been polished, just a touch. Being told they are wrong and they are running absolute shitshows just pisses people off. You need to be very incremental in how you approach. Working with polished pieces of shit really sucks, especially when you know how to do it better and could fix in a couple of weeks to move a delivery forward 6-18 months and make everyone's life a lot easier. This is your problem (and mine), we have to choose our battles, help where we can, try to hold back and not say I told you so and hopefully get on a greenfield project where we can do everything right from the get go.


I'm starting to realise a lot of people snowflakes too and cannot take any critical feedback :( They've been micromanaged most of their lives, haven't had much autonomy and don't know how to receive feedback.. it's kinda sad. When you come in with your years of experience, know how of best practices and point out the system/architecture/process flaws they feel _very threatened_ (I would love some with more experience, a different perspective to do this to my work). Putting your knowledge forward and getting excited about fixing things is _very bad_, you'll typically get reprimanded for this (twice so far for me, different organisations). Again, this is your problem, you didn't pick the right job with the right culture for you. I've grown up around some incredibly smart engineers over the years and I've really respected the time they've taken to mentor and help me, I've been given a lot of feedback, had perspectives changed and now crave it.. these other organisations/managers/teams won't give it to you, they just want to make sure everyone is doing ok and we are meeting deadlines........ innovations and improvements just in the way.


I'm now looking for the right team and right culture.. it's a hard search but the opportunity cost for me for the next 10 years is too high so I'm holding off for the right role. In ten years, I'll be good to sit back, do my work, make my manager happy and not try to fix things while just taking a paycheck until I have enough to retire... I can't do that now... I'm hoping I can in the future, because you can make some pretty good money in these roles and those orgs are always desperate for people.",2024,Is the state of DevOps getting worse?
Deleted Account,3,"It sounds more like a cultural problem then a DevOps problem. Remember it's not a role or a title but a cultural mindset. If your other teams are doing their own silo'd things, then your company is operating more as like a fiefdom then an actual organization that works together. You can think of the teams that provide the platform as a platform team, and if other app teams that rely on the platform team aren't getting what they need from the platform team then they'll do their own thing (like go to Heroku, or just practice terrible security in their shadow IT cloud projects on AWS or wherever else). 

Advocating benefits of having a strong DevOps or platform team/capability within your company is one way of hopefully shifting the culture. This can be a series of workshops or lunch and learns to showcase the benefits. You can also try to build allies within your organization, so these are friendlies who understand the benefits and you find ways to advocate amongst them and use them to help bridge the gaps between the platform team and other departments. You can also try to leverage external benchmarks, like DORA (check out the DORA matrix, more at dora.dev) for example - and use these as guidelines to compare your companies practice against.

Unfortunately shifting organizational culture is more like a marathon and not a sprint and requires a lot of patience. Stay persistent and keep advocating for change.",2024,Is the state of DevOps getting worse?
calibrono,3,"Imma be honest I'm glad I'm not working with people like that. I'm fortunate to have developers who either know very little about deployment side of the project, or know a lot and are glad to help. We are also in contact with them and helping any time they need.

Now I've really been in the field for just over 3.5 years now, but I never encountered such teams with such disagreements.

And to be clear, we're kinda our own team and we work with two big projects with different dev teams, we have our own sprint etc. We are called devops, infra team, whatever, it doesn't matter - we're always open to civil goddamn talk, there's no need to do something behind our backs ffs.

Also, no lol I'm not giving you full su access to anything and I'm deleting and rotating your git-stored secrets, oh my fucking god, is it 2024 or what...",2024,Is the state of DevOps getting worse?
xpositivityx,3,"We have a serious tooling problem. We manage clouds like we used to manage small fleets of servers. The knowledge we need to distribute to effectively spread the operations burden is too great. This was the magic of heroku. It gave people what they needed to get something running and no more. The modern uptime requirements businesses gave us too great to just use heroku, so they need to invest in building systems like that which are tailored to their business.",2024,Is the state of DevOps getting worse?
syaldram,6,Use paragraphs! Jesus Christ!,2024,Is the state of DevOps getting worse?
Zebranoodles,6,Added.,2024,Is the state of DevOps getting worse?
Deleted Account,2,"What you are describing is not the norm. Does it exist? Sure. These are typical larger corporations that have a bad culture and probably have senior developers who think “DevOps is stupid”. DevOps is supposed to break down barriers, but if people don’t embrace it then it’s just not going to work. You either try to redefine their culture or find a job with a better fit.",2024,Is the state of DevOps getting worse?
Varnish6588,2,"if the DevOps team behaves like a Silo working in isolation like the old days of sysadmins, then things like that will happen for sure.   DevOps is a culture that should come top down and influence absolutely everyone in the company.  if the CTO doesn't embrace DevOps culture, then it's very likely that the team will turn into a silo and development teams will not adopt the good practices and guidance from DevOps teams.  That's the reason platform engineering was born, to embed these practices even more into teams and influence change.",2024,Is the state of DevOps getting worse?
DensePineapple,2,How did you miss those massive red flags when interviewing?,2024,Is the state of DevOps getting worse?
viper233,3,"What are some good ""red flag"" questions?",2024,Is the state of DevOps getting worse?
Deleted Account,2,"""I was asked recently to take a developer demo and get it production ready.""

There's your biggest problem.

""While we have the capacity to bring this application to production and appreciate the example provided by the demo, the state of this demonstration system does not align with our standards or practices whatsoever. Because of this, we won't be using it or porting it - but rather we will build a new infrastructure system to support this application that aligns with our practices and policies and better serves to host the application itself.""

You \*have to say no\* to this sort of thing. People will go around thinking that ""half the work was done for you already"", when in reality understanding this trash pile tends to take more time than building it from scratch.",2024,Is the state of DevOps getting worse?
jamesnsmith97,2,"The simple answer is say no, push back. DevOps / platform engineers tend to have stuff dumped on them, so you can either be a doormat or say no.",2024,Is the state of DevOps getting worse?
SillyRelationship424,2,"Agree , most companies I've worked at have very crude CICD pipelines and call that DevOps. And as always, developers overrule your correct way of doing things.",2024,Is the state of DevOps getting worse?
AdrianTeri,2,">Started at a new company about 3 months ago and they have all the same problems

You made your bed(probation doesn't only benefit the company but also is an escape hatch for you) and now you must lie on it...

Quick question how's attrition? How many new faces are hovering around including you?",2024,Is the state of DevOps getting worse?
chub79,3,"Not much to add but I'm sorry you go through this mate!

edit: the vitriol Op is receiving from this community is shameful. Rather than being supportive, so many people here are blaming Op for shortcomings we have no clue about without further context. And you guys call yourself DevOps?",2024,Is the state of DevOps getting worse?
mritguy03,1,"What we are seeing is the culture shift of we can run lean and expect results, regardless of realistic expectations or communication. No one respects documentation.",2024,Is the state of DevOps getting worse?
xGsGt,0,If things weren't a challenge you wouldn't have a job my man,2024,Is the state of DevOps getting worse?
ninetofivedev,-5,I don't know about devops but I will say reddit seems to increasingly get more and more posts that are just giant walls of text every day.,2024,Is the state of DevOps getting worse?
freethenipple23,1,Don't get mad at your users for doing dumb things if you aren't gonna spend the time and effort to show them a better way.,2024,Is the state of DevOps getting worse?
Deleted Account,1,lack of standards and too many tools,2024,Is the state of DevOps getting worse?
NobleNobbler,1,"I'm currently working on doing exactly this at a much smaller scale for a small startup and as a complete novice in the terminology I'm finding just this small project overwhelming. I'm surprised to hear that devops is like this a lot.

At the purely staff engineering level, I had nothing but high regard for you guys. I thought what you were doing was awesome.",2024,Is the state of DevOps getting worse?
kestrel808,1,"It's been my experience that a lot of companies don't do DevOps or SRE very well.  They basically become dumping grounds for dev teams and the ask to ""productionize"" some garbage poorly architected application really shows that very misunderstanding of what ""devops"" is.",2024,Is the state of DevOps getting worse?
greyeye77,1,"OP, I'm sure you've heard this 100 times in the past: DevOps is a culture, not a job.

You will have to convince the management that DevOps must be involved early in the development lifecycle. Doing things right at the end when people expect the product to go out will just get friction, not a lot of love or support. (the easiest way to lose friend)

not asking to be embedded or spend 24/7 with the dev team, just need to be more proactive or even nosy to their planning. Some suggestion may be to join the meeting once a week or every two wk and get the grasp of what to come and offer proactive help.",2024,Is the state of DevOps getting worse?
CliffClifferson,1,Love this kind of clear posts,2024,Is the state of DevOps getting worse?
gowithflow192,1,"Sounds like both your companies don't have buy-in from management for how to do things right, especially security. Just waiting to be hacked badly.",2024,Is the state of DevOps getting worse?
thatVisitingHasher,1,"This feels like the server admin team we had in the early 2000s. The fact that you’re on a different team is the issue. I know it’s hard to setup community of practices, and you don’t want to be the only person on call. Getting on the team late, and getting pulled into other ops stuff is going to stop you from being successful. It’s not the tools. It’s the culture.",2024,Is the state of DevOps getting worse?
foxj77,1,Think a party of the problem is when we start having devops titles and teams. As another post mentioned it's just a posh new name for same thing. It's ops/infrastructure,2024,Is the state of DevOps getting worse?
davearneson,1,"DevOps is about combining software development and operations into cross-functional teams that manage their infrastructure and operations in one team so that they are not blocked by infrastructure platform teams. It's about having these cross-functional teams build and run their applications so that they understand and take responsibility for Ops issues. It's about automating everything so that deployments and new environments can be done by the application team in a few minutes with high quality.

You might have a specialised platform team that provides a platform as a service to the Dev teams but only to remove blockers, not create them. That team should not be called a DevOps team because there is no DevOps team in DevOps.

However, like everything else, corporate IT management takes something good and twists it around until it means the same as they were doing before with some new tools and names. That destroys the value of the whole thing.

I suggest you read the Phoenix Project and the Unicorn Project by Gene Kim and [https://minimumcd.org/minimumcd/](https://minimumcd.org/minimumcd/)

They key thing is this. If you are blocking the application development and support teams then they are going to find ways around you and that will make you  irrelevant. What you should do is focus on finding ways to unblock the application development teams by working very closely with them. That often means that you should join the application teams to help them",2024,Is the state of DevOps getting worse?
homelaberator,1,"To answer your question: yes 

Now, to read your post...",2024,Is the state of DevOps getting worse?
BrofessorOfLogic,1,"Absolutely. I was purely an app developer for 10 years. Wanted to switch things up so moved over to devops, cause it seemed interesting and fresh, and I was already good at it anyway. And it has only gotten worse over time. I'm now moving back to developer roles, where I can hopefully do devops along with development.

My recent experiences have been exactly like you describe, they just say ""get it done"" and they explicitly say that as devops I have essentially no say in what or how or when. The whole idea of ""devops is a mindset, not a role"" is completely dead in the water.

Most recently, I had some really wild managers (non technical obviously) who decided that we should move all the isolated customer instances onto a single VM to save money. And this had to be done immediately, like in 2 weeks otherwise the whole business will go under.

Tried to explain to them that we are already on cloud, we can just buy smaller VMs if we need less resources, that we still need to be able to guarantee a certain amount of resources to every instance, that the VM isolation level is really important for compliance, and that what they are suggesting is only going to cost more money.

They just hated my stupid techno babble, and ignored it. And this was not some backyard chop shop, this was a big consulting firm.

Why the fuck hire a senior devops specialist, which is not easy to find mind you, and then give them absolutely no autonomy or decision making or anything?

I guess these people also go to the doctor just to tell them how they are definitely not sick?",2024,Is the state of DevOps getting worse?
garglucky,1,"Maybe an edge case or you landed in a wrong company, at my company the whole DevOps team is onsite and we deploy everything using TF.",2024,Is the state of DevOps getting worse?
crystalpeaks25,1,devops get a lot of disdain too when they see something wrong with what developers do and start pointing them out and shitting on them. often times its not a devops problem but more of a people problem.,2024,Is the state of DevOps getting worse?
usa_reddit,1,"Let's face it, the DevOPs position was meant to reduce headcount and start trimming salaries in those expensive IT departments.  Bonuses and stock options were meant for Executives with Weekend Harvard MBAs and not those pesky IT geeks.  I mean why hire a Linux Admin, Network Security Admin, Programmer, Software Tester,, Database Administrator, Systems Engineer, Systems Architect, or Systems Integrator when you can just  hire a DevOPs person and have them do everything so much faster.   

No more pesky expensive 6 month projects, no more IT turf wars. DevOPs can deploy it today for much less and if you slap on agile you can always release the minimal viable product and use continuous delivery to bug hunt and add features.  Why design it up front?

This is the way!

DevOPs unicorns don't exist and no one can know everything.   DevOps is a Jack of all trades and master of none and is absolutely making the state of software worse.  Soon an AI code buddy will work with DevOPs to write code even faster than cutting/pasting from Stackexchange and the software world will  really start to implode.",2024,Is the state of DevOps getting worse?
youarenut,1,Yes and it’ll continue to get worse,2024,Is the state of DevOps getting worse?
stlslayerac,1,DevOps was just a buzzword anyone.,2024,Is the state of DevOps getting worse?
dablya,1,"When you were doing server automation, cloud migration and deploying apps, you were doing Ops. Sounds like you were doing it well, but that's all it was Ops. That's not a put down. There is nothing wrong with just doing operations. It's just that it's not DevOps. The developers who are trying to move to Heroku (assuming they're planning to go live with the app in prod on Heroku) are actually the ones doing DevOps... Maybe they're doing it poorly, but they are actually looking to own the application from development to deployment to running it in production.

The entire point of DevOps is to break down silos. Because silos result in teams blaming each other and throwing an application over the fence and expecting operations or ""DevOps"" to deploy and run an app they weren't involved in developing.

What you are describing is a management and cultural problem.",2024,Is the state of DevOps getting worse?
FudFomo,1,"Its turned into DEVops with more shit pushed down to devs by impatient leads and PMs.  Security and config is the first to go, then code coverage.  Soon they just start deploying to Prod from the desktop.",2024,Is the state of DevOps getting worse?
ace1309,1,"Even worse is M&As. 
Usually the startup use bleeding edge Cloud/Devops tools and the Enterprise who acquired them uses some archaic enterprise infra.
Neither of them know what to do as the startup has no context/experience for entepertruse tech whilst the same for Enterprises for modern/recent Devops solutions",2024,Is the state of DevOps getting worse?
maplewrx,1,"It seems DevOps has suffered the fate of semantic diffusion.


It means whatever the leadership team wants it to mean.


In the early days, my boss had a saying about DevOps....I don't care what you do, but I can help you get there. DevOps consisted of experts from different specializations in tech as there was no such thing as a DevOps specialist. We brought together the perspectives of each team and worked together to solve problems that would break down silos.",2024,Is the state of DevOps getting worse?
ub3rh4x0rz,1,"Big companies have ops teams. Small companies have less willingness to spend engineering cycles on the platform until a certain maturity is reached, and that sweet spot is rare.",2024,Is the state of DevOps getting worse?
ClikeX,1,">the DevOps team

Well, that's the first sign something is going wrong. If you have a DevOps team, you really just have an Ops team. DevOps should be a lifecycle/workflow that combines Dev and ops into a smooth operation. 

If you have an IT operation that is based on throwing things over the fence to the next team, it is going to struggle. DevOps or not.",2024,Is the state of DevOps getting worse?
miffinelite,1,It’s not Devops if the team hands over everything to you after “completing” dev work and expects you to create all the infrastructure and deploy it,2024,Is the state of DevOps getting worse?
kabads,1,The problems in your new company sound very much like a company I worked for. I left. They liked putting fires out all the time - it was part of the culture. That isn't a good mix for DevOps.,2024,Is the state of DevOps getting worse?
uMagistr,1,"I've tryed to think about that in november, I think problem in devops is previously galleys (we call that outsorcing companys) used to sell sysadmins for support and it worked due to nature of more or less established industry and practices, when devops arised there were expectations that it should be different, but nobody wanted to change and devops started to being sell in the same way as a support previously and getting shaped in a siloed env, and we now have same situation but with different practice, there were cases where it worked in a true meaning but that were startups or tech where it made more sense

one size does not fit all

  
also I distinguish between 3 phases of devops  
1) helping with rapid changes and accelerating dev  
2) reduce toil and make optimizations  
3) standatization, unification, support, i.e reliability and other lity things 

  
and they require different mindset and focus on different things  
outsourcing works with 3, but may struggle with 1  
(I'm a bit biased towards outsourcing pov)  
if we are talking about inhouse, why would developers put additional responsibility on themselves for the same salary - and here is another barrier for adoption",2024,Is the state of DevOps getting worse?
snozburger,1,On the bright side you'll have the last laugh when devs themselves are automated in the next few years.,2024,Is the state of DevOps getting worse?
sublimegeek,1,"Hmm that’s interesting. If the dev team is using heroku, then that means they don’t have a good platform. Sounds like they need KT on what to do. Don’t try to do it all yourself but hand over some keys and give them guidance. Have them open up some PRs for changes and give them feedback. We can’t do it all even though we try.

I feel for you, but developers are always about quick wins and “done is better than perfect” so if they forego best practices to get leadership off their back, they will. They care about the code, not how it’s hosted, otherwise it’s one more thing to worry about. If you abstract some of those things into some reusable templates, it might make it more palatable for them.",2024,Is the state of DevOps getting worse?
killz111,1,Let me posit that you're not complaining about the state of DevOps but the state of management. It's always been shit. I remember people complaining about managers still insisting on waterfall methodologies when agile was in full swing. I would advise adopting an approach where you interview companies as much as being interviewed for your next gig. Also I think DevOps just attracts people who want things to be better and hold the organisation to better standards. Time to accept most people in IT don't give a shit about non functional requirements.,2024,Is the state of DevOps getting worse?
marigolds6,2,"Specifically the state of management outside IT. The rest of the business world still likes to move in annual budgets. (And when they don't, they will make your budgets ""agile"".)",2024,Is the state of DevOps getting worse?
marigolds6,1,"""Why do we have to get our prod PRs approved by someone outside our team?""",2024,Is the state of DevOps getting worse?
TrendingKoala,1,I agree with all of this,2024,Is the state of DevOps getting worse?
grp24,1,"I have 20+ years in development and architecture,  from what I have seen, the most successful projects with DevOps are when the product team owns the Infrastructure (terraform, kubernetes, etc).  Centralized DevOps teams seem to quickly become a bottleneck and product teams will be unwilling to wait. Businesses will often centralize a skill to reduce headcount, but rarely think of the consequences.

There do need to be a few DevOps experts outside the product teams to help train/troubleshoot and learn new technologies.

I believe that Infrastructure as code is a core competency that any senior level developer should have. But that will take time as it's a relatively new concept for those of us who have been doing this a long time.",2024,Is the state of DevOps getting worse?
veritable_squandry,1,"devops and sres are devs and it's all one enchilada, deny this fact and your service will go down in flames.",2024,Is the state of DevOps getting worse?
Deleted Account,1,"That sounds hellish! My field of work is similarly annoying because , as you said, people don't want to do things the right way. Grass might be greener over there, or it may not be.",2024,Is the state of DevOps getting worse?
sagentp,1,DevOps  breeds resentment if they are not part of the application development team.,2024,Is the state of DevOps getting worse?
No_Sir9465,1,"I am looking to get into devops I have 3 years of experience as a software engineer and lost interest in coding , is it really dead or any alternative fields please suggest",2024,Is the state of DevOps getting worse?
Accomplished_Ad_655,1,I just sent you a DM. I am wondering if you can share your experience formally. Read DM for details,2024,Is the state of DevOps getting worse?
Deleted Account,39,"The article starts as a big rant without ever clarifying what they consider to be DevOps.  Then:

> The companies building “DevOps” teams are going in the right direction, but they need to be moving away from infrastructure configuration management and towards platform engineering and enabling developer self-service.

So DevOps is ""bullshit"", but ""DevOps"" is the right direction. 

Next we have more rants about a series of scenarios the author believes are endemic in DevOps. Coupled with their earlier admission of just copying/pasting the same terraform modules without attempting to abstract the common elements I'm starting to suspect that the title should be ""The way **I've** been doing DevOps is bullshit"".

The concluding statements are also just a word salad of buzzwords that don't provide any tangible value.  

As a whole the article reads more like the angsty rants of a teenager than something written by a CEO.  The author should be ashamed of having produced such low quality drivel.  There *are* good articles about the problems with DevOps - this is just not one of those.",2022,DevOps is Bullshit
whyvez8,0,"Ouch! Trying out Massdriver today, nice platform, but it lacks in a few critical areas for me. More to come...",2022,DevOps is Bullshit
Deleted Account,-27,"You read it with a bias. You need to read it with a learning mindset. 

Forget everything you know. Read it like a 5 year old or may be as newbie who just got his first job, would read it. It is a paradigm shift.",2022,DevOps is Bullshit
Deleted Account,7,[removed],2022,DevOps is Bullshit
Deleted Account,-7,"lol I don't. Yes, it took me years of practice to let go. Now, I don't read or learn anything DevOps with any bias or baggage of past experience. 

It allowed me to work on projects and ideas that seemed extreme to begin with, but when done, tremendously satisfying.

You should try it too :-)",2022,DevOps is Bullshit
Deleted Account,4,[removed],2022,DevOps is Bullshit
Deleted Account,-4,"lol.. no no you have the last word. 

I am not interested in winning someones imaginary ego battles. You keep this win. I will continue my learning and successfully completing my stories architecting and implementing DevOps. I am happy with my continuous feedback and learning loop 

Good Luck :-)",2022,DevOps is Bullshit
baezizbae,3,">	 I don’t read or learn anything DevOps with any bias or baggage of past experience.

I promise this doesn’t make you look as Sage and humbled as you think it does, my friend.",2022,DevOps is Bullshit
Deleted Account,0,"lol, I thought we were discussing DevOps and how it should be implemented. When did it become personal?

Funny anonymous egomaniacs of reddit. :-D",2022,DevOps is Bullshit
baezizbae,3,"It did with your very first comment making assessments on other people’s biases, telling them how they ought to interpret the article and to read the article like a child. 

It’s one thing if you see the state of Devops differently, that’s fine. But get lost with this fake enlightenment attitude, you made it personal from the start.",2022,DevOps is Bullshit
Deleted Account,0,"hahahaha.. that was not my first comment. But each for his own.

I wonder if that is how you evaluate situations and make decisions?",2022,DevOps is Bullshit
baezizbae,2,">	I wonder if that is how you evaluate situations and make decisions?

There it literally is again. Have a good and relaxing weekend, friend! See you around maybe.",2022,DevOps is Bullshit
Deleted Account,1,"I waited for 3 months to respond here. I am new to IT and with my experience over the last 3 months, I figured you are horribly wrong.  Each of his statements in this post is 100% right.

In fact, I am not exaggerating when I say, you are not just wrong , but you are horribly wrong about what DevOps is and how to implement it.

It sickens me that fake people like you downvote facts that are helpful to the community.",2023,DevOps is Bullshit
CEO_Of_Antifa69,2,Dude you consistently have the worst takes,2022,DevOps is Bullshit
Deleted Account,-1,"Does it matter? It is fact. They don't say truth is bitter for no reason. :-)

I am successful at what I do by going against the norms and thriving against objections. lol",2022,DevOps is Bullshit
Deleted Account,6,read your own name.,2022,DevOps is Bullshit
Deleted Account,-2,"lol it is for people like you, who think they know everything ;-)

Clickbait :P",2022,DevOps is Bullshit
jameshearttech,6,"Quote from the article, ""you’ll need experts with overlapping experience in both fields working together"". Sounds like devops to me.",2022,DevOps is Bullshit
Deleted Account,4,"I think he makes a very strong case for automation. For example:

>Do you know what's worse than waiting through an ops backlog during   
the planning phase? Missing your deadline and working late because   
you’re waiting for someone on the ops team to update IAM policies and   
create KMS keys because you didn’t realize the SNS Topics were in a   
different region than your SQS Queues.

And he's right. Doing devops right and focusing on automation will fix the above problem. Not sure a full-blown platform is the answer tho. I think building a platform to fix the above problem will just hide the problem behind an abstraction layer without addressing any of the underlying issues.",2022,DevOps is Bullshit
lerun,2,"Automation is great, but one also needs to acknowledge that this type of automation takes time to create and tune for purpose.

To often leadership waiver when confronted with this reality",2022,DevOps is Bullshit
Deleted Account,2,"Agreed. Leadership commitment is one of the biggest barriers to devops. I've seen great devops culture when it's implemented bottom-up, but for some reason it's still hard to explain to senior execs and managers how to do it right. Hence so many devops consultants and devops managers.",2022,DevOps is Bullshit
phobicbounce,1,"This example drives me nuts. In a scenario where the infra code is done using Terraform, why can’t the developers write the damn code themselves to make their desired changes? If you have to open a ticket update IAM policies or create KMS keys maybe spend some time learning HCL so you can empower yourself.",2022,DevOps is Bullshit
Deleted Account,2,"I hear you. I've tried to do the same in multiple companies, but tbh there's now an insane amount of tooling on their side of the wall as well. Dev's lives have gotten about as complicated as ours and asking them to understand infra and learn even MORE new things just pushes them away. If anything I think more tooling is taking us back to the dark age of silos rather than bringing us together like devops is supposed to. This is the main reason why Platform Engg is gaining momentum so that new, insane tooling can be hidden behind abstraction layers and interfaces.

Edit: I forgot to mention that this is the reason I enjoy serverless so much. Especially if you use the Serverless framework, there's no need for other tooling like TF/Cloudformation and you can have your Serverless YML in the same repo as code. One YAML to rule them all, basically, and both dev and ops are happy. The synxtax is simple, self-explanatory, and doesn't require either team to learn a lot of new stuff.",2022,DevOps is Bullshit
Confide420,8,"This was also on HackerNews which I'm assuming is where you got it. The issue with DevOps is that there is no clear definition of what a DevOps team does. At our company, DevOps engineers are lite-software developers, lite-DBAs, infrastructure engineers, release engineers, automation engineers, cloud architects, but technically we are just called ""DevOps engineers"". This is what DevOps should be (maybe you could also consider us SREs but that's a separate issue).

Developers don't have experience (or honestly, desire) to build high-quality production infrastructure, meaning you need an ops team. The whole point of dev-ops is for the ops team to be more communicative with the dev team so ops isn't a black box where requests go (the exact thing the author is complaining about doing at their job, this isn't DevOps). If all you do is write TF code all day, you're not doing DevOps, you're a cloud infrastructure engineer.",2022,DevOps is Bullshit
baezizbae,4,"Yep that portion of the article where the author talks about how some companies have a habit of sending everything to Devops (and also SRE lately) that isn’t being done by the dev team has honestly been my number one complaint about the way many, many organizations practice and is what lead me to quit a few jobs (including current one, today is last day). 

I don’t agree with everything in the article, but that bit rung true. 

Need DB work done? Give it to devops. 

Need to pass a soc2 audit? Make Devops deal with it. 

Need testers? Devops. 

Water fountain on the third floor broken? Create a Devops ticket. 

That last one obviously is an exaggeration but this has been my sensation over the last few years of working in this field; companies under hiring, or just not knowing how to hire so they call for Devops to solve everything, Devops gets burned out and leaves, company learns nothing and repeats. 

It has gotten to the point where now, on job interviews I’m asking questions like “can you give me a real and currently ongoing problems that hiring a Devops practitioner will solve, and can you tell me what you’ve tried with your existing engineering teams to solve them?” 

I’ve found people rat themselves out real fast with those kinds of questions.",2022,DevOps is Bullshit
Deleted Account,8,"Purist rant with too much time on his hands and not in touch with the real world and how companies and people function.  This is why it’s important to teach social skills and empathy.

In an ideal world I’m sure he has some valid points.  But in the real world - idealism doesn’t pan out.",2022,DevOps is Bullshit
craigofnz,4,"There is a definite trend for those peddling PaaS platforms and describing DevOps teams as Ops teams that use yaml to post blogs in this subreddit proclaiming the death of DevOps.

As far as I am concerned DevOps is not:
- NoOps where devs do all the ops
- centralised ops teams even if they are using continuous delivery techniques and tools that define things in yaml.

—
0.02 from an Ops guy bringing the Ops to a DevOps team",2022,DevOps is Bullshit
DataDecay,3,"The author reads like they had a bad day, and aired their dirty laundry. A Lot of their issues sound like relevant issues, I mean DevOps has never been perfect. It's a long read, I'm not going to go point by point. However there was one point they made that stood out to me, the no-code example 


https://www.terraform.io/cloud-docs/no-code-provisioning/module-design


The author claims to know terraform, or at least use it, yet fails to understand that the community has struggled with whether to use no-code modules for a long time. I mean in terraform now you can make no-code modules with nothing but an ""enabled"" var. However, it's been a struggle in deciding to do this practice because it goes against terraform declarative nature. Whats the point of terraform if you hide declarative configuration behind computed values and templates? you can't manage it day2 and then guess what your grimy hands are right back into the provider managing resources. More or less you lost the value add of terraform using no-code, I just said this to a company today ""anyone with multiple toolings, languages, clis, can simply make a vm, security group, vpc, eks, etc"". Building off that, the API dirven nature of the cloud providers is why it's so easy; they standardized on the protocol.


This beta feature of terraform cloud is literally just support for an existing pattern some people have used, it's nothing new, it's not a ""sign"". Hashicorp is giving a user interface (UI) to run one-and-done workspaces, which imo is an anti-patter.",2022,DevOps is Bullshit
m4nz,3,"100% agree to what they are saying. Word by word. I see some comments here dismissing it as a rant, it is not. [https://blog.massdriver.cloud/devops-is-bullshit#whats-in-a-great-internal-developer-platform](https://blog.massdriver.cloud/devops-is-bullshit#whats-in-a-great-internal-developer-platform) this is the most important part, make sure to read it.

&#x200B;

DevOps != CI/CD

It works for smaller sized companies, but as the number of moving parts and the number of humans associated with it within the organization increases, so does the load on the DevOps team. Most of the time the DevOps team is spending on setting up IAM permissions, Audits, Compliance, Setting up a new project environment for the dev team, debugging a terraform module etc. This is from personal experience.

There is no time for actually trying to reduce toil, or make the overall infrastructure more efficient. How do we fix this? By having something that abstracts away all of these toils onto something else. 

How do we do that? Team spending too much time helping teams with IAM permissions? Build something that makes it better, build a system that lets developers get the access they need just by clicking few buttons and getting an approval from their managers/the SREs. Audits? No problem, the system we built already has it in a way where we don't need to manually go hunting for them.

Are you spending too much time setting up a new kubernetes cluster each time for different projects? Re-think it, spend some time and figure out what will work best for your team. Maybe a single cluster that has all the safeguards and some automation will work wonders, maybe build something that creates a cluster with safeguards, proper firewall rules, proper monitoring etc.

Does all of it sound like a dream? Maybe it does, but this is what's been working for me.

&#x200B;

I really liked this paragraph which summarizes the whole issue :

>Get feedback from your engineering customers.  
Yeah. ENGINEERING CUSTOMERS. They aren’t your team anymore. They are your business's second set of customers, but if these customers aren’t buying it, you end up with morale problems, engineers pining for “the old way,” a boatload of debt, and a bunch of wasted time and effort.",2022,DevOps is Bullshit
Guilty_Serve,7,"From a dev perspective devops always comes off as full stack developer +.It's weird coming into this sub, and seeing sysadmins ask ""how do I get into devops without knowing how to code"". How someone would ever survive like that is beyond me. For those who are they must be spending a metric fuckton of time reading to catch up.",2022,DevOps is Bullshit
Deleted Account,7,"It’s because most companies pick up the buzzword “DevOps” because it is popular at the moment but the roles they offer are glorified sysadmins.

“Real” DevOps is not practiced most of the time. For me it’s more in the direction of “you build it, you run it” mentality. And yes you would need to be having a software engineering background.",2022,DevOps is Bullshit
Deleted Account,1,What is „real” devops :^ )?,2022,DevOps is Bullshit
edgan,1,"You are describing NoOps. It leads to a ton of duplication and inefficiency. Each dev team will pick different tools. Team A picks ECS, CloudFormation, Datadog, and PagerDuty. Team B picks EKS, Terraform, NewRelic, and OpsGenie. Also the general quality of all the infrastructure, IaC, monitoring, and alerting is going to be newbie level, because the developers have no experience at it.",2022,DevOps is Bullshit
fifelo,5,"I've been in the industry for 25 years, I know a lot of stuff up and down the stack.  I've been doing devops for a few years, which essentially means I do sysadmin stuff, I solve problems the devs can't figure out, and I manage our deployment/scripting/CI and AWS architecture/networking/security.  Essentially it means I wear way too many hats - but I can't imagine someone coming out of school even being close to being able to handle that.",2022,DevOps is Bullshit
GeorgeRNorfolk,0,"My first job in tech was as a DevOps engineer, I didn't have a sysadmin or dev background. I didn't really feel like I was missing anything not having one of those backgrounds. I had a colleague who was originally a developer and while they knew dev bits that I didn't, I knew things about infra as code that they didn't.",2022,DevOps is Bullshit
Deleted Account,1,"And do ypu feel you solved your employer problems probably one of best possible ways OR you did anyhow anything you were asked to do ?

Did anyone validate your work ?",2022,DevOps is Bullshit
GeorgeRNorfolk,1,"As a junior the latter, but quickly became a champion of best practice.

My DevOps team had the best ways of working in the office and regularly had desk checks and show and tells. So yeah lots of validation and exposure to best practices.",2022,DevOps is Bullshit
rmullig2,2,">The problem is most engineers **don’t** want to do operations work.

He nailed it right on the head with this comment. Too many people read ""The Phoenix Project"" like it was a case study instead of a work of fiction.",2022,DevOps is Bullshit
Deleted Account,5,"I support every word in that article. The way DevOps is done in most organizations today is BULLSHIT. I tried to explain this same thing in one of the other threads a few weeks ago. And I was not surprised to see misguided egomaniac's telling me I have no knowledge of DevOps.

:-D

If you want to understand what Cory means with his article, the below line summarizes his content the best

&#x200B;

>The companies building “DevOps” teams are going in the right direction, but they need to be moving away from infrastructure configuration management and towards platform engineering and enabling developer self-service.

The ultimate goal of DevOps is Self Service that fulfills every need of the teams involved in the Software Delivery process. In other words, empowers your software delivery teams to provision resources as and when they need it, without any wait or delay.

* If I can use  a self service portal/tools that auto-magically creates a service account, that fulfills my needs as well as complies with security requirements, then I am doing DevOps.
* If I can use  a self service portal/tools that auto-magically provisions Infrastructure including applicable security for my application, and deploys the version of my choice, then I am doing DevOps.
* If I can use a portal/Project Management tool to view the current status of my requirement in the Software Delivery lifecycle, then I am doing DevOps.

DevOps is an art, we have turned it into a 9-5 job. DM me if you want to learn more and practice it. I will be more than happy to contribute and help.

Edit:-

Minor edits to clarify my points based on Magikarpa's response.",2022,DevOps is Bullshit
GeorgeRNorfolk,2,"My view is that DevOps teams are a stepping stone towards platform engineering teams. As with agile implementations, you're never done and there will always be an improvement to be made.",2022,DevOps is Bullshit
seaefjaye,3,"Thank God someone else thinks this. I'm not some DevOps guru but my understanding was that as part of the transformation process you dev teams should be getting more familiar with ops and your ops guys should be learning to code and advising/developing the platform. It sounds to me like a lot of orgs decided to focus entirely on DevOps as a method to do more with less, rather than to do more with what you have. I feel like moving your ops guys towards this idea of platform engineering was always the point.",2022,DevOps is Bullshit
Deleted Account,3,"Issue is most devs dont give a shit about ops side - so called „you dont pay me enough to do 3 ppl work”.

Not everyone also has the capacity to grasp advanced coding design patterns and how to use them efficiently.

The sense of devops is that depending on your company size - all parts of SSDLC are done in correct order and are easy to do.

If you have dedicated teams that do Security and other team that writes code and another thwt maintains databases -> they all talk to each other iin correct moments to deliver quality product.

If you have only 15 ppl in company, one guy takes care of infra and another writes app and another verifies that. They all cooperate together to produce best scallable and easy to maintain solution.

Thats the sense pf DevOps or DevSecOps to leverage good practices and tools in SSDLC effectively.

Its a guideline and not an implemented solution.",2022,DevOps is Bullshit
Deleted Account,-1,Bingo..,2022,DevOps is Bullshit
DeusExMagikarpa,1,"Sounds like heaven, what do you mean by portal? A custom solution or you mean like, appropriate permissions and access in whatever cloud provider’s system",2022,DevOps is Bullshit
Deleted Account,2,"For this case, it can be a repository in git. 

If I need say a user, I create a branch and check in a yaml file with required details. 

A CI tool like Jenkins or CircleCI will detect the change and trigger a preapproved workflow. If the yaml file clears all validations, Jenkins will create the user using Terraform or Cloudformation or whatever applicable solution is.

**The idea is an approved user does not have to wait for human intervention for basic repetitive, known tasks.**",2022,DevOps is Bullshit
DeusExMagikarpa,1,"Oh that’s even better, appreciate the example!",2022,DevOps is Bullshit
Deleted Account,1,"You are welcome :-).

Updated my original comment for clarity.",2022,DevOps is Bullshit
princess-barnacle,1,Can you help me please. Devops is so hrf,2023,DevOps is Bullshit
GREENorangeBLU,1,DevOps the next bullshit term that means whatever people raising money want it to mean,2025,DevOps is Bullshit
lIIllIIlllIIllIIl,-1,"DevOps isn't bullshit, but DevOps done entirely by SRE or SysAdmins is bullshit.

DevOps has almost nothing to do with infrastructure, other than ""deployments have to be frequent and fast"".",2022,DevOps is Bullshit
Deleted Account,1,">The Phoenix Project

some companies saying theyre doing DevOps because they have a ""DevOps Team""",2023,DevOps is Bullshit
somebrains,1,Who is Massdriver?,2022,DevOps is Bullshit
CEO_Of_Antifa69,1,They’re building a graphical interface for infrastructure components that also provides terraform code for what you build in the UI. Came out of Ycombinator earlier this year. It’s actually pretty cool tech and I think it has legitimate promise to make infra engineering (and other disciplines as the feature set matures) much more approachable.,2022,DevOps is Bullshit
somebrains,1,It’d be nice if their CEO didn’t use clickbait titles.,2022,DevOps is Bullshit
CEO_Of_Antifa69,1,"They’re pre-series A. Even though I don’t agree with the article, now you know who they are. CEO is doing exactly what his job is lol",2022,DevOps is Bullshit
rtpro1,1,Cross sharing to /r/platform_engineering,2022,DevOps is Bullshit
